{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eed91d3f-8d8a-4f18-99c8-31e991b3c907",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8a951284-39d1-4b8f-9af8-c15e1f252d9d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "962fefd1-ebd8-4d49-a9a0-d87bc3cc7b84",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01be806b-d1c0-4c28-96d6-a033860d0514"
                }
              }
            ]
          },
          {
            "id": "74c59ade-89bb-43b2-98f3-3a5edb1783b8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91faa362-1ae8-4e67-a247-d2fbf8e2d356",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d6bd0d8-c8c4-4b7f-a9e8-8edaaf20f5aa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "af1b904a-0c0b-4999-8344-6eb8a26c3aba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "46b374e5-3ffe-4dea-9094-0fd6e507a53b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bdb3cf1e-6df6-41ab-9cf4-f44af58ec384",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d858408-147e-4268-88cd-c95e7863fbdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8676c4e-30f7-41c7-a269-142d169db2c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec9da197-eb0c-4ca8-9061-f1b39f6d4bf1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83c628de-584e-445c-90ac-407bc6abfdb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e9ba014-766c-44fa-8387-9eb6fcac5924",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9ad0d56-0252-43cc-ad9b-0c0ccc99a426"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aeadd39a-51e5-4efc-9708-ffc073a51dae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "49b52895-4335-4668-a728-e7a1ceef3965"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e729db4c-de3b-4fb1-94ae-6d64568044b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b854c836-357e-4179-8f0d-99d62fa4f70e"
            }
          }
        ]
      },
      {
        "id": "185d262a-fb27-4aad-83a6-7878e409020b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dd2f4c29-8444-4801-8025-ace06f2a7de8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9e026fe-df78-4d60-b8f3-afafbf8967f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eab08e2d-b8b8-41ed-8e0c-d8f4a86fb203",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c624032-5ac7-4d32-9221-60c8d390e548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c31c2c6-531e-4c20-bd9d-08d5cb1c13ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49495e81-42f4-4aba-a942-2d86db93f16e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd7d262-5080-4200-8e5e-2680b0818b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f59d7f8c-59c0-4630-b20c-22b589cd0375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98927bda-fe09-4e84-88a3-06c21001cfd8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10925dc1-e812-4e86-ab1d-1972f8973602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11fb86f7-ece5-4a4e-9879-43cfecb44a4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f0ab0a0-62e6-4e26-b3c2-34ab6744b252",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8876f38f-1fa5-465c-a3b5-5fecc39643da",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6585e4-ca5d-488c-9f35-824d4998c9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "062f8ac1-4c25-4e5f-be66-7d054be29bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64959bdd-b27c-4502-973b-6c1656b514a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cb92a0-284b-4667-a1b4-dd629b331e85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5623ca70-1bf0-4922-81eb-e9bf29c628d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3483a4a4-6dab-4e26-9b77-76850ab951ed",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "095c8655-9fdf-43d6-8a4f-778ebb530926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "65b2641d-1c2a-42c6-8721-36532c58a8f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea36cf34-9255-4b8b-ab82-46bbfcc1b4da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "51ce5f25-0237-4ace-950f-8d050c987fe2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9a9ce84-654b-46c6-a72f-232135d9350e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "612217c1-4659-4006-a996-10c5bc691f79"
            }
          }
        ]
      },
      {
        "id": "e42c6c87-43f4-4503-928b-c6d1edcc3de6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91093a02-bbb9-4a25-bd2b-0a6adb4f0f9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "388e3740-90cf-412b-b000-fb3da0911cf7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1edb2eb5-90ba-44aa-9112-c9d7abc56905",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab30896-0ce7-409a-8061-fb39a493e866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed6e363-8aed-4cb7-98f2-d7afdb581178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26417e9a-4df9-4491-b98c-1486d20845a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41f4bd49-c623-4679-ab05-e63b3f53e47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47fe279-3c2d-4ea6-8cfa-3c41dc4ad840",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1820837c-048d-47c3-a1c1-988b2b87f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a06148-3dc5-46d2-bb78-dbd7047ce0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169749d7-e287-48bc-b592-4c4bed32bff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cbe1d90-8eb0-4858-80ef-0887fbb341e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2accdd-08c6-43a6-a28b-b58955ca514c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f784eb59-98e0-4c90-8876-a67dbdf52a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fd6505-666c-4885-a7b7-e8347d6fab45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c5f66c-2e03-49e6-87c5-7fd3bb6e7f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e5ec56e-a0ec-4418-a487-329315632162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceda7e10-6313-4f0d-9e1b-dab409e58689",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c16764-71e9-4138-b483-0190e8bd592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22709cf-aac4-4aec-a929-3e4336ebc0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464a518a-4bf4-4ab1-b2bd-aa9604004e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a8270f8-da8c-4a80-93cc-3faf52a5d6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a691afd-2bab-4bda-8731-aa86f698e2c5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfec27c1-0f6c-45b7-8cd1-55388dc9b29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1471ef23-5f9b-4919-b0d8-340fb99eee58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a106f1dc-d217-4803-ae40-b18c4c68af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b8254e-07fd-48f2-9ea7-0154dca83d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037019e4-402a-45df-9889-f4da29b86b8c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8690b0de-7aaa-4406-842d-aee88c12ad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f34521-8891-4777-a64d-0089d0564083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2357fd-69e4-4f00-9455-1fddb6098ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fe43acb-080e-4eb5-b16e-2c1239438e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72301348-42dd-4b6e-88cd-bfa1067cd1ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af087dfd-9f59-4d60-82e3-eeeadbb5d0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9a006e-edf2-4e3c-96d4-fea82ca9c816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93b5765-8022-4b7b-a5d6-1853d9a38002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "748008ad-8e15-489c-a4b2-e394583cf1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42adf635-424a-4400-b72e-3c27d4537192",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f822eb3-0bb2-40e2-9a67-4f17fea72053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1511d7c-fdf9-4c41-b07d-e5e0bae0ac1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e0e595-6aff-4fb2-86c5-fea0a6343af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f889485d-8782-4bae-940b-3d5762c7f8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd4b540-c100-4f35-b7cd-04160c5afec6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1804c041-a0b8-42d1-99ec-4da06f103a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb810c1-bcaf-4227-9558-270c1015a737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c851003e-f78a-426b-9ef0-048105042955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb19ac0c-b8e8-4fd9-a9de-925af90615cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c2f37a-f7d5-45da-9991-49865ee7d778",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423f1ce-35d9-4189-b485-82e5fa6adbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b308d532-aab5-420e-872d-4766ed93156e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd203a63-eac1-469b-91db-66497497ae17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35915ad2-144a-41fe-936c-08118720128c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29af5757-52bc-4af0-b9f2-581ed7a3ea21",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5537ae-d921-4faa-a1f1-84335f2b78b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b20f3e-a98d-4b1d-abaa-3f308abf283c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2876e90-98d9-474d-bb10-b39f0604f636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb3946b9-42a5-4785-b0e0-f00c1d08cf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d544c1bf-c596-46a5-a0f2-099fcf50ee9c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb2b957-9bc8-40f7-b9ae-1704a2330626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce4b5be-d5e4-4fea-b6bd-631b2016d523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b0004d-af48-48ad-b429-9fa1595e4a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe351c05-ada9-4078-923d-87fc5130dd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fba1aa-2aa2-45a6-8eaa-57b57494b3b4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9382bb86-2bed-4bdc-bbda-193a76661b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3329244-497d-4685-9670-57c247a657cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d62876-e8a4-41ae-afd8-54c39d882105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aca5f61-7748-45dc-9741-a3cc515c4018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d637963-a6a0-4b02-9096-7c8c862ed799",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83966b7d-b024-41a1-98bd-5feb11ae970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352c282f-14ec-4738-a577-e620977d5c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627ee111-c32f-4bbe-b1ce-9b1d48039f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab11f1d1-bc8a-473f-b9a2-0c66323c5d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3fe3a2-3aae-4eed-9541-cabc0991cde4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b2f95a-eaf0-4703-b474-3bccab4d717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d4d76f-9d6c-4dcc-9030-40c2b6ff070a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf42011-b42c-4f89-bb96-99530b1ed8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c540617-1d65-45c9-a879-591a34a00fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e03e28-8f90-4a65-8701-e5d7064b1680",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212c566-0a92-43f4-a6b3-3a2ed75eefe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b419e8-7b04-4683-9a4f-52f5db5f809e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf327500-3ba9-4503-b9a4-85981d9c5716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f84d752-f4c7-4375-a2ad-db53aef2ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd728934-41e0-4705-a376-62bdb5cbae38",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420898a2-f98f-461b-9682-3a20ebdc0cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de2de6b-8017-460a-abb2-469a37051769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af56f14-8e55-47cc-89ec-a2d0d1a12349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3108622f-6dea-4d08-9d45-bf3886e03dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c84d014-f7c1-44e2-aad9-184fc8008621",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50fd8ad-8a23-4a23-8c4f-7849359f1140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef33a7b-5f59-4ed4-b1e6-843f3db1779f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b7219f-5801-4992-83be-2b8da6d9efa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04fab228-0dda-415c-9f1b-e21735c07538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d443f2-bf72-47a0-bbdf-1c49ff5dd4a8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34e167a-176c-44ec-88cc-82908418860b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7408ece7-8fd0-4d9a-a565-560c4eed046c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b38edfe-7640-4fd6-8379-2a998e22e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e001a2-0cc1-4b08-ad6e-e48040ca1246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7cda61-81ab-4361-a0cb-deef0852e3b5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d61d2df-b759-4c58-bae8-767a1c17dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dfde8d-6d83-4d2f-adf0-31c2d1d08bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03dbd0a-b9a7-43f3-a815-71779736159c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c1dab7-707f-4b81-9f50-22dd65e31d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bc14e6-9e37-4cf9-b9ac-3af31d52e6b4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83c57d3-6659-40c6-a4db-d54d71ba8895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc08b2a5-201c-4b6b-ac9a-d086d78f8ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b576cf45-e998-48ea-98a4-dd16ffb00a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b95786b-935c-4c12-93a9-1c25f7673aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efd24eb-d459-4488-a952-f09fb3a26de2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91305a0e-ec26-494e-984c-172ac1f905f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4718a975-58a0-49f2-9796-be1d5f4224c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262321e9-3d7d-4fe8-9177-1faa79d295a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f6da7f-76e1-4fff-83a3-7d2188452c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8053f4-babd-436a-bb82-827e5e41ca96",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75f5a62-2690-4a4e-be4a-1af1baa288f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db1cc75-9073-4304-b432-f839a7700717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b47626-cba3-4820-921e-c7ec4f570664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1837ef-f0c5-4aec-b207-b9c3b8e4c0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4267233-2413-4b34-b6fc-a8cf481ad3c6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1e3873-860a-4cc7-a20b-fd4df9acc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d663701-a9a9-4516-93f1-27b5871f2e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33006892-150c-4009-ab9c-2cbef501b2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3510a171-608e-4fe1-8f35-830d1ce22539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa783e24-6996-4cab-948e-94992e3f9569",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1526dd-3f19-4f0c-9afc-160bc4208ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac2c0c7-a129-41fa-98cc-a08edaf8adb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a9ada4-3148-4851-8f19-a24597ea3a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a539f0d5-1d3e-4cc5-977c-a6258bd40526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c34dee0-1c6a-4b63-b7ca-12f670e353f0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981a52f8-a5f3-4a6d-9e3d-977ac3378fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f83791-56f4-42f8-b4b9-6ae361d54ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ae4132-e9e9-4fbd-aaf3-00af79708994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1673d1d-7efc-433c-ad87-62e91fd3fc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908b09f3-3723-41af-95ed-4d675190f7df",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07b7bdc-87bc-4456-8a31-099ed882b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d7dd20-3e1c-4636-91e4-ee6582434aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c27c95-243e-423f-9ade-5926f715d91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99509ce2-b188-43d0-8254-3d86fd898d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25337774-2312-4da9-95c2-ba2ca0ab3e2b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728125ff-b682-46eb-844a-a1f8a8b3d73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a6f758-cea4-440e-b346-a4ccf6d72d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27dd542-a1e2-4605-ae21-6ac915edbde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7989dd07-f349-4c8f-9065-6908465e5f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43536f9a-de44-4ad6-b8de-0fc4abab0f40",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9c4923-57c2-4b76-aa73-3a70c73930a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601a1455-69f9-44a5-8363-d750a65433bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1ef20f-db06-466f-a88b-fcf3398be70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddba1628-89d0-47be-b4b3-db70b24545c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97694fd-99d3-4d42-86fb-ca75ea5b8468",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5754c973-c080-4931-a87b-ca6eeb60e47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27871076-5a2b-4476-bd3b-c8f12dacfe42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117868a3-7499-414f-ac1a-d3cc3e366072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7c1226-8ea4-4a0b-b503-8e6bbc3d23b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a00af01-ed82-4032-8ec5-0829107256b8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a04585-0c5b-47f0-845b-5abc105868f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae13156d-64a3-4016-8eca-bcea41ce1740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a006e384-e025-4dec-9d79-1a4b12789c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a6b907-70b1-400c-b8a0-f2de80626f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909db3b7-1e8e-4568-b143-38deee9a964d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d778e36-2780-41e5-b42e-7d13d8895e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d38ba4-0172-4748-82d0-d984f15b6609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec25086f-2422-49cd-ba0c-8b441a242d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66899403-f91b-4a59-bf26-8511ea5d9de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d386061-852d-4e9b-8294-394a7bd457f2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b2327d-f4eb-41b5-9cf5-24fc36668702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4069d89-eda3-420b-9623-1b5ec3b6b803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defc104e-48c5-4cde-b0c8-dda744e075fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdd76fb-7589-484c-860a-c8eb631d14bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cfedd4-cb8e-46b6-a5d8-578ee79c070b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56cd863-fe43-4ab8-85b6-370435d258ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2060ac75-2ee3-4049-adc0-9de0109cedfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c717dbe5-79ab-473d-868d-4cce6b7621dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f843ef4e-a9fd-41cc-9927-a4a50a02985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f898adbf-2c9a-4db1-a3e7-abb61c3c1c4c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764c2440-9289-496d-8cf4-feabdec9630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939ff0a0-d709-4de3-9f51-09ad09c355e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8498e76d-13ce-4fee-843e-0342d04b5d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1173e78f-9234-4101-b9aa-29bfc3f36780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bfce85-37c5-4f57-9453-c63894165e58",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b58b87-127a-428c-9422-26b2eb37350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9138f60-0fe3-491c-810d-48194c49a7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d28201b-3670-4fd0-95a4-2c2e00b0f503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69ed58c2-c21c-45f6-973b-76d9ed961f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb11b26-f293-4224-95bb-8c6bab7ce58a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce48751-55de-4897-ad91-81d42a5c82e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26ba234-5d89-413f-b0d1-f7046b357e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c5f17c-0401-4b8f-a795-84a1807d7ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6856c881-9855-4920-907b-a72ca6ac2e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4032d364-341a-49f4-aca2-16c9e5dfd89a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b47ae66-a365-4fec-a8a5-fbf180f86885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b250fc96-aa6c-4e19-b1bc-71cfbdeed75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4a2dbf-df72-4b42-81bb-b713d44b1804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa7ccf9-221e-43fc-b756-76f39e517793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79003073-0603-4e06-94cb-25ab8b7f08e2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0359f0c7-5789-42b2-b5bc-39d4b4ba639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0d897a-1415-4069-accc-05f6d2d0afef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636e552f-9749-4b2d-b08a-0a5d91875dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4715235f-63a0-4c01-993e-3c6c9a5691b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3b7dfd-cd41-4e04-8e30-c41c9561f6cf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da3d3bb-078b-456d-947c-4964ea7a6751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a4eaf5-4110-431a-9b43-814355681593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc7b64-4fa5-4d1e-a752-42e29584beaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf20014-61e6-4fa5-94c1-66b3063be8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c81084-acec-4a8c-b3ae-56ae881074a9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61c0b63-4caf-46cc-815f-c00b6755928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b012c5-8791-4bb9-9f11-c36e84629666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dff070-5d12-4e8e-9dd6-1b1b8edb73e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "456ffde2-e5c3-4907-931a-0af5976d21e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e8e2ae-1012-4f99-8837-1c104d32ef12",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e6ceab-38d0-4312-b640-68500f131d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1909290f-e8fc-49fe-865a-0d1b760743b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018906cd-6503-4715-b5a5-15a4931b9495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c21ca5-f18a-45de-9564-5ff69758e887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac998fa-a74f-4f6a-ba79-0f9b8be8c9d8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d7ffc9-421e-49bf-a462-3c909343cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ffd628-15ee-46e0-9c48-4daf1472d3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef76dfd-bd9a-4aa8-8732-61588fea03f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e13adc1a-11fd-4035-bc3a-a5d0a8b17fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fbf27c-0455-48f4-ac56-209b9b6ca53c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f62e898-63f8-468c-98b8-a4d7d4e701f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd4788a-fb32-4bc4-bd66-0957535391de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8482406-a4a0-4b2f-9de9-66d97d692f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b61259-b2d3-41d7-8548-927ebb9ffa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd989c49-48c7-4776-9f8d-e7adb8e9632b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9af20b-92ba-487a-98c8-2db273e4edae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45eebcc-e105-415f-b425-511488e68cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddbce9b-f7e9-47b4-bd00-453bf410f5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6488a5-8022-4af3-ba4e-2eeef0db1dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e9229-734f-426a-a508-d96d8e5f190d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7d4c3b-91f2-4685-8a7a-e7208e8846ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57100ad-256c-4c0d-8694-2c570b94e0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d48345d-8d68-497b-8001-469eefc4ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a9d32d-df1e-480e-9275-c72274a81817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f214941-234e-480e-83ce-bdab0bec769c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ef5219-c331-4637-9bc7-959ba8b706e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c8207c-96bf-4df1-977d-759b3a80966e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f486d7-c47a-4b4a-bc4c-44dfddd6dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9069fc26-fe97-4c36-976e-ec7b5afdd8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09408262-092b-4457-a4bd-dc2b34fd1ac7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77cb862-6730-4254-b01e-31c267918274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f82459-f837-45ce-ae44-4e3cff873392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3c1578-ebc4-488a-b741-6c84f4bbf783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "790dcd1b-2296-48a9-945b-7be873028ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8af8238-4c2c-4f6a-8037-60a99ccc1a35",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a137d7-1ae5-476b-afee-4ba790582762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed81f14-70ff-4fa0-b40d-e50c0cea1e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05879ca-2903-4f46-838e-87f4b3b62426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72e9e0bd-f42a-4d0d-a47e-c34df22cf0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2d62c-24c1-4bc0-bbe6-d0449dba936d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3589e517-880a-49c2-bc1f-84b6386b0100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03faa51-2467-4959-bead-d97977da8653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e0930-9fb0-46de-8d38-d9df49f7e24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "439262fb-d9c3-4dc5-a4d9-d63afbcbe261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb9f9a9-5f83-416d-8134-9a4126198b50",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8949aa1-6cbe-4d49-96df-5113bf5b0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7222374-65ad-4986-be2f-66c6020629a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e88c9e5-8772-4f34-adbc-7d066057c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6feeff99-ed43-4133-8e56-d4ef3453ff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5f03dd-4628-4dc4-84a1-f50648ed26b1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3d7075-2972-4323-ad01-fd439cc6cea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8113475-3f15-46d9-b327-88986d998fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d39f661-67ad-4ab2-99c2-e99137bdad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc6cdc2-9392-44c1-bd2b-6518530648de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820571bd-4ac3-47f7-9e2a-497b2e04b484",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cca6b2-ec81-460e-83ce-0b295c2c8db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82fa0d5-2022-4dc6-a84c-b4df5452a25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dbfdea-eade-4245-8c1b-0bba215aa086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e59d8b3c-d2d6-4f05-8573-90224b4b5797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45331e9c-78dd-41f8-8b3a-545e9e4f1c20",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2931ba-9275-42b7-a801-3e3b081d3a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a61397-781e-4a21-b1ca-b1680513ed14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bc49dc-06e9-4511-b2a2-15e63a1cf309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1911d555-c5bf-4a86-a1c4-7a1c41cad065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46310189-edaa-4fe0-8995-658bc19c28fa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4fa57f-f270-42c6-b47d-e412c7d7395d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9361bcc-3707-4061-b9d5-181b1844701c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81676b67-1849-4bb8-bf38-591f6aed78af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7126f04-08ec-49ea-8f80-1f3a4c5f40ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54231bb-b28b-4ea8-aa2b-88bbf543eed6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722cca5d-ae14-4f52-812a-dbe282a86860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c331448-87c1-4ad5-bd61-51a4b8a0f9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeae4632-f43b-405d-b86d-71a75d8fc767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7922bb-2518-4042-a594-674f89250fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58d90cb-adaa-4fa9-84b7-023f7cb5097a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743d454b-0056-4d52-b3e6-e1165c0388db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ea165-bb5a-4ac4-b119-8033dc25573c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d46f227-423d-47b1-9557-dbff2844af00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62e6cacf-c903-45d2-8a19-7ddc7e9c401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521ecdf1-8791-4662-ada2-63bb6bf60247",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15faad5-b211-40c1-986b-ea56b82c4a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a184ce-c413-4b6a-bd02-7df133e3d338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcde8e4-be7b-43b2-a7c6-8c83d222263a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38680ab3-86bb-406b-8a82-8594bc4e2883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb7c741-4609-40a6-8854-d32440ff9205",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34f1b35-dcb5-4e0b-a7e3-66013a46c26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9598b8e0-dbc8-4baf-af05-fbcef24374a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c000055e-5385-4da3-ae20-54cf668934e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5df0d8c-775f-4e5a-b044-0012fce9f55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab3377-7678-4e93-9b23-bff00d31846f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba59f2cd-a901-4fdc-a578-dc3450d70003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778242fb-af94-4390-a865-d403e7bdddaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598efd44-fedf-44cf-b7c7-8b00fbd75ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "108e22d5-c844-4f5e-86ad-f56a519c7ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b557b-ff8e-4bed-9d14-fc3b30d1dd71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b03b6f4-ccc1-4a66-9a1b-25ea065d7158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba5ed65-7814-4071-b68c-f38cef7ae493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6743ad86-f72d-4407-b1c2-939da511be78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3569714e-7807-4bc2-b532-73662a533fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f262ddcc-253f-4c93-bea1-90b8ef6027d4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f8c35-5b20-45bd-a1e5-4d922cdc77b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd26434-7d62-414b-9acd-875102bebb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497f5b17-ddc2-4259-8498-af559f75a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebf3d26-609a-4d46-b442-561e29be8647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bb86f8-0765-40c2-86f8-6177143d7374",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd47a8-0daf-4418-b9a7-cd276d5395eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc92fcf4-de0b-45a0-a857-ff149eecac84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460141da-edcc-4204-8d8c-f2d10b12b5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d41fbb-cf84-4c60-b181-96516ce34b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3953b2-f2c2-43bf-966d-b663c293d130",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff4451-b4af-49d0-9fb2-479bba17b7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1c315b-9309-4f39-9997-023418751757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb82099a-1c4a-4155-a372-300d449175e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c1c1b9-9778-4f92-bddb-7dcca91e8635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a44d90-4b8b-45b7-a50d-6a91d30812a0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cc195d-5f65-4d74-959f-29bb173b9d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b59b7c9-2bf3-4272-a4e8-da2893a754fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8266519-b2ee-4dc4-956c-a7428c9c7d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "039b79f9-84ae-4343-a267-70e3e7d46524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4ca1f8-a056-4b1d-ba8e-a8e3cd4deddf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7f572a-9840-44ce-bae0-ccd753f9834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed17def1-5e31-409c-a060-3864dbec83df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ad6ede-444c-4aea-87cd-58837b41ce9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "015e5c5f-3275-41c3-8ebc-8620e667154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad6a7e8-ed7b-4b19-b99e-305591818327",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3ecffa-ea66-430f-9f77-a66fdd6dc3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18e5e86-27df-4c7d-a7fa-f7e7ef8e8d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b9049e-7e5b-4fe6-b27c-f30585f3944d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43b4a955-c840-4f5a-b729-f45f7d28af55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaf38f9-f0bc-4bd1-9940-92974d7a0695",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f371021b-39c0-420d-b29d-529d219cd953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d032d4-d22c-4a90-b956-6817692071b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e467a4f-5f6a-4f5d-a61d-94425fa5944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1bc329-2946-4cb4-a00d-5db69e1f58a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e23e18-1a5a-4596-8ff0-8a95b8eb5f9c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860ab57c-3bf7-4a81-b2e6-6b0c77a8d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd075642-4437-4b51-a0d4-3ef81432f3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb42e67-d329-4136-b120-58c3888612a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bab94c-72ac-49da-bbc0-612de582e352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e020ebca-5801-45f5-bd7d-214d37469ffc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b9047b-1735-4197-8b8f-0e2c0d740cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb874ac-053a-4591-afca-143339fad221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e512ec7d-19da-4238-b326-d569afbeb848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba5f595-cf09-4dc6-9c78-6174fd2d1886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28639e5-80ee-4828-83ef-09b40ed533bb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569ae31f-f681-44e9-b049-315abbefbe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856a5f0f-0d91-49c4-8376-02e8e60d4416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b2fb29-2607-4558-80ae-d21904e94caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa28bc7e-a511-40bf-b494-c02444b1b712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7fc1e6-29d4-457e-af85-17b6e0d9ba98",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df832786-b325-42d6-8c44-2a2a73216d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f6136d-9c31-40bf-adc2-b979e013f14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b80d0a-06a1-48ee-b45a-e3cdfff4e927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "895ff759-f2cf-4617-af51-fe5ff134fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d66138-f1e0-45f5-bfa1-9e20d2cdccd3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca90835-1689-403c-adf8-fdd97740402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612e44fb-a0fe-4f56-be5d-8d5de4291a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6083698-be53-403c-a18e-2b15ec6c823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbd7aa8-7a67-4c7a-8539-e244ba8e6089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b983a965-7448-42d2-b7db-1ab891caabb1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ad315-5063-4c1b-bde2-2d10c5122ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8062d7a-c08a-437f-a3f7-5a553bbccec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102f5502-c091-4325-9c52-0cc139ea10bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6de257-1bc6-4521-a528-c22d1ed61237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae0e075-3c65-407f-928f-76d53c0f76bd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d216c9bb-1a36-479a-9768-e27c72a4acd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81975c52-4094-4a3c-a154-6e7a2f265949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190bf0e8-453d-48f0-b54d-fc293fda64e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d351e9f0-5a2d-4861-8357-1576f73371e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6680df46-5340-4f54-b9be-3e5e14a76138",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f5dd7f-799b-4a04-9c55-b2f0f040732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07901c78-c1fa-4591-9eab-9f5b73f26fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93e7e0a-2abb-481d-8380-faa42fc7253c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2331d09-3b57-4632-97ec-e5861b9ea4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69070c90-b9f5-42e4-95a0-846d783d239c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903ff731-4914-45d4-b434-4fd1b4a82744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb9cb75-7096-4863-878c-f53b34ac38d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db43f364-f95c-49b2-89d5-cbe2e6c9e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c4daaf-0c11-4800-b7eb-0b28ae2f5062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce5a02b-3465-402d-81f6-33e195d59bb2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd37385-3f1a-491b-a730-190a403e0848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d38244-1e72-437a-a3b0-0b6013229265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d00eb2a-9944-41bd-867c-2485a790f4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2129b0f3-e3e4-43e7-9528-d0a3031e580a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3971b3-d59e-4006-a497-f4dd331fd473",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d34c47-1af5-4e7a-a064-631dc590f9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ea839b-f7f0-4e34-b9c1-10a48cdf69ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027700c1-706b-4412-8668-8f7e31d97b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49ff627f-2c0e-4279-903a-94ecbc5be477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57376f86-aa77-4882-b53c-08ec7ad71859",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36268782-e7d6-4241-a210-a29b53b35647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddab532-e7b4-4c29-8f92-9d2cf7677e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154d0da-7ad2-4e45-94bc-eb04b4cfc998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d29407c0-5805-482c-af48-860c438944ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a6db08-d305-45b9-a531-daaf5b26fa60",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af43040-7f63-4a40-9c4b-f11a4f475219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a79ea3-11c3-47ef-b53a-3627ee6ba607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ec7d8c-db36-44b5-af55-fdc9d1e5b5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef75074-ba79-44ab-be3b-50e3aa4a3c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4976ce9d-6e2d-4e55-bde6-f30926edf3aa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8676ff9a-5422-4ff0-b282-7b7d4d7793ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9f6a53-1128-452e-b04b-cd528e9ba11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a70341-3a18-4cfc-947a-40472f0e7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d82057a-e8f3-4872-b106-ecdf8a6072e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c9f5c5-e2cf-4ab4-aeca-ffbd018759a6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e79ae13-4981-4208-b0b1-7bdfdc437115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a508a771-b4c1-4921-afda-3b8a3fc0b59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5983507-fb4b-4f1d-bd5e-78a7a41330fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af4f80f-3ab7-4af3-8a45-80414f449c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141eb29c-ed31-4e57-9414-adee48c8875f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb7d477-8c19-405a-a1ff-7cbff2a3c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f490f58-21de-4f55-a9e0-e21590b00625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5552b4-416b-431b-b374-ee1578cceded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c18f853-0913-4d93-a9a8-d6ffb42c7ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0126faf7-9b20-47a2-8e24-8dbba4dc2a6d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7295946-29b9-43f7-bd91-eae0cca23aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34c0a87-31db-44b2-b948-e73e699ee7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953cdc6f-93a4-4206-9d29-c7806d8b39c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87f7a4ad-b722-43ea-85ec-f6e842ef494c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47061a8-8af0-449e-91fd-66b2eca0df7e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7b6231-b091-4d7f-aede-fbc407e2de5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0113789c-b652-45d7-a91c-f93ca770008a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8164b796-fb91-47a5-b86e-7f8e5bf6fb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b62f09-93ee-458d-9f74-4278f5803217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d11dc3-8b65-4a62-8621-ff95289a4241",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929ae61e-1551-409a-ba3c-b6854f4e9e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3397a4-d645-4d4f-ac5a-54ab11710f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c06c55-a7df-4105-b2c9-e0ea53efd363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "799dfcb6-926f-4b1b-b2fd-4d0e037e4d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae9bcc0-c107-462d-b1e5-2195f89e4482",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef0d2b-dc70-45be-a13e-4549504c2a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d3c22c-edf7-454d-b3be-e4b096bb4cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db75ba01-e9ff-4dba-85aa-811eb95c8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8e923c-cc6f-4a65-97ce-0a84673db21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f6c511-14e2-4ebe-b14b-10b781e7b42d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee494d6-1dbe-4f29-9660-8ea3e2305f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3017227b-c0da-482e-9285-74ba156485bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3669e504-c5e5-4809-bf2c-f6d562a5367e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea678998-49c5-4cb9-8fb1-cfa2bcbb5a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496e79c-6f6b-41ab-969c-6774fbb216ed",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221546da-8361-488e-b859-35dc5dcc643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c84100-c683-4212-964c-ccf18f6a54ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3b3588-4a99-42ee-be10-b064d8f7c22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11a397a4-91d2-47eb-afe2-f37e4bca854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a436d0-02c7-41e7-8269-a8c43de7baab",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9061089f-eb35-49ad-b8b3-a8ac697a46ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a015eed-dc78-4c7e-aacb-c3f005f1751d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8635f402-c98b-4866-97dc-d0a949562b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2178d383-431b-4089-a5aa-8d506b77c4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743dd227-bdc3-41b7-a702-ab1be3c10bce",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e57c04-b8ed-4f0a-8e89-de8f0e760662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f68eb72-852b-4746-abfb-de8e104c63ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1751666-485b-4bce-96e5-efe5926f6832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bebf1735-a26e-453e-9ef0-2fd366d7f5d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd003b06-d630-4a32-a9a0-9672d5b5641c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad6dff11-59d1-46a6-b00d-09ae764cd84f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1623c50-2389-43f4-9a88-1691f107ee07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "134caa7d-e729-4c73-9c59-09c4ef4b339c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0578e95-3c8f-4d97-8fe1-0eea5a8e2e62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0495bbdd-ee89-4b75-9ab5-5dae3ccf06e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12e46c21-0f8e-4690-a0b8-18fea0a69792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be085a8a-1e65-4009-a7b5-7b7913399930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61317cec-48a3-46da-ad96-07649f30962f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c938c34e-ec3f-4cd0-83e5-ee70a8ada327"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ec51b57-0d2c-467c-a869-53ec15aa422f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c515f842-6407-4d73-8ec4-3df8bdce3ccb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "658ce1cd-e829-49d7-a7a6-3fee8a78e483",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f364de1-2008-4f0f-89c5-b203692865a2"
                }
              }
            ]
          },
          {
            "id": "cb9060f8-d9e5-42b2-b7e7-6248366bd5f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70155190-1900-49b0-b29b-d751450754c7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b439234b-a522-4c4b-b81b-4da45b578945",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f0ff1c-5c77-4355-bca0-23f0d8ef6868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cd9a8183-4639-480e-b066-ef5313cf5be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd99323c-9261-46e1-94e4-aaa98ae2d314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c546310b-4b51-4dd8-becc-7b00185037b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b7259fe-a477-433a-88e1-141a22b4ae55",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e14d729a-ea9c-46f0-9511-dd521747f011",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8426564-f81e-43b9-ae5a-8c357d6ab6b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07dee96b-f9d9-4269-8cda-655ab3f6356c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "137fc897-b0f7-4e09-9a6a-402fd6b07a46"
                    }
                  }
                ]
              },
              {
                "id": "42ddcfcb-62ae-43e8-83d6-ee81eb2d0f2d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a8b481-5dae-4a91-92b8-f1b533c28881",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e28335e7-b06c-447e-8b7c-bc0e0e2c8e94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f24e655-c710-4ba4-85dc-c89f2de73608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e2de679-c2bb-4172-ac55-ae68d45976fd"
                    }
                  }
                ]
              },
              {
                "id": "764305b9-9e33-4945-b080-8cc5ee047a2b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32cbed41-c088-4abf-97fc-30611de285bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4e19963-6c39-45d7-adc7-1a72d01edfad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "813c3dad-7396-4cac-975f-4a41eeb23899",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec46ccf0-35c8-4dc5-8ef8-a844c3e37840"
                    }
                  }
                ]
              },
              {
                "id": "e7ce04a2-00eb-4268-937e-aa03e5ad9cb2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "941839ed-a997-4621-a616-02f5f3d7ae27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dfc9ecc-9bf2-4c58-a5d9-f6b120c7be95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fae1d056-c5a9-4fa6-a1e0-8908c1d18845",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c10bb711-5fa5-4e9f-bc44-c5d8e8a64009"
                    }
                  }
                ]
              },
              {
                "id": "a88f135a-ea10-4766-a436-811d12836297",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "974efd22-b4c0-4cac-9687-15e4bc5d26bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15f42baa-7c9a-4eae-87dc-7a1a0ab2e7c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9998207-afbd-4c57-ac75-bb6e1b639470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b1ec84bd-6521-496f-a4eb-9452a012b522"
                    }
                  }
                ]
              },
              {
                "id": "e91e488b-56e2-4e22-a4e3-26b14c5718ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29ab49c2-60c4-4d89-ad92-3fa70619caec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "980533eb-2c5c-4ddf-9ecc-06440511a79d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ef2cdf7-6c41-472d-b260-6d56275b7539",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f18b067-65ea-4338-9fef-11b55083d571"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "277a19e7-49d4-4fd6-8304-0f91cf5b9332",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d49be867-c797-4eec-902b-774f53d23208"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef982631-d4d5-4e62-8c71-0b1a8802418f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a42b7a6-fc88-4423-843e-360f30ec5134"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c649a012-f2d2-4a41-86c2-6af41aae1af4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d00a9c86-c066-44d7-9904-353d09f9f15e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dfc2403-bd83-4874-b474-f51cdab35d80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8093324-4af0-4848-bd55-5d2725421f6f"
            }
          }
        ]
      },
      {
        "id": "c5a78d25-2622-4511-a844-a3f8eaeaebb0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "193a6c48-3430-479d-8453-c3789618c1c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19cad796-d05e-4211-9a77-764b9cd7e3bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1850904f-12d6-476e-8690-08a2ba0601ca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3542cc3-1ce7-48f6-adc9-2e944e6363d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9e84d4-3a0f-4194-9d58-07ce853bad74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca35680-c613-428c-b818-bad84f12d416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13eb2223-caf7-4340-bc76-927c24c8c44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2746ad00-1a85-437b-9351-c196dc165582",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce2c3ea-7fb4-4ca4-bf73-9c640fa149e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24be8b9-1a0d-41fd-a43b-14678d2cd827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8996ff88-225b-445f-a079-bfe4189514e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d69fe05-1d66-4744-814a-58ca98519d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f4ab75-4baf-4dfb-80e4-00f8f74abcf0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef2d4d2-f502-478b-81a1-e55888547b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c9285b-ce09-49e9-9acb-9e9d036a623b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609d0a6d-8711-4f3f-8e33-4bdc61dc1535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1610e948-cfb5-48db-a7a4-0c0ddbeebc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b916941-8814-4463-81ff-4aed88d5644c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50761d40-78df-46e7-874d-90b7225e5f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4862f899-5dd6-44a2-8ce7-c7c62145e3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fe223c-64ae-40a2-aba8-871b0cf646bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e92c408-4707-46b6-835d-d19aedc360c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e2c703-702e-444e-85ee-58ae49e4a35a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2037b479-b725-46d2-aa4a-ae39b9eb58b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236308f3-73d6-4984-bf86-f6101d78d689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31537af0-7483-414d-9d55-8c51fe74b71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b555233-1ab4-43ce-a953-ca24d4a50328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51788261-25a2-4cd7-87f8-7ff5836e9dac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f49e74-9020-45b2-a0b4-c66c68f8ade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641872c6-d68b-425c-859b-390cb5101516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b33c99-441c-4cb0-a5e8-5958e253530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f01ef371-c795-4f53-85a6-6846a879c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f124d694-d497-4c7c-98f1-232242c2608c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c55d122-2cad-4827-8c4c-8fa4e9d6a578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0506444-bbed-4613-bf16-55baf3e433c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ea350a-20fd-4522-9a5a-58198902b41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e30e70-9960-4919-8fe0-77e0fff40996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984ae9d4-9cd6-41e6-a504-d26da4d53386",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0cd69a-81a2-4a57-9c99-7346d0bc1304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70a3740-30cd-441f-9f8e-cdab9c56a21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0232b63-87e9-49e4-9a86-eb7d31be1c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d17118-b3f4-40b4-982c-054cfd255651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16d0fb3-21a7-4c18-9c2d-413af5586dc7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da4c946-7a97-4eb7-b131-631d2dd71da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b20eb2-65be-40de-bdf7-fe4332c49bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d6111c-70f6-41e5-9ee6-918dc88fa2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36869726-7a02-4ecd-8fe2-9fe6a8aed703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d203ad-7e1f-413f-9953-687db4bbefa9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b8d7a-6969-4c88-8be7-9d8821d9b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24920dca-e51b-4a48-aedb-608b9c8ecb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e65eb2-2989-4eef-a0a0-e5ceaea4cdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab39473f-80d6-45f8-b99c-5c1c3e58db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ea9eed-ad12-42a7-8514-30fa72b4d27f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9ce0b9-fc7f-4414-a2cc-a6824c00e343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1cbb10-2780-4898-86ca-ebad97d655ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9138e54-1eff-48d9-89b4-40e975c4e9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff03af1-4271-4b3b-adf7-3b957ef7443b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06fb9f6-2b51-4368-81f0-bad59029b683",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5247147-3b51-4350-bb22-7d30e40fa928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05efae04-877f-4de4-a74e-9908f7f399fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05074e5c-82f7-46c1-a571-203492a701e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2583b855-a53d-43f3-9591-3540382f8984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16bb080-32a1-48de-9dc5-5386b45f7b48",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cdf0fb-1d01-45ca-88bb-21fc14bc739f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dc87e8-11d9-4cfb-9268-ab478c77a8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cb5e28-0c93-4478-a15a-f247e3bfaef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7317cc0-a3ef-4ec3-affc-256ad660e8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325c2ae-bd39-4853-af4e-a074652cf9e3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ffa29d-fedc-4bfa-89cc-6f3274eb62f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2931d9-b3e3-43aa-9f9e-bb23df21e610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264cfc2-1cd2-425e-8089-5241c8db51c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e45a8c-d50f-4e2e-8776-87f6abb5411c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e1feaf-4a94-43c8-a6fa-1428d19cd73c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69100d7c-3b78-4ff8-bdbf-523f49599281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4aeaca-de12-4b69-810d-f4617d7accb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a040755-a997-4380-97cc-8700e04b2892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e5c5fa-4e42-4c96-888a-904883b3785f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3959d7e-22f8-474d-9048-1b2b7df6cecf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45855d5e-c6f8-41b6-bad5-93aee7a5045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f79dc48-87de-4a2a-94ce-25f93f85c670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec64b78a-b13b-4bc1-894b-987dfa34841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfce6fa-2b2d-4f54-962d-7413011d7952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b87692-7ec2-4a46-8643-06eaa7eb0d78",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b225733-68f5-4ad1-8c33-72b2c61c8903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eda1385-5465-40d7-af67-19a68125b3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225556c9-25c3-488d-a906-845dca13baab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4f704f-4ac9-4611-a4c9-50b2887d3aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb7e709-9188-4ac1-b581-6fd416ea53c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8afce9-e64c-4029-9f63-742b207bdefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6693e8-9e2d-4dab-acb4-b335edb5aefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253208c6-5894-43f0-b064-fb9e85812182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f382277c-c267-4b93-8934-26e033c76f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39c52a4-e7e4-414a-bc79-e40857bcd739",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355de8dd-52b4-45f1-ab69-233743d47a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c973a904-c1ba-47da-b333-685461c89c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37adbd2-79b4-4f59-926b-998119242ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7469430c-6404-4ce6-b435-3df5dec8a857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885ce8c2-2363-47aa-859b-dc8d9ecc929a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5843c93-9125-4f31-9c83-33c802599851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36111faf-a3cd-4ccb-b91f-9e39545bfbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645744d0-71b4-42d5-8f46-552b803c8bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a2754a-2454-4477-bc4b-20bd7bb98be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fdceb2-70e5-47f3-80d5-727b8c3e6c7c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9d9ff0-3ffe-448f-a59a-59da7ac601af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4947e784-f57f-4374-8a16-7326c4ef3f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a933b9-9c9b-4b7e-b04b-d8406853415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7c9c8c-538e-4ed7-8dc9-49bb1ba0c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32a6e98-2cca-4bb7-b46d-01b0d4cea347",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ba0563-3da0-4416-84df-0746966b1db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e852a742-d7a2-4b36-b5c5-c190e8cc26f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d814a42-67dd-4691-ac3a-7e9393f4be8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c46ec7d-24c8-4104-bdd2-59ec3d734f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0194395e-32b7-454e-8be8-f4e968b11372",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783a5fd2-8cdc-477e-93b9-9e9a8c2bb870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaa4b6b-83d6-45ed-baeb-a161cb4d4fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c9c255-cdd8-4066-a573-f161c0ab2f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce514d7e-b0f8-42d6-afea-1d4f572cffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae2eb2-2cf0-4392-8f8a-982779a3dd17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91913e2-eb6a-46e5-bec5-832a5bf867d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c3d63a-1b29-4fcc-8fb4-ecd1b446709d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd03c35e-e9aa-490f-b4ef-f6207cea605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6327f7d9-1e5e-4919-9a24-b92a456425f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa406902-4030-40f9-b546-d991f55a93bb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a8dcdc-1eb3-442e-91b4-5a7fd15a4349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15eea576-59aa-4727-ac36-0ab3eac778c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed633522-dda5-4d2a-b2bd-ea0750473457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5cf678-0b9e-4333-b7b7-5bf63e8ec367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286dfd26-2156-4fa8-b644-3086fd454e6c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae10b02-6d89-4e30-9bbb-513886ea6404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7967db7d-a6d0-4c89-8318-53a8e7654f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bfdbcf-0ba0-4c13-8bab-ece32553bc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f6b28c-76a9-4300-a715-14dac9071241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005ff701-1fa7-4a21-a803-6069eb92568f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d18283-5e58-4d4c-9b22-6ee33e43e6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c07182-7f6a-4a81-9ab7-807f2e3bd7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a1dc73-ce8e-4cd6-bfd4-28b343d4fc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc21a30-4983-466a-b98b-4cf83643823d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e9c153-c9f3-409d-aa5a-0d0cf9d80708",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a170d175-4725-48ec-8408-15f7d9edc40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e5e637-0356-408e-a346-c27046beaaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d578c7f-16f3-490b-b022-3b8800d6c7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c473ae-4e03-49d6-a53a-3374a30f7ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b5ea82-a941-4757-baed-5adfb212cc98",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4349abf6-52b0-418c-a272-db6c30c93fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5baf3d-ef74-4ec2-a966-a8f76bfcfd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04811aec-040d-46a6-8949-887f177bbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079c8f5b-e640-4454-8017-982be1de38bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1595859-1e2b-4636-82f9-d83a85905d14",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e89106-7e0e-441f-8397-41790d8c9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4d4c2c-21bf-4424-bbbf-b9eed1101cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8610a2-b2cc-43f6-b847-56efd6d49e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bceb195-b04f-4de8-8140-9caab913994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d61e4a-da7d-45b3-bcf9-06afc4495bce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502f488d-43b5-4889-8c7c-f7414251d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7d2f07-1e86-44db-9e57-4038fd996c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de91fd0d-2d02-4c22-ae38-ffd8e18a1dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "943fabf2-4cca-43fb-a2f1-87dbbb507320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcd65cd-4894-49fa-92b5-2177dae0c42d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5a1839-2b6e-4593-b92a-24e49b36fffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add30e98-6e4f-4d02-892d-0bf4a61b6a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f102b43-73a5-4005-9c6a-a59d6c1f445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45c3323-1b73-43bd-a6ba-a558ed7d5ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542cfd5d-11de-49b0-ac73-934cd7a088b2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d893bd6b-a114-40e4-85dd-1c46980f7ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7148e855-5b3f-4075-993f-c259c23d6a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fa1a7c-3b31-48e9-b35b-295a9af925ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffd73af-ca24-420d-a657-a69bc61e1a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea299e68-e245-4a47-9110-7b21fe61168b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f185e187-0e0e-4597-8488-0fa12652f5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30eec28-123f-4a98-a29a-6cce1478d32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2481ed0d-d944-41fd-a1ad-e5161b3458cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3c3d39-5291-4a96-b7dd-3fe84b108731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cd85b9-ac2b-4d47-9589-21f46e0b9024",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331ed894-f397-4849-a1dd-0170942e0803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b42205-16b0-436c-8b4f-a57a1eb99488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e648083-6d18-4c74-8122-2ce123c1d5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a416a8e-ea4f-404d-bd66-7650e044daec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e1d5a0-5961-4c95-bf48-632ffdc556c9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3fb0de-87bd-4535-b95f-ccffbd0830be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a7ce4c-c76b-470a-80df-9526841a05ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df09c72-676c-4611-9608-d377551c48f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4084bea-f405-4d0d-b0f7-6fc0d6e25ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e92b96-a888-4761-9f98-b103be3c159b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db66ce0-a225-4a8a-8495-51349197b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e425c5fd-6f89-49a5-8cfd-fab78909707d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74d68f-02f2-4c39-961d-488f9b5434db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c0d724-a686-4727-83f1-a1ac573c3377"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53c7d1f7-6351-46b2-a7f8-ad5a9e224e76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1ca4021-6995-4a00-83b7-23fd2f73ebf7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac9c49-7551-4f99-b71d-edf9beeabfad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3972fa14-cf06-4c15-bc42-3bfc1086678c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328fb00b-19b3-4ac1-9c8a-4d514466906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3c5bd13-371b-4735-969a-adc037dc82f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2c521c5-ae13-4639-88e8-9c74a52b1ace",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9a2892d-0f2c-48b6-aa0f-f6e6c3f881ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ed4e22-7a4b-4853-88bc-2a902eb1f9ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8aa0b96-87dc-4718-9038-3a3212c64682"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e195451a-9676-4201-907f-da2b97488e6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e63c736a-080a-4b92-9c53-375663e8ca20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a0f6363-534a-4ab8-a70b-a7552427649c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9005b854-5bfe-4436-9978-6e2431087242"
            }
          }
        ]
      },
      {
        "id": "72f55661-37c1-49ae-bd60-43eda545c6ac",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dd70e132-28cf-460e-a89c-b9636c577371",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98eeb652-5c95-457a-bd78-a59a116d8756",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69f0ad49-1edc-4446-bf27-000f8f7514c1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf04d845-c085-445e-b406-0e885ef4a106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1c605b-6184-4135-a144-f4ae1332a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a28ad-b64c-4935-8274-561efdfbb78d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbc8510-3dc1-4c6a-bb1e-9fc2ae13e6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55f2354-893f-49bf-a6de-0def3d7e7cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5fff2f-b599-4f99-b681-b00400e2760e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dec3eb0-ac8a-44a6-9859-9624549a9f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4224001a-a244-4f7d-9c22-45cce8c2f657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205568f3-1810-40bf-bc65-418d394a0001",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cffdf2d-5152-4de8-98ee-1452972728da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b610ec1a-26b4-4ef4-9710-1d2261090997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2916b4d5-e87d-40db-91ad-e740d4ec27e9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddb6ee9-ce7f-4e8d-92b8-04518d979692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ebb484-3a6c-4ce1-952e-84ab93e798f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94756c55-c8aa-4888-9c32-9b65a8e4b990",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889dc89a-7d96-486f-b35b-8e0c7b5d4dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395b8785-7b5c-445a-9e11-fe2e8e16fcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521a6a42-5174-4675-b614-1cc739a44ea1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2900fc-b99d-4996-935a-3355dffcbba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576e669e-ce61-443e-9d7a-9bfde1603849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d271450-8047-41ed-8b9e-29af8c13aa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dc9221-bde9-4120-96f1-d309ce3b04c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595f6742-8e89-4f0c-b699-1aa2649f41fc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08686184-fce2-41a9-a639-d281ac049e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fc8913-f00e-424f-936d-d1c80d40d761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e370ffc-c242-49a2-afe5-11cf0dd4f529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a469b7-dcbc-40c0-b806-d8746f57fe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a58f45-b819-48f0-a550-069d7471c57f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041a0066-7a12-4b61-a766-8d023ae3e8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc49d88-99e2-42c6-b723-f223737a7c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a056184-887b-46e9-be8d-6f5f257ff9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2705dd3d-931d-4ea8-ae53-e6e6ab32c332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315ee7ff-86e2-4b2e-a8d0-d918ccee9057",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dd2f74-9f1f-4b4c-baaf-4e62797c572b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb212b49-4cce-4c7d-b228-43ec53f327d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860090c5-45de-41d5-a33d-e21d7458a1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a846d46-a89c-4644-856b-19d07db2f4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33b02c9-42be-4837-a79e-96113c1c4fbc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52db88bc-f709-440b-95c4-fb12ed22c227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be785c32-f92d-4fd5-bb7e-c138d2a3f413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc423ff9-e342-4b3f-93ac-24da2e49ced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b101ee7-0f6f-40a5-8977-a1b5848dada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844f0691-6595-4d15-aed9-c5e7b15c253e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17a5a33-b2ea-49e4-b053-e4cde2f5a36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c40bdfe-1b2d-41bf-89bb-2ddf09e153c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b613bd-142b-4ea9-ab16-2cb852487109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5028d00-36ff-4e44-a7cf-f9a666f77d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9799ca1-73da-4c45-b33b-f1ccc9e9f77e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418cf101-de57-4f7c-955d-bde6f4627bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd838235-6c13-4752-8554-7efc8e044ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69891493-739e-4c3e-bd21-3f5f052ad107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d4b167-51e6-4a47-bcbf-6127b9c65f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f195f1-62da-448b-b09d-503e73a58a2c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7912930-d64f-4734-bd95-c697d39433ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b3e037-b770-4d05-8039-4d275a4cd533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cc468f-5215-4022-9377-81d479de0702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35efa2e-5cb2-4e2a-acd1-3e0e40b6508b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2075794f-b55c-4936-aa90-777e88ef042f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7330f2a-de84-4040-8fb8-07fbb3770f5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa29fcd9-04b9-442c-8c86-1146a23193f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c4c85-e479-4f91-ac7c-d89298dbc6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e45feea-f059-49c2-b1d6-f68ae0b06223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6a9e6b-2c8d-4a3e-938b-73e300a68a5b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d8e5ab-e94b-4ca7-b7fb-c5421b5bb650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2612d6f9-f372-4ed8-bac3-831efb7e969c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa90181-f190-473e-baf1-351e3f1284b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85e8c1e-d27d-43b1-ab76-aeb0d9f78241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c18397-e0a1-4f35-aada-1ebbd5de34e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd9718a-012e-4e55-b530-abf27ff761f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704f973a-5510-44b7-a82d-50ffe8e5c0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706da17f-fd39-4fd2-8010-af8b9decc845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7447ba-32ae-4689-a98d-3b90fdb59c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826636a2-0b46-4278-8bf1-fb9987dcd3cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a752e817-dbe5-43ce-96dd-b7cd342eb0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbf3d2e-2f96-40c2-93b3-3512bb333e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47e885e-56eb-4525-bf21-135ecdf8bba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6708222-9dc0-44f0-b5b1-ffa74b1301a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3547c29c-6ac2-4c67-8195-da28d5e85f7b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93ce182-42da-4922-bd55-78974e962a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7005f5c-9a13-47ca-8465-287778974d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b4894f-cb54-4c1f-bb8b-b311ecee3005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66a4ef9-bcb1-4127-8643-caa1e81d40bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209e5bb8-2f43-42e6-bd19-8d91cc290a0d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e2a056-2def-49b4-8109-b523a984377e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae6c28b-a811-4e47-baaf-a5aa0ce7d698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c81c82-71e2-4cf4-ae9f-27cafee34884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628aa4f3-778c-4238-bd52-e48159b3d87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d09d7-f1df-4991-99b0-4f55e949dddb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3c065e-f25a-4d4f-9cb3-a0f9963fd8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f9e33a-124b-4d55-9dac-eb2650ec4e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcd6a56-dd65-41a6-80e3-0f2c6f0d4e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0648e0-764a-42ec-ada8-d2b3b3a3adac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6f68f4-c8d7-4d44-baf4-fe18e493ed41",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b7146b-f3cc-48a3-bce7-e230c4a117c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387758be-5419-4c26-be1a-55eea3f2fb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9951fa8a-c534-4e4d-8c58-ef0975d19b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab67e252-9f4f-4284-9d06-51ef17eee930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5b505f-f139-4470-ae09-ed9138c65164",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6b2930-6c0d-4384-b5f7-c16951ed4660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4f09f3-889e-41ca-b540-70c5e7c2a04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2316fd3-2901-43a9-9998-bdc5e45dbe40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebef9ef-482d-4887-b4b2-eacb1e811eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e61a91-e831-4e5c-aa65-a774e553c4a7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e72122-fadb-47f2-bf02-291b9da10b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7af549-5b8c-44fb-bd28-d934cb77eb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23032cca-93cd-444b-ab86-1b6663adb609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5beea04-2ceb-49f0-9893-e16af1636ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60972e5-f0a8-4eb8-8590-e978a93174b9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f30c1d-dd17-44ba-806e-50a89f0d27bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4334093b-a0a2-4071-956b-cfac32211903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df694d-f122-4423-abd1-fb44099ddfef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05bcb43-289e-4616-b3e3-40009afeb0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8c8cd4-678b-4182-9b0f-0d6f9a56127a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae35bbe0-8697-4388-92fa-3d35cd260bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034d0d4d-8ccc-425f-9b1f-312d65b1acc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c8bde4-ab92-4c1e-a86e-b2348822716c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53453c0d-9a44-453c-ab0b-af36731947c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cab4265-d9c2-482f-889b-c7275db44671",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03125cd-9125-426d-87aa-201294fae1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f276c54b-d8da-44c8-9313-b4182de7e2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a8a6e-2220-46bb-a3ec-7c1fa6870765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3c993a-33b9-4c4a-81bb-acd353703400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d85734-9f58-45d3-ba65-9777b7d12446",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e23b4-0563-4c07-8de6-a24e40c916ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2649dee0-ed5f-48f2-8d2f-cbba0c34ed1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a763358b-db34-45fb-9a5a-1538face4013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311b6e16-9787-422e-bee2-38a024124ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b267001-adbc-4169-89a0-5bee798d15a0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520930c8-98d9-4a2e-ac65-9542ce11e85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be5ac1e-7e37-4e34-bad5-afd2b173c800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0902a2fd-9740-4671-b42b-d99d47c053ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2192cb9c-adf9-44a6-a215-4023a7778cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b500c2-4c1a-459b-8d7c-2770e38414e6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a27fe13-fab2-4fa9-bbce-0dcfa906f118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6edd81-d887-4338-8183-f6523332370f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d59a44c-58bb-431d-9331-b09b95477382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abbffd6-9e6b-40e7-b443-eca3ffd97b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2707ce35-b2c7-4a01-b1dc-330edbbc0860",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767634e-6c5a-4a5c-8c2a-33dfa9ddd1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a760dcd8-cd6c-445a-87f6-65e86676034b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d36667b-7c57-4908-bc8b-377be5d9246d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00d90a3-8650-427f-ab29-cb2d50ff2fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a979268-17a0-429f-9bea-707fb421fc13",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c080aa6f-2091-4e5e-a25f-b3ef9de8ca61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c221f0-79d1-4ca8-b2cd-b39298f6a083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebc11bc-90cb-4192-85bb-1f08a1128d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06019847-e8dc-4179-83a4-bd2af8f69d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf4799-5d33-4756-b5d2-2c6b9ffed81f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04fd74d-bfd1-4bb8-9729-3343b017071a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7119b70c-d0b3-458c-9deb-9e8af83765c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec7c46a-fd48-48b6-9f46-e307f5c4b2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6121fec4-6534-4b1f-a573-1c0a0ba467af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4974d5-e07f-4581-ad30-b711fa7c35b0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0ab613-55ab-441a-977a-3053d57ec290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118a8aed-ca67-46ae-9f2d-614df6112d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31477ce-01d1-4121-b9e0-1aeb103d3389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31916185-bd4e-4916-8cae-11b0d56049c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3c3693-0187-4617-bd67-9561a3c77ac6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475dcadc-c153-4243-ab08-66013354ca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f31843-d2c1-4c0d-ad39-1a726553ef34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07db347-4fde-446f-86ec-6585487d76b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97c9872-3309-4cd3-be95-17679617fefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef858ffb-decf-464d-a463-e9b964d2734d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ecd41b-62f3-47ba-93db-e337f7c9fc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644f6d7f-2098-4211-9cd7-9ab82cd765d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a30c2e4-8185-4946-88f8-dbdc71f51ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7297484f-2605-4594-969f-30b1cf7da267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ed3d06-dc32-46ba-aba8-8ff90f28ee46",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abdccb8-0482-4c18-9344-27eadabba06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a9ed51-0610-4161-9ade-447149a2c77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefe1d79-934e-4bdb-aaf1-44d7b976dd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb3808b-106d-4c66-8aac-e7e5eed0a952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a015e0-cda3-4486-bbc1-5c325bb66e3c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a9c97-8e47-458f-bded-8d959f2293b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419c7fcb-e346-47d7-a617-62b53944b0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444ac05d-8e97-41dd-b309-e0ba5ab6fc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1451bd91-d324-43cd-b8c3-6f79b0b8b196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f740ae-df47-4440-9b59-d43bd12ce776",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac99ea6d-d4c4-406a-8ea3-b39f44d752d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422159c8-17c9-4b78-97a7-b1477a517bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff843aa-1415-4bd3-bc7e-9f0a384f7cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0f4ce4-7d0e-47e9-a5fc-7a738a3a1c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f513f5-e49c-4256-9a90-ca62cf49da39",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b8daef-8437-4680-901c-7322d46c8f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de6ff9e-2247-4bd9-a517-df88e3df3d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d8aa4-e984-4eb5-a696-e2d1572711b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33331e6-1207-4c40-b95f-2433e40287d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f0cbf-9bb7-461f-9404-0f65934f64e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeff1dc-601f-40a7-90e9-94c96d674a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520d0030-91ed-4efa-a4d7-ae5820b5230f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d62013d-200f-4bdf-92f9-82cad18d8d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1663b1-ae8f-418b-8ee4-6452f707cd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaefda5-978c-4420-90a5-7a344f9d3bc7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53491e4-1550-4be0-8593-b524e9b4a435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b69bc2-9849-4e15-95bc-bb858ed1bbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a0e087-62a3-4e33-8289-b61a6a22108c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b757f1b9-3cb0-461d-837e-c4b32d5bf724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b978a9c8-2deb-429e-a0fb-ed26b06d090f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e7c6fd-5bef-431a-b262-e6166dcd0fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611ec971-318e-4422-ab24-3c4f7625ff71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faef233-93df-44fc-97d8-419658b5c34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a67dc89-458f-44cb-8393-c6b2dbcd2393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0885eb2-4783-4176-b998-197239a3af65",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f728041c-6b34-480c-86d1-93163c92d2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e48410-2667-4167-9390-69834780d6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797931e2-8e58-4d37-bfc7-a8b4077e8ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457dd7cf-68f2-4079-a2c4-f7f301c14045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c45f57-7793-40f0-be0b-08abc7c7c8e5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987f3b13-b941-4c82-8b24-fe511ab71dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ea4349-8c4b-4771-bb99-d40dc5b7ba9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda63e9c-55ef-4096-8174-e9b45fa83f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28454dcd-e1e6-44af-ae10-2b4054d1fdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b109a4-29dd-4323-b070-f733181b5e8e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d61248-e92c-4c6c-a46a-4868280061e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe992bd9-33f2-4145-9294-cd2a42b74f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b478e002-905d-4df2-ab74-5cefd5528e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3995af-4fe4-4844-abe0-c680cbbe4e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c016439-aa2b-4502-bf0f-d03ffc36b60f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b861ee7-eaea-4d25-a64f-19174649815e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463e665d-4a54-4583-ae0d-53b3ace858ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe73da0c-2c5e-4c22-809f-e6cffc62dcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c356ab15-318f-49f1-ad10-7d5f3ea478ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe286c-76eb-4b4b-aa0b-b5563fa60240",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72832c21-85b2-41d5-b596-7574fd925374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9387c1-2fae-4099-96ea-a8f8c88e47f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e75f03c-54e8-4b68-82db-6e6a482955b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad11e94e-abf5-4535-a680-fcf2e1a4946b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26a6d6-bdb2-4be7-83fa-50a722584ba1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2f51e3-efe5-461e-b095-40c03c08d1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1455d781-81c8-4a58-a946-4721f4948b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a992c9a3-5d10-4c30-9328-8f3896d6126b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3667fa5b-241f-47b5-90c4-643c59a676cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da727251-ca37-4dea-879f-1da7629d12f5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffc51cd-184f-4ecb-8922-3ccd9cf47b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520b08d6-a781-4b07-ba25-4c4df9b3ab69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9a9958-a6aa-43a6-892b-10a78461040f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec593c6-afd7-431d-a77b-02140ff063f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ef5e39-3d92-4b57-89d1-a599856ad44f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29d32b0-0e12-44b9-8653-420e7a4a55a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d846e725-fbf7-48ff-a8e5-0dfaa0dc97bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0782a298-6871-41f1-9520-7196816e2c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6f1099-1e0b-471f-86fc-4037e46a7ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde7d2eb-7d20-4d6e-9dc3-9ac007eb87e4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c163cf-cd7e-4820-9542-18160e0ee20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3773edf-c25d-4089-b4b8-391c16e56878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7882efc4-5a21-4d51-840e-6a842c03d0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad1bf65-7df4-4364-981c-7b263fe55150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1105be06-c7b1-49e3-b921-7dee2569d579",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cefd7ab-0c86-417c-ae0e-142b4131e9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2c9454-18b0-48c3-95de-699ff84ca0b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d209291b-61ae-46ab-a1b5-3b4ad28b02e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4265f5-cbdf-4663-a40e-d0c25d873bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91522071-d6e1-4e6a-8834-39065d3a0bf5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620ccc91-f929-43bf-8c6b-a78528372c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e326c5ab-5dcd-433b-8892-0fbe085dbb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812b557d-b8e9-43a8-a3db-816101059f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72b49f5-b9b8-4571-9ad9-98e655b75d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee18fda-0112-4b2f-a471-a975ea220774",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b9df4f-322b-4c69-bc98-22b7da811a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6788e727-bb80-4ff8-9f10-8b3419bec7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a50d953-bbdd-430e-af48-0fa4b3a0c093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0a7544-0327-4864-891b-2a7ea7fc8c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27c083c-c5c5-480a-947b-7553444e06a2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fa0b3b-7ddd-4aac-93b9-38d8340b3d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7eb462-e0cf-4281-a882-c1d8c6c26f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81ac186-2106-4c21-a56b-3984b534a347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf4adad-74dd-4703-8784-28259c5cc019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910c6be9-86f3-41ed-9a40-62af2a60bc4e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad484e43-14f9-4c69-a340-0bc98c773986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacedf0e-ba73-4c7c-b7f2-0c0ab82f6574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6139736c-88d0-43e5-874c-8b0dd91ba11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49085d3b-52a2-4303-afbe-96f7a68b13f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaaecf1-b731-451e-8b30-f6d38d33c499",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087970de-eea9-4fd5-8e2f-ae716b0f5477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1564c1-4b67-4683-bae1-b4e1436512a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a06ca9-a800-4d9b-9904-c0430fd2b5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c23268-efa5-4866-9d7f-05d1c220620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc851c46-bac0-464f-9f6f-bfc80f917612",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077cad90-6bea-4cd3-98c1-cd9fcf3cdc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0508de06-ef5e-42f0-aed4-e8cf9ed0f93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c373f-0018-4ac5-8e2c-19db88f210c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771e38e8-bc54-4f8f-8a8d-224884d412dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0027900c-8df7-4ddc-aaac-3b1f235d6230",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a29771-4d12-4541-82f2-79dd80fb3649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9bf61b-43c1-4644-8f99-cf75d41b5ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930dc01b-4462-434c-bd2d-37b910f20281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7aa765-1cb2-468d-8405-e1c8d3152802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4db554-c26f-4890-85a2-15d3fa2545a8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90807369-7992-48dc-8d96-3e8a4bc38693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d9ddc5-2b6c-4182-893e-e7a382c05559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4800e78-3395-447e-a499-e8dde47be570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b957775-ca84-4988-9947-97107c794698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ae92de-a1ff-4ce7-b86b-d028f82f43bd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcedb33d-aad5-4612-8834-c4c89263da98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7179eb05-7396-482a-be56-3fecdd03f134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fd823d-e93c-446a-8bc0-4d93c235cd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff72a128-962e-48db-8aaf-034b9aba84fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4972b5b-2c12-4fe5-b54a-784f00d31997",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaa62a9-6fef-4233-b299-ffbe7e7626e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed76ff5-a77a-4091-ace2-33c3c92b5473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fd8869-cc97-4064-92c0-4f5dea1d2468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f85911e-3156-407b-9a04-0cf8f84ecaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecc01d4-a27a-4fa1-8506-790738238a6b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fb2ead-f38b-43b9-b477-b773f419ad36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd5c302-8dcb-4bff-8b23-5154c7eaf49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0071ad40-5983-4e1a-812b-a19c56e25593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514a00fe-aebe-4892-b0b7-ebfadfc6c209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db6ad6b-8e4d-4050-841f-944ddd3f6523",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba25b2f-3195-4ee9-9986-03308c651a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf2a0371-f099-4cf8-9ee2-2f1944c4f923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd17aaf-f3c5-49ca-b84b-32d46715d9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255b4375-79c7-4cc1-bfe7-eb0c2ac62985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7412503-c4dc-4397-a25f-b8708109631d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a205bbbf-f45b-4aab-98b6-28a1034f75a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a1fc69-bfab-40d6-a032-e36f3e42646a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e8fd9f-431e-4405-8cc9-cb2182826fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bb5bf1-efde-4702-8e4a-139401785614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4720820c-9c96-4c92-9f02-0f17e92d03cb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf706512-21ce-4b38-b53a-2553637aaafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bc412c-c8b7-4cb3-8cc7-13ab1efab831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7145ec0f-a9bd-404d-b34c-e3512c9c50c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b91e48-888e-45d4-b60a-7fe0a3b0b5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d2c0d1-f76a-4e8f-8a1f-299b47b48258",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd808c21-d317-49d9-9059-ff6ed6b415e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0272b6-e860-422c-b0a5-619cb42c87a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ec2ba3-565a-4dc6-bc37-4a3bef359d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461a29ef-4259-446b-bcbc-b8e85b59df21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edb272a-1134-48ce-91b4-618f8f5e60df",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256dbbbd-0d3e-4df9-b454-06d9b59e894d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781a32a3-6259-4bd2-b0da-47407b293cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493868b9-6b67-4bbb-915f-4fd04eff78ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cfc2bb-abf7-4dd9-8b25-2dbfbd05cc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c63e5d-4abd-4ef9-b091-cedad1caba14",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc7f59-b51b-4e17-9297-357687406f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2b61ed-ca2b-447b-b64d-1797364867c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfce6695-1968-4211-8cf0-ec1abefc6dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b576c9-e7fa-4382-a79a-59b961004ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f94beb-765d-4c52-b94f-65ebbffc5cb3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2516ad7a-b00b-4a46-b025-81ae2de82019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8674092-d2ac-471a-bf66-ed8f7a1af3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd4a9f2-f84a-4916-986c-3290c811296f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3952b7db-8d97-4c3d-ad92-d7e3d292066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cefb39c-e33a-450d-8a94-b4b6221963e9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a920e8a-4283-4966-a1d5-f68e3d1fce21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fa17b2-7d30-4e58-80d8-3689fd69dccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af54081-f541-4123-bb5d-581e40742de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea27b4aa-8588-4f01-bc1b-600e492daede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f968a0-3279-4c16-9829-027eea9e4b4b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646080f2-8db5-4c12-9e9c-ef9d1a5fafe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31978d2-d38b-4193-9a8e-f53fa57e1ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07e932c-df14-4c16-90a2-c81efa30a7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd0b732-35ec-4b2d-9f37-d17a7a725069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc147d0e-3641-43f4-b6c2-0ae28a8b423c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f152942-590f-48e8-a663-93ea083eeecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6d8231-e4ee-456f-8b74-832f404314e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f23bc71-05ee-4d99-b990-9d4045e95ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed1768a-a065-461b-9096-653b495328db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1a425b-a040-4938-89b6-27aa61ec9865",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcd6a9b-f723-4a58-ae03-2bd830b85e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1f9ed9-cac8-4859-9e92-f765136c8a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c2d8bf-18b8-4c0b-8155-d6ffd0adf934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7af244-d16a-4394-9a15-7fc8588efa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fe89bf-24ed-4ca2-8da3-f0b4b369e481",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d93ed44-4c68-4312-80d3-fa9c7e659009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1e111a-de71-4e04-af64-8d5fa94fa99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8e229e-42d2-4bf4-ab0c-5e210b2f44bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d14fea-9e95-4e25-aa5f-4cf75f4116ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f35fcf5-0160-4adb-b95c-e12be2639510",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101a1cc9-52f3-40c7-a391-3f24fb156a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a545fad-1d30-4e6b-807b-520e2a20c811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83906ed3-e0c6-4e65-8df5-f5af47847ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018a35a0-eacb-4882-827d-7aaa25d506d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c3535-efd9-4cff-8e4d-1d2a41f50378",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5208312f-1298-4903-8829-205569e35aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8c96d5-02c5-4a67-bd2b-a8f560d7fb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2ee8b0-64e0-4a7b-a945-77414da6083f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a31330-4173-468c-b954-6f457a18351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14289e0-f861-4407-8fca-75f3f7baa0b0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b38880-9682-4160-8dcf-470f391ad4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cbb82d7-aa5a-4722-9715-79c84154fef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25485fe-2eef-4c6e-87b5-0723ad836911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f693e6a3-57d0-4c32-9c69-7ee693f7a423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd4fff1-03bf-4165-84b6-e48cc9997256",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb81f60-f9f4-4302-a6e3-95ad5010a061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12bc92ef-8821-430b-9733-21dfaab6e76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0593b6-ca2d-4144-aeee-e68963de7056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd88ffcf-b895-4fbc-8273-f61ecb03f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82082cc-2e02-4e51-b454-426c655b930e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9e6e0e-1bcc-4194-a6a0-a92c2a5b80a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c803b8a3-6cc1-4036-ae66-b0bf50881340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb94174e-e0ff-4503-be4d-28ffb7065b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d02b9b-d8c6-4df0-8669-45e1c2a3b646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075a974f-ee98-4c95-95aa-6674f86c5c25",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e818fd7-68bf-4fcb-ad49-2ba4e183df1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74937c47-87a6-491b-b4f0-28aa334bcd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a93aef-e16a-49c5-93cc-138248372395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e5d61a-6bf6-46ed-9e7b-00461a48a334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16d520-9b82-46c8-b0c9-0702b47f013b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1d5dcc-5525-47c8-b6ad-3221290bc342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54bb945a-ecfb-4879-8fb5-c1411857bb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b6c649-b8e6-424f-bf50-8e8c8a706633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12bd05a-45c7-4cb6-8376-8842b9b9baa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb15f698-6a29-463e-a236-75868976d4f8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e08754c-f6e1-42e4-9a14-7eac2a268b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1819a0-dc53-48b3-ac8a-adcce811c00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2609e3-e501-4bbb-bd60-298ae3db9269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e92d371-f927-488f-bbf5-9c72af9133bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c425b7-4fe3-4739-8fb0-d9be8c1f2933",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbeeb64-8a1f-45f4-ae29-a1c7b07d61f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05088b06-6563-4d90-b2b6-6302a7cf9484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3066879c-4406-477b-bd9c-24940c8830cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2601787-0fdd-42e8-8a7f-58db10d56800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c05cdce-4022-4617-bf92-393c7c953d2f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ded22b-9e45-40d3-856c-099b952373ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d097c3-53e9-4e8d-a818-6e1cb94a7fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e251aba4-1d80-416c-8b56-0c517cb42399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42c96a3-1649-4302-a86e-ec1424c908d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483e3702-3629-47a9-bec9-3e35d9fccef1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553a066-119b-4e01-9021-1d29f98fa3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d576e0f3-76e4-44ab-ab80-9a8cbff8a036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b65fefa-fc05-402d-9da0-354c9733d0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c1b714-ce22-461d-ad66-7f14b5e9adc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5ed557-183a-42d0-85f7-3abbf1042f6e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdd52a1-a885-452a-a9eb-45e4d3884f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b180a63-2637-4a81-8ce9-e304da53f36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e49fd-ce5a-4286-8430-fb3e2255cf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144fe2e6-aa4f-43d9-b95a-a763934ffb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d512cd12-f92e-4d71-90cd-7e5194984587",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b52175-e3ed-45dd-bf8f-c08502707c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187e00b8-ee24-45a9-b7b0-ceba7a3c880a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ffe8c0-416d-41cb-a7cc-a51c5c600a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd175674-d36b-47af-a0e3-32abc149d58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045c2aec-2e77-46a1-9402-b60ca7b578c8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46a4f45-f607-4fc9-ab6d-14e75d02c2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8845a23-d3ca-45df-b37a-ff62f9f3cba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ff6333-1169-44c2-b77f-005a99217863",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb78d7a-17da-4c07-a7fc-24141b286de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def9cbd2-c672-4c62-b21c-e42580e634bc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d933569-a792-4d04-8f4e-e98ba1c3c856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e4c639-0b6a-4d17-8bdd-cd3f571bab9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec588aad-aa50-4cf8-8603-8e5083782aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf76ce1e-8e87-413f-9543-9b0b83971c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca08c0-c74d-4739-86d9-4432b1f4a882",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257e7301-a0ce-4d42-8ec1-62ae04d081b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "281d2432-47da-450f-ba55-fc1c27e63357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f856734f-efab-424a-8795-fc07f4c9b0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c995954-6fd0-48c9-833c-46e72aabc219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3876a9-594d-4826-906e-d00518a12d9d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2492f6-9638-4d31-8c82-afe14a21bf9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98048f0-48c1-448a-84e5-3b5bae28e3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f22e2ac-42bb-499e-b96c-5cad5addebae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffc6d24-7adf-47f8-83a9-741316e21b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcae3ad1-06bb-4a80-ab81-0af0770e869f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef18a7e-5324-4671-9199-fde71958a036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3cfd98-f81f-4401-9fa3-795afcee57be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211218b8-27d1-409c-b913-7d0c7eea50f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccea7822-1422-4039-b990-c580296bb3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d4381a-07c5-448e-959b-b68d0b53a778",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27c59ee-2441-4bcb-87ae-9112f3904588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292a2bd4-2cc7-4212-8a28-0e157db324ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f45f43-5089-48b7-b328-b900b46e5ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ef8887-ac06-4fe0-9416-8fa08929dea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe791f5-4d47-4f31-a006-9494fed481b3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b0516-5c44-46d0-bb38-0c94e9a029d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f13e84a-5817-44ab-91f7-c6dd9c19745a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932c70d0-958c-4ebd-82b5-c8851f3e535f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f488b2e-93cc-4ccf-b828-78287ee8ebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4d1555-d3ba-42e5-879b-189700842646",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac45ad9-3543-4cab-bc7c-279220ccfcd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5077e967-7604-424c-9cce-f382f024ba85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32977d93-5897-4a67-a8d7-a9b277b8c232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9d9c95-cf79-480e-a842-b8b707d773da"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdcfc3de-d4c2-4b8e-8bd9-ffa59e02bc81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db024c54-affb-4189-9ed4-baef874209cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4e92e04-e016-43d2-8015-ee9db9168bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0139ea2d-c0dd-40fd-be7e-604e7eb5dee4"
                    }
                  }
                ]
              },
              {
                "id": "e897bd0a-2abb-4bf6-bae6-7cb92eb89c74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e795a85-ea07-43cd-9c5f-6645d29b3949",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efee8d4-6af8-4831-8129-f0b0f27c56a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6f13d26b-a155-4d42-b521-bf9c61777dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f728cac-f4a5-404b-bc75-f145f91e8519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57d71516-11d2-4762-9129-d4db00c7b5d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2392e809-91c4-4452-b513-2abcb2907e5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71c841bc-f901-4fd6-9487-1b4f36d00008"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c0c1671-4333-4633-b1da-527ac8531d70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17246531-a64c-468c-a3ee-8ee2f906c9a6"
                    }
                  }
                ]
              },
              {
                "id": "f58f6c42-96da-4681-8a6b-41f341f053f0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7728631a-eb38-4394-8e1c-d0b2eb816428",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114512e2-37aa-4e06-9fc4-faca9577d0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "48aa7854-31ee-434a-bdde-e7588b205d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f525b6-312c-444b-9f27-ef13bb2d6a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c218832c-613b-4481-974f-6f891838b237"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e032a719-e53a-4b2d-9e10-f79cf0e5c4b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62c31140-512f-463c-9cc1-0e07a5260f2e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2769afca-2a5f-41c1-bb2d-2b7e7c2a1fa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "edb9b54f-8328-4e75-afe7-b4fd5045337b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f413cc80-4077-4935-a7f9-c231055cce67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25d15e11-f6d7-488f-b6ab-225d6fb37e4b"
                    }
                  }
                ]
              },
              {
                "id": "426b7b45-8c26-4d3b-bed8-312a54e9ece0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de3f8d11-b085-43e3-aca6-2ea2609f84b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "06a2626c-4c76-4c68-9ec4-9519e5d91222"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e30d8284-bcd2-469d-b614-a09fb61c0e68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "357cf8f4-add0-4898-952e-04ba9f44667d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3384b86-fc4c-40b2-813c-8d7e75a12d83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f03575aa-b088-4db2-bb29-46a64e3f98fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb0f1852-237a-4717-b892-f2cbff68f61c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b510b59-1bed-4ce3-85c9-c9556a867886"
            }
          }
        ]
      },
      {
        "id": "dd5089ac-d535-44ae-b68b-7c85a3212575",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9812ce2d-6036-42f6-aec5-97a542c4b9d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e550f074-dbb4-404f-915f-5f03fc38ad99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8020fd35-b6f4-4d0c-9f72-15ebdd93addb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910b8a82-57e5-4a21-9c2c-996f658d6994",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "abd9b1c2-ed8d-4d87-8fe3-67663cdae920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8b205c-845b-4b34-b6b7-b44195f5510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d595437-35bd-4e47-8c77-12790bb72ffd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fc467fc-6991-475f-a294-97afd08444d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7219eb0-dbdf-450c-9ce2-4a98d395927f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ebca1fb-7165-430d-b4ba-dd390ee51402",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da583c10-e698-4441-86c9-d84c16f19e23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4ebb3a4-81ad-486d-8ce2-9051d5f065aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "042e4987-9d25-4e5a-963c-1cf4a308c65c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e7ef90a-8f59-4bb6-a8c3-24e507241eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c304050b-748b-4358-83a8-b94206e0ffb6"
            }
          }
        ]
      },
      {
        "id": "c7fda536-36ed-4797-8e6e-cbf75e7fd1ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c2689e41-a800-45e9-80a8-6502ba8ec39d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8712b3e2-964b-44af-8a0d-041375884674",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d72bee7f-0a15-4cd9-ab48-9f54ed68ca00",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47ec4e3-d89c-488a-b0d5-3c7e73c0ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c58a057c-e81f-49b1-b57b-81d30b0ce676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc893b79-0904-4f16-a416-0170f83719c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c4c4a4c-5861-49f3-8954-3412c4140ac0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d2e6ff7-4cd4-4588-b9b7-5552bf13ccf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce699478-30b6-49c0-acce-57ed840620ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60eb1cbf-3723-4113-a8f8-7c40e86790e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "651c8659-da01-4666-8917-d5309a7eef9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46250201-b0da-42d9-bd50-6e70a14c573a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd1d1f04-03ab-42f0-882d-d0063b45b165"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36db8755-05ee-476e-bf11-ec210c39337f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea975186-8cce-492d-a15a-72945a5e8387"
            }
          }
        ]
      },
      {
        "id": "edbf3c16-ce94-4639-b65d-1a272527ea91",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "506a3abe-63ea-40b8-acf1-7f7867a3f6b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64b7537d-46c4-4b7b-b8f0-28c8b2b49d12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee9d94d-862e-44fa-b732-81219bbfea19",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3081b2b-3158-4989-a2fb-22f50ff21495",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59378b0d-5b7b-4435-b8bd-fe27fa89f1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deadbc16-d497-4740-869c-2d99b370a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1317ad8-722f-4e30-ac11-8856367b150c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e59a565-6636-4727-a5dd-de1233d49f23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b58472aa-fa27-4d80-9fca-42e0af25a5fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9d312e1-471a-4f04-a238-6683311a9fa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "996c4dbd-5a77-4350-804b-d1dbd3bcfeec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a956099-ea33-4485-a479-603629d802d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3e07571-9612-4fc8-9857-ba417fc5ca9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1fc0dcb-8422-4d29-a13d-91b0f3779b78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e716d0d-69f8-4cbe-b58d-590900fb6f22"
            }
          }
        ]
      },
      {
        "id": "253ae34d-8c7f-4b1a-962a-b76aa12c7a2e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5736437-76b1-4678-b237-7e09de032174",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1163116-4250-4443-915d-7a2b4bc4b5d3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c067bfb0-c0bb-4ace-88c1-e30d0e4bb54b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d158e2c-37fb-427e-a53c-064559a2e428",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "559e3265-d288-40e1-b3e8-5113dacfa542",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 390.88888888888886,
      "responseMin": 8,
      "responseMax": 10683,
      "responseSd": 1619.416040753933,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724114432926,
      "completed": 1724114540129
    },
    "executions": [
      {
        "id": "8a951284-39d1-4b8f-9af8-c15e1f252d9d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "715499c6-df1c-45a8-b206-31bcf0498cef",
          "httpRequestId": "2f192ce9-265f-47f4-9c4d-0791a700cbe0"
        },
        "item": {
          "id": "8a951284-39d1-4b8f-9af8-c15e1f252d9d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "56c3ef20-a3f5-419e-8b15-2327b30f0c38",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "74c59ade-89bb-43b2-98f3-3a5edb1783b8",
        "cursor": {
          "ref": "a6e35891-4322-458c-936b-57f4b2b39639",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc25150d-54dd-44be-8896-f7d966e66da9"
        },
        "item": {
          "id": "74c59ade-89bb-43b2-98f3-3a5edb1783b8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "038fcec0-2bcf-4b20-955a-293147ce0825",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "bdb3cf1e-6df6-41ab-9cf4-f44af58ec384",
        "cursor": {
          "ref": "6a85efc7-7d84-4ce6-a4af-59807fb365a5",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "67991d76-19cc-4521-8db1-173b9b0524d2"
        },
        "item": {
          "id": "bdb3cf1e-6df6-41ab-9cf4-f44af58ec384",
          "name": "did_json"
        },
        "response": {
          "id": "299816b1-9ef5-4498-91d6-020ca6f7d425",
          "status": "OK",
          "code": 200,
          "responseTime": 559,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab08e2d-b8b8-41ed-8e0c-d8f4a86fb203",
        "cursor": {
          "ref": "314ad31b-d417-4616-acb8-7e889fd951e3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4702f0f8-e253-4f4f-bd49-eedb68126c8a"
        },
        "item": {
          "id": "eab08e2d-b8b8-41ed-8e0c-d8f4a86fb203",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ea312b-2f5d-4f01-8cb0-bd57deb5ce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2226,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab08e2d-b8b8-41ed-8e0c-d8f4a86fb203",
        "cursor": {
          "ref": "314ad31b-d417-4616-acb8-7e889fd951e3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4702f0f8-e253-4f4f-bd49-eedb68126c8a"
        },
        "item": {
          "id": "eab08e2d-b8b8-41ed-8e0c-d8f4a86fb203",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ea312b-2f5d-4f01-8cb0-bd57deb5ce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2226,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49495e81-42f4-4aba-a942-2d86db93f16e",
        "cursor": {
          "ref": "8b4ae520-e4a9-4c0c-b94e-dbd8ea3e4a60",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2b3dd06d-20e7-4de2-9632-c39a717d5181"
        },
        "item": {
          "id": "49495e81-42f4-4aba-a942-2d86db93f16e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "505866d6-0963-4789-b094-5b7f6a9cbd3c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2263,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98927bda-fe09-4e84-88a3-06c21001cfd8",
        "cursor": {
          "ref": "3a26899b-715e-4937-9965-64b14bc5cdee",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "284d13fe-b02f-4f2a-8298-0a7e8ec99610"
        },
        "item": {
          "id": "98927bda-fe09-4e84-88a3-06c21001cfd8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1a0d996e-229b-4d70-b67c-ddf2ac49fb2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2079,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8876f38f-1fa5-465c-a3b5-5fecc39643da",
        "cursor": {
          "ref": "4d0de141-6aef-4a6d-9a16-0712aef926ce",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e63584bf-b404-4300-8dc4-2f0f7521862d"
        },
        "item": {
          "id": "8876f38f-1fa5-465c-a3b5-5fecc39643da",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fad322da-bdba-4561-b444-cdf528ae9304",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3483a4a4-6dab-4e26-9b77-76850ab951ed",
        "cursor": {
          "ref": "fc64ff06-6aff-420a-a7dd-7f027faa6a87",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eef1fbfe-2c08-437c-956b-13638ec9e3b4"
        },
        "item": {
          "id": "3483a4a4-6dab-4e26-9b77-76850ab951ed",
          "name": "identifiers"
        },
        "response": {
          "id": "39d27594-298e-4f60-903f-3487cff42468",
          "status": "OK",
          "code": 200,
          "responseTime": 2353,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb2eb5-90ba-44aa-9112-c9d7abc56905",
        "cursor": {
          "ref": "4a99cf8c-8089-4f54-a863-d3578c94b928",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e853e079-3922-4c36-b867-2a39c816aa9d"
        },
        "item": {
          "id": "1edb2eb5-90ba-44aa-9112-c9d7abc56905",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6af66841-e2d8-45cd-8817-c4624fced4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47fe279-3c2d-4ea6-8cfa-3c41dc4ad840",
        "cursor": {
          "ref": "e85ac401-e10f-43e4-bf13-004dde26601d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "75d1308b-66a6-4a6b-b0ad-67be593cd0ca"
        },
        "item": {
          "id": "c47fe279-3c2d-4ea6-8cfa-3c41dc4ad840",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a0f475f1-8f87-47ff-ac54-055263e61420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2accdd-08c6-43a6-a28b-b58955ca514c",
        "cursor": {
          "ref": "fd81126b-9681-441c-a9e5-e999465d6703",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b3ff2658-8274-4906-9d58-066c62bd6f77"
        },
        "item": {
          "id": "3c2accdd-08c6-43a6-a28b-b58955ca514c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6729c636-696f-45f4-9b2d-253703fbd018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceda7e10-6313-4f0d-9e1b-dab409e58689",
        "cursor": {
          "ref": "ec44aca1-3baf-4f01-9f73-9a3394d57b3e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3c499763-fd78-429a-a867-d85039592eb5"
        },
        "item": {
          "id": "ceda7e10-6313-4f0d-9e1b-dab409e58689",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5468a803-b477-4c08-a88e-aef2f9fc5e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a691afd-2bab-4bda-8731-aa86f698e2c5",
        "cursor": {
          "ref": "216dd78d-af14-47d0-bd34-bb635c420417",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5d75a853-6e78-4270-a847-034a8a4edc77"
        },
        "item": {
          "id": "3a691afd-2bab-4bda-8731-aa86f698e2c5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d144dadc-c2c4-460f-9ef0-de697c1b0ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037019e4-402a-45df-9889-f4da29b86b8c",
        "cursor": {
          "ref": "93397f1c-63b5-4882-a591-32fc4ffcff0e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "09de0a44-41de-45e3-8ea6-6715b43c041c"
        },
        "item": {
          "id": "037019e4-402a-45df-9889-f4da29b86b8c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0fbac0ee-c007-4c43-a4bf-63d5f1a05ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72301348-42dd-4b6e-88cd-bfa1067cd1ea",
        "cursor": {
          "ref": "362b664d-2dc1-4ce0-aac2-9cb88610b9b0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b103e70b-0cd5-4eb2-b018-734d9e658bc9"
        },
        "item": {
          "id": "72301348-42dd-4b6e-88cd-bfa1067cd1ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "23f98df1-afce-43fd-966f-7a3648be6b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42adf635-424a-4400-b72e-3c27d4537192",
        "cursor": {
          "ref": "6b9af98a-a960-4d51-aa80-770805cfae5c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3e5091c2-1ac8-40eb-8e6e-54d5b0ad6dde"
        },
        "item": {
          "id": "42adf635-424a-4400-b72e-3c27d4537192",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "41ee097f-5e18-4a64-a06d-0ea33198c748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd4b540-c100-4f35-b7cd-04160c5afec6",
        "cursor": {
          "ref": "c8e1f96b-5c8b-4936-b374-01bdae9f6769",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4c64f39c-8b7f-4499-861b-fa0e6b1076df"
        },
        "item": {
          "id": "9bd4b540-c100-4f35-b7cd-04160c5afec6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d58cc27d-7a3d-4145-98ff-d4514d01dfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c2f37a-f7d5-45da-9991-49865ee7d778",
        "cursor": {
          "ref": "3c371b41-7afc-4fa1-a0fb-f53d3c72b92b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1bdfe2cf-90cf-4c04-ba4a-f478e8ee11a6"
        },
        "item": {
          "id": "d1c2f37a-f7d5-45da-9991-49865ee7d778",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2c45695b-c85e-419b-bc6e-c6f97767b86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29af5757-52bc-4af0-b9f2-581ed7a3ea21",
        "cursor": {
          "ref": "c4aa07ec-294d-43b5-8b92-dabff1ca88dc",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1170e9e9-1fb6-43e9-aef9-ab146fc1d742"
        },
        "item": {
          "id": "29af5757-52bc-4af0-b9f2-581ed7a3ea21",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "40272d9d-6e00-4607-819b-55b864258696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d544c1bf-c596-46a5-a0f2-099fcf50ee9c",
        "cursor": {
          "ref": "b79aafc8-aac9-40c3-8d98-e02983ba50eb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3984fc78-c81e-4775-8556-83cfd4b86cce"
        },
        "item": {
          "id": "d544c1bf-c596-46a5-a0f2-099fcf50ee9c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a914847b-f2ff-43da-9381-4a07ab0a89dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fba1aa-2aa2-45a6-8eaa-57b57494b3b4",
        "cursor": {
          "ref": "5d07009e-45e0-4e44-a121-f1953245a8ac",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "91ef5ad4-9f55-4f64-b702-14a840b87d2f"
        },
        "item": {
          "id": "95fba1aa-2aa2-45a6-8eaa-57b57494b3b4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ab515394-551c-4a09-85b3-64a300249652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d637963-a6a0-4b02-9096-7c8c862ed799",
        "cursor": {
          "ref": "a3e9cc49-598f-4d94-876c-7b3cab635fbe",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d12985e1-930c-4474-a4c6-d84887caf3f7"
        },
        "item": {
          "id": "5d637963-a6a0-4b02-9096-7c8c862ed799",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0b26ab7-87a0-4310-bc6d-f6d9098708be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3fe3a2-3aae-4eed-9541-cabc0991cde4",
        "cursor": {
          "ref": "6c19186c-b266-482e-8235-2041b8963d91",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a491a2ba-842e-4035-b6ce-f310518f9f44"
        },
        "item": {
          "id": "9f3fe3a2-3aae-4eed-9541-cabc0991cde4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "efe3da2b-7837-4899-9d63-3b0be9e2e278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e03e28-8f90-4a65-8701-e5d7064b1680",
        "cursor": {
          "ref": "053f6570-9884-49a5-986a-dd4922cf2ae7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9affe1ee-8758-49bf-9284-100fb3a1455a"
        },
        "item": {
          "id": "e2e03e28-8f90-4a65-8701-e5d7064b1680",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8d919e7d-3a5c-4007-a2b3-1cea724a2d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd728934-41e0-4705-a376-62bdb5cbae38",
        "cursor": {
          "ref": "af6257fd-4cc3-4386-be31-6a4e124c84f5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "560bbfcc-b12e-466d-beb8-a7aa4561e063"
        },
        "item": {
          "id": "bd728934-41e0-4705-a376-62bdb5cbae38",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f4aa8a9-6f84-49cc-999f-2da02851f960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c84d014-f7c1-44e2-aad9-184fc8008621",
        "cursor": {
          "ref": "adab015d-f835-4dc2-a391-a91d70ffa808",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "198eab6d-f055-4867-9994-0d489fa0a92f"
        },
        "item": {
          "id": "4c84d014-f7c1-44e2-aad9-184fc8008621",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "00cae446-1c46-46ba-b08d-b73bea91fd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d443f2-bf72-47a0-bbdf-1c49ff5dd4a8",
        "cursor": {
          "ref": "07abb288-1ae6-46d3-a014-a2cd6887f4ec",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6ce11c55-de7e-4497-9bfd-0cd5a4ba3a58"
        },
        "item": {
          "id": "74d443f2-bf72-47a0-bbdf-1c49ff5dd4a8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "abed4b3a-974e-450c-9730-484d2e5efed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7cda61-81ab-4361-a0cb-deef0852e3b5",
        "cursor": {
          "ref": "c721a838-7bcc-44e3-a92f-d3cbcd3cd977",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dec32ced-47a4-4416-b8f8-6204b38bce82"
        },
        "item": {
          "id": "3e7cda61-81ab-4361-a0cb-deef0852e3b5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1f712695-6949-4f6b-a3e3-55bbcbdfd059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bc14e6-9e37-4cf9-b9ac-3af31d52e6b4",
        "cursor": {
          "ref": "be88ddb8-81a7-4871-8441-3b3c27d57501",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3c190e97-72d7-4d14-9e54-ec189716f242"
        },
        "item": {
          "id": "d5bc14e6-9e37-4cf9-b9ac-3af31d52e6b4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8358fa1b-a2b3-4368-8e8d-418c579f2e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efd24eb-d459-4488-a952-f09fb3a26de2",
        "cursor": {
          "ref": "6ca10a90-339b-4dbc-8102-3c973ab2b333",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "46e59a95-2a99-470f-bf45-e5ad00bbc843"
        },
        "item": {
          "id": "5efd24eb-d459-4488-a952-f09fb3a26de2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9c8ecc46-93b3-4f65-88f9-7f67cdfea223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8053f4-babd-436a-bb82-827e5e41ca96",
        "cursor": {
          "ref": "19014617-c86d-4e9f-bf4f-338b78be2b21",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "46e3bc2c-0bed-4462-9330-6574d0163666"
        },
        "item": {
          "id": "be8053f4-babd-436a-bb82-827e5e41ca96",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "04cee2c6-1221-4c0c-94fc-93136584436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4267233-2413-4b34-b6fc-a8cf481ad3c6",
        "cursor": {
          "ref": "7a1cdda6-496c-46fa-914c-61cc7b755a1e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6b4ebe1a-4daa-48f7-8625-0d08d720c588"
        },
        "item": {
          "id": "e4267233-2413-4b34-b6fc-a8cf481ad3c6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9d979539-a78e-42c5-aa4e-12860642a90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa783e24-6996-4cab-948e-94992e3f9569",
        "cursor": {
          "ref": "14bae495-aaf2-4255-8c25-2f7d0b8c88b5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "98d0b8af-18f0-4485-92fa-1902291fcd0e"
        },
        "item": {
          "id": "fa783e24-6996-4cab-948e-94992e3f9569",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1aabed91-c88c-4145-8525-8e11a02a61eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c34dee0-1c6a-4b63-b7ca-12f670e353f0",
        "cursor": {
          "ref": "9c22854a-f0be-4b23-b424-ddc4f46b2616",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "15302fac-52ee-4c95-9985-666e9c5ccf5d"
        },
        "item": {
          "id": "0c34dee0-1c6a-4b63-b7ca-12f670e353f0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "390ac4c8-8b8d-4685-a704-e9701854285a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908b09f3-3723-41af-95ed-4d675190f7df",
        "cursor": {
          "ref": "1f537206-8ba5-4667-a7a0-1a1283fb8dcb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "851fac3a-6b3f-4721-a785-f695ccf4d897"
        },
        "item": {
          "id": "908b09f3-3723-41af-95ed-4d675190f7df",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9e76cc04-bcbb-45f6-9f75-83af58bd131f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25337774-2312-4da9-95c2-ba2ca0ab3e2b",
        "cursor": {
          "ref": "24eda57b-504a-4dbd-a009-be11ea079ab9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2f7f67a8-e8ff-4ac8-b924-e6da16186e24"
        },
        "item": {
          "id": "25337774-2312-4da9-95c2-ba2ca0ab3e2b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6ecfc2f2-6fdb-42ac-8839-9ea35192a86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43536f9a-de44-4ad6-b8de-0fc4abab0f40",
        "cursor": {
          "ref": "81b65311-0595-4de6-a3c3-d886a0e04886",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9727a749-4cc7-4ae1-a953-4efb3bb434e8"
        },
        "item": {
          "id": "43536f9a-de44-4ad6-b8de-0fc4abab0f40",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "643baf1e-2708-4308-9ec4-d42322e6e5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97694fd-99d3-4d42-86fb-ca75ea5b8468",
        "cursor": {
          "ref": "67e71dfb-8610-4995-af40-908ec156c371",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20a350bb-1699-4c60-b65b-bb324c4e2694"
        },
        "item": {
          "id": "c97694fd-99d3-4d42-86fb-ca75ea5b8468",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "407560b6-269c-4b67-89b5-430b9a2a702c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a00af01-ed82-4032-8ec5-0829107256b8",
        "cursor": {
          "ref": "b90ddb60-1c27-40b2-8924-c3f2e059f0d4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "07345ff9-6243-4f92-8906-652979c529ee"
        },
        "item": {
          "id": "2a00af01-ed82-4032-8ec5-0829107256b8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cef755c3-7c49-4489-af58-15f2e2c53e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909db3b7-1e8e-4568-b143-38deee9a964d",
        "cursor": {
          "ref": "8ed38a5a-467d-40f7-810b-d85102a02a98",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2382458a-fcce-44db-8ad5-6e0e16c8aa14"
        },
        "item": {
          "id": "909db3b7-1e8e-4568-b143-38deee9a964d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "04577cad-0fb7-44de-8cde-306790f08c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d386061-852d-4e9b-8294-394a7bd457f2",
        "cursor": {
          "ref": "f77d6da6-513e-4bd5-a5c2-64b8bc20eeec",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c5c5c066-587d-4221-a3ea-7bc11a2bff40"
        },
        "item": {
          "id": "0d386061-852d-4e9b-8294-394a7bd457f2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e31f3c5-12e5-48da-ba3a-9711c8a8e8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cfedd4-cb8e-46b6-a5d8-578ee79c070b",
        "cursor": {
          "ref": "6dd860bf-cd60-42e7-8fde-970580e019d4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "32663faa-1cfe-498a-8432-54e96c087abe"
        },
        "item": {
          "id": "94cfedd4-cb8e-46b6-a5d8-578ee79c070b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f037d240-763b-460a-9e08-cdb11e9a933e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f898adbf-2c9a-4db1-a3e7-abb61c3c1c4c",
        "cursor": {
          "ref": "dbacc5c6-3b68-4335-851b-8afcb3b559ab",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ef8c3965-a20d-4b10-a24d-a23fa95cdab6"
        },
        "item": {
          "id": "f898adbf-2c9a-4db1-a3e7-abb61c3c1c4c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "24a0d341-d349-4645-bba4-609376e7f068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bfce85-37c5-4f57-9453-c63894165e58",
        "cursor": {
          "ref": "033e304e-0fda-46d1-bd28-8e3226eb5b87",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2be7f3fe-e900-40c0-b8b4-1cd92dc2333e"
        },
        "item": {
          "id": "d0bfce85-37c5-4f57-9453-c63894165e58",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26a2d4a0-2416-4269-af0f-931837754104",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb11b26-f293-4224-95bb-8c6bab7ce58a",
        "cursor": {
          "ref": "24f0598e-af3f-4ab8-9983-7b3e02170720",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "60c82043-6fd3-4804-8df3-6db10fa7c400"
        },
        "item": {
          "id": "0cb11b26-f293-4224-95bb-8c6bab7ce58a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "583369ac-0b6c-4d89-ad0d-f9da5f1e2f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032d364-341a-49f4-aca2-16c9e5dfd89a",
        "cursor": {
          "ref": "da0c3217-50ef-4b9f-a1c9-a69d0dd7afa6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "381b6b1a-8c42-4cde-9a51-b95e8c966846"
        },
        "item": {
          "id": "4032d364-341a-49f4-aca2-16c9e5dfd89a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6fb081de-7622-4f65-aa8f-0685fa2164e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79003073-0603-4e06-94cb-25ab8b7f08e2",
        "cursor": {
          "ref": "db675116-b1a1-4fb1-a153-c1461b594b99",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9110f315-bfb2-4f57-8a3e-686ab7a2f6a0"
        },
        "item": {
          "id": "79003073-0603-4e06-94cb-25ab8b7f08e2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4008fa2e-c15e-47d2-b867-48ddb3cd216f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3b7dfd-cd41-4e04-8e30-c41c9561f6cf",
        "cursor": {
          "ref": "ab6ced8c-b1dd-4efc-8768-2a35daf61762",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8e68fae5-5907-4145-b23b-b2d36c59f523"
        },
        "item": {
          "id": "0a3b7dfd-cd41-4e04-8e30-c41c9561f6cf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c2e22c5b-ec2d-46e5-9cc2-63a802834cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c81084-acec-4a8c-b3ae-56ae881074a9",
        "cursor": {
          "ref": "73c6928a-9c51-4f75-8329-98e89be93601",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cb504020-2a08-487d-ae50-b5a1ca30a0f9"
        },
        "item": {
          "id": "10c81084-acec-4a8c-b3ae-56ae881074a9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ad19a8f6-19dc-4d46-a14e-999364fd1fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e8e2ae-1012-4f99-8837-1c104d32ef12",
        "cursor": {
          "ref": "7b7a9bd5-6bd8-4075-b6fb-8d7cced9c68c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2413d670-7833-493b-9e24-894c779e5c4e"
        },
        "item": {
          "id": "a4e8e2ae-1012-4f99-8837-1c104d32ef12",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4b044b0a-982e-452e-96f2-126e779e3ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac998fa-a74f-4f6a-ba79-0f9b8be8c9d8",
        "cursor": {
          "ref": "e107531f-502b-4569-afba-0279e0609944",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "524065c8-8863-43d5-80fd-459eca8d61aa"
        },
        "item": {
          "id": "bac998fa-a74f-4f6a-ba79-0f9b8be8c9d8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5df6abf7-b2cf-402b-bc60-d8451e03af1d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fbf27c-0455-48f4-ac56-209b9b6ca53c",
        "cursor": {
          "ref": "c91c25d7-c1d4-4ee0-a184-acfc2e510e1b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d3179351-cedc-496f-956e-a470c11819ac"
        },
        "item": {
          "id": "00fbf27c-0455-48f4-ac56-209b9b6ca53c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8983216c-265f-4c95-9131-6aa913b32165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd989c49-48c7-4776-9f8d-e7adb8e9632b",
        "cursor": {
          "ref": "8a190bb2-d926-4920-8c2d-be2d03de625a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6568bc5b-999a-4c64-8aed-fec5b6abbe89"
        },
        "item": {
          "id": "dd989c49-48c7-4776-9f8d-e7adb8e9632b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1655508c-b954-4862-b03d-d0a2a1b69615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e9229-734f-426a-a508-d96d8e5f190d",
        "cursor": {
          "ref": "660efcd2-77e1-4d11-b2b0-02291851c6b4",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "674d948c-1223-4fdc-bbb9-a419e12aaef9"
        },
        "item": {
          "id": "bc4e9229-734f-426a-a508-d96d8e5f190d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0d39241-4dd8-4888-b328-1e4d4cf7de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f214941-234e-480e-83ce-bdab0bec769c",
        "cursor": {
          "ref": "32a6d30a-aeec-4aa7-b99a-3086a386f41e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fda1419b-1069-41fd-a084-0d6cb19784f2"
        },
        "item": {
          "id": "0f214941-234e-480e-83ce-bdab0bec769c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "65df990f-5687-43c8-b8fa-86867979be9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09408262-092b-4457-a4bd-dc2b34fd1ac7",
        "cursor": {
          "ref": "41e2bb74-a840-4d93-a0e0-c9ee0b998eca",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98867525-7995-4dd7-94c3-1ad7f38237d0"
        },
        "item": {
          "id": "09408262-092b-4457-a4bd-dc2b34fd1ac7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "613692eb-5845-4916-8982-c43b5e0818be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8af8238-4c2c-4f6a-8037-60a99ccc1a35",
        "cursor": {
          "ref": "03da62fa-d621-4ddc-b6b9-916b821cbf2e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d997a00c-0de0-47a0-b0c2-b9499dec0228"
        },
        "item": {
          "id": "c8af8238-4c2c-4f6a-8037-60a99ccc1a35",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4311f618-99a8-4120-9a23-f5f0a4040c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2d62c-24c1-4bc0-bbe6-d0449dba936d",
        "cursor": {
          "ref": "b87caa0f-5605-461d-b941-5b48cf20e819",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b3ecea40-487f-4b2c-9539-2ba33893d687"
        },
        "item": {
          "id": "16e2d62c-24c1-4bc0-bbe6-d0449dba936d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "81933fb8-bac7-442c-8f7f-45cb050597a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb9f9a9-5f83-416d-8134-9a4126198b50",
        "cursor": {
          "ref": "42564df7-8d6f-4d27-aa71-720338fb254b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2158384a-20e7-4bf4-a3fe-c594ec06be80"
        },
        "item": {
          "id": "3bb9f9a9-5f83-416d-8134-9a4126198b50",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fc1877d1-ce58-4abd-9a6d-7128db0cfc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5f03dd-4628-4dc4-84a1-f50648ed26b1",
        "cursor": {
          "ref": "5c04f9c9-5fde-48ee-ad28-ed369f560be7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "09f86a4e-5f05-4c65-93b5-483e6df879a1"
        },
        "item": {
          "id": "2f5f03dd-4628-4dc4-84a1-f50648ed26b1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6a461b3b-2dab-477e-b0f4-8de2c9b2f451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820571bd-4ac3-47f7-9e2a-497b2e04b484",
        "cursor": {
          "ref": "11a22c49-b48f-46d3-91d3-fd11e8bfb30f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "304a7402-b57b-4941-b8c7-8378c287c022"
        },
        "item": {
          "id": "820571bd-4ac3-47f7-9e2a-497b2e04b484",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c51f73cc-b756-411f-8c4a-3ec9d2a94639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45331e9c-78dd-41f8-8b3a-545e9e4f1c20",
        "cursor": {
          "ref": "5aeb05b3-9662-4bf0-a06f-180cf36f427e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e0a3454a-6a33-4181-86b8-5b302da8ea2e"
        },
        "item": {
          "id": "45331e9c-78dd-41f8-8b3a-545e9e4f1c20",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bc3bc9b8-3e10-404a-b5e9-24b39b3877af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46310189-edaa-4fe0-8995-658bc19c28fa",
        "cursor": {
          "ref": "05439043-970d-4576-bdc2-46db713b915d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f80b3410-a36a-44de-8d54-3cd38f51abc9"
        },
        "item": {
          "id": "46310189-edaa-4fe0-8995-658bc19c28fa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "10fa3657-f394-4321-8b23-c12f7566c7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54231bb-b28b-4ea8-aa2b-88bbf543eed6",
        "cursor": {
          "ref": "91187c2b-452a-4d79-8451-efeb5980cd67",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbac728e-d748-45ce-8b93-a9c9636eed04"
        },
        "item": {
          "id": "e54231bb-b28b-4ea8-aa2b-88bbf543eed6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "263cba88-6c40-43d0-8638-1c3c9b293a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58d90cb-adaa-4fa9-84b7-023f7cb5097a",
        "cursor": {
          "ref": "365a5bd7-f504-4b41-8705-46fcc0e30a9c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5b2449c6-ef69-49ee-9a5e-c14f7033a60f"
        },
        "item": {
          "id": "a58d90cb-adaa-4fa9-84b7-023f7cb5097a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5120c967-03cc-4204-a63c-059f6cc5627f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521ecdf1-8791-4662-ada2-63bb6bf60247",
        "cursor": {
          "ref": "fe34dd17-1613-488c-b33a-f8d90d319cba",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cfffa68e-5876-4bee-bca8-f512c5da8264"
        },
        "item": {
          "id": "521ecdf1-8791-4662-ada2-63bb6bf60247",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d161004b-24a0-4519-a555-f6c68d247f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb7c741-4609-40a6-8854-d32440ff9205",
        "cursor": {
          "ref": "e92969d6-a682-4fe7-8c06-da8d558f5f12",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "192e2b64-b8f8-4d10-997f-022218594a97"
        },
        "item": {
          "id": "1fb7c741-4609-40a6-8854-d32440ff9205",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "50574f8d-9172-436e-9165-be2cf385683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab3377-7678-4e93-9b23-bff00d31846f",
        "cursor": {
          "ref": "418295d6-77b6-40cf-ad79-c0a3817c6f3f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f78cacbf-c44e-4f91-9a9a-e5894d015a6e"
        },
        "item": {
          "id": "60ab3377-7678-4e93-9b23-bff00d31846f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dd80747f-b72e-4493-a0ba-9843a1713cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b557b-ff8e-4bed-9d14-fc3b30d1dd71",
        "cursor": {
          "ref": "064ff0aa-3de6-4d38-b607-653df2d35218",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8a27384f-fb7f-4ede-905d-9b11575d746c"
        },
        "item": {
          "id": "846b557b-ff8e-4bed-9d14-fc3b30d1dd71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e506ad15-aa05-4cdb-9bde-2aaa54b96ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f262ddcc-253f-4c93-bea1-90b8ef6027d4",
        "cursor": {
          "ref": "6a3aa90f-a499-4056-80a5-57426086bbdd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4e86d585-a018-4826-a3e4-8d42669499ae"
        },
        "item": {
          "id": "f262ddcc-253f-4c93-bea1-90b8ef6027d4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "76af2028-51cc-420a-be20-154c6410cd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bb86f8-0765-40c2-86f8-6177143d7374",
        "cursor": {
          "ref": "71cde9fb-6905-4f62-9890-88cf9340b531",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d7d1d59e-67e1-4c15-882c-58f76a1a7b41"
        },
        "item": {
          "id": "27bb86f8-0765-40c2-86f8-6177143d7374",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "709ba069-1e83-4e07-8cd2-a2455fcc3e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3953b2-f2c2-43bf-966d-b663c293d130",
        "cursor": {
          "ref": "bc16011c-5448-4db6-a61c-673f619242b6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a99382f9-bcec-4725-9d79-19b011644328"
        },
        "item": {
          "id": "ac3953b2-f2c2-43bf-966d-b663c293d130",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "334d050b-923a-4ce3-9f84-0a184e30dbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a44d90-4b8b-45b7-a50d-6a91d30812a0",
        "cursor": {
          "ref": "cbb24892-6aea-4a1e-b0a4-7201eb1bf853",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cc039b34-aaad-4530-bb6b-97950cb47038"
        },
        "item": {
          "id": "44a44d90-4b8b-45b7-a50d-6a91d30812a0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "115fe3a1-e289-4edb-a9d6-73c92c08787a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ca1f8-a056-4b1d-ba8e-a8e3cd4deddf",
        "cursor": {
          "ref": "559ccd5a-5bb9-4326-ba21-2ac86e1eb1c7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4c5996ce-e27f-4ecd-94fa-9986b07ed90b"
        },
        "item": {
          "id": "2e4ca1f8-a056-4b1d-ba8e-a8e3cd4deddf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cd9516be-473a-4815-a76e-f6f621b7de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad6a7e8-ed7b-4b19-b99e-305591818327",
        "cursor": {
          "ref": "1ae27476-eee5-4c4e-b83d-b3c6e02d29b2",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b50f3aa0-c4e6-4c4f-90a3-00cf30278011"
        },
        "item": {
          "id": "5ad6a7e8-ed7b-4b19-b99e-305591818327",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fdb09473-83c5-4a67-8626-35fcef490d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaf38f9-f0bc-4bd1-9940-92974d7a0695",
        "cursor": {
          "ref": "f1b5cfee-b80a-4fd5-97ed-df996ec1110e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b0a67713-ebff-485d-8ac1-9aaf86da9f25"
        },
        "item": {
          "id": "5aaf38f9-f0bc-4bd1-9940-92974d7a0695",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "251b8e6b-bb07-4eb4-b29c-d8d84b2183e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e23e18-1a5a-4596-8ff0-8a95b8eb5f9c",
        "cursor": {
          "ref": "608addbd-43f8-4a1e-9a49-1c3f9dfee767",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c5835c9d-2123-416c-bd73-9eff39982fdb"
        },
        "item": {
          "id": "17e23e18-1a5a-4596-8ff0-8a95b8eb5f9c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "de39bef9-4455-433b-b001-e5122eb51619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e020ebca-5801-45f5-bd7d-214d37469ffc",
        "cursor": {
          "ref": "2a1c730f-ff14-4807-aa0c-a5ba1577b929",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62338314-cf02-4869-a073-41409df79582"
        },
        "item": {
          "id": "e020ebca-5801-45f5-bd7d-214d37469ffc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da2934e3-c876-4952-a589-221bd46720f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28639e5-80ee-4828-83ef-09b40ed533bb",
        "cursor": {
          "ref": "df3a6b6e-a5be-4abc-90f2-824e77861b09",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1920bac1-a060-4b1c-bb4e-ca06bf0cb4d0"
        },
        "item": {
          "id": "f28639e5-80ee-4828-83ef-09b40ed533bb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "df1a06c4-2835-4ec0-b181-95bb71406e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7fc1e6-29d4-457e-af85-17b6e0d9ba98",
        "cursor": {
          "ref": "3687afb0-6f6b-45ee-a999-25c4a66f6cfe",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "66d14ba0-4421-4b04-9ee4-733835f635a9"
        },
        "item": {
          "id": "ec7fc1e6-29d4-457e-af85-17b6e0d9ba98",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f54be527-ed73-4914-8919-4720b1852187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d66138-f1e0-45f5-bfa1-9e20d2cdccd3",
        "cursor": {
          "ref": "30838269-f007-4269-885e-2d70615d5339",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7c816bf6-32f0-462a-8526-b1c5ec7dcf2b"
        },
        "item": {
          "id": "a6d66138-f1e0-45f5-bfa1-9e20d2cdccd3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5c6a8f91-7892-4484-88c3-8a1ded712b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983a965-7448-42d2-b7db-1ab891caabb1",
        "cursor": {
          "ref": "6887928c-2495-4476-85a7-1f36a2d05045",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dcc33c40-a9f2-4c45-afc4-8ecf93d2370a"
        },
        "item": {
          "id": "b983a965-7448-42d2-b7db-1ab891caabb1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a70d6a34-cd38-4fc5-bafc-e8d12c16a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae0e075-3c65-407f-928f-76d53c0f76bd",
        "cursor": {
          "ref": "222cb0ef-70b1-4561-9bb0-03cd432df0b4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dd91b113-addc-4fb6-b788-3aef4835abb4"
        },
        "item": {
          "id": "6ae0e075-3c65-407f-928f-76d53c0f76bd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ff0c672-05fa-48c8-9581-9eceac2ab72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6680df46-5340-4f54-b9be-3e5e14a76138",
        "cursor": {
          "ref": "0cbf62be-6dbe-4f63-a321-2187b3a90063",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b58da4e6-0aca-4611-bdbf-3d8f2c0ece03"
        },
        "item": {
          "id": "6680df46-5340-4f54-b9be-3e5e14a76138",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e9382112-b6c9-4798-b5b2-75606c5bdb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69070c90-b9f5-42e4-95a0-846d783d239c",
        "cursor": {
          "ref": "9f101e59-aafd-4cd6-9a38-4aa98c73a6d8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c6df2624-a60c-455a-a1f3-0778a4359685"
        },
        "item": {
          "id": "69070c90-b9f5-42e4-95a0-846d783d239c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d5f5e8ba-c95b-42d3-82ac-0c1ad1f56021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce5a02b-3465-402d-81f6-33e195d59bb2",
        "cursor": {
          "ref": "1501b811-e3a5-4006-9d90-1ddef2ced80a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "000ece54-9433-4ce6-8cf9-8a0b400d0294"
        },
        "item": {
          "id": "8ce5a02b-3465-402d-81f6-33e195d59bb2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fd9c54e2-b6ff-4d0c-b58b-8dc4c5b71b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3971b3-d59e-4006-a497-f4dd331fd473",
        "cursor": {
          "ref": "bb899f86-e16b-4e72-b31c-12b175289e74",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "625ca620-5cdf-4a66-afa9-90a445b13672"
        },
        "item": {
          "id": "7b3971b3-d59e-4006-a497-f4dd331fd473",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0a523f34-85a0-40d8-aeba-12ca2faee467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57376f86-aa77-4882-b53c-08ec7ad71859",
        "cursor": {
          "ref": "494f2474-3396-4e89-a729-da24baf02e16",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cf8dd2c2-19c2-4e9f-a735-d883e3c188fb"
        },
        "item": {
          "id": "57376f86-aa77-4882-b53c-08ec7ad71859",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "61f6c328-396e-4769-a5c0-70e0a211f8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a6db08-d305-45b9-a531-daaf5b26fa60",
        "cursor": {
          "ref": "c926da6d-0dc1-4d76-95c5-ee4d750dfe58",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0073e545-f53f-470b-a0a7-5d34a88580cb"
        },
        "item": {
          "id": "29a6db08-d305-45b9-a531-daaf5b26fa60",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c018826d-3f3c-4468-8476-4e6ec40281c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4976ce9d-6e2d-4e55-bde6-f30926edf3aa",
        "cursor": {
          "ref": "915f6ab8-84f3-4496-a56f-00835439f160",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6ac447af-ad25-4f6c-bbd3-e7a9971a16af"
        },
        "item": {
          "id": "4976ce9d-6e2d-4e55-bde6-f30926edf3aa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0c0570b3-c25e-431d-a643-19aed71ff8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c9f5c5-e2cf-4ab4-aeca-ffbd018759a6",
        "cursor": {
          "ref": "417e374e-7fc5-4b41-8fe0-735cd00e1c94",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "28371b13-ce7a-4bd4-9641-cfde7a2e83ec"
        },
        "item": {
          "id": "e6c9f5c5-e2cf-4ab4-aeca-ffbd018759a6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "054a6fb5-437e-4df8-a069-936ae74969aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141eb29c-ed31-4e57-9414-adee48c8875f",
        "cursor": {
          "ref": "0e2b89ab-f83e-4ada-a9d6-69977047e13b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "25f894df-2de5-41d2-8f03-bcac8b0b17b0"
        },
        "item": {
          "id": "141eb29c-ed31-4e57-9414-adee48c8875f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94fcf17a-971a-4158-9861-94e27c4f4708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0126faf7-9b20-47a2-8e24-8dbba4dc2a6d",
        "cursor": {
          "ref": "f14f1659-eb34-4403-9b55-7723bb1ce230",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3e67c8ef-d098-4208-a346-3726284a9e69"
        },
        "item": {
          "id": "0126faf7-9b20-47a2-8e24-8dbba4dc2a6d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5f95c016-dba6-4142-99cd-5e1cf78881bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47061a8-8af0-449e-91fd-66b2eca0df7e",
        "cursor": {
          "ref": "a51ac672-4076-43fb-a3f5-643ef7e977b9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b0c3199e-ea27-48d4-b571-cbe1d1d4a272"
        },
        "item": {
          "id": "c47061a8-8af0-449e-91fd-66b2eca0df7e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f7c580c7-5798-4f6f-8162-553ace22878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d11dc3-8b65-4a62-8621-ff95289a4241",
        "cursor": {
          "ref": "e03d1ab4-e47c-4d01-a835-8fbe4f765bff",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "60dfc61d-bb73-4cbb-a638-a990a52a8e1f"
        },
        "item": {
          "id": "09d11dc3-8b65-4a62-8621-ff95289a4241",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "436e4e2f-eb11-4e41-9a9d-2c47923b7c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae9bcc0-c107-462d-b1e5-2195f89e4482",
        "cursor": {
          "ref": "69f4f2c3-564e-45a6-bd42-a7ffa27a26da",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3dc2240a-080d-4158-a90b-6093ab1ecbd0"
        },
        "item": {
          "id": "aae9bcc0-c107-462d-b1e5-2195f89e4482",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "af87ba8f-97ae-44ef-952a-3376513177b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f6c511-14e2-4ebe-b14b-10b781e7b42d",
        "cursor": {
          "ref": "618580c7-3770-4b20-b2f8-dbfc704a0f46",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e3408746-fbe9-4be2-ad56-3027eb24285d"
        },
        "item": {
          "id": "56f6c511-14e2-4ebe-b14b-10b781e7b42d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56d1cb3b-15b4-4373-a92b-bb46ec09be6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496e79c-6f6b-41ab-969c-6774fbb216ed",
        "cursor": {
          "ref": "e59eabda-c8b0-4fbb-abe4-a5b2a1901e53",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "57f4d454-a2ee-4c53-b5df-31f052c5d5dc"
        },
        "item": {
          "id": "7496e79c-6f6b-41ab-969c-6774fbb216ed",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c8ff307c-d562-4073-98ba-2ad6f53d8225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a436d0-02c7-41e7-8269-a8c43de7baab",
        "cursor": {
          "ref": "02941f93-d743-4c21-9d7f-3da7284bd763",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d8da46c1-52ea-4e84-800f-db282327f448"
        },
        "item": {
          "id": "77a436d0-02c7-41e7-8269-a8c43de7baab",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e31dd77e-d8ec-4a1d-91fa-f76b89a6e50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743dd227-bdc3-41b7-a702-ab1be3c10bce",
        "cursor": {
          "ref": "7e1cc8f9-f1d7-4552-86f0-52e60d565d84",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8569b93d-5c01-44d1-8952-e41791d822b2"
        },
        "item": {
          "id": "743dd227-bdc3-41b7-a702-ab1be3c10bce",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4788e32f-01be-4f98-b6ed-0ecbab538612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6dff11-59d1-46a6-b00d-09ae764cd84f",
        "cursor": {
          "ref": "b1bdba1b-009c-48cd-a664-d73a27531917",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "327d37be-deb8-423a-8856-df1232c98ba7"
        },
        "item": {
          "id": "ad6dff11-59d1-46a6-b00d-09ae764cd84f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0e25e7d4-f071-4cd8-a9f5-82142222e559",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b439234b-a522-4c4b-b81b-4da45b578945",
        "cursor": {
          "ref": "3c15ebaa-2856-4eb5-93e2-8266666a7131",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dcdc9287-802c-4bfa-ab14-3bcb280df079"
        },
        "item": {
          "id": "b439234b-a522-4c4b-b81b-4da45b578945",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a89f7d83-7ef3-4043-b9a9-ce3146bc21b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6b7259fe-a477-433a-88e1-141a22b4ae55",
        "cursor": {
          "ref": "82efc9c4-f8d1-47a5-912a-e45cec2d71c4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "30cab71d-ab51-489f-9dca-81f637feef8d"
        },
        "item": {
          "id": "6b7259fe-a477-433a-88e1-141a22b4ae55",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6c9d15b8-56f0-4204-a687-d7b289ff59c3",
          "status": "Created",
          "code": 201,
          "responseTime": 10586,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ddcfcb-62ae-43e8-83d6-ee81eb2d0f2d",
        "cursor": {
          "ref": "4f08055c-5215-4ac2-978c-1d401c86cddd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1dec6981-911c-4fae-8b0d-cbd309b5f215"
        },
        "item": {
          "id": "42ddcfcb-62ae-43e8-83d6-ee81eb2d0f2d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cde6f654-7089-460c-bffe-f58e60261ca4",
          "status": "Created",
          "code": 201,
          "responseTime": 10683,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "764305b9-9e33-4945-b080-8cc5ee047a2b",
        "cursor": {
          "ref": "50d97266-8abb-46ec-a558-653637a03fbd",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c4d54109-c9b9-4511-9362-17e21eb94047"
        },
        "item": {
          "id": "764305b9-9e33-4945-b080-8cc5ee047a2b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d0714d3-5c79-443e-acb3-31fb1228a929",
          "status": "Created",
          "code": 201,
          "responseTime": 10047,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ce04a2-00eb-4268-937e-aa03e5ad9cb2",
        "cursor": {
          "ref": "8f9fb7f5-92c1-4705-a329-d01f9210c97d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eb3f6c09-d421-447f-9545-ed0874236c1b"
        },
        "item": {
          "id": "e7ce04a2-00eb-4268-937e-aa03e5ad9cb2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a7bde3ab-830c-4da3-8a56-6d69d4a1adbf",
          "status": "Created",
          "code": 201,
          "responseTime": 10531,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88f135a-ea10-4766-a436-811d12836297",
        "cursor": {
          "ref": "9290b77c-e153-4e8a-a856-fbb6c89ec8ea",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bd067416-4242-4d53-b673-23fe7837d3f4"
        },
        "item": {
          "id": "a88f135a-ea10-4766-a436-811d12836297",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d872f7a2-4f09-4881-8100-e5a4b1a994d3",
          "status": "Created",
          "code": 201,
          "responseTime": 10457,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-20T00:41:46Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-20T00:41:46Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e91e488b-56e2-4e22-a4e3-26b14c5718ec",
        "cursor": {
          "ref": "e4869fd7-beba-4466-9bb1-1c4269e0431d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "09207151-1037-4a30-b6d5-b583d7f42286"
        },
        "item": {
          "id": "e91e488b-56e2-4e22-a4e3-26b14c5718ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e4d7b582-c2e0-4d6c-8252-66aebafacfa2",
          "status": "Created",
          "code": 201,
          "responseTime": 10565,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1850904f-12d6-476e-8690-08a2ba0601ca",
        "cursor": {
          "ref": "a2b29ca1-98cc-45ed-b372-58742d7b2c4c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aebb9f54-3ded-464f-9c08-a0f316807589"
        },
        "item": {
          "id": "1850904f-12d6-476e-8690-08a2ba0601ca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb1d5b92-ca30-452a-94c0-11ef087e23cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2746ad00-1a85-437b-9351-c196dc165582",
        "cursor": {
          "ref": "5df8b43f-e381-40b1-9ceb-cf6c5a313b24",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "86eb7277-3959-466e-9e1d-b35da4c98357"
        },
        "item": {
          "id": "2746ad00-1a85-437b-9351-c196dc165582",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fd9a8d4d-37c2-45aa-b692-4cefbd6539eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f4ab75-4baf-4dfb-80e4-00f8f74abcf0",
        "cursor": {
          "ref": "a684a4be-e073-45b9-b898-6cb03ba7d64c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ce1900b4-581b-49f0-ae82-7734b6468e55"
        },
        "item": {
          "id": "92f4ab75-4baf-4dfb-80e4-00f8f74abcf0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7ee8e5dd-33c7-4a70-9258-1431368dd153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b916941-8814-4463-81ff-4aed88d5644c",
        "cursor": {
          "ref": "b2dc749b-5488-4eaa-af08-ff77253fec71",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b531b369-ff28-45f7-9dc6-ce551d8055a8"
        },
        "item": {
          "id": "3b916941-8814-4463-81ff-4aed88d5644c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0cac7971-54d3-4877-b16a-c92b7eb0ed78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e2c703-702e-444e-85ee-58ae49e4a35a",
        "cursor": {
          "ref": "a863a29e-d2df-4bce-aeaa-6154a6ccec44",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c05b2d7b-f51b-44b3-82e3-cae0562d3f9c"
        },
        "item": {
          "id": "b0e2c703-702e-444e-85ee-58ae49e4a35a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49d18a44-6c43-4df5-a3c2-a9c1f63642a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51788261-25a2-4cd7-87f8-7ff5836e9dac",
        "cursor": {
          "ref": "78e77736-7119-4c1c-9489-900dd0e070a7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "81fbc772-75ad-4c6d-8330-466b64ed6f3b"
        },
        "item": {
          "id": "51788261-25a2-4cd7-87f8-7ff5836e9dac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "53ca5360-316e-4c88-9bba-4859a14ceaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f124d694-d497-4c7c-98f1-232242c2608c",
        "cursor": {
          "ref": "2912c75c-6dbf-427b-9bd3-944eba3138f3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "89a59a18-c620-4ba5-9b7b-43601f527c46"
        },
        "item": {
          "id": "f124d694-d497-4c7c-98f1-232242c2608c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d5ba0ad-a12d-4778-8a0e-04e6028edab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984ae9d4-9cd6-41e6-a504-d26da4d53386",
        "cursor": {
          "ref": "72c328b7-08fb-4704-9bc7-b113f747c382",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b7a4640-8cab-4fe7-a324-5991e1f4e1a9"
        },
        "item": {
          "id": "984ae9d4-9cd6-41e6-a504-d26da4d53386",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d5b04232-fc03-4b75-b4eb-936b2996b194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16d0fb3-21a7-4c18-9c2d-413af5586dc7",
        "cursor": {
          "ref": "999cebad-5c55-4ab8-902d-4c34b8ac0064",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1b20e790-047c-4d11-a0ac-11436885cefa"
        },
        "item": {
          "id": "e16d0fb3-21a7-4c18-9c2d-413af5586dc7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2c6c188e-7fac-443f-94b5-53430e17ff7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d203ad-7e1f-413f-9953-687db4bbefa9",
        "cursor": {
          "ref": "351247ba-7a32-46b5-8c5f-a7b47c1a704d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ae78f81e-786f-4bec-81f3-e3339c8fb486"
        },
        "item": {
          "id": "51d203ad-7e1f-413f-9953-687db4bbefa9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "74070b21-03d5-45c7-acc9-df62812c3186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ea9eed-ad12-42a7-8514-30fa72b4d27f",
        "cursor": {
          "ref": "7cc8279a-f16c-49d7-8da3-bf1d507c977f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bc746617-dad8-438f-9f40-3a229c1ab26b"
        },
        "item": {
          "id": "26ea9eed-ad12-42a7-8514-30fa72b4d27f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f96f7031-661d-41a2-86ee-cf9048b554de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06fb9f6-2b51-4368-81f0-bad59029b683",
        "cursor": {
          "ref": "59bc13f4-c2e0-49a1-882c-2a2726350e37",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "62fc861a-684b-4f0e-9447-233d55a957ca"
        },
        "item": {
          "id": "b06fb9f6-2b51-4368-81f0-bad59029b683",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d8b6372f-d9e5-43e6-9c18-8d6ec7ac29b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16bb080-32a1-48de-9dc5-5386b45f7b48",
        "cursor": {
          "ref": "c04743ce-7539-4cd2-8933-418fd9ba330a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "28159520-5c22-495d-99fb-0310d5862c9f"
        },
        "item": {
          "id": "b16bb080-32a1-48de-9dc5-5386b45f7b48",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f56aece2-476a-44e4-b8e9-6676df1afbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325c2ae-bd39-4853-af4e-a074652cf9e3",
        "cursor": {
          "ref": "bfb086b8-6443-44a9-9f80-03f0f0116139",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "054a68c1-c128-444d-a996-0092a4ee2a63"
        },
        "item": {
          "id": "b325c2ae-bd39-4853-af4e-a074652cf9e3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aede4bc0-facf-429c-927b-9059d61f5915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e1feaf-4a94-43c8-a6fa-1428d19cd73c",
        "cursor": {
          "ref": "afba05fa-4424-4415-9a43-62a699c55b2e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0eaad1a-39a0-4d42-bea4-191d50b7046e"
        },
        "item": {
          "id": "d6e1feaf-4a94-43c8-a6fa-1428d19cd73c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a605138a-c4f8-41fb-8160-de286144e6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3959d7e-22f8-474d-9048-1b2b7df6cecf",
        "cursor": {
          "ref": "10e03a19-a96c-4e84-9a90-9ef7332b702d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f128a14f-e3c2-4898-ac53-6ec42a032647"
        },
        "item": {
          "id": "b3959d7e-22f8-474d-9048-1b2b7df6cecf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11bf54f4-e367-4251-ac24-87cd32326a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b87692-7ec2-4a46-8643-06eaa7eb0d78",
        "cursor": {
          "ref": "965c7b61-5704-44db-b328-81dcc25a9594",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e9c6e780-7a1a-4ed8-b88c-bd5e63beb0f2"
        },
        "item": {
          "id": "48b87692-7ec2-4a46-8643-06eaa7eb0d78",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be2c12b5-2efd-4bdf-beff-81d117125cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb7e709-9188-4ac1-b581-6fd416ea53c2",
        "cursor": {
          "ref": "0c035280-e046-4b65-b0fc-4d291ba16ef6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9806986d-93d9-4d01-b469-4b7584b6181e"
        },
        "item": {
          "id": "deb7e709-9188-4ac1-b581-6fd416ea53c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e16b46a-cfc5-4ace-9018-7b39c0a6c45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39c52a4-e7e4-414a-bc79-e40857bcd739",
        "cursor": {
          "ref": "de2dd8f9-2002-448d-8259-271371e76b86",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "81ebcb2f-b02b-43d1-8cc5-198ccf87989a"
        },
        "item": {
          "id": "e39c52a4-e7e4-414a-bc79-e40857bcd739",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "206756d5-5bf1-4e39-9b26-833464d235b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885ce8c2-2363-47aa-859b-dc8d9ecc929a",
        "cursor": {
          "ref": "7e9ccab7-578b-4c40-8f17-790b1b179671",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4d383a65-6310-4f4f-94d6-bd692fe142c1"
        },
        "item": {
          "id": "885ce8c2-2363-47aa-859b-dc8d9ecc929a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "48998729-51a3-449c-a98a-057a1d9b3def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fdceb2-70e5-47f3-80d5-727b8c3e6c7c",
        "cursor": {
          "ref": "b15fe9fc-ef3d-45e9-8eed-2896ca2e1373",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "656d1572-0f5b-4124-b65c-69fa1f0be6b1"
        },
        "item": {
          "id": "e2fdceb2-70e5-47f3-80d5-727b8c3e6c7c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c5ea0b8-4934-4066-99f7-30131ae97d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32a6e98-2cca-4bb7-b46d-01b0d4cea347",
        "cursor": {
          "ref": "56e3c984-0242-4f4c-ace9-d83cf14174af",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a251e2f5-f45f-4739-aeef-d7b6155b9a17"
        },
        "item": {
          "id": "c32a6e98-2cca-4bb7-b46d-01b0d4cea347",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83b6bcc1-0574-4a62-a6ff-9ba7ce54b6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0194395e-32b7-454e-8be8-f4e968b11372",
        "cursor": {
          "ref": "b68fc544-dfc1-40ca-ab8b-dba9af4f3a73",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cdf6e6d9-050d-40ea-86db-b99ed96fa01b"
        },
        "item": {
          "id": "0194395e-32b7-454e-8be8-f4e968b11372",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3a0acca-5354-440b-ba2f-d55686d6d051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae2eb2-2cf0-4392-8f8a-982779a3dd17",
        "cursor": {
          "ref": "d5ee4a04-e5b8-4c3c-bec4-df3e3a06568b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d4cd7675-1926-4aef-8b53-10833de3007e"
        },
        "item": {
          "id": "9fae2eb2-2cf0-4392-8f8a-982779a3dd17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "090f52c5-8402-4661-bffb-59ff747c85b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa406902-4030-40f9-b546-d991f55a93bb",
        "cursor": {
          "ref": "815387a4-2ffe-4172-9a89-aec19edb24a2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2587a82b-1925-48b0-9464-c02b2f324dd1"
        },
        "item": {
          "id": "aa406902-4030-40f9-b546-d991f55a93bb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cc0f88da-7977-4159-8575-f185f6df2ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286dfd26-2156-4fa8-b644-3086fd454e6c",
        "cursor": {
          "ref": "9fcea6c9-4cd3-40fd-ac09-5b501cf2cb06",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "386582d8-ba08-456d-9e6b-a01a27cc1f3a"
        },
        "item": {
          "id": "286dfd26-2156-4fa8-b644-3086fd454e6c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b563c78b-0827-4a1f-b79b-497de66f394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005ff701-1fa7-4a21-a803-6069eb92568f",
        "cursor": {
          "ref": "f1a4cb99-ad72-481b-af1e-d6bbd0dc388f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "322ee26a-7d58-4ffc-ba40-bfc9f1c23e99"
        },
        "item": {
          "id": "005ff701-1fa7-4a21-a803-6069eb92568f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "429a6b95-155b-45c9-a09a-575840d996a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e9c153-c9f3-409d-aa5a-0d0cf9d80708",
        "cursor": {
          "ref": "3915b1a0-6b0b-46e6-a830-85ebe5cebbba",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1499b287-54e9-4391-be45-3be5c68c60f7"
        },
        "item": {
          "id": "a4e9c153-c9f3-409d-aa5a-0d0cf9d80708",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d2031de1-92cd-43e8-b138-e4d5e27ca365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b5ea82-a941-4757-baed-5adfb212cc98",
        "cursor": {
          "ref": "4452e847-04f0-409c-89e1-82de743d4446",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "be4d52b0-5bc2-472c-85b1-385e60b391a9"
        },
        "item": {
          "id": "56b5ea82-a941-4757-baed-5adfb212cc98",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5352e70d-48da-445e-8285-ac176ec04169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1595859-1e2b-4636-82f9-d83a85905d14",
        "cursor": {
          "ref": "02387d7c-6438-4a90-8e9d-9996de8a1091",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4781f98a-fcdd-4ed5-8985-c3f5a102acaa"
        },
        "item": {
          "id": "e1595859-1e2b-4636-82f9-d83a85905d14",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64cb9322-ba8a-45e5-b1e2-cdcf629999d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d61e4a-da7d-45b3-bcf9-06afc4495bce",
        "cursor": {
          "ref": "f9b8f24c-8f55-4a12-9d46-3afa90bf8fd0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "18aab7c4-09e9-41af-b7ea-66e889f9dc43"
        },
        "item": {
          "id": "83d61e4a-da7d-45b3-bcf9-06afc4495bce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a5ffb93e-a6df-4c18-80ec-7432efa523b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcd65cd-4894-49fa-92b5-2177dae0c42d",
        "cursor": {
          "ref": "a5da7ca8-95e0-44cb-8fd4-05b7f6195426",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d5762b22-51d9-4c63-9a50-b6ae6c1e1d35"
        },
        "item": {
          "id": "dbcd65cd-4894-49fa-92b5-2177dae0c42d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "116fdf56-a2f9-4e1e-a055-d80ad8415a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542cfd5d-11de-49b0-ac73-934cd7a088b2",
        "cursor": {
          "ref": "cfe45b1f-4722-4461-8465-78f2e0aebf74",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dcd82c48-2b95-49b0-8647-0814229af901"
        },
        "item": {
          "id": "542cfd5d-11de-49b0-ac73-934cd7a088b2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2cd21684-fb83-48e8-b563-31ceb2537d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea299e68-e245-4a47-9110-7b21fe61168b",
        "cursor": {
          "ref": "77283ab0-a7a8-46ce-93c9-b078fb82eef7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "618406ae-1e50-4a02-a251-55357a504e5c"
        },
        "item": {
          "id": "ea299e68-e245-4a47-9110-7b21fe61168b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bb5deeee-1f9e-425b-8ac9-eb7d4c9c4646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cd85b9-ac2b-4d47-9589-21f46e0b9024",
        "cursor": {
          "ref": "749998dd-8411-4fbf-8f18-e8a6f8359984",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "afc187fd-1f53-4e2f-a365-c8ea100219d5"
        },
        "item": {
          "id": "a9cd85b9-ac2b-4d47-9589-21f46e0b9024",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f0a4c661-8d6d-49d5-bea6-c62c849069d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e1d5a0-5961-4c95-bf48-632ffdc556c9",
        "cursor": {
          "ref": "44ce5aaa-418f-4dbd-835d-cf205ccdda89",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fd8d35bd-74f3-4c92-9d3b-9f46f22ab09c"
        },
        "item": {
          "id": "12e1d5a0-5961-4c95-bf48-632ffdc556c9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eaea0e22-5349-439b-9c2a-32e9cdd99b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e92b96-a888-4761-9f98-b103be3c159b",
        "cursor": {
          "ref": "f6b18b42-934e-4c71-b6c9-7d2937dbd887",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2d449297-e4bf-4c85-89d3-29c150217f06"
        },
        "item": {
          "id": "55e92b96-a888-4761-9f98-b103be3c159b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f5a51a7c-ceaa-4dcd-9557-88b5a32e86e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ca4021-6995-4a00-83b7-23fd2f73ebf7",
        "cursor": {
          "ref": "b907da2d-c3a2-4103-a007-dcc23300ba8a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "762317c9-1954-4ca1-a11b-12a798811070"
        },
        "item": {
          "id": "d1ca4021-6995-4a00-83b7-23fd2f73ebf7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e169b64-b8f5-4320-af11-7bd877808756",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f0ad49-1edc-4446-bf27-000f8f7514c1",
        "cursor": {
          "ref": "9da055c9-72c9-49b2-b071-117bd72ca513",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "daf63885-70b5-44aa-81d0-96c6e110bf5b"
        },
        "item": {
          "id": "69f0ad49-1edc-4446-bf27-000f8f7514c1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "401f0709-d3a3-45a7-8212-d6c9d5a70e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a28ad-b64c-4935-8274-561efdfbb78d",
        "cursor": {
          "ref": "74f0b463-a307-4a81-b7f2-3694785ed6d6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "df4b78ff-069e-40af-9307-fd5ac0c21e3d"
        },
        "item": {
          "id": "2c1a28ad-b64c-4935-8274-561efdfbb78d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d8fdaa8-cdd1-42b6-b170-b67d3f9c42f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5fff2f-b599-4f99-b681-b00400e2760e",
        "cursor": {
          "ref": "6a4fc8b5-b101-4667-84fe-25b5b58fa236",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e5b730a-8599-4b5e-9c29-7a8fe5073183"
        },
        "item": {
          "id": "3e5fff2f-b599-4f99-b681-b00400e2760e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dd10a64c-12b9-4da7-8658-b220d22ceea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205568f3-1810-40bf-bc65-418d394a0001",
        "cursor": {
          "ref": "e3c016af-1959-4a51-a15c-a352fb28aea1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a6607f28-6771-4308-80ab-5fea91af7a8a"
        },
        "item": {
          "id": "205568f3-1810-40bf-bc65-418d394a0001",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0077c2fd-8d0e-4299-bde7-83fb9eb9e621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2916b4d5-e87d-40db-91ad-e740d4ec27e9",
        "cursor": {
          "ref": "0343907b-8804-43af-a12b-516f59108f92",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ab216c67-4eaf-4580-9071-0a7bc3f3ce31"
        },
        "item": {
          "id": "2916b4d5-e87d-40db-91ad-e740d4ec27e9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "11474ba8-bc66-4d43-a374-3717c8181151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94756c55-c8aa-4888-9c32-9b65a8e4b990",
        "cursor": {
          "ref": "30222cdb-575a-4f31-a3c3-dfa125c7e472",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b156b408-b8a2-4e44-bb46-f1f6c63dbfa9"
        },
        "item": {
          "id": "94756c55-c8aa-4888-9c32-9b65a8e4b990",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f7bcc7d-968f-408d-ad8f-2e83407fb85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521a6a42-5174-4675-b614-1cc739a44ea1",
        "cursor": {
          "ref": "d5978e77-45d6-44cf-936a-d1bd2d9ad5ad",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a9f4161-34b0-4ca2-ad8e-9fc65f254dea"
        },
        "item": {
          "id": "521a6a42-5174-4675-b614-1cc739a44ea1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a018b19a-c5f6-471e-b268-6ba4a215c7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595f6742-8e89-4f0c-b699-1aa2649f41fc",
        "cursor": {
          "ref": "c70b4670-1427-4656-ae09-bce61e84acbd",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ecc5ee71-f5a7-40b5-9edf-93b209f190ae"
        },
        "item": {
          "id": "595f6742-8e89-4f0c-b699-1aa2649f41fc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c807486b-39ed-445f-a355-d30df9a73732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a58f45-b819-48f0-a550-069d7471c57f",
        "cursor": {
          "ref": "21766961-db7b-44a9-8a94-0e0637e54213",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "99e9a353-08af-4634-805e-2eddb071e7fa"
        },
        "item": {
          "id": "46a58f45-b819-48f0-a550-069d7471c57f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "13b3dd83-de45-41c4-9d4d-2fd97bb3b946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315ee7ff-86e2-4b2e-a8d0-d918ccee9057",
        "cursor": {
          "ref": "373ab020-c09c-465a-8eb9-808c243d6f2d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ca92e56-f05b-4d96-bf9b-24f8342b601d"
        },
        "item": {
          "id": "315ee7ff-86e2-4b2e-a8d0-d918ccee9057",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "198f49aa-bbba-43b2-bda6-a67522369946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33b02c9-42be-4837-a79e-96113c1c4fbc",
        "cursor": {
          "ref": "d8fa41c8-cf10-4a23-9c12-6a9d0df30885",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "50165442-c4cd-4d63-bdc6-8ff510a92576"
        },
        "item": {
          "id": "a33b02c9-42be-4837-a79e-96113c1c4fbc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "faabc25e-0eff-43af-b48d-ed2147778f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844f0691-6595-4d15-aed9-c5e7b15c253e",
        "cursor": {
          "ref": "be7b96a5-c9a6-4f78-9dd7-865fb48fceda",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fbe153cd-cf28-409e-884b-9adcc072631d"
        },
        "item": {
          "id": "844f0691-6595-4d15-aed9-c5e7b15c253e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7ae9426f-9650-4534-addb-08b7b3551c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9799ca1-73da-4c45-b33b-f1ccc9e9f77e",
        "cursor": {
          "ref": "96b35e41-ba34-45a5-a5aa-bf8d0ec818ae",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "eb74d7e9-2638-4e77-b803-4a9af7fc908a"
        },
        "item": {
          "id": "e9799ca1-73da-4c45-b33b-f1ccc9e9f77e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d7b3d1d8-5966-47c4-a9cb-ca1cef672af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f195f1-62da-448b-b09d-503e73a58a2c",
        "cursor": {
          "ref": "d922d404-7f56-416d-8a30-797a5385625a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b456ff13-c69a-4484-a140-2dc494816ad0"
        },
        "item": {
          "id": "c4f195f1-62da-448b-b09d-503e73a58a2c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "25d983bc-057c-4813-a6fa-c9cd11187765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2075794f-b55c-4936-aa90-777e88ef042f",
        "cursor": {
          "ref": "867130ec-72f1-4814-8bbc-9c1370716483",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9263e372-fbe9-4b1a-bfd9-d5aaad308859"
        },
        "item": {
          "id": "2075794f-b55c-4936-aa90-777e88ef042f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6ba72fc8-9ece-435f-b4da-e32033226d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6a9e6b-2c8d-4a3e-938b-73e300a68a5b",
        "cursor": {
          "ref": "103290c1-8634-48e0-969e-f69c7f2f5578",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e2c2bad7-ec33-452b-a381-4308faae0d22"
        },
        "item": {
          "id": "7b6a9e6b-2c8d-4a3e-938b-73e300a68a5b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "30ffc09a-c9b8-454e-ab48-9acb6104f465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c18397-e0a1-4f35-aada-1ebbd5de34e7",
        "cursor": {
          "ref": "6ab17202-0d18-4aa5-b1a9-16124c156015",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e28eb378-ddf0-4ea6-855f-f9a1fcdcbe45"
        },
        "item": {
          "id": "c9c18397-e0a1-4f35-aada-1ebbd5de34e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "65120568-e470-43b7-aa5c-fa930d8a3854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826636a2-0b46-4278-8bf1-fb9987dcd3cc",
        "cursor": {
          "ref": "49e4efd6-3b41-4d04-95dd-ff05f5337b1d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7e01a078-c555-49c0-8468-91a2c918d5d5"
        },
        "item": {
          "id": "826636a2-0b46-4278-8bf1-fb9987dcd3cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97494d25-a02d-436a-95ab-cbb984c52d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3547c29c-6ac2-4c67-8195-da28d5e85f7b",
        "cursor": {
          "ref": "9dafbecb-6be5-4706-8244-dd8b0b43eed1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e3f15990-79e8-4c7d-8394-03ba7e55ca8d"
        },
        "item": {
          "id": "3547c29c-6ac2-4c67-8195-da28d5e85f7b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "36ca5ccd-608c-410e-a9ef-ed3f9f754e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209e5bb8-2f43-42e6-bd19-8d91cc290a0d",
        "cursor": {
          "ref": "b6dcafd3-1bec-4b00-aa08-56164d3e3a04",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d299a4f-708f-43e9-83e9-f538abff158a"
        },
        "item": {
          "id": "209e5bb8-2f43-42e6-bd19-8d91cc290a0d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6721faab-1182-4063-a345-694ba81f0a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d09d7-f1df-4991-99b0-4f55e949dddb",
        "cursor": {
          "ref": "fbc22a51-c1f2-42d9-b311-8fefd0543df0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d8d4ace5-0962-4412-adf5-dca45cf4e6ed"
        },
        "item": {
          "id": "001d09d7-f1df-4991-99b0-4f55e949dddb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "45e0e0d1-e873-4f71-a327-f86fafd64b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6f68f4-c8d7-4d44-baf4-fe18e493ed41",
        "cursor": {
          "ref": "adc87d36-0a1b-4142-9abd-d7b206e90de4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c5da0be4-34e7-4abb-83c1-c0db5971a337"
        },
        "item": {
          "id": "1e6f68f4-c8d7-4d44-baf4-fe18e493ed41",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c800c144-9a5c-478e-a277-45b6ab8a5dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5b505f-f139-4470-ae09-ed9138c65164",
        "cursor": {
          "ref": "936bf801-2d2b-4ec6-9106-72322df3fd01",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5086c0cf-abaf-4db4-8d1f-2c49b41f2852"
        },
        "item": {
          "id": "2e5b505f-f139-4470-ae09-ed9138c65164",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c2b359d8-17eb-4069-8563-c15daa456118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e61a91-e831-4e5c-aa65-a774e553c4a7",
        "cursor": {
          "ref": "212574fb-b2dd-4be6-bfdf-ad414e455bac",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2d4232b6-2a67-4adc-b431-79c1b1885803"
        },
        "item": {
          "id": "90e61a91-e831-4e5c-aa65-a774e553c4a7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9a513524-86c5-4574-97b6-ac7b12a645e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60972e5-f0a8-4eb8-8590-e978a93174b9",
        "cursor": {
          "ref": "3e75797a-850c-4581-9fe1-ac704232c295",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bc6490d9-ba0e-4cad-ad22-442eb8ed1fa4"
        },
        "item": {
          "id": "a60972e5-f0a8-4eb8-8590-e978a93174b9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ab769d6c-042e-43f8-99a8-1ec7c335bd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8c8cd4-678b-4182-9b0f-0d6f9a56127a",
        "cursor": {
          "ref": "78da9156-8daf-4387-8bdf-dbc81836e692",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "01c72a15-183f-4cc3-9965-1f62a0491e66"
        },
        "item": {
          "id": "7b8c8cd4-678b-4182-9b0f-0d6f9a56127a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8517b102-7b58-4323-a51e-5e2059d3e184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cab4265-d9c2-482f-889b-c7275db44671",
        "cursor": {
          "ref": "28144094-bb0d-4b8d-b40e-5b734c0ff973",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f22124da-5da9-4256-9d11-ed81586dce1e"
        },
        "item": {
          "id": "7cab4265-d9c2-482f-889b-c7275db44671",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c0517f73-3d20-4366-bcb3-5a136563bbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d85734-9f58-45d3-ba65-9777b7d12446",
        "cursor": {
          "ref": "b1d93523-3c4a-44e9-8355-adf73e6de6e5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3aa24374-2b99-4918-bded-aeafa4666073"
        },
        "item": {
          "id": "74d85734-9f58-45d3-ba65-9777b7d12446",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cb02f24a-ffbd-44c1-b0bf-123c6939be3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b267001-adbc-4169-89a0-5bee798d15a0",
        "cursor": {
          "ref": "30a38d23-023e-466c-b127-49bcd044b7c8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b2f25f83-0ac6-44ea-bd4d-746bc02e7b80"
        },
        "item": {
          "id": "2b267001-adbc-4169-89a0-5bee798d15a0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c8aed979-6cbb-4cc0-961f-ef1ef9d3e295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b500c2-4c1a-459b-8d7c-2770e38414e6",
        "cursor": {
          "ref": "ecaa1edc-531a-489d-bf6d-6287d193a01b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "02352195-602c-45f0-9af7-a5cf5b46d48c"
        },
        "item": {
          "id": "57b500c2-4c1a-459b-8d7c-2770e38414e6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "20b3fb2d-293e-4b3f-976c-da6323968c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2707ce35-b2c7-4a01-b1dc-330edbbc0860",
        "cursor": {
          "ref": "4dbded9a-7ef3-415c-9fb3-5ee0e6cf5a36",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "75cd7237-268b-4f34-a7ab-a3fa6ace8ec6"
        },
        "item": {
          "id": "2707ce35-b2c7-4a01-b1dc-330edbbc0860",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e1f1ab77-230e-4cac-b4dd-e879db8307f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a979268-17a0-429f-9bea-707fb421fc13",
        "cursor": {
          "ref": "1be563d6-785d-488d-99ce-8211ea3bd06c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a811653e-389a-41bc-b435-6d2bec6ac6d8"
        },
        "item": {
          "id": "4a979268-17a0-429f-9bea-707fb421fc13",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6331f431-ab83-4d73-9c9d-0eabcc129722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf4799-5d33-4756-b5d2-2c6b9ffed81f",
        "cursor": {
          "ref": "6c684622-c8de-4a50-a79c-ac1cccb79a24",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aefd03c8-5442-4fe9-a3cd-46e01c3db1b0"
        },
        "item": {
          "id": "c7bf4799-5d33-4756-b5d2-2c6b9ffed81f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d64b3ddd-7023-4587-9b06-c82f77042972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4974d5-e07f-4581-ad30-b711fa7c35b0",
        "cursor": {
          "ref": "48b0de37-f16f-4b4a-81e4-1baad3a50525",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e84a322b-caca-4b7d-abd0-7a005570be71"
        },
        "item": {
          "id": "8f4974d5-e07f-4581-ad30-b711fa7c35b0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "739bfbd2-7c1e-4334-8bd1-e6ed4b3037d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3c3693-0187-4617-bd67-9561a3c77ac6",
        "cursor": {
          "ref": "a1c7e681-bc45-434f-8610-e4113d0069e7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "94da51cc-1255-4b49-a345-4342d7342896"
        },
        "item": {
          "id": "9b3c3693-0187-4617-bd67-9561a3c77ac6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d960d5b4-46a7-4fdf-b424-4d03cbcc32fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef858ffb-decf-464d-a463-e9b964d2734d",
        "cursor": {
          "ref": "78f75bb2-4185-4a61-9b98-80d310c34fc6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1eed5bad-8a40-4fb1-9afc-83fe55bcd4c4"
        },
        "item": {
          "id": "ef858ffb-decf-464d-a463-e9b964d2734d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "55cbadb7-fc01-4a67-83cf-54f22a21f6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ed3d06-dc32-46ba-aba8-8ff90f28ee46",
        "cursor": {
          "ref": "59da950a-4f28-414a-b7a5-b0fd122d177c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ade0fd9d-0952-41e2-9245-a412f2675381"
        },
        "item": {
          "id": "00ed3d06-dc32-46ba-aba8-8ff90f28ee46",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7f455115-df9b-4655-a88d-7ce2996df20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a015e0-cda3-4486-bbc1-5c325bb66e3c",
        "cursor": {
          "ref": "9b7d441b-1f90-45ed-bb86-c8f5f303530f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fcc43178-2852-4e4c-823c-4ff2302914a6"
        },
        "item": {
          "id": "20a015e0-cda3-4486-bbc1-5c325bb66e3c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "77424673-1c5d-4113-b1d7-9988e359eaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f740ae-df47-4440-9b59-d43bd12ce776",
        "cursor": {
          "ref": "2d766fbc-e952-41c7-813c-9cd5cb98efa8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "aff30f2c-75b3-4bf6-90bc-19c6861ae0d9"
        },
        "item": {
          "id": "d6f740ae-df47-4440-9b59-d43bd12ce776",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b061b9b0-b62c-4bf4-ac4c-bff390d4ec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f513f5-e49c-4256-9a90-ca62cf49da39",
        "cursor": {
          "ref": "e49829a3-a177-468e-b7bf-bffbe98e4d89",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eae99ea9-c4a8-4a64-aecc-039a9df827a2"
        },
        "item": {
          "id": "c0f513f5-e49c-4256-9a90-ca62cf49da39",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "68d5e0ea-bd07-431f-90ff-bc9f7857e664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f0cbf-9bb7-461f-9404-0f65934f64e8",
        "cursor": {
          "ref": "6b6cb08d-a4d5-4cdb-866f-74a3b5ca9f8a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d4a6fc74-3562-4ddd-8269-0d91dbfbb7d4"
        },
        "item": {
          "id": "602f0cbf-9bb7-461f-9404-0f65934f64e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a1f0030f-87c8-4b07-8b60-090e473f8662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaefda5-978c-4420-90a5-7a344f9d3bc7",
        "cursor": {
          "ref": "3f191890-3353-4d70-8465-e2f91c0e5309",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bed3506b-3eb1-4fc2-8760-71347a2f4bb1"
        },
        "item": {
          "id": "7aaefda5-978c-4420-90a5-7a344f9d3bc7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "56b8a781-42c7-411f-bcca-6d088ea0638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b978a9c8-2deb-429e-a0fb-ed26b06d090f",
        "cursor": {
          "ref": "4df92819-b8a4-4604-bfe0-338e6be7e5b5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d153e05d-9476-478c-ab3f-017a9b8ab375"
        },
        "item": {
          "id": "b978a9c8-2deb-429e-a0fb-ed26b06d090f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "91723b36-555d-49f6-a99f-18cc286b0f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0885eb2-4783-4176-b998-197239a3af65",
        "cursor": {
          "ref": "cc6edf03-3e38-4d0b-9921-2b8bb29ff1d3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5670466f-d62d-4628-b5d3-d96e76051fd9"
        },
        "item": {
          "id": "c0885eb2-4783-4176-b998-197239a3af65",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0ba75ece-b009-44bc-8ab5-16f5341439f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c45f57-7793-40f0-be0b-08abc7c7c8e5",
        "cursor": {
          "ref": "06bc83f4-71b8-45b1-865e-639d1300dc72",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b9a42865-7c0d-4d68-b025-838578231b35"
        },
        "item": {
          "id": "e2c45f57-7793-40f0-be0b-08abc7c7c8e5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8321afb5-b41a-4217-9e56-76de05e9dfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b109a4-29dd-4323-b070-f733181b5e8e",
        "cursor": {
          "ref": "97714851-eb9a-441c-9123-1026545b70ec",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2fc84f86-cf2b-4f54-94d2-d008873b788e"
        },
        "item": {
          "id": "e9b109a4-29dd-4323-b070-f733181b5e8e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fd5f4a72-b986-4c4e-90bf-a7dc1357e15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c016439-aa2b-4502-bf0f-d03ffc36b60f",
        "cursor": {
          "ref": "b4f8df95-3cfd-42b6-ad53-3249512b3584",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "38df1ec9-9965-4e48-82d1-308d88e950fa"
        },
        "item": {
          "id": "7c016439-aa2b-4502-bf0f-d03ffc36b60f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "38b3f1d3-73b1-46c2-ab91-1ec0e60cedb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe286c-76eb-4b4b-aa0b-b5563fa60240",
        "cursor": {
          "ref": "4cbbb352-97cb-4350-9271-cd6020d60e9e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c2ab2ac9-a4db-4003-9730-b9759244d698"
        },
        "item": {
          "id": "7fbe286c-76eb-4b4b-aa0b-b5563fa60240",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eb0028ec-3368-4d9c-9401-1743b0d12351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26a6d6-bdb2-4be7-83fa-50a722584ba1",
        "cursor": {
          "ref": "6623d0d7-5c68-4801-ad48-3f184b12c78c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "21b38efb-35b2-4988-97a9-4260df975b99"
        },
        "item": {
          "id": "3a26a6d6-bdb2-4be7-83fa-50a722584ba1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3771a3ef-9592-4187-be8b-8ad289f098b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da727251-ca37-4dea-879f-1da7629d12f5",
        "cursor": {
          "ref": "baf6bc3b-97bc-4c55-bb03-88823a5640ca",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5911b993-b9f8-425d-b37a-74c56fd4ae87"
        },
        "item": {
          "id": "da727251-ca37-4dea-879f-1da7629d12f5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "68e0398a-0da0-445f-bdab-136f7d933e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ef5e39-3d92-4b57-89d1-a599856ad44f",
        "cursor": {
          "ref": "7ab6584c-6e39-4a28-8cbd-2e92b52f99a8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8553051e-2f55-414b-bc84-f9939b07ae78"
        },
        "item": {
          "id": "a4ef5e39-3d92-4b57-89d1-a599856ad44f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00f028ff-990d-460c-8479-1f866403466b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde7d2eb-7d20-4d6e-9dc3-9ac007eb87e4",
        "cursor": {
          "ref": "84e8f6d5-7a39-4b27-9c1c-295dea1d4fe5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7a825b01-fb08-4caf-a1ed-d35721b3dc52"
        },
        "item": {
          "id": "bde7d2eb-7d20-4d6e-9dc3-9ac007eb87e4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "45ca9c6a-c01e-4787-b004-9813e6d77bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1105be06-c7b1-49e3-b921-7dee2569d579",
        "cursor": {
          "ref": "3f3cc544-aab4-4eb2-9028-bedce4c5104a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8733851c-1670-465b-81f8-b7abca7d2a07"
        },
        "item": {
          "id": "1105be06-c7b1-49e3-b921-7dee2569d579",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9f0415a1-8332-4628-8bfe-30f1188a7035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91522071-d6e1-4e6a-8834-39065d3a0bf5",
        "cursor": {
          "ref": "142bac5a-8c8a-450d-9716-8a6a2fefcb4a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4c2576c2-a37f-41c1-a7d4-1b9085dd61af"
        },
        "item": {
          "id": "91522071-d6e1-4e6a-8834-39065d3a0bf5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "40ae3ff4-1cb1-46ec-8559-07af44112dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee18fda-0112-4b2f-a471-a975ea220774",
        "cursor": {
          "ref": "0c414b06-6291-494e-9f17-6e845b173a33",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9ca859ab-7653-4777-b8f0-33fff866c3e2"
        },
        "item": {
          "id": "eee18fda-0112-4b2f-a471-a975ea220774",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f4d97303-d7e4-440d-aca3-9ee77707c032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27c083c-c5c5-480a-947b-7553444e06a2",
        "cursor": {
          "ref": "a966f983-4dcf-4bb3-94e5-605bfad358b4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32473782-07da-4411-b84b-f0ed0fb9bd5b"
        },
        "item": {
          "id": "c27c083c-c5c5-480a-947b-7553444e06a2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cb2af7f7-fe78-4dcf-9159-f48a5a0243a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910c6be9-86f3-41ed-9a40-62af2a60bc4e",
        "cursor": {
          "ref": "14fa434c-baca-492e-9ba3-95cddd7966d8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "992268ee-9e55-455c-8f90-2d118812b239"
        },
        "item": {
          "id": "910c6be9-86f3-41ed-9a40-62af2a60bc4e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b292333b-762d-4899-b278-2be0cae9b23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaaecf1-b731-451e-8b30-f6d38d33c499",
        "cursor": {
          "ref": "39734e5b-a0c6-49d5-ae7a-140e4c0f0be1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6dbfc8ce-474b-4268-a3ab-65ebb4298e88"
        },
        "item": {
          "id": "5eaaecf1-b731-451e-8b30-f6d38d33c499",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "61358758-b0ce-4e9e-b3b0-875912199982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc851c46-bac0-464f-9f6f-bfc80f917612",
        "cursor": {
          "ref": "7200f015-b59d-4f2c-9289-f1b4e2ea436f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b0f40f9-7a39-45b5-b63f-e5ec9db2bec0"
        },
        "item": {
          "id": "fc851c46-bac0-464f-9f6f-bfc80f917612",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "15318071-b3d7-4b22-9a41-544ec87ce1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0027900c-8df7-4ddc-aaac-3b1f235d6230",
        "cursor": {
          "ref": "0933e524-f98d-4232-8e5e-786c523f75be",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "80b676f8-23c5-44c3-b18a-c41ecbf99753"
        },
        "item": {
          "id": "0027900c-8df7-4ddc-aaac-3b1f235d6230",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "40c4ad7d-105b-4e74-b368-ce142aebc7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4db554-c26f-4890-85a2-15d3fa2545a8",
        "cursor": {
          "ref": "72382eeb-75d8-4d62-8321-c58ae5625d7e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4910bfcb-161e-4ebd-8aba-7b1e63f457a7"
        },
        "item": {
          "id": "be4db554-c26f-4890-85a2-15d3fa2545a8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3ccf6c58-ada9-4e4d-a8d5-96b9fa311b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ae92de-a1ff-4ce7-b86b-d028f82f43bd",
        "cursor": {
          "ref": "4103a640-00c6-4e86-bdbe-fcaed37f4d13",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6b953079-9bde-4468-ad63-30f1626bc6ad"
        },
        "item": {
          "id": "a3ae92de-a1ff-4ce7-b86b-d028f82f43bd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd7e584f-8ad6-4986-9aa2-458e9e5dd507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4972b5b-2c12-4fe5-b54a-784f00d31997",
        "cursor": {
          "ref": "30be7b34-dfc2-4722-9c95-a1d7f1503dcb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cfa7169e-700a-4d72-b8d0-7c9e3439fad0"
        },
        "item": {
          "id": "d4972b5b-2c12-4fe5-b54a-784f00d31997",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50c6f005-a2c0-488f-8d55-2f06bb5296f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecc01d4-a27a-4fa1-8506-790738238a6b",
        "cursor": {
          "ref": "a5c3e1ee-54c0-4825-bb47-1c88c0780d81",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b5d98ec7-c4f5-436b-a394-306670c3c7e9"
        },
        "item": {
          "id": "3ecc01d4-a27a-4fa1-8506-790738238a6b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2c385c61-8d0b-416c-b51f-6841f3a8e36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db6ad6b-8e4d-4050-841f-944ddd3f6523",
        "cursor": {
          "ref": "3a218feb-31ad-44eb-9912-ccfa758397aa",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aad21f49-7652-44b8-837c-f65741205ca4"
        },
        "item": {
          "id": "8db6ad6b-8e4d-4050-841f-944ddd3f6523",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "de99807a-e22a-4b5b-bbb8-0d6acab768b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7412503-c4dc-4397-a25f-b8708109631d",
        "cursor": {
          "ref": "23465534-3978-4518-8766-eeaddc79f83d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "aa33651f-fb0b-40d1-9780-8b14e9a3737f"
        },
        "item": {
          "id": "b7412503-c4dc-4397-a25f-b8708109631d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a8be3674-41f4-450a-bb24-ab02733da72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4720820c-9c96-4c92-9f02-0f17e92d03cb",
        "cursor": {
          "ref": "7083300a-a26c-4bc6-b5b8-e0f375f9dc5e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b004ba19-1b65-4b5d-a951-3e6c32007999"
        },
        "item": {
          "id": "4720820c-9c96-4c92-9f02-0f17e92d03cb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "85b9cae7-4194-454c-ae06-b2a8604021b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d2c0d1-f76a-4e8f-8a1f-299b47b48258",
        "cursor": {
          "ref": "0bdb7840-eaaa-4ea2-9004-52db1d340354",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "04533fe6-a0c5-4591-8189-325088fbc790"
        },
        "item": {
          "id": "a1d2c0d1-f76a-4e8f-8a1f-299b47b48258",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3394b1cb-6fbd-49fd-856e-44c36bb7bdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edb272a-1134-48ce-91b4-618f8f5e60df",
        "cursor": {
          "ref": "65d3d8e2-e3c5-4d22-8e3b-655c45593423",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c97d3a24-fdbc-4619-b266-b23e220c339e"
        },
        "item": {
          "id": "3edb272a-1134-48ce-91b4-618f8f5e60df",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f3d43e73-4358-4316-abf5-ec02d5790ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c63e5d-4abd-4ef9-b091-cedad1caba14",
        "cursor": {
          "ref": "780a132c-3dad-4c75-9250-84b352725816",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4f26780f-1296-4c72-909b-299d143aca91"
        },
        "item": {
          "id": "d0c63e5d-4abd-4ef9-b091-cedad1caba14",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8fcc9a30-4937-4ded-9b00-fad7f37e9238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f94beb-765d-4c52-b94f-65ebbffc5cb3",
        "cursor": {
          "ref": "539f4b45-c534-4769-af2a-f3b31f4f7bae",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "07532e47-bb94-4f40-b20a-40bada4def95"
        },
        "item": {
          "id": "d6f94beb-765d-4c52-b94f-65ebbffc5cb3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1cd29fae-ff20-421a-ad4f-f66b5bbc94e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cefb39c-e33a-450d-8a94-b4b6221963e9",
        "cursor": {
          "ref": "988048e2-ee67-4852-af8d-aee64ec28290",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2fd9dd26-dfdc-46e5-b553-32e44f690fdd"
        },
        "item": {
          "id": "4cefb39c-e33a-450d-8a94-b4b6221963e9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "508e80d8-138a-4ac5-957a-e16347fce02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f968a0-3279-4c16-9829-027eea9e4b4b",
        "cursor": {
          "ref": "cdee8e68-4686-46a3-bdc9-136b692edf25",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8059bac4-cf21-49b5-a631-df44bcfd7a49"
        },
        "item": {
          "id": "79f968a0-3279-4c16-9829-027eea9e4b4b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1ea0cf2f-ce08-4e15-855f-1ba1d56265e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc147d0e-3641-43f4-b6c2-0ae28a8b423c",
        "cursor": {
          "ref": "884c27eb-f61b-4ec4-a7c6-1fcedb21fc59",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "35c16adb-14d4-4f0b-a374-ea6a5d052760"
        },
        "item": {
          "id": "bc147d0e-3641-43f4-b6c2-0ae28a8b423c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c0a55e6-ae0a-4261-a759-8062674b5072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1a425b-a040-4938-89b6-27aa61ec9865",
        "cursor": {
          "ref": "05e7f005-e4be-403b-bd04-503ebb2151cb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0a00db9e-36d4-4148-bef7-da17b03f2522"
        },
        "item": {
          "id": "fe1a425b-a040-4938-89b6-27aa61ec9865",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "331daf01-46d2-4b4f-a422-96930b9c77f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fe89bf-24ed-4ca2-8da3-f0b4b369e481",
        "cursor": {
          "ref": "86429b34-8923-4c07-9847-1f32a618a68e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "46f40842-98c3-4453-b5ab-1b4286b7567d"
        },
        "item": {
          "id": "75fe89bf-24ed-4ca2-8da3-f0b4b369e481",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c850eaa1-62f3-452f-aa4a-eb7548087061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f35fcf5-0160-4adb-b95c-e12be2639510",
        "cursor": {
          "ref": "6b12b063-b4ac-46cf-9abc-ef545fc733ff",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "795bb0b2-dc61-4b56-9475-019f2cd565a6"
        },
        "item": {
          "id": "9f35fcf5-0160-4adb-b95c-e12be2639510",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "24395720-3043-4411-9284-cf8a1232f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c3535-efd9-4cff-8e4d-1d2a41f50378",
        "cursor": {
          "ref": "a5a70d82-74a9-437c-ad7f-4e4d9f9a2de9",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ad416a80-2085-4d56-bb5b-9d6eebcfdc3f"
        },
        "item": {
          "id": "6d2c3535-efd9-4cff-8e4d-1d2a41f50378",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f6ee4010-4bac-41ec-a8c4-05d62bc6592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14289e0-f861-4407-8fca-75f3f7baa0b0",
        "cursor": {
          "ref": "3eb2285a-fa5a-4ad9-8c06-b636dd793499",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7d83a2c2-de4d-43be-9f93-11b1d3dcb291"
        },
        "item": {
          "id": "b14289e0-f861-4407-8fca-75f3f7baa0b0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "574c46c5-54b2-40ce-ab42-2ed1b2fc491c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd4fff1-03bf-4165-84b6-e48cc9997256",
        "cursor": {
          "ref": "39cafc5a-4e81-4773-930c-920e67354c26",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ad8deaa3-b156-47b2-8a72-8dab2116268b"
        },
        "item": {
          "id": "5bd4fff1-03bf-4165-84b6-e48cc9997256",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8a8114b4-0a92-4bad-a441-adcfa0decaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82082cc-2e02-4e51-b454-426c655b930e",
        "cursor": {
          "ref": "5a63d63b-f8be-4f9c-bdd2-ff05d9ccfe1d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "70045351-bab6-4c25-a052-96e9475fe567"
        },
        "item": {
          "id": "c82082cc-2e02-4e51-b454-426c655b930e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7443b58c-e487-4d16-9be9-a27205f945fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075a974f-ee98-4c95-95aa-6674f86c5c25",
        "cursor": {
          "ref": "253c8c1b-04c3-468d-980f-9c95f15e4e93",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5cf33ab8-2bfb-4553-afc9-2b59ef79809e"
        },
        "item": {
          "id": "075a974f-ee98-4c95-95aa-6674f86c5c25",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a11903ae-88f7-4277-a741-36c29220e728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16d520-9b82-46c8-b0c9-0702b47f013b",
        "cursor": {
          "ref": "0f22e11e-4964-4d64-804c-3f47e4220b62",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36975dbb-aad7-4d9c-aaa8-c2016c5e7401"
        },
        "item": {
          "id": "6a16d520-9b82-46c8-b0c9-0702b47f013b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a8d92251-08ad-4d8a-9470-ed0360e0202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb15f698-6a29-463e-a236-75868976d4f8",
        "cursor": {
          "ref": "cafa5f37-9d9a-485a-8ca7-39ec7bffe109",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5fc22523-ba20-48d8-b47f-0b9b9b57e83e"
        },
        "item": {
          "id": "fb15f698-6a29-463e-a236-75868976d4f8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b4613ee2-6719-417d-98d6-9b5051d152be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c425b7-4fe3-4739-8fb0-d9be8c1f2933",
        "cursor": {
          "ref": "b36746be-62e5-47c0-a140-c86491f5e9b8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c6fcfc10-9950-498a-9621-f84d6bc71867"
        },
        "item": {
          "id": "74c425b7-4fe3-4739-8fb0-d9be8c1f2933",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1fc890e2-bb53-411f-8a22-95a556a9a6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c05cdce-4022-4617-bf92-393c7c953d2f",
        "cursor": {
          "ref": "3e2339b3-31f1-4b63-b1d5-44b23b3b5620",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d3493f86-1418-4532-b314-0a29bffb847b"
        },
        "item": {
          "id": "0c05cdce-4022-4617-bf92-393c7c953d2f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "34b93850-1642-412a-85db-5c1ea7d71428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483e3702-3629-47a9-bec9-3e35d9fccef1",
        "cursor": {
          "ref": "f621646e-7c44-4b4e-9f7a-1e13f5761414",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "99cdfb5b-032e-49e5-b845-a75beef7a08f"
        },
        "item": {
          "id": "483e3702-3629-47a9-bec9-3e35d9fccef1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "98d5ade3-0f83-4770-a6fe-33593c9b780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5ed557-183a-42d0-85f7-3abbf1042f6e",
        "cursor": {
          "ref": "a119cb2c-8bfb-4bb0-9b61-5ca3acaaceac",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ac65c7e9-3b06-480d-8912-b9b025ce39a2"
        },
        "item": {
          "id": "ea5ed557-183a-42d0-85f7-3abbf1042f6e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "53c5494d-3e64-45c0-812c-90477c4d7fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d512cd12-f92e-4d71-90cd-7e5194984587",
        "cursor": {
          "ref": "e0a93118-976c-4359-9c1e-de8228711664",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "df9681ec-c126-4175-af7e-ab7d5c5fac31"
        },
        "item": {
          "id": "d512cd12-f92e-4d71-90cd-7e5194984587",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7906cbb2-a51d-4b0f-a42c-20829ebcd4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045c2aec-2e77-46a1-9402-b60ca7b578c8",
        "cursor": {
          "ref": "12f3fccd-1c22-40c1-b422-6e67446359bc",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc1a389f-9bc7-41c5-ae0b-afcc0ca23b68"
        },
        "item": {
          "id": "045c2aec-2e77-46a1-9402-b60ca7b578c8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "527e9f53-6c7f-4f64-9855-89fde8448cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def9cbd2-c672-4c62-b21c-e42580e634bc",
        "cursor": {
          "ref": "bf62809f-e752-4c59-b63e-19193fe59296",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d408b9fb-3c35-47d9-ad9c-19b3a783ebed"
        },
        "item": {
          "id": "def9cbd2-c672-4c62-b21c-e42580e634bc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "09964acc-8b93-415e-a991-74f40c066f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca08c0-c74d-4739-86d9-4432b1f4a882",
        "cursor": {
          "ref": "dd41b4ee-b202-438f-8446-dd3bd167ac7e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f8ef20b3-6c42-4b9b-9c90-f0dae944658b"
        },
        "item": {
          "id": "faca08c0-c74d-4739-86d9-4432b1f4a882",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e843c57b-b58d-4bc6-b824-a4efd1704d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3876a9-594d-4826-906e-d00518a12d9d",
        "cursor": {
          "ref": "419669d2-932c-40bb-86f4-632a1894cfbd",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "53a05e8c-e270-44e7-a9e0-0761c813e5c0"
        },
        "item": {
          "id": "ed3876a9-594d-4826-906e-d00518a12d9d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bf157d05-8fad-4916-806d-499a437c316e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcae3ad1-06bb-4a80-ab81-0af0770e869f",
        "cursor": {
          "ref": "a95d247f-f0e0-478d-a08f-85c18018ecab",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c573082b-f262-4bd4-9b5d-d46cd72b9295"
        },
        "item": {
          "id": "fcae3ad1-06bb-4a80-ab81-0af0770e869f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8d13b8bb-9292-4f07-88b0-6e06b119c49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d4381a-07c5-448e-959b-b68d0b53a778",
        "cursor": {
          "ref": "8cff3c40-c182-4d75-b59e-17893bf01a03",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "88b17b54-0d49-4961-855c-d8ebf725c9f4"
        },
        "item": {
          "id": "b0d4381a-07c5-448e-959b-b68d0b53a778",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d195a4b5-9361-4090-9545-9cdc39bff494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe791f5-4d47-4f31-a006-9494fed481b3",
        "cursor": {
          "ref": "9690a55f-6342-43e3-902b-364b75f7df3f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d1902e07-1528-48c1-86e8-a6cda33ca4bd"
        },
        "item": {
          "id": "7fe791f5-4d47-4f31-a006-9494fed481b3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c8b06894-c987-4a6c-b782-122fe339ac6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4d1555-d3ba-42e5-879b-189700842646",
        "cursor": {
          "ref": "3ae691fd-c5da-42ad-a0fc-775838f1a0d0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "761eb3fd-ba13-4086-8c95-55d121724fe9"
        },
        "item": {
          "id": "be4d1555-d3ba-42e5-879b-189700842646",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cb6067e3-c283-4d83-968c-478f1ba1c965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e795a85-ea07-43cd-9c5f-6645d29b3949",
        "cursor": {
          "ref": "e3352a38-6ba9-4866-a01f-55084ba73b00",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "85661b27-48f4-42a9-8960-680b6c9f72d9"
        },
        "item": {
          "id": "7e795a85-ea07-43cd-9c5f-6645d29b3949",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c8a89861-7813-457e-94e6-2f17ff29dea1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7728631a-eb38-4394-8e1c-d0b2eb816428",
        "cursor": {
          "ref": "919fced8-9b60-427f-ace6-38a55f0456e9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a2abfa83-fbb7-42b6-9b25-747a1bc8cc68"
        },
        "item": {
          "id": "7728631a-eb38-4394-8e1c-d0b2eb816428",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f3fd66a7-cc5d-4427-9560-3a0303fb9879",
          "status": "OK",
          "code": 200,
          "responseTime": 2198,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c31140-512f-463c-9cc1-0e07a5260f2e",
        "cursor": {
          "ref": "38650a39-e5f8-4156-b04f-2ced29d8e44a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9acc4d35-e3d4-468d-9a04-e441bf32780d"
        },
        "item": {
          "id": "62c31140-512f-463c-9cc1-0e07a5260f2e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6017a494-8700-41ca-9419-fbb0eab9e940",
          "status": "OK",
          "code": 200,
          "responseTime": 2616,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "426b7b45-8c26-4d3b-bed8-312a54e9ece0",
        "cursor": {
          "ref": "099ee184-db70-49b4-bc0e-f7c8487148e2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d36fbf44-75ab-43e3-9644-bae9dcdce56b"
        },
        "item": {
          "id": "426b7b45-8c26-4d3b-bed8-312a54e9ece0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3455fbbb-a83f-4639-9dcc-23dfea1dc623",
          "status": "OK",
          "code": 200,
          "responseTime": 2606,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020fd35-b6f4-4d0c-9f72-15ebdd93addb",
        "cursor": {
          "ref": "2e0c23b0-cab1-4ebc-aeb7-6e665d6a78f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3da730b3-5b9f-4263-80d9-97986bc5b70e"
        },
        "item": {
          "id": "8020fd35-b6f4-4d0c-9f72-15ebdd93addb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d55b4f5-6232-47c6-86ea-90ee84806e6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020fd35-b6f4-4d0c-9f72-15ebdd93addb",
        "cursor": {
          "ref": "2e0c23b0-cab1-4ebc-aeb7-6e665d6a78f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3da730b3-5b9f-4263-80d9-97986bc5b70e"
        },
        "item": {
          "id": "8020fd35-b6f4-4d0c-9f72-15ebdd93addb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0d55b4f5-6232-47c6-86ea-90ee84806e6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72bee7f-0a15-4cd9-ab48-9f54ed68ca00",
        "cursor": {
          "ref": "581d8fe8-61ed-45ff-9d39-08ffb9d3112e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b11efa66-a820-4d25-8e01-4509e67bd3e7"
        },
        "item": {
          "id": "d72bee7f-0a15-4cd9-ab48-9f54ed68ca00",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0a5314a0-6759-4dd9-83db-f44bf8c23ba7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee9d94d-862e-44fa-b732-81219bbfea19",
        "cursor": {
          "ref": "3e291b09-d7a0-4a6d-9e9d-864a7a14481d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf9e89f5-b18e-460b-bedb-a965beaf5424"
        },
        "item": {
          "id": "7ee9d94d-862e-44fa-b732-81219bbfea19",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ae0d2017-4b15-4be8-9372-05d4f9953a89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}