{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "134b7b32-4958-4b65-a63c-99815ca48e59",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7bd035f7-13ed-44fe-844f-87302fdccd86",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0209abad-c70d-432a-ab46-735f1c5364cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dd9e9abc-6456-46bb-86fd-81d620ede2e7"
                }
              }
            ]
          },
          {
            "id": "81fadb89-d439-45c9-b04e-0af063731ef9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "608515ad-c056-476a-9402-82d0c2ff8a33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c9446efa-74b7-4a0d-905f-d670eb9bfc28"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c90c2246-ebfe-4005-8abb-36a342813dae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "025c4e9b-802b-4bff-b792-1133f018532a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3224691b-f07b-48b1-8284-f2319329723d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "516a6820-242b-4ba0-91a7-d0d3f41c0741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03114633-2f92-406d-8aa3-2ae3fc67b1a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e901a63a-c156-47f0-ac5b-a48b0bec73d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3ee9c78-61b1-4488-9c10-2ed104355c55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7647f4b-bf87-4d1d-a927-717626c89c40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1acbfe3b-cc83-47f0-87f9-8754246b52e5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "872a00e4-f0ad-4f07-ac74-ad447cd38862",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b54288fd-7a9c-415f-bfb3-4d1e70f3d5b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad2a740a-032f-4ff0-abd2-6b82d71d8f29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3509353c-191e-4358-84fd-7462aae0af24"
            }
          }
        ]
      },
      {
        "id": "7cdc13cc-54b4-4709-aa95-98af25bd18dd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b6d7e4b6-efcf-45a1-83e9-5c1a02eb5ea8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fca1d279-f79c-40c4-bf57-6440b9d18c0f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5588bcf-16a0-4465-98b7-8f3300f2ad31",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ea880a-a251-4daf-80b3-fb277d31fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a9fb60f-1f9c-4dcc-98bc-2b60e2a78f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b35fa4a-dce0-48be-9b0a-bb9f258ec3fd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f397102d-b232-4799-9a0a-dbbc6a4a49c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e492772-bcd0-4cd9-9e5a-508fafab3089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372b4233-4492-480b-8f1b-a47deb346446",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b97e299-82b5-4b91-8ccc-1eb28dcb11f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ca340f6-b393-480d-8111-1e296626c60a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4dbd33eb-3a9b-42e7-bc8c-1431ab69f1e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a05b7056-c5e1-4e57-a057-6f03883bdca1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f001afaf-b282-4b6d-bcb5-4b6567a95089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dc23fc2-aa26-46b9-a60e-79eb688a033b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3c0435-4ab4-49dc-aa8a-17552915ca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23573860-ec94-4265-a363-955c83ae79f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2f7f9a1f-834f-4511-8d8a-248ee2bb88b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4aa6f179-683b-48f8-a91c-1fe9f13e1c2a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6672dd35-f870-46a4-838d-237dcae47980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "be9dd115-61a5-4e55-bb1e-22566fde9033"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8bf4547-ff90-48b1-b2b7-453775bb50f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5e8baca1-5373-47d0-87dd-cec93941a199"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b149db55-63a9-436b-b1f7-465f09ad3a5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b762f4f8-3c4c-4cf8-addb-4e4542c389c6"
            }
          }
        ]
      },
      {
        "id": "3ae129f5-bf1e-4aa7-9e85-f13f3a73e949",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3eebffa7-6e2f-4cce-8e7f-8e6efb8c1fae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a1ea625-8d45-4a53-bb40-70880d75140f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ab3a7575-9bf2-4fd9-95c3-8da78b6bbbd2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b99281-86d5-4b34-8be2-b64a2511cfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc5a3dd-521f-4b0e-8bff-4335e8483460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee14a31-a848-46bd-a15b-cd103d1c6e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf8b05d4-dddb-44ab-84fd-91808dbb2eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b669e2d-ca28-4721-b236-3ae16bc5fa30",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad85037-89de-4cdc-aecb-888d0f17902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34d802f-14c2-4389-b9c1-441b92986a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50aa735-15ff-4a09-bdf7-9995b9a46c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92dbdbdc-1f2f-48fc-b6f1-621bc8dcc856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4472b742-d2f9-4d04-af99-7c8c1db0b27b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834937be-4ed0-41b6-b262-026ebeb1b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c667c9-3a4f-4f72-bf68-3c992ea7e66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49026273-3eb3-4a2a-9b1d-325c79aa3a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011d2697-5b2c-496f-af5a-d9ea421c0ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83172711-80f3-4e57-b3a3-07f7d617aafa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fada1fd-f29c-491d-aa4d-4a2af82ce615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec583a1-a62a-43aa-8bb8-e702644e7fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1093de3-2e1d-438c-88ed-e60df7e92278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8afe8c4a-5b10-4fa2-b16c-19a66cdf971a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb3789-befc-4f82-8389-cae1fd7891bf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3707c9-9c62-4d57-88a7-7f79a644b861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3c0847-af28-4a49-b755-a6610b19929c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58db4170-28a8-45c9-8e3d-fa349347f762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7a3af57-57ac-4449-8bf3-c0e4c976a395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb91c24-c771-40a1-8662-f54beb0cb90b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e481a673-e874-449c-a401-42d5670b4513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d653f4e-50cd-4f42-934e-9cc4437e4b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca06df16-d8ae-4cc7-839e-e9a813ed1e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a67768e-7d35-41be-bbcf-421496b9f2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980880cf-22c8-465f-abc9-c516f3475609",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69f558a-0c7f-4d60-bc53-121c172c4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7412c3d1-a876-4ee8-8f34-94418e76c2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaffa835-8e8e-421d-bac3-abed887b9133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c389b95d-c956-454c-9c15-f3d48e2c6fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889df772-5e04-499f-8284-7c528edacda3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634c9b6b-bfd2-458b-b08c-3114ba4ee440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61515d8d-0423-4cad-bf1b-be0e67841121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2316c7d2-7c9d-4c2b-b193-c441446b1971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42059adb-8e85-49a8-a895-5bf36ec06286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7ff36d-06f5-4d15-aad2-66958135bb1e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cdc350-0959-4942-8085-4852476e7e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cb4539-7277-48c9-8a9f-99316dc9ab5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2b10c7-ff32-44fe-9503-5086ad370fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427b357d-bd4f-44d2-903d-6e019effdff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a868cc6b-876c-4be5-807b-28ee50ae3e18",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e429c67d-da24-455e-b812-8f16f4d4b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6bb422-e98b-4903-b0af-36d7dd94b278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973570ca-96f5-483c-9560-5e4937d7d316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d97dc7e-9f48-4cd2-a242-ecd6183b6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870869d3-55e6-45c2-bddd-b6e7c12b8e2e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ebb9fe-a236-42be-9377-00ac8af2dd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe68028-8397-47f7-b658-c5eea713b1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c850f99-f22e-48fe-afe5-250bf82ae267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05dc7dae-ec0d-4e31-a267-37e588acacf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0b8da4-0c90-409e-8397-beb20b42c46a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413fadf5-9dff-465d-8f76-70f3b560aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3461b4-7933-4d17-8724-505a883f758b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc22f25-27af-4ec2-80c1-e160e7cf383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03691cac-a126-43da-80fc-f1d68b19a6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b64c1-fc7e-472b-bcb6-3caaaf982931",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f48787-9353-4663-84be-059ed5e1386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45fd45d-f836-46c9-b3da-77a4d7aef1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e862a39-9d6f-4cac-b676-b9396973a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cee46098-98c9-4c3e-b352-a1ee0aff7524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6a4be8-8105-4ff1-89b9-bb794a8bf255",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5c063c-a0e7-4deb-b818-e3a7bfd81706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf5023c-d116-42e1-8bde-d50c70dc6c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee4a872-66d6-4fd5-8888-eb920f9ce12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc6904c3-e168-496f-8cb2-36b01ab1af9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cbb09e-5b55-4159-9bd4-41dbcbeab899",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0576ccb-05cc-4a8a-8f13-67d2ea63f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f9bbb0-29c0-43c3-8275-6da5c33c5c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6000c2-7f40-482e-aa32-d417a7c361ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c5e8a20-2953-4af2-ba79-999ab03ed4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c255f49-46d0-48b7-82ff-543c274412a3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8b7e69-a39f-4c3b-a8fe-3b79cf9debf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15e462d-da2e-4fbf-ba33-749c12248563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3664e420-4ae8-4a99-b405-e1ea0f276ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91979232-c69f-4b58-96a6-3aea5170de4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53c7388-e77d-4853-9ff9-53c27a240121",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8fa517-6ed2-4f92-ab09-f2207884a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c517cc3a-2842-4843-b934-3b20fbeb0eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aee23e-92eb-489f-820d-736e09e589dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "526be86b-1fb7-4f51-92d7-ef4b36857dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255fa9ac-0223-4811-b218-8d9830361f1c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc6576c-8d1e-4168-9cba-e0ad64827d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c41180-4039-4e0a-a8b4-52334180ecbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b86bd25-f9ad-43d5-ba57-eeee4a05947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7681ba-4dbf-4ca0-8ba1-8d2221c099ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d747e891-c03d-4c44-9ebb-cecc2c6c7971",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bd90d0-c42b-4d89-bee3-2013b06e417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc80cea3-d1ba-43ad-8103-0c7404e55c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170b5540-e304-4ad8-90bd-16b5f660543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7d6a75-7ac2-4de2-ba70-33ba9b4effa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3344adce-808b-441a-ac28-75e86f886a76",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cb4e90-dfab-434b-ae2d-6febcfc5d034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7214f01b-9d9b-486a-968b-44392f52614b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b1c283-9f17-4ac4-9cb2-029281079e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5571018e-9cd5-4216-9850-eea9c7818955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477c48d-0acd-47ce-bcf1-3e940b01cc1e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9125ac3e-957e-4ab0-8aeb-cf9655517b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f39ed6-4729-4c41-a322-0155a7a59775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc1fff9-6ebe-468c-abd6-d9bdf2d05472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a5c222-0290-4db5-bd62-9de2c9d38657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9295d56c-9ad1-4edf-8102-107d9a5a4971",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7f1aea-bdda-452e-bd0e-dfceaadbde39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484e3433-b9bb-43b3-9c51-b128c6acaa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295f2f48-ca54-4223-9756-2c141fb47e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f70384dc-2e91-4e75-be5f-612d0eb95caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0df076-13de-4f38-963a-314625b9d621",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd74c456-019c-41a8-800f-598e1cacc50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d3e886-8730-4f67-a00e-a430e3208578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfcc73a-a597-443c-8455-a36a041559ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1213df-456f-44cd-9ba9-3f144f4bca55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fdd17e-6f58-4096-9c4d-c35414c548cf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b61eeed-b3bd-4880-a8a8-76f920421d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6ba98f-a21f-45d1-9795-5678ab23b665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7376054a-86a6-4f55-b63b-2b88f6c12c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fcc26c-6d2c-4e40-aa52-3557ed989e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34140830-fa22-40aa-b3d2-03292421ba3e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caf4d69-4584-49ee-9555-d5cc17cbe29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e949fe5f-9eed-4057-acc1-307f319482dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344ccbb9-3be3-47f5-8686-8c382b3f0ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f35564f-96ac-4196-b416-081e43769731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99eb776-bbfe-4dfa-9783-df4e6b7946b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b4b986-ceb4-4faf-b7f7-64e10e273975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a41e03-6676-4d09-91a9-963bc72542d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431f9c5-5e3e-472e-9bf8-b95758e1b32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96781a5-825f-4349-95f5-c6d58e90ab61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fccb12b-40d1-48e7-8e73-1250084ea305",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b382c2-39af-4799-94cf-e3c109d70179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519d77eb-7258-4d3e-91c8-a43e845905a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7537ec5b-f849-4178-9f76-e22b7599050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ddc1f6-a019-4a14-a40b-2e73d048dbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7e1aa2-1d80-4145-909a-69379d1562f2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9e489e-10f7-4994-83ae-39a5befa4c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5222cfe5-6ab3-49ec-b665-eec4fd22b507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f764e725-f58c-41cf-ab1c-0cb2d1f981a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d398a5a4-4c2f-4c7e-9f7a-9d06704c6a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db68065-11a9-4d42-84a6-4a7a4cf4a029",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e017e6-df47-407e-a516-871c318a3b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf0dd8a-717d-4ef8-b6d7-c6f4962474c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc924d83-acf9-4d57-b929-f8f5e80621a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb79b8f-ab0a-4d98-b5e9-89aedbf4f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd13fb1-177c-4189-8a58-136342141287",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8681e4-e6e5-4d48-8cdc-d933c1f2b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e39330-643f-4ca3-87b0-ffa2b9808d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb5dc80-800b-4be8-a799-c25ba502ddb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "459ff4c4-94a0-42ae-91c2-60e03fab235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08a8ffc-3549-4a1d-8a71-0e6b33508d29",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5fa28f-26b4-4a8e-9064-f7bed3075292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1765e8-0325-44d9-85d6-19e289e9ea66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6003a6fc-35bf-4d48-8f36-6cc30b61bfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1155aa7e-48b9-448f-ae9e-55453af64e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270a84c0-8e7d-45a0-bdc7-7925c6847999",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a52e50-48be-411d-9b81-d790cffb633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc8585a-ec6c-471e-9ff6-fec68697463b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df67b4d-0a5d-44dc-9d10-49b3b4b0ff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e79c886-13fb-4c39-b641-3e6004cfc9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7066d5e1-7788-4f0f-b4f6-5959aa6574fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87559a8-b1f7-496b-91ac-b1f66b34b1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8832dee-f5f3-45d4-9677-4b6ff8f75e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a6d2e8-a85f-4514-a2a6-9f5ddf87898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98591643-c2df-4569-96c0-916e09069e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52081202-39e5-4f07-99a2-ce2c23caaf72",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6219824d-de7f-4a5f-b9c8-ab739b5fb508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc25aad-f818-48fd-b6ca-d0aae01068f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcd7ea8-e7b8-4bf8-a115-85b9ed1a2416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb9300e-5dae-4b45-9d22-bc1063cab7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a7b6ee-8e2f-421f-8f1c-f8d2b94effd5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db387a-3fd3-4db6-b490-c177bdb8d57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729fd998-206f-479d-9082-e42dc603775e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8869a15a-ee81-4119-b425-44fb8ea0b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad5fe16-a525-4830-80de-4e65118dc128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98832d-4b98-40e1-bd88-4b59262c27a0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d56368-3b5c-4369-9510-9f9190280e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4d262fc-46b0-49e7-9d5c-0fb18c527591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c7c349-00a4-4bcf-8356-3b2117796924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed918070-7b66-4020-9bb8-c7432af86894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd315527-3b57-4f7d-849b-9fd456de91d1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e5409-4ac5-42fa-9600-213b1f300184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4a530a-cfa0-4087-a0d4-9d0e5b8a8995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5157b821-7d14-4893-bb11-8ff5b4b376eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb221c23-f95b-44a4-bff9-f1e4ca03e45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d981f-88ab-46d9-a278-a131c1a9829e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8145d968-fa45-4c23-bded-0db19e168f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca7885a-b3da-48b7-a436-8113ea7c1ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912d8ac9-8356-43ec-bb4e-25991fcb27ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ede9ff3-cc40-45ef-b1a6-55f536db37bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570c3984-3a60-4c2d-b6d5-86ce3eab9b44",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ee7d3d-c8d3-48da-8a41-b37c2e14e1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efe84af-57e9-4768-85a6-d732a324b43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364693d4-ed37-4bac-a437-18df46644b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b14f99-1618-427c-8cf2-97f128d1e08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3394addd-18d2-47cd-b516-d22a7ec3a3b7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78786652-53aa-4084-a3de-1c7df16491c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1413547-426c-4c7e-9f71-fd3f9a0fccac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3998b-64ed-47b6-81ae-d81d1606e596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e224ea6b-5cf4-490f-ac49-36e5fc5e876b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31680d0c-b49b-4f01-8f73-63c62977466f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f533b9d-31c8-4f00-b2f3-e02c7fb58e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d6d375-b997-4152-b22c-e9bc6081f218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c848187-c848-4f7a-820b-8362dc6861ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1372aee0-017b-467b-8eb5-e9d10f3cc03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36236aa-12c3-4fa9-be9a-d742ef0c70ed",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f93d6d-1b7a-42cc-801e-f1cc6697fe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c94ff2-77af-4730-9619-bbe064e7cb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9634b18-e693-4283-9960-18215b23cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0251dfef-7b70-40e9-b111-0b4779249cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52113507-3ec5-42c3-b12c-bd0423f81538",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4feb38e-a818-4ab1-bd9e-e699ef742a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e77277-33bb-4829-b5e0-d8e501413f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fff8884-9354-43b3-9c51-92929183e1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45561a1-1de4-406a-ae79-275d287f5f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad4c7cc-4803-46cd-b6f8-c63d45017a79",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1146ad8-e290-4076-abb1-79a0148e4165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fa32ef-c8d5-4bdb-9d6c-2c292e42aff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa972d6-1056-4441-a92f-c6fd15e9c005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "14319086-0c6c-42f6-a2f2-6f043855a153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ca8a83-3dad-4b00-9e9c-c543bac0af79",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131fad71-b277-41f5-8129-b6326e27ec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08047151-8643-4c4e-b229-afdf36ef2037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4193363-c7f9-475f-800d-3bc8af54508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4446d5b-8360-4bf2-ad21-2fe34c6f4e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b880e12f-2a19-4f6c-a522-5d44c7fcd522",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05d242-2cc9-469c-b721-15a24f60b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9728bce-24c2-4c0c-9b50-eb371dc6b9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14df2aa-71bd-4765-969b-ef9b12850e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f03b24f5-d842-47bc-8130-9e628e5c8017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2b61b9-fd54-44ab-9a10-ceb8412b96e3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0318a-3b08-4665-98a0-d2d952bcddf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65153875-10e3-46a4-9b79-a33ccade9f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2858e-1334-482f-afbf-68a19ae0e363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e7ac60-3e1f-4769-8c4a-ea23137726ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc07c417-6f0e-4cf2-bbd4-cb64ece3e5bc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2755ef25-0ed1-4312-964e-e5a5210250aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7e4918-525a-4828-8c59-8ddc5fd77e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b322022-1b3c-4caa-a260-b537b74c6880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d15b2e3-e695-4c19-8450-ec7c16dd55a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b20f41-0f37-47fc-8344-1c51e5835339",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8578ac-efb1-45fa-9d72-949ea7695732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d94184-029d-4dc3-a901-a38fc273e261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eaced3-ac62-408b-a065-c0d4db7566b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77517fba-c561-4de3-86f0-b23da8c99baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c911f4e2-98fc-43b4-821a-d60462f67736",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f92ceb-701c-4f86-86a8-1c05a3474b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63693013-08de-406e-9fe9-69f4f2903bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58d7246-d4df-41b5-8d81-8f481c30db82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d6985f-818e-4d92-932e-5b6f048c2fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139d6644-cee9-447c-8f32-f711f3620817",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb2bc0a-ed65-493b-9fee-6e9231fc8cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216b36b0-f7bd-4e42-b4fb-1a4942ca6acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35618fb8-5f71-4529-8373-0f0f008ac17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "715b057f-1572-45a2-bb16-0bb23fb99965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a663764d-40c1-4d68-b230-52cfa277f490",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519b1fc6-a288-47f8-995c-6f00a8b7b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494aa8ae-f926-4c5a-a3b2-026881694a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3135323b-6432-456b-ba2e-e67ca6178c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0e9bf9-89a7-45e2-815a-2f240a0b63f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71804b8-ab85-4fcc-a768-0917e8532097",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4465e2ac-fb0e-4e68-82c7-f72283f36ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3dd5ab-d72c-4937-8a48-2bad87609d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60ce2ac-7bbc-4b04-8eca-41d95dc0cc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79edd097-e9ea-4f1d-81c0-5a0b6c8aeffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8922a300-eb94-4abd-92a0-9043492a1026",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f1cf4b-3dd2-4a55-9b06-babd7b96b92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b18f7ce-1dae-492d-9a50-a212699ad4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb17903d-4d03-4468-9216-18f6557ae68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3628a6-7198-4552-af21-0a86b922880d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbbfcfa-c42c-4401-bac9-51048a619790",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5641ba1-95b7-45a6-998b-86f65c02ae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b8d8bb-faaf-4d5b-a82e-d8deb4267a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3652654a-c5dc-4965-b95a-784fd94e1ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "735f342c-7b27-41dd-8a83-91e5c3a0d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7c94f6-2fc0-4a7f-bbc6-5bcaa8e40864",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931b7b2c-3798-4ea4-a556-2884fa4bcbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c9dede-210e-4547-b501-f1b71d54b4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0820ebe1-5811-46ff-9950-cdce7856f224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1a86012a-ff87-4515-a940-81e5594c2238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af889370-2a0f-49c0-a1b8-ba527e1c24bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a4a4ed-c57a-4c02-9e17-5ead03a09004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc14afe-43a3-4cb6-bd44-fbfcb86b9747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d11508d-692d-4c14-9d9b-ad09ce767d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3ca306-3c75-47cf-a6c8-bcf4b7fa1e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36840ec8-ce05-4645-a048-07bd55e994ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e03b31c-4bd5-453b-b453-66ecf721f7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0c7b8e-412c-4a9a-87c0-77df072293f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e2a11-b8c8-4a62-b90d-590b6a02b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d508c-d1e0-4afe-9d9a-83cd15cbc853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1221f4ad-7432-4d08-852d-ed9b6c550d24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e161653-2161-430d-aa80-78b18d418fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f0f8c7-1f21-4c87-a7c5-21fe4567b72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e84dab-0691-4e25-a04e-dd25c9113d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d843bf-547e-41c5-9e95-30afe0877dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33e6498-0b98-41bb-848c-a32a9e5da206",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d259f7e-0ba0-4cac-8c3f-df6975ca09cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9901a581-210a-4a73-a1e7-3676af6b725e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b66132-ad26-4855-8719-d431631bf4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca02e038-7299-4433-bbcc-5d1beb486d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b708366-844f-4d63-8d0d-07120be3fa83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85d0159-2ecb-4e7b-8854-957e746fe4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c48a3e7-698d-44a5-948b-546b67487370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0862edd4-e7ce-453b-b68b-4e8a2482f1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b18b9f5-1b1e-4e34-b165-7d14d9a1e141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db7d77d-48df-4e5b-aa5d-a955db367a17",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfbf06a-7771-45ab-8e3a-4a4cebee2247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ded3c5-ad3e-4e8b-88bf-278d4f5b10fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5a8b7e-7d54-4d3b-9ecc-fa3380a508f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "584434a4-559c-4a69-973e-1604ab5c3b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4229114-a3bf-4a9a-9afb-c16d2ecb956c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4180d935-e7fa-49bc-a899-3ec700efbdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efce9b8-be57-429c-82b5-bb35addaac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d322a219-f57c-4896-a1a0-199399f2fbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2110fcc-c2cd-4b48-ac6b-faeb5d0f4dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c0bdc-1b6f-455a-8b57-c0a6a181bb09",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46f286f-e255-48dd-91f9-d8408c429ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300754c1-007e-4a3c-ab8b-650371615eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a49d24-dc4e-4946-9685-7c97cc32eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17fdf6c-8d11-4fb5-b538-b514d047037a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55196aa0-547e-4f56-a7fb-fc508dfad220",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09172f9d-6008-434f-9b30-4b2e2337926a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706d9585-aa66-427f-a918-a8eed42b6881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e422358-213f-4f9b-b67f-ade454ea7d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a60f2196-4930-4f57-99c0-f59fc34c1b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da83d070-1587-44e2-9e64-81fb28376c57",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf67d63a-d9e5-4be8-b18e-c4636c67ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80634fa7-2f8b-499b-bd3c-b469298c042b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d025b811-40e8-41f9-a603-f7bc5abd0992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eef6399-56b2-49eb-b4c3-4778db361bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a0f647-1ed0-4125-b5a2-d84e2fbaf49c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d56ffeb-a293-4549-ae07-7d8f3e20bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b604892d-0b69-452f-8fb4-eafac918fe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad7d389-395f-4969-a65c-752703ce9c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad40d702-e64e-4915-84a4-e7006b6ce948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b7e1ab-422c-4cd1-bbef-1a7067298269",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b895507c-ae26-4370-8b7d-abb47bcfe188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c067923e-f656-40cd-a5c6-af65b2275fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bc978e-e350-4fcf-885b-138ff174fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e729cf1a-851e-4841-933d-4a85c8998a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f8d32-4fba-4754-a899-980ec3758da9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b96b61-fd1a-4ebb-a47a-febe0bc28621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aa2686-bd84-488b-98da-72462096f788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77bd30b-7b21-4557-8076-17f2360d37cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4c5075-3a08-438a-bb91-559271974023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13373922-0b91-4bcc-8ec2-3629789b1bdc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11976418-12d9-48a9-99ea-e0cc3c203af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f7c980-c1fe-4cdd-8bae-d31818d444df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ffb363-ea6d-43c4-8a9f-f5530a93cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecbfe1a-7731-4606-9752-8dd83d033769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582cd526-d35a-4cee-b6d7-0d354f6b7f79",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fee4ba-84dd-4b3f-b920-a77d4597631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd070d82-aa5d-4552-95bc-ae17bfb6ec90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dbec01-4802-42ab-bc18-5b5b36e8493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4628214e-db79-4bdc-b4ee-ff026ebad769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9814d-c045-4304-ac2c-a00163ab10de",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fea34c7-ba52-425b-8b19-4f6d7cea07cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e66148-a2ad-4bb8-b8f7-4e53bcc594e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404b22d1-2c73-4582-9d3c-9cd1cbce9d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c058ef26-59fe-4551-8aa7-be455f981d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dcd2cd-aa2d-4c61-855a-b3a5609c3887",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd66001-7d4f-4e00-9d0e-71c5e325756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f99b006-3a64-421c-9aa9-395ffb0c3079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a040dd-7afc-40b1-8a7b-b1354be4984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a23814-7f64-4549-85c5-4429f75bcc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd89ae9-8da5-4319-b4b1-2d1432cdd528",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b6776-1d02-4f51-b9a1-c050b98b418d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99fd230-6499-40cc-a15c-abb67e69056a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8f21a0-4d9f-452d-94c6-d36e8bce90ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfa9f65-392a-41cb-b80b-dfaa969ee57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c221df-45ad-47f2-bb1e-4f7116fb580a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046c779d-82c9-4959-b74c-3a9cd73ebb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128afd96-eaf2-4677-8ee4-0429c283a489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56476956-f6bd-4ba9-a2e0-b5bd27e66626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3c8e34-7bdc-43e8-978d-66e859108c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3422615a-e619-4ced-8103-3c47df5ba970",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b2afdf-6bb8-4e52-afc5-c4471e5cdebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c444c200-4183-44bd-bab2-2c454b179906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea614917-3680-40d7-8c22-ae7f3c1bd0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ef5164-739f-4a04-a3be-40c845735430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a2be4b-e336-4bad-ae5f-b73efef48162",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d31b8-d7b8-4da1-a243-df7469f9645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2d3f86-80dd-4242-983c-a407e203a488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca754c52-3db5-4295-a783-554b6d8ef61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d08fee0-b8d2-4868-ae8a-bd297b37ff25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcd016e-286d-47f3-9456-1723ccc08d22",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf60d0-1beb-4a3d-a231-d5cab218dc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cdce69-db8e-4dca-9029-41babbbfade9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9160b9-8e97-4835-9331-dc4caf58963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc57e87-d31d-4ec2-bc9f-661b1fbfe0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c273ba50-efa5-4b61-a3fb-922ad4f9a781",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa2c470-71d2-4016-a94f-5fbbdaec51b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc99003-c17d-49b6-b831-66c569cb84b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5191ada5-212b-4b2a-9cb8-5eb0888ae3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "256637c1-665a-4bdb-9b45-8f5506e05594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43555098-3031-4ed0-92f5-f98565e67f2e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30e7a3f-1ca4-4d6c-9421-547b3888f71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80e0d0b-f87a-4ea7-83d3-37830814a885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99962b80-da96-4041-9de4-1f85c57b9e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31d9eef5-8786-49ea-a9b9-f952ffadcf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dd364c-dc91-41e7-ad83-9f7f9a147abd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a835f4-2c2c-4880-a5bd-3d40534ef900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ca8c94-c503-4372-a247-c71fa1cb5733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d9691e-35ec-434c-8b2e-e3e830379b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d78aadc-10b9-43c2-b65b-e13b4b371f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61028e0-a54a-467f-b613-8538afe19fc3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff945ac6-25b9-496e-a43b-49dc19348058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616ecc34-e670-414d-a5b5-6c3f358952f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b124bd-d9af-4fd1-a0ad-2f8f94be61a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7bc7dc-7937-406f-be09-bbda7e0f7cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a72eca-911f-4140-9d07-c560a679c89c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc4bf8b-41e4-4268-a073-35512e758518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260116c8-da69-494d-828f-f0d4207c0890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5f76ec-13c6-4f15-9adf-c140c538fe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "100524f2-f57d-453c-91cc-45a41363d289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61742ce-aee0-41d7-b1e7-9114c084ec1e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44574618-518f-468f-9011-07e0bc7d411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e6f2b6-c874-4b13-8e91-ca5d5d9e1b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee0e1ca-4c62-410d-a363-44f03889888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f102ff8c-2ef4-446c-bc53-07d1e0dbb064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9933439a-a5c2-4a8c-a4e4-f63e515f7240",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d23b8c-0066-4ac9-b550-8b73284192e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f61a23b-9b1b-426b-8dc9-9b4bbed09641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78df432-ff0c-4a07-91c6-39a5dc185901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a06a41ff-bc37-4a61-9f7c-499daeaa64f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32689012-d770-49d9-92f1-aa8f6ee6f8d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05934a7-2cda-45e0-86e0-c819dd4bc4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a90f365-8b7f-4c40-8d76-66c62607826c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e4f43-9f4a-4f9b-934e-ae6802f807a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7967e10-8eae-43c8-8310-0db7cb88eee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b783e5-0f11-4ef9-bbf3-b7d2da58ceb5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5054f4b3-3d9e-457a-a4f0-c984f36dc567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86afda8d-e1c7-40ae-a7d6-2446cbeb95b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d19b63-0222-4add-b6ad-8aac577e9ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ac07c5-866c-4925-b5a9-3f63f090b25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265e484e-afbf-4889-9d7b-f474dfd40c2d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bced8e6a-0e0c-479b-8a62-411460d58e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b72f49-8415-4b97-92a6-f67dec307109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dc5c9d-f0c8-40c7-a1df-dd481ac93fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ad7dc6-6660-41ce-ad6d-5f3cf8eb2ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30817de-c01e-46ea-bb35-f5e253329d3a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f992e684-5e03-4387-a27d-042c76e10dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4752a407-b580-4b7f-bfc5-ea7a71235890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaf132e-54da-4080-8d6b-7dfb4edc98ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8f7f7c-17f4-4b22-b177-23f23ceb1bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae351411-75d5-4bed-825d-8d77595c7017",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed208a45-b4ac-4730-80bc-b6fa51dfeceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597f9a6e-5f25-4f2b-bf61-e0195745afd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa264186-b9dc-4bc3-a221-6a148cd444db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb63247-59a3-4ae5-8ce6-614b16892d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b90f337-38c7-4024-9161-a0b864892d23",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb9d974-7621-4b1f-bfc5-fae89d8c769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c09466-9ed9-4813-950a-f84b919bf22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501c5db4-93a7-413f-b7db-7ef69d1e94a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2895b5-0146-4cf5-87d7-d8169541a932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c56792-c634-401e-a5fa-e0f52eecfb02",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13d012a-f46f-426f-b5cd-b4c37bc520db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ec21074-f117-4f18-9e62-c6c6fccf42f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46ea947-6fc6-43eb-a2ca-cef7b3c26667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cce45d5-35da-4056-93d3-de0779ba4d26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7207b97d-d800-44b7-9a76-10baddb5945f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c965e965-3d95-4c6f-9a4d-eda4260bf5df",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d424da-516a-4a10-a1e6-cf03e22289e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a2cc047-e001-46c8-b191-bc6ce4530a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e7607e-3cb6-4f18-bfcf-6ac5a24c2034",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05fee126-6592-46bd-93e4-dd8deb8b18bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10d8dfb2-2d8e-4e35-80ce-6bf6d965f328",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47ba41ab-a55d-4d8a-96ff-7cf0651caedf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e459a4a7-e35b-40a1-ac74-12400ba99dee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "335079dc-c03c-4e43-ab24-f1e2c574ee83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "845c5ff1-e8b4-41ce-9b7b-67ab196a3233",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "021ea897-6c47-433e-8e92-b3a3f92dcbed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2371254e-a178-47b4-b65f-76c34b4bcbe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e842dc3-a17b-4004-aed6-8df97005122f"
                }
              }
            ]
          },
          {
            "id": "fd9a448f-9942-4478-a157-53f3aeb7ef0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63d0dad3-364f-40ac-be63-761b9c1bfe3f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d2b81cc9-2508-4ff6-865d-efa111b4834b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcc3b78-8717-48a6-913a-368f5f8e898b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b4e648e-194a-407f-8409-5d2a7d16c1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15861c0-8e87-416f-9b53-7a7e4f38dab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11650056-b9be-45b1-8ec3-d56844e37cf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2dad9668-c543-4d40-8345-fcc8249ca3dc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "638a245d-a21f-45a8-a8b8-39a65435458a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "488fefa8-573f-466a-afe7-e832e6811994"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c65a361-e313-4a7d-bf7e-10640b90410f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47c7f489-3e22-4cf3-912c-f19873e9e722"
                    }
                  }
                ]
              },
              {
                "id": "5366dbd4-702b-47a6-8898-39adc88314d9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9ba982e-2529-409b-b0df-f1b576fbe266",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf8b4adf-5019-4f09-9c44-2c1966c364f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2507cc52-462f-4813-928e-7b8584544e08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce3fba55-0c96-44ef-a9f1-60223bc5f46e"
                    }
                  }
                ]
              },
              {
                "id": "0e3da72d-aa92-452a-916e-bd0905448548",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6116da19-a889-4ae1-b036-efa88a4ff0d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3684995-8a25-426a-b3d8-edb6415390fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cd4cb0a-1ec2-4342-876b-8abe0b863f8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc036e98-4c98-4c84-a1ad-55c16ba5e969"
                    }
                  }
                ]
              },
              {
                "id": "5385fbc5-395b-4bb3-bc7d-48507205001a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cef052be-c334-46d6-b902-2b1b8dc9cd31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "812365b6-30fe-4d87-9d2f-d3148daba107"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "826e0778-d629-48b7-ba2c-adaba39ea7d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ec556976-9725-46c7-89f5-8626f8e89a06"
                    }
                  }
                ]
              },
              {
                "id": "f403b682-0c26-4fd2-95e9-4e59f46e6d92",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "105afc03-f1d4-49d5-9dfa-116025adf29d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8045bbf-db86-4be4-be61-00ac00eeedf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29c39bd4-034a-4c67-8482-b755af377fb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "daf58c46-1ef5-4915-bdf7-2e325dd140f7"
                    }
                  }
                ]
              },
              {
                "id": "d7d3f0ce-e632-46cc-b00d-b7efbf8be67e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59bd8f4c-1282-43ff-a867-40a09988cfac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e742bb7d-5f5a-48cd-91f7-83186bff728d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0221ad79-cf72-4119-a65b-0f3ddc3bf470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08502e44-587f-44ec-a911-1903884a8546"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48d6cbfc-c01d-4d14-97be-dd230f96f77b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bd17ddb-d3ab-433a-8711-e3b1efb7930e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "987c530a-876a-4471-8033-052b8874cf85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25e2aeb0-2c38-4642-8d39-cda80d3d39f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "357cc7c0-e25f-4cc9-98ac-96738ae66ce0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c6003641-6cab-4338-9fcf-c46452aa97dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07426af5-5681-47fa-b038-933f4789ee26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de403785-227a-45b0-ae60-43fe6f5f7473"
            }
          }
        ]
      },
      {
        "id": "4cde11e2-3df0-4586-a8b9-1437ac295cbd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "206acbcc-3afe-408f-bd8d-abb8b6e74bbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52971902-6157-4922-a0e4-34c54c9cbb90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6eed2708-01b4-4df6-9c00-4000c14c4da4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e112cd4-02f2-440d-ad5f-8a29d5531677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95dd4bd-8b47-4ebf-9642-68b5a4cc55c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f277289-d8c0-49e8-8dd3-51eab5c039e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b617b7ed-8675-4a13-96c8-25254577d672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f8173f-27c8-40d2-a5f1-9c31099ca99a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea82e8a-a458-4b3a-aa89-80858aeb1080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0caf698-bdc6-44dd-9e60-8be23e5f71e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dda8c2-59aa-4bb8-a63f-736f8964a11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09e35f5-e4a3-4bb6-92d6-6a2c1ed2393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724e2f46-1edd-45b8-ae6b-1c63a10cbe0b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a8b00-279b-45bf-a6d5-d4de3687b6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab04d06-3d08-42b6-8754-dbc8c9dbc70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df22db8b-8d01-47bd-b2d3-91a74584ff4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a70a4cc-07fb-49b3-9dd8-120227893042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fcd1ab-262d-4c2c-a092-08b0bfbd64fb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4ddaa0-4824-4183-a99e-f6317b0f7a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47927401-73e2-4060-abf5-7f390954a9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604a9dec-3df1-4726-91ed-64d10e2a143e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3e98a2-af8e-4057-ab91-0248410ef771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864ee05d-1fce-41ee-8f3f-a342fe9a6d7e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeecae62-cf36-4d79-9f0d-a80a2fc841f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b26bdaf-8898-45f1-ac45-c81b0ba5e4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df73530-c8e9-4780-8368-e32ae9917dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a1e6e8-b9e0-44e2-82d1-76a7dd52b386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49bdb49-5579-497d-827a-5dbba19bae80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2933ddfd-f639-4233-8c7b-eb1dc1850f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620ca10c-48c3-4ed9-b3b0-d9c666e4f924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97160447-0409-408b-b809-46dd1e8bd8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4d7a30-d04f-4e82-9c26-978a25189950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778aa3c6-0922-461a-b78b-c896083d7eb4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faec3196-551a-4509-8a44-ded8eee13e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e5461b-d0b6-4376-a468-896622403eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f797f8-2e22-4916-a98f-4e4c23bb4ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0205cc4f-4759-4bdb-b952-acc8d62752fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee943a4-02aa-44ca-b452-5831c17a7dfa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5930bf1e-f2fe-4ce1-87b7-5e9cab000ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb580e2c-cc40-4d20-aab7-eed3527c218f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c2a0a-3c5c-4d67-8eb8-0a6b1f7d9151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34c1444-e662-49d7-93bf-6ff65936684a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d70ed6-d2ea-424b-8e02-d07bdc1825af",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba0d4d0-bb90-4430-94d1-cdf9e022e0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf4c4d3-40d0-4d3f-919d-bda80436c58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cb79d6-9a68-4d56-adcb-29a63bb75140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e108479-1247-4274-b3ef-43e0f7421888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dd920c-487c-424b-8111-5cd30e551a54",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b3e34-62f8-470a-9274-488d0d1c90b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91264e84-1865-44e1-a7c9-3b86525a4975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d83606e-b4b7-4f1d-a4da-ed871d6df159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29791ea5-fda4-4213-87cf-8decbc3a12a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acafd54a-b442-4633-b07a-0e9192eaf2cd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0242a1-f648-4409-b36a-9a87dee2be1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf8d422-c57e-4eed-91c0-7b8865d25270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08225802-a755-4296-be0f-4bc7e4a9b60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a50e7c4c-d805-4a7e-be78-5c1d724654f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8f4e2d-532e-4555-8516-d84bb4efa5ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed7338f-2753-42ac-9229-e65196453209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c80581f-a510-45cd-80b3-461f7f139705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf02cf8e-1146-4b57-9c4f-d244bb44478f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3750161-f2b8-43e8-8060-81d1db5fb0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccedc67-4688-4c80-952f-829b02f18061",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34bae49-6ef5-4441-97cc-01ebcc8fb9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9970a216-f95a-4c52-8a50-803b19504463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851cb149-4b06-4118-bbff-a861bf9d76c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edac9503-e813-4492-b0f2-4a6693e40d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df3bd62-cf7c-48ff-89db-6e8db0eea1c7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16e8a52-e853-43ad-9d11-c8af3ad4d38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6113380-60c6-4be3-9d55-ade17dbc9889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bd38c1-432f-4349-a93d-f2c47874cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc27419-d2de-4431-9990-b9a58702c69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d0088b-6760-433b-ba16-10ada8800234",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecb20f1-368d-411f-8d3b-bfcd77e7397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e37c7d7-6282-4b0d-b1de-4ad3ab32d7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57d2845-6375-4657-a2e3-019b2fb38bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58040f15-2c94-450c-aea1-5d68d04da6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f519551-57a7-42e6-b351-d4b338d2d532",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8961ea74-af89-4122-8d05-b6de7b8fb068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90f95be-f765-410d-97f9-b499565c4c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41bd392-e692-499c-b74c-8a5c1f228114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1af804-5dee-4c55-9b5f-83014cb758c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ad74f3-30c4-4266-9572-e6a730cc1463",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e76d7b-7788-4f9d-9e3b-b67d664fc930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce11df12-e954-4339-96b9-e1ceb7f397da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a242f44-243c-4bfc-89e7-5583cdd96a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "80556779-295a-43f9-b771-bd9d051b5872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726aebdb-e2f1-4000-a050-6710b9ea24e3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd85a791-7a1e-4eb6-828d-fad0bb109e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be80b672-0b8c-476c-90b2-c8c938fbc81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423891df-f494-4383-8f24-07a4b61ad512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84ffa4f-e256-4a91-9d1d-c4f12c78f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba349d59-cb61-49c5-8892-e8bdc92a47dd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9522814-3fc1-4c19-ad2f-bfa5669ccaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f68e62e-3416-43f1-83f0-4393d251010c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eeeac2-af10-4eaf-9c3e-4de11d2ae953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbfb53d-8027-4fd9-8242-ad0db9fff072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58905267-3c6a-44f0-b6b9-0a2f2d137edf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe19fd7-8bd5-4d08-a448-e63a57df3ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e452227-8ee6-4962-9675-cadf2870698b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c0c6da-99e6-45f2-b59d-47a78d092ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c1dc74-21ee-4366-b4bd-d56dba417809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f1fac3-0749-4c35-bb67-ec6d18b52ffc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae730f-7a44-4e0e-84ce-e76c95422d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6d0170-9398-4bda-b2e5-014aafd20e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041c835d-1db7-44e8-8e0f-72ff7d572bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efb4024-d90f-4cf6-9848-877bbcb293ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c8658d-3d5e-4fe3-8d25-691bcf75cfe8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f480e462-eba6-43ae-951f-5c3b6139abf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44203554-a941-467e-851d-9e204ffca8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75e20d0-1401-4b89-9164-c1d214d31651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd6ad9f-eca4-4f71-bccc-99d77cd5f9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b029d8-72be-4687-a1e5-d392cb1270b9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4384dc-59a3-4844-b866-15a42badb37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aaba12-373a-44ba-a872-628218817fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f2c909-9ef5-422a-b57f-ea5bdf57a87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f555b5-b88c-4107-a2ca-8d03253f28f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846cf484-8494-4a87-a7f0-e1ef12051f6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e24ff0-5446-4010-8969-420e1ec4785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7373d46-a19f-4782-9358-b5c8f256e363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f847e5e1-ec9f-41fb-9c86-962354e21484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d192acdf-be5e-4b23-b04d-9c56cb907ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cd39a9-1618-41ea-94e7-d448fcfe71ec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71610a13-8c78-4cc8-9a9c-7dff96800cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc305d5-0fd1-49bd-baef-dafd6463e4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f7b3fd-6570-4bb7-8dad-9efd074d2f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d842c089-fb7f-4be8-83e3-ed605b8fc36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e413d8b6-e679-414f-9173-206ae89c161d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e5cbf-06fa-4f29-9f4a-d6eccd556a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3782424-eca0-4953-9f6b-6df65f244378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e25da3-ba21-47a3-b418-c1dbb4751c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2a599c-4a8f-47aa-912d-c302160fbdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f784584d-b9c8-4057-a02b-95f46fdc0585",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d77b178-fdc1-4d88-be2b-3465eaed5dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14ccca0-ad9d-40dd-83c7-c2355cb01b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da316ea-2900-483a-bf56-97be6151fbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c10bdf3-702a-4cd7-a375-f803c5da6275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2159dfb3-9a57-44ae-ba24-a19b0f42d947",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8926d17a-4373-4c7d-9440-2eee6994058d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75842eab-dd10-4c84-93ef-9146fe171e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0de42e-027c-47f4-a8c0-8da6f18739c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a8f1a7-05a8-49ef-bd65-9ede26a34d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53557f17-0d3e-408e-a66a-bb3293c81e44",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd56e7c4-3d0f-4a01-b7e5-a8dd23cf29d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccf0d1b-437c-4651-af5a-fc6488dfc259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9306d062-5cb7-4aa0-a5e6-8cb29f46678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ab6987-bd14-4664-9d24-431f14578cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96123bff-ab91-4ddd-be93-848ae1cc06b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8c5855-be90-4b03-a5b5-17b2c5857415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c286ebc8-2eea-4480-bf6a-44fc3c415f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d985e66-d218-4e31-b4e4-ebe94a9ca1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d23f9c1-3a10-4f0f-aea9-b13e2b14e60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b770638b-588a-434c-acd8-584648d8d3f9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2e9b99-0cb9-40fe-999a-0673050d755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6279f27f-51e1-4918-aec2-bc1136779cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ffba8-659a-4ad4-a207-57693de23c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dd6a50-f982-43e9-8830-e0595ef21804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9175b375-e25c-44a1-92b5-6a7a39873435",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42061f4-8d11-483c-9a1d-e82781e67738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a21b14-c9c7-4db3-9124-cdadeed00fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2e2924-4774-493d-b66d-d6523cb7f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50aaaba6-15ae-4eee-8623-4c49709aca24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb85e18-f68e-45b7-a215-b82add709eb2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfad8c29-7cac-4a24-81e8-22505aec1590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36027809-a69f-4ad4-8971-a646bf3b54c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60bfeef-93af-40ba-b633-c52df2e5e108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "296c007b-10e6-438c-afd2-e7c5ac7b719d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd4b643-8f71-457f-a5fd-0f2429bc0401",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4c726f-9742-479b-8517-7293c04633f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59eaf9fe-1f93-40e9-ad26-c222a0eeaa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ec0b71-9534-4198-83e0-b05cfa2eedd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fb5e62-1e0a-4689-9195-a21b6418e0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82431e43-3601-42c3-ab34-3bd13a25d580",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32e5a04-f901-421f-b836-40a6f708ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3c8196-aa94-4f8c-978f-d89a1194399d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73614a6-7c92-4d2a-8d79-5ba2529cca04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6182fe22-1f1a-4d08-bcff-3861169ed382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1622a964-ce05-42d4-9ec7-6c528429d231",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71056457-5fbf-433b-880a-c7fc85881090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb8ccd5-6318-4b15-b110-99933b43efa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f799bd1-fb1a-4f4b-a50c-257438c36750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd29b98d-ed14-481d-b784-03932fc33507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152fa0f3-aca0-4e5d-adba-65e9446efaca",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed03337-4424-4465-bd17-8db762f8a64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4146d0cd-300f-4b06-b16a-f74021704f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7296789f-3947-42ce-b94b-66cb66ba9fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a9016e-114e-46b3-80eb-49e8cefef228"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac3af5fa-1634-4ebd-82b1-936670d8c68c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d1d2def-fadd-47ab-85dd-2970f4e09c57",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792cf1bc-f27c-490a-b291-d640e4117767",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32f7d1e5-5bcc-43aa-8ad5-cbfc6d494065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56e3f8b-ab64-460f-8a31-a2af8cbf8b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73f970fa-e84a-48a5-8e58-778bcc076698"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04f2c54d-2adc-4eb3-9942-204872561f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9da0e31-bf3b-4e27-925d-c16f5cf0b1e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f27425d-c166-43e8-ada1-c370de1f8751",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5c770ed-57bc-4e11-9bab-478f89a94f12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "620a7a90-b126-4574-b36a-265d3426f96d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2fd0ee8-2ddb-46bf-841a-cc99b9b4858e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "892dd8ef-4719-436b-8ecb-f4c0cc19a02b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33fee6d1-2a5f-4d9e-ba96-766b3c866569"
            }
          }
        ]
      },
      {
        "id": "a3f4a94e-11c5-4803-ac34-04ba1fa7ce43",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e4b46a84-dbb7-48ec-a530-c1d5bce573cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6626e854-de5c-4d0c-b599-b83c923d5192",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab36cbbc-297e-4133-928a-7c1e56e87291",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f714a-4662-4c59-b4bd-b99a321cb35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf78a74f-8812-4dad-bbfd-7df1baf4a79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b28e9ea-a099-4709-84f9-c903f3f8f766",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaaad19-f032-47e9-8db2-d4e26e208ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd1114d-3f4c-43e8-bd8f-90cac76451dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a117eafb-13d1-4d4f-88f2-c15096d6a651",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bab113-ae8e-4feb-b7c5-58df2f505d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f79f5c-3c87-411d-a4b0-17889d49692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a88be87-ac63-498d-b7d3-9c2c76ef3ed0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdd3247-b31a-4753-9dbc-e89d4336a959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883b4e24-0f96-4a5d-a9a7-9861a936647c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7433c7cd-5854-4768-974f-6550b267294b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5c7039-5fae-49d7-9e1d-886ccaab2023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce566d90-0bad-4cb4-96f4-43936fb39d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37c5430-f279-4ec8-92b9-9322da171e97",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48673da-14ed-4982-a9a4-a175a02cd8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411c343c-ff0a-4401-ae6d-69574150f460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85036bdb-d2c7-49f1-ac1c-394784074a70",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3df6c2-a589-4ca3-a434-f42d059a83d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c5ec61-50d0-4e9a-9b21-8443a4ca4c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b218e8-fcc0-4aea-b4cf-05252ad95374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64461857-803b-4397-9c1e-7ca0e8f066fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6fcb8a-b083-4365-a08f-817299c4113e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f44e4-3e18-427c-8a21-7143571bd4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65ca867-e0b8-477e-bc20-eaeb9f3ede1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e62036-b234-4fb9-9ecb-a3866966a9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6e4831-7cec-4025-bcea-0d622263c5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc58391-a831-4acf-932b-58279f32f771",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3c0dfe-2a80-4cd5-9949-a4e344bd6107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d083b3a0-0708-4504-9174-4ce46d0f461e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432a0b5c-26ae-4270-ba7c-4cc483d5567c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d42687-d645-4e29-a1d7-ac29d768a0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bed654b-ffa9-4e1a-ab16-6d53d851df62",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704b73b-9ca4-4b1f-b3fb-338ca1b0272f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2cc8c2c-2714-4d18-bfbc-7de1f6123530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac247d9-7a26-4924-8216-5ee2adfab7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4b87b3-d256-4598-9a1b-28361c25e62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49247ad-8216-4831-9b52-ff33ccd62a18",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7ed059-fcdf-44b2-9e89-988944f79a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fef86c-6f31-4e3f-93a4-3226aa8de2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26fc9cf-3bbe-4c60-98c5-4331db3d1a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aae3592-676f-4055-9fcd-e7073870c5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332537c3-ce03-4339-867f-d3ea07757308",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2f3550-4fe6-4c63-80e1-87e96fe6207d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7d8e42-1ac3-470a-b6f1-309f203cc6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00569d9-df69-4b7d-b499-d074373d9af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa47fc6-dd9e-4ab9-9560-877a98357293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce2e03c-75bb-4b91-967f-e61a1e76d29a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbc77cf-e8bd-40cb-9989-1f32ab21ab30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29f9bc5-81aa-4448-859e-263141b874c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa5d15a-9e03-450c-a57d-69c059f2caae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c22c44e-a530-439e-a624-b5c6e64155bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e918644-49db-47ed-9289-8e3211e21373",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155ad1c1-df31-4a3d-a2e5-1d6dfb68b536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b2d796-b61b-40f6-b291-595138398ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37c9a8-837b-4362-8307-4436586da0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d9ce64-d97b-483c-8891-0efe2ba6b5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec478fc-51e9-4219-8052-58bb7b563393",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4089e91-9e0f-4f22-b239-2a69cdfdc0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8015bd-3812-4923-af67-1a1a75ecdfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415328f2-349b-43b4-b1c1-17dd73941c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0087b8-4ad2-439a-8683-fc0d44fd6746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d476b2db-994b-4612-960a-3cd30cde8cd6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b9f1d8-9fd6-40ed-afc2-8589536fdebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2851499-b184-470a-9fe3-44b7a808f894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8ae1b9-bdd4-40cc-addf-b291cdb83aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ad3fc6-6172-48d6-8edb-06555b93e4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f983b06-290c-44fd-b541-2922a700d1f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9313662-2a0b-4cb3-9790-929fd597346a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb52d7b-6175-46b5-bdd8-548d14c9a15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6effc869-3743-402f-bcf2-b4d2155b8f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376a0e77-2565-4b38-8d44-78a7df4778f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ad7b4d-82f0-4a6b-aa13-c9e86734e9ca",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b66c70-ae90-43b5-b5b4-3779e39555d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2659b132-5567-4062-ae1a-60fb5dea8de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb3b916-96d4-4f9e-8f57-580b5a01d27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ea9c57-cad6-4f06-8adf-cb2a43bad246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab30f6c0-74fb-4e43-b612-8fdc7f2ec8bb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955d1457-a441-4c5b-ad25-21716de7c87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21a51f1-2a92-4419-9c85-5aa07c3f7d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d22c34-e9f1-4e69-b539-38fb90b70c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0972e3be-0b15-43ba-a87b-101ab6d954c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bb2bc6-122f-4103-8666-e27a87930ff6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8274f6-b298-48e8-9491-a5662817f4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2746b614-ec2f-4132-a488-d75e7543c8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cc77d6-9860-4b67-be5d-97b75f791a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037b8951-08f8-4c6e-bed5-8f30356bee23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eb7c9d-cdb9-4004-b916-f329f0e89b21",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13823139-cbf3-418e-b3b0-8565d7bdd899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65d9d49-5443-4e40-8809-3bf718e36b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe6cccb-edfd-4b39-8370-04b0c4a43736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548e3121-36dc-4894-9144-3995732ba942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ef7db-ba27-4c82-88e0-570b262b458b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db1893-f8bc-42e8-8067-47fa29e1045c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aee370b-ab15-48b6-a6ee-eebf24da93bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d32c562-4061-4714-b9f2-742f0b7b4202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3faaad50-71c0-48fa-9818-47226a8d197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83811f7-ffa7-4b93-8824-78ceedfd0c11",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc476e1-5d48-40fd-a9ec-6061d0d73d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472513c2-95ce-406f-a346-6381d4011141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc9c6c-5932-488c-a7a8-a3f13c22090f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d0cfba-11ec-4706-a1b6-751037a2672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e6659e-4c17-4c2b-adf6-d611fa54a634",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bcc1de-cd4f-4bb7-a5e2-96ff810733ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8397c10-715c-4403-a85f-b803aa3c0828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d4db72-6d28-4050-b9a9-0f0e6043493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d92a6e8-f859-4d50-b34b-6ae53409637a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba68526-c141-4e47-9f5b-f309b710f8bc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55ebe44-8641-4213-92fd-5ac1d7926025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44df553a-80fb-4ae6-87f4-28789190a207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ed3ca-7224-48d5-ac02-0dd9b91f1ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b747b2b0-6a5c-4fe5-b0c9-3639484eb384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb8ef5e-7618-425f-930e-02641560167f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d509e448-2ab8-4ae9-bba7-09a8709d75f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726ce1d3-e2e0-4e87-83a1-53bf2dcfea86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ab227f-403d-4cd8-974a-8c7efb9ce63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef92957-ca2b-4e4e-8391-256f6d0e028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1680a2-123a-4c1a-8611-b113023b6ab6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1791a9b9-ece1-447a-9a6e-780a18b198ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c57ad1-9efe-430a-9356-b5bdb2369a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538c0f4d-a096-43e1-b6d7-772095a4fe39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be1fd96-022b-4f0c-8323-d7adf4725d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ace5520-bdaf-4a2d-a075-5d6f9e3dbf6a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7c597d-f9d2-444b-8221-111d5ae94cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdae100-ef88-4128-aa38-1c1278c207e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8320cde-ef2d-4ed5-bd7a-156d70f4e192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d4443a-0628-4559-82ce-d8fda1f47315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307d8559-511d-4bf0-a27f-12afc0892696",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c02f336-9131-4053-b0c5-93274c3a6d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec9956b-7b7c-4ab4-859f-c60668ca7af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c32b946-be9a-4fc7-9a1c-3f5d83bb8b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce78773-0378-4866-b546-f860b9769344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7b9141-a739-4d95-b570-fd5b9988504b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f645b49d-8cd8-4ef9-879d-6af15afd4fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d382175-8296-449c-a8cd-dcec1ee781f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f87cfa4-aaa2-4d30-8341-a655fb83038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675f4b73-355e-4551-b25a-6d90d8050d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1bc473-afc2-41ad-b4b5-aab4423268f7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f39f898-6e9c-4a96-ba09-aa9d83b64eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f05d74-11c9-430e-9f86-3b6ecada5167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829a350a-7f4b-4312-aa2d-2ae8f3325670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce62b19e-edbf-44cb-b2ca-6a5c26a2f830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601a7cc2-e159-4e7e-9824-14178b301919",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9edb3-1cda-4658-a709-307adf690a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9865933d-d517-42ef-b96f-ce88ebc7c852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f066d87-f23f-4688-867a-f30fcb814920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a1a798-e79d-46ff-b4b3-db3162d317a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badaad65-dddc-44a6-bc43-7843357dd4a1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b477635e-7b68-45dd-a80d-bf4f0d0488ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af531fd3-3ae7-459c-8aa6-12e8ac60d26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ec62f9-bf9b-43b3-8410-b40e14422755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010c49df-3fb1-4a0a-8efc-ac3ac3befb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c77b63-e569-48b9-9f70-34caccf5f6aa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013732f5-cce4-40dc-8d74-dd92ba1eecb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffd506e-b205-4d93-ab19-ff9baf581a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e866b0-07e1-43de-b8e9-086d2f98aa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d69668-2568-4e29-8c5d-de65a54fc269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e6ca88-0212-4661-87b1-29296044c69d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba8600-34c9-4586-af79-bdc28fa430f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa619cb-89c3-4002-8dfe-c6055540338c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be5c0c-6eae-4e69-8150-3f63dad0ef5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ebe0a7-f9dd-44ed-9d5d-77034abd3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a461aef-ec69-44ac-88c0-95fd36ee0701",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1f817f-0663-4aa6-ae28-027f724380b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d917a8e-acc3-4805-a2a6-8f374c8b2c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cce688-4eb6-4aa2-a1db-44eea54b95e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeff5b38-f8e0-4ebe-b86a-23379bdb2c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eb205e-e8c0-4c69-9f3d-3c18edebad1b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fbdc13-e79c-4b82-b034-1a496b6c9480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7e2700-4727-42f0-b6fb-548d6fd10fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33ec9d1-0889-40b7-a500-eb23bc4af968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1801978d-5d45-418b-9559-fd40f52c7cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96735a19-b2a4-4d60-8492-d66b4e08f828",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eabed6-470f-4f8b-b979-ac6051c3172a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a67828c-7b20-4c8e-a122-2a0e2bd21e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef93b38-0b0e-494a-957c-8fa74051f39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5393b5b-f5a3-4d0b-a542-36e799494b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97534a9c-53f9-4ea2-9604-c3ed8b6b4cd6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3758e8-980b-46f1-86f5-2b38b5302f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10ab6ef-3864-4d5e-8e07-ad1644352894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525f12f6-672f-427d-879d-34040fec01ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a143ae-bd6f-4822-92dc-bf72c4df89a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7049151-faec-418c-ba51-65438ad2c658",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b5daaa-05bf-4810-9e8d-92268801130e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb54daf9-d5bd-4c89-abdd-a5eaf4c71fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e47533-a5f4-49c8-a1f0-7650e5ec3458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575de5d3-8bc2-431a-949a-3f72623758dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1966b140-6aa0-4b00-89f9-13d947c1452b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9f1fd4-8fd8-4a3c-945b-8de2124ac857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c448b4a7-4203-4cdd-9c52-baca8cae7ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92a26cf-f242-4142-98c3-29bc19885a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6216b99a-22b8-4cab-ae6f-63c201656dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fada545-fb54-4808-9f30-be94e5b8f63a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6509a94-7518-4155-a5a7-8ddd1ae7b5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1599857c-0906-4329-a409-9d9689e09270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8805d1ab-afac-47cb-97c9-84eb37ca2487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae3826f-437c-4f7e-98d7-627ed51dc43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1108434e-2e55-44a0-be8b-cc51ed2a8f6c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5d5f1d-881a-4743-bf78-da11d26a8f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6505fa-e2f8-4ffc-b271-cc48b33aa368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9d6bbe-c0ec-41c6-b610-2db662128bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412c6a96-c285-4f01-a022-b449ad2e7e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af2f9d0-d72e-446a-994f-df2a0d6f9a76",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3426eb70-7747-4f6a-b1fd-409aa3a3eef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc97fad7-f836-4daa-863c-a3f9d69f25cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb191a67-8fd7-4a3d-9e9f-d03720512c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98a34d0-ba16-4b06-8d3d-a0be5e857da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da1003d-ece7-4663-94bd-97f758de3c73",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af762d81-9e80-44f7-b821-a019235a5ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf19843-e9b6-4b2a-9879-93b32853bff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a039f4-95c9-4c75-8567-2a2fdf33d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cf9bb1-e140-4bfd-868e-0200ff3e8f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c6778-a318-48b7-9f44-f6d48370c503",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501cb422-d0a9-4572-ba78-a4e950429656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc5f7f3-a120-4365-9b66-850cffcc2f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e031a5-2cc9-4fc5-aed0-d503c18c3e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325a61c7-edfb-451d-816b-a97cc53ab916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc28e52c-9388-4c99-8110-bc557f7a74be",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfbe9c5-3e65-4e3b-862c-9419a8c0f7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2156392f-6828-454b-8d38-41dab3368a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0694ab9-36e7-46dc-99ab-d2e2b41e2748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4346db-8f1a-4435-bcff-e0c79505a17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca33ae70-51d1-492d-86d9-11e805d502fc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328f7da8-e9ee-4173-9c01-2ab84a7c01b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4972568c-b3c6-44a6-b14d-86b67eb7a7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaa8bc5-d498-42d7-8deb-b46355ece33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddbaae6-58a0-43c5-875c-ef689a3dcdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f60df9-e8f5-4791-a9d3-b8dbceada93e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e95fa31-f63e-404c-8cce-cd11ad962dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a0e74f-6478-446b-8edf-1e89862d47a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b418b30-85ec-448b-a053-cbd519774b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf32f2b-1fe5-4c73-ab41-e05dbec054e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2cd0c1-b226-41ac-9479-992193dfedcc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80ee451-2efb-4b87-baa2-d78d85010b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3412cd8d-cc92-42d2-a18c-7fe5dec0654c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d0cd5d-641d-4580-bf16-dbb597d0295f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d144fca2-28e4-4b9c-aa56-8f9259e4b5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02110606-f492-4e53-9672-d1bd915b267d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3773b17b-e454-4bfc-b919-b7b703ae39ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8413b6c5-02a6-4a35-a332-eb66a800a2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6bc0b8-0e00-4382-b426-a4e5851b0c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1bcdc5-18e7-44d0-9efb-430136889a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22124d8c-7597-403b-a3a4-610be7b20574",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de514b25-6f3e-4f2d-bf08-6151143446e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ddb895-1ced-4381-b815-0f20194cad14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08c93d5-5467-4bf6-932b-01576e0bce6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161dc16b-5982-42f2-9d30-1769aa2aa512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea584691-ea22-4eac-b82d-9a6842912145",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8142ec4f-807c-4100-94cf-6d04fedd7953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be9d9cc-d62a-46f2-8733-c8a78afb4818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b14f0f-0ada-4dd9-bd52-abdf740c668f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4babdb11-fc31-41f2-b8b5-efa319a358df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c611b166-30cb-486e-a462-752e215fc5bf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7195903b-5623-4e19-92dd-09d7562751de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f27ceb-e0e1-421a-ab54-4e8220d40d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0341fd-e7b5-4411-af01-555153d3fa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95429979-50fe-46c9-97f6-a99c42cecfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db09e65-f459-4fa0-bd91-908cc7261210",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b423a37-86a9-47d9-ada2-9a0f43b58665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed120d5-97c2-4a19-9e8d-828ded4a0710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80aa069a-3215-4b40-8faf-5e791b72e81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be22c89-d8f2-4b23-97bb-957fdc412084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c27587-6c22-4d17-9ec5-718867cafa2c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1978df-8257-4446-9052-2a6b15db4257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6f3c02-3d5f-4ef9-9896-801b3cb779cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd958554-5b27-450e-8d14-d58ecc865f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fae4375-0847-448e-92f9-d7a14126b883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb03290e-2c6f-4e53-b06f-15853212b9ac",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608c1ddc-6b7b-4833-9c8f-2108d0c8b64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c404f1d-904d-4a8a-9c30-99d8a6dd8ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbf438d-67ba-4ce6-b540-46a5a41cab8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1f301d-c119-475a-ad86-59255a67ce51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27869f1e-1f74-4330-96b0-959811352d11",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2061bd-13d3-42f1-ac2c-7fa474747e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c227875d-f1ba-40b8-906b-9e8709053f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080b366e-025a-4b17-bd08-40ae6e644b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d573f29-34bf-4ce3-944a-2778c98ac777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8d1525-51af-4fc7-9c9e-c5b6e81f79d6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d35128-3ec4-4284-965e-25f911b51427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c4f5ed-f5fd-45b2-bc48-b7777120bd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e841b4-cd72-4769-8c76-a75dc1d747b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23168f1c-49e8-48d3-9f43-f61f0da3fdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546db72d-cfc0-4a1d-851f-794754aac575",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5863dd67-e164-43a4-bd05-f87076d397e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c99b1c4-e1f7-41f9-894e-a457393bdb5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4009fc68-6ad8-417f-8d8e-26df9b5f2674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb65aa74-56d7-4707-9cfb-35272103e7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55874594-de76-4829-b4a0-3add0d194df1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58ddd4a-30be-4627-8eee-5e90fb6c9ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e1df0a-e9a1-4e06-ad36-8fa5cf164b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb20db0-3b7c-4ba0-8c84-790f008840db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb2dbf0-976b-4a42-b4ac-e53cabc8abd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d3a4a2-084f-4ee6-a9e6-725eabb5e661",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac3bba1-cdec-4d9a-93fc-8f8029929f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2277d84-9dc0-4543-90d7-14717627c0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b95396d-f8b4-4ae5-a633-1ba105612da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe0fd28-db26-47bf-af7a-7b390842495b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83abac4-dbbe-4b5c-ae63-967464bf99ea",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c992947-e5f8-415c-b9ce-527dfbcc611f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1c0cdc-faf5-49b2-b898-df0ef8f5d589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44410666-34d0-4cdf-a8df-4f74de974e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca87474-face-4d1c-9397-68104e48f3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff840557-583b-4446-966d-a68e7720b350",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2042bfad-35b7-4543-96f1-612ed52879af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0116773e-ce17-4015-a65a-904bb0730ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3897891d-2af9-476d-87e9-f25cd6c866d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f571f8f0-2f12-4643-b335-ac85b6af4947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8936a03-2306-4196-8793-fd78bb5d9c26",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0187522-bc7b-4f2a-beac-c84f2b6ea3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdddf28-c859-4204-97fe-2782a091343a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee8886b-0a20-4aca-a10e-4bcbc6f187e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1de323e-5719-45bc-975d-15a0eeef3e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ef61e1-12d1-461d-82cc-9023f07ae584",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f6f467-84b3-4345-bba6-387b5163eb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e749789e-c357-495e-9f73-15f164865771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc7751e-64dd-4fe4-9b7a-62971b6e4612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48379a2e-a638-4dc1-840b-5d51014c2f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9916cc-4632-4c23-8f9b-a2bfa26cc354",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7020191-4fad-4a2e-b56c-80b012ea07d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "046841ea-6b62-46e7-8248-d9573c71c15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5546593-90a3-40b0-ae5c-3f4d30c74b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b536672a-a116-4b2f-9f75-2a4d730f1ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4884e4b-2c1a-4650-824f-9b8f7f590577",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a790bdcd-2311-44ca-a3b9-1efc6f6cbad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4122641f-85ad-4d70-8738-3e2f4d5c42b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819a04c5-5bbe-429b-a628-67b1dca4ad93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad15c19c-b8c5-499f-8195-b6dc78dec009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3162feae-29bd-452d-9ef9-42754d89be6b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91379d3f-9145-497c-99ed-763cb0b57642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31864a84-1f26-4236-9266-d1153aac42b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfb214-62d9-403b-9c22-83271a2c3164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c14ab41-0be0-499f-8718-c0c2bf64d3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99891ddf-895a-4090-af16-5eccf3136052",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8310eebe-5b09-451c-8c99-02783f1ceb5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0df5565-6371-4cb9-ae81-0d87daab0bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f431c09c-1bac-4cb7-89cf-5b28d2b2a9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d5efa4-6183-4646-89c9-a5b176d4b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3430a420-37fa-4632-a2a7-9145e274f319",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1d19e6-0759-4a39-9bec-bf1ad5b261d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78896177-8833-4e53-875d-680bad6b2017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab21191-b6d3-4117-8c53-48b4ca9c9c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e8eb33-cb81-46e8-97e9-de1ad9b45cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302409b0-3407-45de-af17-c3f71a2a2052",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2a63da-e510-4867-9779-9d00f8f02c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c237c163-5be8-408f-ab4b-36263e931a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d89ae4-c3f4-4447-8d20-7953e1f04c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69105b7b-db18-4ffc-8f23-44cbfed4e881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1463ab75-8a5d-4cae-89a6-c5bd8f5b69cd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f39239e-9d94-40f0-8c0f-220873949d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f68de3-4aba-4364-af1b-1f8b0291d879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed96d181-3336-4295-97a2-5c87d66c97ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9213c60b-5afc-4a30-8114-60a9647737e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80650c80-9cfd-490d-b136-1d580cded9d7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa38d21-be70-4085-a012-c54018170593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee4a829-3d28-4395-8c3b-177d9fca07dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7422b272-ae9a-462e-9ad1-8bbf156c2183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820b7f8b-d96e-4d83-a1dd-b205c17ee787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4515133d-3b09-4b31-9513-2196dd38ca2c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43500036-bc8b-4599-957a-8830fea433cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfe167e-8ccd-404d-a40a-e46cf2636e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac0cee0-a9dd-4a32-9177-b82824b9fd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3f55a3-2fab-41c9-82d3-12c7df13978b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e1d90-1040-4d5d-a232-ba00f4317222",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c81724c-ca98-43ed-88c3-396566611f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29c7eee-ddb4-45b2-9609-25226eb80d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6ad8bd-d623-40d3-8baf-6a498be35d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf1648f-db25-4909-be7f-bb56510c7103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7d82aa-2e9a-4109-bba7-2c245a3556cf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67e2002-8ffe-42c5-9571-adef073ecefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd88985-61b5-4057-91a4-c1bd91d7a9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb979be-8ad2-439f-ab06-1c579e2452c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97f688f-4d27-4052-a9dc-563724d1a4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5ecc2c-a6f4-42ca-914b-1250f2935f72",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49e1cb2-b6d8-41d7-a97e-39bfec2fcebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e3c101-4713-4147-a7e2-81f7faa7940d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6946cca7-94a4-4c1c-8aea-8d1819c0ab49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770e8279-5190-4499-9949-b03b406c1e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30308eb-eb2e-463b-854e-cf8c993c3684",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fbe23f-f201-4891-b5ac-8ca5c422e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d79f49-4125-41ab-ac2f-abff17fdb51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21d5fa9-2dfb-4073-a566-4cfa3cf8f095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1562115-64f4-493e-8abd-e9f3c8351573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1a911d-cd7f-4ded-b42a-0f91b1f6267c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba384e-4dcf-4e0e-b6c3-3e06d23235d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfd86dd-7fe0-47e8-8434-ba1d6506c2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc944bbb-987b-4552-8da0-3f05c1b52ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c1fe0b-6e6a-496d-8458-9c9745ec2db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c05dbb-f5ef-4123-b6c3-1d7766c181a1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43598f8e-0c90-4107-9e5b-4c57ae0a2e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551cedd7-5569-400f-b92a-7a8629de0a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d35e080-7a6b-4061-8251-e01f35f9f192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebe297d-214a-4892-b610-999851d684c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4237f709-3457-4036-beaf-e9017763d1f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9879ca9-574c-4ff4-88cf-a1e46d498277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "129b3dc6-52cf-433c-9a3c-73e74442f054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48955a3c-dfd4-4193-ab53-84f1c26be97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49a5da8-9b88-472d-9926-32f6c121c29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5132cc08-0222-45d9-88a3-f9ceba942707",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2b44b2-f911-44c0-b7d2-053194c3b47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf881cd2-fa6b-4ef7-922e-094eababca54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e180710f-7047-436f-9519-58229353da3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130feae7-ddd1-4abe-b10a-0086ab17799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902e1bf2-e08c-496a-8989-a75d9acafc84",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e532e759-60e0-4581-a4d3-4ef55004dd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec2727c3-7776-47c6-9804-73f1ee83b2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d213ec-6314-4db1-8d72-85928fc4c28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f57c174-05c4-4aaf-8caf-73a39d65458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c902874c-e120-4cc6-8577-c7dbee906dff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3810d44-26ff-4b92-b071-8cffb1e2e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867bfc1b-7455-4da4-9425-948fceeb64e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069ae728-4d79-4041-b9de-5c394de65a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5e65d7-f820-400b-b0eb-5ddb4cd0eae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3f927a-4c76-4b73-8d54-cbb6c7c118ef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef11642-2b21-478f-bc78-405a4a061328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489a5944-e4ef-434a-a501-60e4d4ded8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9410fdc1-3f96-41d6-96d3-72e3eada8b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58035559-3272-435e-adcf-1f2b66a40e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b99d366-47d1-4667-93e8-2554e955b469",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7b6473-3cc9-4723-af29-4b4a47d10627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd5851de-5b8e-4b3c-b069-030475326b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af9e47b-f244-4785-a1a8-076ba9f3de01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7345985-78c3-44ed-97bc-ac9360121796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c06ac8-4e1c-47a4-b96c-a7c5ebcf815a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58d85c3-ca7f-49d7-94a7-2a855c5b7399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3b8de0-f3bc-4c46-a517-324c8510d804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd21aa4-f44f-4f4c-b883-18fcf250f836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98dc988-b343-4f8c-b9b3-a273d626c109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f7031f-0e01-48a7-9105-a5e25ffa3fec",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54d31e6-5bf9-4903-acf9-0861e8bba952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff974d3-a732-40d8-a961-4ea0e2912064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c0d8f0-25d2-4f2f-9540-5f8e430efb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d4b640-2c49-42f8-9fd3-606d0c374241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c53c39-871b-493c-8a81-3afc3e2251b4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072a9b1a-60e9-4529-a6da-3c64ea9ea963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7548f1d1-d2d5-41bb-856c-3aa95b5507ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37998ebe-5131-4fc4-86b8-45c4ec946289",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707350ab-b8d5-432d-90f4-554528ede9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b8a1bf-b76b-4cff-825e-03358ebf1c9b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca7f410-837e-4f11-93e2-f78009c99b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7b5e70-efda-4922-9be5-ae7b575f586f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86727446-c830-4b39-a83b-440569e7e980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8a2a33-d81d-4f06-b6ac-e56bf1424709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68796800-a01d-414f-bd2a-2e125bb356cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114c2cb6-15b7-43e6-8543-97e811ec29a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2737d409-6104-4f4b-9b4e-c54938597361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5347a5c9-da8c-4aac-8a4f-dc77cc4fc48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78c8ead-46da-42ff-a17b-7ffe98e4b5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395a9e2b-19a4-40ca-8955-4552ce765994",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3f18e5-7611-41a7-8039-8dadcaccf7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bde1b61-a474-4a09-92a8-93362ab898fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d30ff5-90e2-4d79-bac8-22cb1c4705e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a004f09b-2787-4b83-a24c-ebbebdcfd5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6b62de-1367-4c34-b66a-22f3ff01c4cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b40362-b7bb-422e-9bef-ed410aaa6e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192d4e0e-4f68-4025-9ceb-ef8f88458528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deaa9a6-af26-4eb4-af90-809f573ad5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aa400a-e8ab-47a6-9451-4474614e6b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3ec6d1-cb3c-41b4-b23d-7a78aeef64d7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c58db9-5ff1-4a32-82ea-795416dd8580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f91939-0133-46b5-9620-80fd4fb1f35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca54a2-4f1b-4643-ab08-732445324978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6f61ca-5550-4d07-87ff-d3f2e4784bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f641bc9a-af11-4246-be06-d39125e0776c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7912ae-0680-4557-8baa-b2133676bde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159622db-ecc3-4ebb-a813-fa052c8c1361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a368db-1ac1-4b16-bb4d-22d6bc01e858",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d9fe7e-c9f8-4f06-ab10-fd5e3dac29d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfd470a-2cbf-4762-b923-e781ab0974fb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e9fd05-6a27-42c4-a0bf-d5e72a983d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16302b3-6b69-4e31-ac0e-daa74bb7a44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddda843-6f56-4b1d-9cf1-79555dc3d949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58619fc-fb1b-4f8d-ad74-390cae6c790c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a56c6a01-4e3d-4d57-8cde-208c51fe9112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0a4f5ed-2921-4d37-a26b-0a95473b9d30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde4090d-5277-47d0-b5fc-1483b17f046e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9abcd251-217e-47d2-aca2-a97b7e5533c8"
                    }
                  }
                ]
              },
              {
                "id": "348b5a8b-bc70-4d11-93f6-cde20c2568e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9ebcf11-3620-4fde-b6d0-0c912b640810",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53989be-5ddc-4399-ac96-0c194afffb88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a088687-6647-406e-bcbb-cbcdb3ca93df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615924d7-4f03-4373-84ff-25c1a1f8e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71de7999-00d8-4282-a13b-56b769ca79b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aaac465-b7b3-4224-ad19-181bb479c3dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c4798c-2cb3-4ac9-bf7b-fc5eccebea45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b24780bd-860b-44fc-9ce5-4161e01da01a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "731a0b37-6c77-43ec-a96b-8806aca46b2b"
                    }
                  }
                ]
              },
              {
                "id": "9d70355f-c52e-4a9e-9cee-16ee98a3d350",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f05d1c63-6209-4636-b8bd-19be24b3ccba",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e3dfae-abcb-4f47-8a31-7ec4b6edbb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "06c30830-0a5b-4756-81c8-1d85437dbc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ad5850-cb73-4e7b-94da-00d7549f9f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd93d9bc-ffc7-4f84-b0d4-c9a1a5a7dab7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d18fb095-e0b2-47f9-93b3-b14cabdcfacf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "158a64e8-d0dd-4bf0-ba12-ca5600f24a6e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c4a705-a569-4d52-8c48-fcf873fbd45b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb6d4cac-ccc2-4de9-9af1-c25f741dcfed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1803e174-aeaa-4b7d-88be-c1e2ec6f9433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b197c27f-e972-429f-a105-ab3b4718d9c7"
                    }
                  }
                ]
              },
              {
                "id": "8a7680ac-e535-4977-932d-2a3007b16922",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f896989-5ce5-478e-ac7a-74f1d5a125c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62684252-5255-4f0d-9178-acaf15295e92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44e0dd97-ba99-4824-b138-04bd10a7ee03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba65b4cb-4eef-425a-bb5b-34bca2df5c61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e6168be-cb0b-4085-ab7f-61f74cf6fb3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1690c7f1-9cbf-49cf-9545-bb5172b52f68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80976315-89ce-4662-afc5-47c1322036f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "530d0cd0-2f66-408b-9381-8dd67a377200"
            }
          }
        ]
      },
      {
        "id": "4ccae708-8327-4dc9-8f3f-7e79916c7037",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0ab5ca78-6620-48e6-a89a-6b12d117ef5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4a52432-0569-408d-9e6e-a7223742e44d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f24bdbe-6e28-4351-a867-f5d0c2432cde",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75230e9-8d31-48cf-83dd-d0886d370449",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a7126948-a4c1-4813-bbad-1b3a0743ca5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbc8f5d-6b90-4f14-84cd-b29d72c330d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a3a602a-6589-4ad0-963c-5f51552950d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2a713b5-4f91-4089-a00a-ecf4cf03a8eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b29a734a-10d4-4e23-90a1-673f685e9113"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ebd9a8a-2fd0-4206-989c-850db8c538f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc2b9b90-aed0-4fbb-96bd-1b98315217f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fd283c4-f6c1-433e-9c2b-13fa0303eea9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8fa136f6-ccc5-4560-900e-09f131b9eebf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3c3b387-693f-45d9-9d33-34174ba96b40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bcf2b9d-7420-4c4f-b34d-65d5c5d2b991"
            }
          }
        ]
      },
      {
        "id": "492e69e9-aa6b-4bca-85e8-f6ed91935572",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "46c97593-dabd-4743-8921-e7133596cee6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f91909c0-891a-44bc-9b1c-a824334203aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f983e5c-4c98-4630-b468-8f493868f598",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bf1be9-f95d-4154-ad70-f09621a6080d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a2c3736-17a9-4e22-ad24-ca7d9217de8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00a26fd-1755-4b91-ba14-cdb6c029ff29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7eb03a9-da69-4117-91a1-4fafd5b8b0ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdb25b03-3b19-48c3-8fd8-5f6a29794a61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeec0944-edbd-42d7-bb7a-097bf13e26cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "080dba72-6d70-4d3b-a6b7-864f870270aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49cd8926-fa7d-4a1d-af83-29b36d12ba2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bd5a47e-d0aa-4b0d-8075-2d30298ca6cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f495692a-f56d-4885-aa39-fa0481eeb565"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7590d8b8-be3b-44e7-a813-b526630f8286",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2823f960-ee1b-4173-842c-a0597d1bfb67"
            }
          }
        ]
      },
      {
        "id": "d2e07dd5-3ddb-4819-97e7-d427ba60a617",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bd1840b7-400b-4ecf-be28-d65c8cc3be32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c6509c2-4502-4cd1-87b2-010c9147e406",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dac473f8-5ab5-4123-920e-2657b1086b2e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2999be-570a-4d7a-a065-d838d7e69cfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74d67b72-3835-41fb-ae5c-83c285c69117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc121cda-5308-46eb-91c1-122d9d2e2de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9344d589-c899-464e-98d7-901ba3625427"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94348be5-3f7b-4162-81c9-fa3b2274003c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d9e0b5c-28e3-40c3-ae43-e0b2af2c86a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6016ccc-6659-4ec1-b68c-867bc69bd497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc7801a1-dfe2-40db-b967-d655484ced61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f67fcb3a-c4b3-4d1e-a89a-4f437f4df381",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1dddf87b-6bc3-4464-a36a-764734b86ccb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb910c4e-2070-430c-a3b0-98cbfce1eb13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b312536-f5ad-43aa-93ed-94ea2c9aceda"
            }
          }
        ]
      },
      {
        "id": "34942120-c0a1-4129-8b05-3f5462438b1b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc11b139-c594-4e4b-bae0-912f46ed9587",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c18c2cf-b0ee-42a8-9b4d-894347bf45be",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2f53aa8a-0376-4b8a-a26b-47d696cda742",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "080c3cb0-3708-4d97-a930-79d60233a001",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7798d5aa-38eb-49bd-bc38-a79cbc3f80d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 225.16269841269852,
      "responseMin": 7,
      "responseMax": 5640,
      "responseSd": 886.735533329363,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717375108458,
      "completed": 1717375173499
    },
    "executions": [
      {
        "id": "7bd035f7-13ed-44fe-844f-87302fdccd86",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a839a938-7388-4037-b149-e92b1d7cb388",
          "httpRequestId": "bc66c14d-325d-4fdf-8e44-570c13ac95e4"
        },
        "item": {
          "id": "7bd035f7-13ed-44fe-844f-87302fdccd86",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4f6f0100-9fe0-4ea9-8243-1fb592b3706e",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "81fadb89-d439-45c9-b04e-0af063731ef9",
        "cursor": {
          "ref": "13357574-7678-410c-a8f2-2a3760b39629",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "02036376-7b54-457a-adbd-9003dca97c1f"
        },
        "item": {
          "id": "81fadb89-d439-45c9-b04e-0af063731ef9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "59cd7aa8-44f3-403d-8b97-e4c6f1c035e6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3224691b-f07b-48b1-8284-f2319329723d",
        "cursor": {
          "ref": "37c1f9a2-5909-4323-832a-b3a2cfc4612a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "280dbbc2-60f2-4b1b-a4da-780f5145f910"
        },
        "item": {
          "id": "3224691b-f07b-48b1-8284-f2319329723d",
          "name": "did_json"
        },
        "response": {
          "id": "c6658d20-9ac1-40a3-b898-5920a5ab6261",
          "status": "OK",
          "code": 200,
          "responseTime": 295,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5588bcf-16a0-4465-98b7-8f3300f2ad31",
        "cursor": {
          "ref": "76127db7-0c12-45be-b578-9b30d3d15a1f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd97b0c1-57ef-4c07-be1f-05807aac0bca"
        },
        "item": {
          "id": "f5588bcf-16a0-4465-98b7-8f3300f2ad31",
          "name": "did:invalid"
        },
        "response": {
          "id": "1be77f32-6b06-417a-a3b3-9433e8475bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2407,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5588bcf-16a0-4465-98b7-8f3300f2ad31",
        "cursor": {
          "ref": "76127db7-0c12-45be-b578-9b30d3d15a1f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd97b0c1-57ef-4c07-be1f-05807aac0bca"
        },
        "item": {
          "id": "f5588bcf-16a0-4465-98b7-8f3300f2ad31",
          "name": "did:invalid"
        },
        "response": {
          "id": "1be77f32-6b06-417a-a3b3-9433e8475bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2407,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b35fa4a-dce0-48be-9b0a-bb9f258ec3fd",
        "cursor": {
          "ref": "aabf1d31-f48e-4ee6-9a21-336e8ad3585c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9f554dc7-df47-4a97-817f-298f81a7ea69"
        },
        "item": {
          "id": "5b35fa4a-dce0-48be-9b0a-bb9f258ec3fd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce5beaa7-c378-408e-b59c-7815962bca30",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2343,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372b4233-4492-480b-8f1b-a47deb346446",
        "cursor": {
          "ref": "b78d7945-5261-4a2d-b79f-81564ed9c21f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "502f68f4-d902-44ba-b943-0a009eabb280"
        },
        "item": {
          "id": "372b4233-4492-480b-8f1b-a47deb346446",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "974df74b-d894-44af-a5a0-9138c04c6ec6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2273,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05b7056-c5e1-4e57-a057-6f03883bdca1",
        "cursor": {
          "ref": "de03e660-4791-4ab0-935f-4ca3bc61a69b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fbee100d-6d8d-48ef-b421-ea3d17e9be14"
        },
        "item": {
          "id": "a05b7056-c5e1-4e57-a057-6f03883bdca1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3ede65c1-6470-4047-a26e-696edc96fb00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa6f179-683b-48f8-a91c-1fe9f13e1c2a",
        "cursor": {
          "ref": "d88e7169-af2f-499c-b245-bd6db3f76e15",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ab3112fa-b300-471d-bd83-c905267d433b"
        },
        "item": {
          "id": "4aa6f179-683b-48f8-a91c-1fe9f13e1c2a",
          "name": "identifiers"
        },
        "response": {
          "id": "e9d0d41b-4058-4484-b00f-a8512f03963b",
          "status": "OK",
          "code": 200,
          "responseTime": 2359,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3a7575-9bf2-4fd9-95c3-8da78b6bbbd2",
        "cursor": {
          "ref": "9bf9a5e6-440d-4e60-a78c-3c94f7c7acc1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "18aee6b9-a381-461e-a196-3801f9f8ba7d"
        },
        "item": {
          "id": "ab3a7575-9bf2-4fd9-95c3-8da78b6bbbd2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "65085255-f3ff-48e8-b540-93316906730c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b669e2d-ca28-4721-b236-3ae16bc5fa30",
        "cursor": {
          "ref": "9ef67cb0-d717-406c-a658-fb83785bca51",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f8201625-5098-4b48-a8f4-28621d592433"
        },
        "item": {
          "id": "3b669e2d-ca28-4721-b236-3ae16bc5fa30",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0587b36a-ef06-471c-a19f-c38d6bd2a2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4472b742-d2f9-4d04-af99-7c8c1db0b27b",
        "cursor": {
          "ref": "7bdad545-389e-4923-bb94-ab7dfa88c780",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "67f10681-fd6f-405e-8083-1c24c9d0f57a"
        },
        "item": {
          "id": "4472b742-d2f9-4d04-af99-7c8c1db0b27b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f6ebe074-3df3-4c49-92ed-19df293bc5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83172711-80f3-4e57-b3a3-07f7d617aafa",
        "cursor": {
          "ref": "1fbb0d8f-2be2-48ff-acd4-75ddac366d6f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f4571efa-e8eb-4464-bf8f-33eee40f4a6d"
        },
        "item": {
          "id": "83172711-80f3-4e57-b3a3-07f7d617aafa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "207224e3-d418-473d-adb8-be3e497e01cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb3789-befc-4f82-8389-cae1fd7891bf",
        "cursor": {
          "ref": "cc6a8d14-6a1f-4129-9ce0-9b5afae54ba3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b03e5639-3054-48d4-839c-f6cea2fa79ec"
        },
        "item": {
          "id": "4ebb3789-befc-4f82-8389-cae1fd7891bf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5379a977-8b87-4d76-ba77-3f5b17c42d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb91c24-c771-40a1-8662-f54beb0cb90b",
        "cursor": {
          "ref": "795d115d-aae9-4d79-b657-b93265e00af6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e2a0e7b-4d06-4b7c-9afa-a2cce9740a3d"
        },
        "item": {
          "id": "7eb91c24-c771-40a1-8662-f54beb0cb90b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8ba5a246-4875-4064-9c40-757142008e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980880cf-22c8-465f-abc9-c516f3475609",
        "cursor": {
          "ref": "3560e49a-2f15-4142-9962-83e1332b2f5d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "14bfe86d-f8f9-4542-93e2-d6e29b8e6b3f"
        },
        "item": {
          "id": "980880cf-22c8-465f-abc9-c516f3475609",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2d545e99-3fab-4828-9a78-25c2673b57b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889df772-5e04-499f-8284-7c528edacda3",
        "cursor": {
          "ref": "95b26589-c36f-40d8-8ebd-19fefbe6924a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "60df8e69-eeb7-40bf-967f-d8fd9baaae10"
        },
        "item": {
          "id": "889df772-5e04-499f-8284-7c528edacda3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "df61089b-46cf-41e6-b6e3-bb860e179593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7ff36d-06f5-4d15-aad2-66958135bb1e",
        "cursor": {
          "ref": "0a05a26e-7226-4544-8269-0335979c7e41",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b00e945c-4865-44d9-9235-ee03202c9d7b"
        },
        "item": {
          "id": "dd7ff36d-06f5-4d15-aad2-66958135bb1e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc7100a7-eb87-4fcc-b750-830dc3740e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a868cc6b-876c-4be5-807b-28ee50ae3e18",
        "cursor": {
          "ref": "87a005d5-69e2-41ea-83ad-66d33bdd48d9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fb3d451c-eb11-472f-a28f-b6ee345e3645"
        },
        "item": {
          "id": "a868cc6b-876c-4be5-807b-28ee50ae3e18",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d18e8ab-2f11-4a06-8baf-279949b11c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870869d3-55e6-45c2-bddd-b6e7c12b8e2e",
        "cursor": {
          "ref": "1f7ac233-11c8-4bff-a614-2a415927edec",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e9f3020a-270a-45aa-becb-b5d7ffdadc74"
        },
        "item": {
          "id": "870869d3-55e6-45c2-bddd-b6e7c12b8e2e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "37adf2db-ddff-4cdb-976e-5edf750effb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0b8da4-0c90-409e-8397-beb20b42c46a",
        "cursor": {
          "ref": "a0e81fd6-f689-47bd-a4b4-c75c0f00b397",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f26933fa-7938-4c5b-8534-5101e01a8022"
        },
        "item": {
          "id": "4e0b8da4-0c90-409e-8397-beb20b42c46a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f8763d38-19b8-4dab-8b24-5c2095bf6bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b64c1-fc7e-472b-bcb6-3caaaf982931",
        "cursor": {
          "ref": "18edb6ef-7192-49f1-ad52-a03363eb6cdf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "347071a6-e13c-4625-8f9c-ceba23dc08c9"
        },
        "item": {
          "id": "607b64c1-fc7e-472b-bcb6-3caaaf982931",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46b9ac72-4e95-4d8b-b12d-0ef4cc7cf482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6a4be8-8105-4ff1-89b9-bb794a8bf255",
        "cursor": {
          "ref": "3897e887-3716-411c-bafe-9f8247e90854",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8ceac290-5ced-444c-a85c-d50d63ddebcb"
        },
        "item": {
          "id": "aa6a4be8-8105-4ff1-89b9-bb794a8bf255",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b546c1d4-a7f5-490d-b0c2-3919cae1e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cbb09e-5b55-4159-9bd4-41dbcbeab899",
        "cursor": {
          "ref": "193ed999-b5d2-48fc-afb6-aa8bd8c4f6cc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8c5ef731-59e9-4665-892f-54ed634035b0"
        },
        "item": {
          "id": "05cbb09e-5b55-4159-9bd4-41dbcbeab899",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1d55a84b-8c69-4633-924c-82cfcf4c9b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c255f49-46d0-48b7-82ff-543c274412a3",
        "cursor": {
          "ref": "ca0367b1-1ac8-4d1d-bb02-09aa8d8e978e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "108bd660-3036-4a7f-83f5-42905b42920b"
        },
        "item": {
          "id": "2c255f49-46d0-48b7-82ff-543c274412a3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c73d2b95-17ea-420d-9e8a-aff6ec063070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53c7388-e77d-4853-9ff9-53c27a240121",
        "cursor": {
          "ref": "3eaff087-e2f6-4ba9-85d9-d080b61fcf77",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "faa75a72-6348-4e4b-97f3-6355c30d29b3"
        },
        "item": {
          "id": "a53c7388-e77d-4853-9ff9-53c27a240121",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d0ddf143-911d-4b2f-af16-8f9a9f2816ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255fa9ac-0223-4811-b218-8d9830361f1c",
        "cursor": {
          "ref": "d3e5b0ef-d4c3-4aa3-b491-82d5ec5c3409",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "64b0854f-90e8-4722-8fd0-6879cb0380a6"
        },
        "item": {
          "id": "255fa9ac-0223-4811-b218-8d9830361f1c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "598daa3f-d1ca-41dd-a604-92eaf16cf942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d747e891-c03d-4c44-9ebb-cecc2c6c7971",
        "cursor": {
          "ref": "770e1be1-2feb-4538-b8cc-433d2254a2c7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ef8868e6-ce18-4416-8b07-ea0a1ff0ed67"
        },
        "item": {
          "id": "d747e891-c03d-4c44-9ebb-cecc2c6c7971",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8a8156ea-ab00-482a-a3f6-de818a93755a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3344adce-808b-441a-ac28-75e86f886a76",
        "cursor": {
          "ref": "48960367-02cd-4df3-930f-0c8b7bb9df20",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "00c175c5-ab34-429a-84d5-1de91d5d4bc3"
        },
        "item": {
          "id": "3344adce-808b-441a-ac28-75e86f886a76",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b217e0d9-b32a-40b0-aaa7-ad28fd3a185e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477c48d-0acd-47ce-bcf1-3e940b01cc1e",
        "cursor": {
          "ref": "06157033-df22-414e-91ac-95935be0ce9f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1aadc4ac-5dad-4d8a-be86-28eaececa589"
        },
        "item": {
          "id": "9477c48d-0acd-47ce-bcf1-3e940b01cc1e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cfff3521-6f3a-49dd-9824-636ec557487f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9295d56c-9ad1-4edf-8102-107d9a5a4971",
        "cursor": {
          "ref": "bc11ce45-40f1-44c1-ab7f-1d0e1095567e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6de583ca-6db7-40ea-b25a-a40331f37979"
        },
        "item": {
          "id": "9295d56c-9ad1-4edf-8102-107d9a5a4971",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "658159c0-52e5-4724-b6db-85923963d0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0df076-13de-4f38-963a-314625b9d621",
        "cursor": {
          "ref": "43dc4f46-b3ed-4fc9-9d29-3969671b4d3a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "70b147b1-66fc-43c8-9b04-e9cf25758c4b"
        },
        "item": {
          "id": "ad0df076-13de-4f38-963a-314625b9d621",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d85e29e-44c6-4b08-ae6b-62e8c333c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fdd17e-6f58-4096-9c4d-c35414c548cf",
        "cursor": {
          "ref": "c3fe4b59-af8b-4e28-a411-93cd3efdf6b6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f77cc16e-c143-41b2-89e2-2a90543710f3"
        },
        "item": {
          "id": "88fdd17e-6f58-4096-9c4d-c35414c548cf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1488a702-c383-45d1-b576-9a39fae9b4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34140830-fa22-40aa-b3d2-03292421ba3e",
        "cursor": {
          "ref": "b9bddc06-f5b8-404d-a01f-76974ad8ccc9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7fb3b579-33a4-4cff-9556-2e0db97079b6"
        },
        "item": {
          "id": "34140830-fa22-40aa-b3d2-03292421ba3e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6dd1de17-3ec9-40b1-949b-0ddd0938bf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99eb776-bbfe-4dfa-9783-df4e6b7946b7",
        "cursor": {
          "ref": "bc234a4b-7bf4-4d90-964b-60670427a905",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "436afdcf-b196-4fca-bd74-402dcdc2a8c2"
        },
        "item": {
          "id": "f99eb776-bbfe-4dfa-9783-df4e6b7946b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "afe27fa0-5239-44ed-9e67-4cf5f428e96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fccb12b-40d1-48e7-8e73-1250084ea305",
        "cursor": {
          "ref": "ac1c7897-d519-440e-bcdd-3bb66c9bc858",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ec23debb-41ee-4bf5-b3dc-bb642af510c6"
        },
        "item": {
          "id": "7fccb12b-40d1-48e7-8e73-1250084ea305",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "212bf392-6de8-428f-b480-456a5690f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7e1aa2-1d80-4145-909a-69379d1562f2",
        "cursor": {
          "ref": "0d712d28-7bf8-4438-826c-cc9ca1e25355",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7cd680c2-c02f-48ad-ac84-275c8422b368"
        },
        "item": {
          "id": "7b7e1aa2-1d80-4145-909a-69379d1562f2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fa31af37-48ce-4b52-a796-83a3b43d0636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db68065-11a9-4d42-84a6-4a7a4cf4a029",
        "cursor": {
          "ref": "179f4113-de59-4e37-a908-410d0b5ad3ad",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "46793fdc-1355-449d-8cfd-bd043e64f194"
        },
        "item": {
          "id": "5db68065-11a9-4d42-84a6-4a7a4cf4a029",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b6c8b3ed-204f-442e-91af-4ec9a3ed66bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd13fb1-177c-4189-8a58-136342141287",
        "cursor": {
          "ref": "4ee379fb-6e2c-4240-9286-80017f524e66",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4466882a-0dfa-43d7-a9a0-e99cd6261df6"
        },
        "item": {
          "id": "cdd13fb1-177c-4189-8a58-136342141287",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bb4e2bb0-964d-4b06-8535-9c12946e4e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08a8ffc-3549-4a1d-8a71-0e6b33508d29",
        "cursor": {
          "ref": "eaec0218-ccb6-430c-8578-eb60e62e152b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ceeda125-0d0b-4ec0-94e6-015ebbf15bf9"
        },
        "item": {
          "id": "d08a8ffc-3549-4a1d-8a71-0e6b33508d29",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "119c41bd-a079-4095-b61b-30768dc37b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270a84c0-8e7d-45a0-bdc7-7925c6847999",
        "cursor": {
          "ref": "0b2034c6-a0e0-427b-be7c-52543e7c3b3d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "23909153-f98f-4624-a231-26b72c651e16"
        },
        "item": {
          "id": "270a84c0-8e7d-45a0-bdc7-7925c6847999",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "33ea97e7-cf2c-4f50-881b-ffb6d1c3303c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7066d5e1-7788-4f0f-b4f6-5959aa6574fe",
        "cursor": {
          "ref": "8c14902a-74b9-49f8-8443-a7c02636980d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a748ee98-4b32-4700-bc96-8009182c69f7"
        },
        "item": {
          "id": "7066d5e1-7788-4f0f-b4f6-5959aa6574fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "08ac5d3e-f57a-4456-b28b-53082e50aa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52081202-39e5-4f07-99a2-ce2c23caaf72",
        "cursor": {
          "ref": "ba9720c5-d844-4d42-8380-22782456dded",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f16a76e5-ad0b-45e6-8539-488709a4782a"
        },
        "item": {
          "id": "52081202-39e5-4f07-99a2-ce2c23caaf72",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "efec6dc2-c0ce-4bf4-aa5c-d29d0e1e3829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a7b6ee-8e2f-421f-8f1c-f8d2b94effd5",
        "cursor": {
          "ref": "9aa8c4af-7ee6-45ca-9a62-2881aed0a88e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "449674e8-e97f-4a9d-be3e-f20fcde1a121"
        },
        "item": {
          "id": "72a7b6ee-8e2f-421f-8f1c-f8d2b94effd5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "63a73786-b28c-4bba-8fd2-a0a82819c132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98832d-4b98-40e1-bd88-4b59262c27a0",
        "cursor": {
          "ref": "121c0a22-5d95-4308-a7ac-455dc3c902fa",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "98c2e3df-afd8-41cb-a6a8-c1866f8f0734"
        },
        "item": {
          "id": "cb98832d-4b98-40e1-bd88-4b59262c27a0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a3b57d63-5414-4c88-9c91-87c1820aec1d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd315527-3b57-4f7d-849b-9fd456de91d1",
        "cursor": {
          "ref": "4c54879f-4185-4121-97a6-bc93976eaeb9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c1052eee-e119-4601-bfc8-363905bd27dd"
        },
        "item": {
          "id": "bd315527-3b57-4f7d-849b-9fd456de91d1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d7bd5dd3-dbfd-47e0-b55d-90fe374bc528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d981f-88ab-46d9-a278-a131c1a9829e",
        "cursor": {
          "ref": "8ccae6ba-0082-40bd-b079-eaea7e202c09",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3edf2cff-f1af-4392-adc4-90b472f1bf91"
        },
        "item": {
          "id": "f66d981f-88ab-46d9-a278-a131c1a9829e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "05bcf2b9-1542-4944-bd49-b6065931bec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570c3984-3a60-4c2d-b6d5-86ce3eab9b44",
        "cursor": {
          "ref": "0820440f-5e7f-4dd9-94c8-f36f6dd53bb7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c0312b7b-85cd-4584-b4b6-6dec0a4ba27f"
        },
        "item": {
          "id": "570c3984-3a60-4c2d-b6d5-86ce3eab9b44",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bc9c67c9-5791-4b7d-9b9a-61e2fe06fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3394addd-18d2-47cd-b516-d22a7ec3a3b7",
        "cursor": {
          "ref": "3deec038-50f2-4553-b135-42e7c768d6f4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "81fd3835-7f99-4f73-aebb-afadbe5dacbb"
        },
        "item": {
          "id": "3394addd-18d2-47cd-b516-d22a7ec3a3b7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7c8ef51e-7f73-4743-b150-0b660e259b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31680d0c-b49b-4f01-8f73-63c62977466f",
        "cursor": {
          "ref": "6911e879-36e0-4726-b32e-055dcc81afd8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "768e6f5d-9c9a-4221-a532-5e9e8f664c0e"
        },
        "item": {
          "id": "31680d0c-b49b-4f01-8f73-63c62977466f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a93694a6-bfb7-48e0-baf0-ec4377ad576f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36236aa-12c3-4fa9-be9a-d742ef0c70ed",
        "cursor": {
          "ref": "a36a236f-e5f2-4d82-a03d-1e5e312b6c16",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5013fc56-0db1-4eb5-b07b-b396c96975a7"
        },
        "item": {
          "id": "d36236aa-12c3-4fa9-be9a-d742ef0c70ed",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ffca0d44-c880-4c49-8b38-0bdc4e8ced1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52113507-3ec5-42c3-b12c-bd0423f81538",
        "cursor": {
          "ref": "450b7666-e94f-4857-af6a-fdc028ce2f4f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dbc1aa1d-a1c5-42db-9151-1ceb6ad45fd7"
        },
        "item": {
          "id": "52113507-3ec5-42c3-b12c-bd0423f81538",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "56578fa9-4d50-4d08-af4a-a68414b28ff8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad4c7cc-4803-46cd-b6f8-c63d45017a79",
        "cursor": {
          "ref": "31a2a9f9-6b72-4dec-a971-059f1271ebfc",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ccd8fc1c-d140-4dcc-8928-ebd1331308e1"
        },
        "item": {
          "id": "4ad4c7cc-4803-46cd-b6f8-c63d45017a79",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "38938762-f0c9-47cc-b08c-673b9fa66b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ca8a83-3dad-4b00-9e9c-c543bac0af79",
        "cursor": {
          "ref": "a5381e58-3b91-4adc-b62c-069f1d8f61ea",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "24289119-87a2-416a-a7f1-cf357a8f3997"
        },
        "item": {
          "id": "58ca8a83-3dad-4b00-9e9c-c543bac0af79",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "14529bce-eae6-43f1-bcba-bdfe53154f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b880e12f-2a19-4f6c-a522-5d44c7fcd522",
        "cursor": {
          "ref": "8fc2fa28-325e-4336-b6d9-443c6127188c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dea2f8f5-49fc-4c28-8578-d7aade3c6de4"
        },
        "item": {
          "id": "b880e12f-2a19-4f6c-a522-5d44c7fcd522",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bd9dbf5e-57f1-498a-b4e8-e36a01601849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2b61b9-fd54-44ab-9a10-ceb8412b96e3",
        "cursor": {
          "ref": "1dbf115e-e176-4df8-976a-e8fe2eabe1b7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7be75035-e8cf-40f4-a811-60f129a8318b"
        },
        "item": {
          "id": "4c2b61b9-fd54-44ab-9a10-ceb8412b96e3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84b55300-5cb3-4cf7-be93-f9015d90974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07c417-6f0e-4cf2-bbd4-cb64ece3e5bc",
        "cursor": {
          "ref": "2d4f4272-39f8-4ac1-a1bc-a3ef1a3ddd41",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a79cab64-6ac8-415d-83a8-3dd2f59efaac"
        },
        "item": {
          "id": "dc07c417-6f0e-4cf2-bbd4-cb64ece3e5bc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b6a1f007-51df-40f3-975e-405b5767c09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b20f41-0f37-47fc-8344-1c51e5835339",
        "cursor": {
          "ref": "00c826bb-5245-4940-a8ee-386ee6e6bed6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8032e761-b255-413a-83f0-ad25de627a68"
        },
        "item": {
          "id": "e4b20f41-0f37-47fc-8344-1c51e5835339",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "06445e02-1baf-47c6-9e60-70132a1234f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c911f4e2-98fc-43b4-821a-d60462f67736",
        "cursor": {
          "ref": "142a998c-09c1-4a8a-b778-150d2a47276a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c7edff2e-bf9b-45e7-9317-cb4ba82e600b"
        },
        "item": {
          "id": "c911f4e2-98fc-43b4-821a-d60462f67736",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9ebbb04d-1636-4f14-9739-7517dc517b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139d6644-cee9-447c-8f32-f711f3620817",
        "cursor": {
          "ref": "00c4add3-cfa2-43ff-8267-659b373dc799",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "13f35681-7d04-4501-b33e-0142f5369cda"
        },
        "item": {
          "id": "139d6644-cee9-447c-8f32-f711f3620817",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a7c86a21-fd0c-4e79-ba2f-667ae20d6193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a663764d-40c1-4d68-b230-52cfa277f490",
        "cursor": {
          "ref": "77887d8b-16fb-4f26-a886-d0f45c5c4ee2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6fd88adc-b2f8-43e7-9fa3-a548fe80b810"
        },
        "item": {
          "id": "a663764d-40c1-4d68-b230-52cfa277f490",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e1cb3327-4ac2-48ec-96a5-e3d20183542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71804b8-ab85-4fcc-a768-0917e8532097",
        "cursor": {
          "ref": "7dd95718-7908-4fed-afc1-5c0d7fe9ddca",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "56d864e7-0aae-4f36-8f94-cf0d648e3b4d"
        },
        "item": {
          "id": "e71804b8-ab85-4fcc-a768-0917e8532097",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "76227b5c-d466-4471-aebe-d231ad83d9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8922a300-eb94-4abd-92a0-9043492a1026",
        "cursor": {
          "ref": "7d60f7d4-23f3-4fb1-a577-3f34be3855e3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3e1f806d-3720-45fa-adb4-e28ca7e36840"
        },
        "item": {
          "id": "8922a300-eb94-4abd-92a0-9043492a1026",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "558a5f1c-bf59-4319-aed8-89d8bb4eef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbbfcfa-c42c-4401-bac9-51048a619790",
        "cursor": {
          "ref": "b8fa04de-0c01-48b8-b593-83cae429f675",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "28c10fb9-df72-4176-98ad-4decca307ac3"
        },
        "item": {
          "id": "bcbbfcfa-c42c-4401-bac9-51048a619790",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "68b02415-ba36-4837-b9f0-1774303223bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7c94f6-2fc0-4a7f-bbc6-5bcaa8e40864",
        "cursor": {
          "ref": "66ce8a94-9fb0-43b7-a921-ef396a950025",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6bbbb12c-9ab5-49b2-aa9e-3eb560e3b299"
        },
        "item": {
          "id": "5a7c94f6-2fc0-4a7f-bbc6-5bcaa8e40864",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "870230de-4d7d-4641-944f-c5607391a9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af889370-2a0f-49c0-a1b8-ba527e1c24bb",
        "cursor": {
          "ref": "db0dda47-3589-40c6-82f3-5dfdb9514f0b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6399c5a6-afaa-4a65-a499-463eaddb9135"
        },
        "item": {
          "id": "af889370-2a0f-49c0-a1b8-ba527e1c24bb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "34e697ec-6319-4cdb-a9ce-ddce67d45ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36840ec8-ce05-4645-a048-07bd55e994ae",
        "cursor": {
          "ref": "c4a5a945-6dae-4c7f-adee-9c67d450a1eb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c5773e2c-586a-46c9-ad07-1a874abf028f"
        },
        "item": {
          "id": "36840ec8-ce05-4645-a048-07bd55e994ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6f81da73-db6d-426b-a411-95985937f8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1221f4ad-7432-4d08-852d-ed9b6c550d24",
        "cursor": {
          "ref": "6b3234d4-0ca6-406e-8d47-7e50c7001008",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b703008f-d083-4075-9b92-662ceefae19d"
        },
        "item": {
          "id": "1221f4ad-7432-4d08-852d-ed9b6c550d24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "50300bf5-8b4e-4666-86c2-e402b8f46b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33e6498-0b98-41bb-848c-a32a9e5da206",
        "cursor": {
          "ref": "7ecabf8d-9c61-482d-bdc1-b66c12dff0b5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0bcb2d77-f8fc-41e7-8fd0-742dbb5243fd"
        },
        "item": {
          "id": "a33e6498-0b98-41bb-848c-a32a9e5da206",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "18be6dbc-9f25-4be3-89da-7e99ad70604a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b708366-844f-4d63-8d0d-07120be3fa83",
        "cursor": {
          "ref": "4f97236d-58f4-4057-8064-fb4018fbfffc",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "71a9be3c-ff7e-4156-a2bb-0f4075704805"
        },
        "item": {
          "id": "6b708366-844f-4d63-8d0d-07120be3fa83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "36706d30-d809-4ed6-8166-ceafa879d824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db7d77d-48df-4e5b-aa5d-a955db367a17",
        "cursor": {
          "ref": "d9192221-7e4d-44bc-88ad-ffe08d41aae5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "79f08a40-0c39-4b15-8ad5-add7fc1810cf"
        },
        "item": {
          "id": "5db7d77d-48df-4e5b-aa5d-a955db367a17",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f60dcc1b-ed9b-4dc5-b25e-bee101cdb471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4229114-a3bf-4a9a-9afb-c16d2ecb956c",
        "cursor": {
          "ref": "a5e5c834-0315-42ba-a826-8f4a242ed002",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f47ba6ea-144e-45ce-8ee3-8f824a83ced2"
        },
        "item": {
          "id": "d4229114-a3bf-4a9a-9afb-c16d2ecb956c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d9607164-ca22-4c15-968f-12d3849790f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c0bdc-1b6f-455a-8b57-c0a6a181bb09",
        "cursor": {
          "ref": "b2bc4c67-e317-4234-b710-768a9ea47213",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0e64466e-62bb-430a-a04a-16edabdc4b1c"
        },
        "item": {
          "id": "bd0c0bdc-1b6f-455a-8b57-c0a6a181bb09",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bc2440a1-7005-455b-8142-f3584855f589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55196aa0-547e-4f56-a7fb-fc508dfad220",
        "cursor": {
          "ref": "7efbc628-6b66-464d-96d2-17cd25e94e76",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a52b1824-6a45-4f71-a029-846733fbd04d"
        },
        "item": {
          "id": "55196aa0-547e-4f56-a7fb-fc508dfad220",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3b374360-723a-4401-a265-d3596779e331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da83d070-1587-44e2-9e64-81fb28376c57",
        "cursor": {
          "ref": "906e8289-8db9-45ca-9806-026fc413294a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ba739e97-37ce-4c33-ba32-3d914fb60c52"
        },
        "item": {
          "id": "da83d070-1587-44e2-9e64-81fb28376c57",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0a8d4bbd-af24-4a7d-a08b-d9ebb406ad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a0f647-1ed0-4125-b5a2-d84e2fbaf49c",
        "cursor": {
          "ref": "6b1db26d-4f8b-4ff6-9942-8b25434f02ec",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "601d439b-ca59-48c7-9b61-15db1d2bbbfe"
        },
        "item": {
          "id": "91a0f647-1ed0-4125-b5a2-d84e2fbaf49c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "85dc4986-1ed8-4589-baa8-b85485457e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b7e1ab-422c-4cd1-bbef-1a7067298269",
        "cursor": {
          "ref": "97ac2995-ca64-4d06-94cf-d98eba97237b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3ada65b7-9e7a-4d98-ad9b-ffafdaafc143"
        },
        "item": {
          "id": "55b7e1ab-422c-4cd1-bbef-1a7067298269",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "feb6977d-c414-4d9b-8910-7302698e08a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f8d32-4fba-4754-a899-980ec3758da9",
        "cursor": {
          "ref": "349511d3-05cc-4c59-8628-95aa9bb22ad6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd8d5e57-0bcb-4e93-a3ac-dfe26f021106"
        },
        "item": {
          "id": "376f8d32-4fba-4754-a899-980ec3758da9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fd1eca3c-e5ba-4327-8e63-0fabe6243c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13373922-0b91-4bcc-8ec2-3629789b1bdc",
        "cursor": {
          "ref": "22c84a28-e3b1-4ec2-b774-4636f3efbca6",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fbbcfd66-7718-43ed-8fa3-f8df0e7d9fa0"
        },
        "item": {
          "id": "13373922-0b91-4bcc-8ec2-3629789b1bdc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5004a8c1-8d52-4e69-b2d5-9982ebf11b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582cd526-d35a-4cee-b6d7-0d354f6b7f79",
        "cursor": {
          "ref": "873e7b6f-abae-453f-a0fe-c6a979ababb9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "580be84c-f586-49cd-bcd6-8122c11eedcd"
        },
        "item": {
          "id": "582cd526-d35a-4cee-b6d7-0d354f6b7f79",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "392c2925-a696-4a3e-8cc3-e00a03b2944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9814d-c045-4304-ac2c-a00163ab10de",
        "cursor": {
          "ref": "f2fbc5be-beb6-48ba-b1a3-be9f07aed5aa",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "447b8d6d-5f97-432f-a927-a1bc2e4fc9b2"
        },
        "item": {
          "id": "64d9814d-c045-4304-ac2c-a00163ab10de",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d5f618d7-d459-423a-b82a-b71cca54c970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dcd2cd-aa2d-4c61-855a-b3a5609c3887",
        "cursor": {
          "ref": "4c21b9b9-4470-4b09-8f25-f13ef334ea7d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f1e3cb73-eea8-482b-a80f-ee19fee27ce8"
        },
        "item": {
          "id": "64dcd2cd-aa2d-4c61-855a-b3a5609c3887",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eef1b97c-8a9d-424a-9e90-3a558d8eb4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd89ae9-8da5-4319-b4b1-2d1432cdd528",
        "cursor": {
          "ref": "8c6e23d8-b27d-47ad-87ce-6b0f81d3fdb0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "48cfefc6-9cd8-467d-a5ed-9c61802ff351"
        },
        "item": {
          "id": "fcd89ae9-8da5-4319-b4b1-2d1432cdd528",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2c0e4708-69b0-45a5-bf27-334a0cbaafa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c221df-45ad-47f2-bb1e-4f7116fb580a",
        "cursor": {
          "ref": "f5952015-bf31-4139-ba72-59b262e4034c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fcda4247-5049-46b0-9fce-230db1db641b"
        },
        "item": {
          "id": "02c221df-45ad-47f2-bb1e-4f7116fb580a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6a04678f-45a4-4b28-ad13-341096f5e7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3422615a-e619-4ced-8103-3c47df5ba970",
        "cursor": {
          "ref": "3b44d803-c300-4bd2-ab9a-40e643bb60bc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "35c79d19-93f0-4f95-9a4c-084aacdaea4a"
        },
        "item": {
          "id": "3422615a-e619-4ced-8103-3c47df5ba970",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5a40d285-4560-4eb3-9d12-0a8c18cfdbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a2be4b-e336-4bad-ae5f-b73efef48162",
        "cursor": {
          "ref": "120d39be-33c7-4a42-a49f-c405219c8186",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e9e14d31-cbe3-4dff-92c6-2446d60b23e6"
        },
        "item": {
          "id": "56a2be4b-e336-4bad-ae5f-b73efef48162",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e67c7b06-2e5e-4d00-b2b7-db18e5ec6c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcd016e-286d-47f3-9456-1723ccc08d22",
        "cursor": {
          "ref": "5ee07e57-36ae-417e-bb50-da447483f48c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d4254f34-cef6-4a0c-957c-e9a11181ec18"
        },
        "item": {
          "id": "4bcd016e-286d-47f3-9456-1723ccc08d22",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "24f673b5-232a-40e1-b87c-347b07d80f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c273ba50-efa5-4b61-a3fb-922ad4f9a781",
        "cursor": {
          "ref": "69e6397b-1bad-4cc8-a260-07e86e0e669e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eef6c4d2-008b-4555-9ff8-5e164ac13b76"
        },
        "item": {
          "id": "c273ba50-efa5-4b61-a3fb-922ad4f9a781",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4cb91b24-3fa5-4cfe-8ecb-5e3a56111f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43555098-3031-4ed0-92f5-f98565e67f2e",
        "cursor": {
          "ref": "d6c9f83b-d9c0-402c-a86d-6768bb8b64e5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7558c494-9142-480f-9b70-6545ff717c6f"
        },
        "item": {
          "id": "43555098-3031-4ed0-92f5-f98565e67f2e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "096d02cf-7031-4854-a060-c7413a5923fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dd364c-dc91-41e7-ad83-9f7f9a147abd",
        "cursor": {
          "ref": "0892f1a2-fc46-4065-bdb7-23b410f60be0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3d927a84-cc22-4fde-8cd3-3037b7c81f2d"
        },
        "item": {
          "id": "d0dd364c-dc91-41e7-ad83-9f7f9a147abd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e5271be5-f6d8-4beb-82b5-6fe68d2170f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61028e0-a54a-467f-b613-8538afe19fc3",
        "cursor": {
          "ref": "a569b3f0-56d5-4adc-83ab-529bd5d7d767",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "711535d4-04f4-47b0-a469-ebc3b18b53a7"
        },
        "item": {
          "id": "c61028e0-a54a-467f-b613-8538afe19fc3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ccfc2c4f-530c-4f59-ac4d-f0ff9c5645f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a72eca-911f-4140-9d07-c560a679c89c",
        "cursor": {
          "ref": "3eea0119-4fa8-4d3a-b090-c94d721127b9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "516bf3c7-ad0b-45bb-be6d-bf2875395ba0"
        },
        "item": {
          "id": "94a72eca-911f-4140-9d07-c560a679c89c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "20fc99fd-bf9f-4f98-927a-f596a262195a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61742ce-aee0-41d7-b1e7-9114c084ec1e",
        "cursor": {
          "ref": "b115a55d-c95f-4166-b85f-500edbe974df",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "41c4c62f-4b9d-4592-97de-3ed892fe977f"
        },
        "item": {
          "id": "f61742ce-aee0-41d7-b1e7-9114c084ec1e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "28002bf8-d51b-4664-8506-511f71ee23a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9933439a-a5c2-4a8c-a4e4-f63e515f7240",
        "cursor": {
          "ref": "d8fcd7cc-08d1-4f7b-8a27-d328d9e579b7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "417ed6eb-35a9-437b-9ab0-41d6338b4735"
        },
        "item": {
          "id": "9933439a-a5c2-4a8c-a4e4-f63e515f7240",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "743da8ae-d48f-46cb-9e3c-5c37450645c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32689012-d770-49d9-92f1-aa8f6ee6f8d9",
        "cursor": {
          "ref": "9b2d4ac8-2118-4273-9a6d-849f26808a97",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b2db7d58-df3f-49ce-b923-bc29c8deee46"
        },
        "item": {
          "id": "32689012-d770-49d9-92f1-aa8f6ee6f8d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "68f49720-b9e6-4b2e-9fd0-7a0ac2411ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b783e5-0f11-4ef9-bbf3-b7d2da58ceb5",
        "cursor": {
          "ref": "b7ca8131-cb05-4c6c-8bf6-b32fd75918f2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "940a258c-ad15-4741-be98-d44bb9fa796d"
        },
        "item": {
          "id": "76b783e5-0f11-4ef9-bbf3-b7d2da58ceb5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "97a8d538-9642-495a-918f-9354cb054adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265e484e-afbf-4889-9d7b-f474dfd40c2d",
        "cursor": {
          "ref": "ea22d1c4-540f-4517-b39c-ef3f6942d40a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8d1d83ee-c237-496d-abd3-ac62015190bd"
        },
        "item": {
          "id": "265e484e-afbf-4889-9d7b-f474dfd40c2d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "457dd956-88e6-4836-a7fe-93863c701644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30817de-c01e-46ea-bb35-f5e253329d3a",
        "cursor": {
          "ref": "7a2f7b7e-bb53-40dd-b938-4bd4b21ef41a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "62bfe1db-8c4c-4476-80e9-0d6779e265d6"
        },
        "item": {
          "id": "d30817de-c01e-46ea-bb35-f5e253329d3a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae5ff9fd-7e9b-456c-b7cb-7db2bdfee326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae351411-75d5-4bed-825d-8d77595c7017",
        "cursor": {
          "ref": "dcdd1254-b9dd-49ee-993e-e62f3f706403",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a23b009c-7c02-4649-9ec8-d3d44fddbe2d"
        },
        "item": {
          "id": "ae351411-75d5-4bed-825d-8d77595c7017",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9d68d60a-fa86-4d00-a72a-58cb196667af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b90f337-38c7-4024-9161-a0b864892d23",
        "cursor": {
          "ref": "10effaec-1f58-4b56-9659-6e5f104683e1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0d55de06-f708-440b-9d37-d3538b1801ed"
        },
        "item": {
          "id": "2b90f337-38c7-4024-9161-a0b864892d23",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "71046f39-f32b-4256-860b-304ee5ea0984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c56792-c634-401e-a5fa-e0f52eecfb02",
        "cursor": {
          "ref": "592cbc34-9985-4b14-819a-665fae7d9ee1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "481fc9b3-50ab-4a3a-8a2b-5fbde0bf9f8e"
        },
        "item": {
          "id": "19c56792-c634-401e-a5fa-e0f52eecfb02",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "640a31be-d197-4ec4-b972-fd80a8537ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c965e965-3d95-4c6f-9a4d-eda4260bf5df",
        "cursor": {
          "ref": "6d346503-3a79-4ede-bfcb-1fbe19f77459",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "66d80bd8-1f62-4fcd-b0ad-51a527d46df4"
        },
        "item": {
          "id": "c965e965-3d95-4c6f-9a4d-eda4260bf5df",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a42ba638-7691-42d5-9fbd-9f241f09d003",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b81cc9-2508-4ff6-865d-efa111b4834b",
        "cursor": {
          "ref": "47561dfc-b0cc-4c37-ad8a-4efcb5aacbd1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cd3f04cb-01e1-484d-b6f0-70815c651f00"
        },
        "item": {
          "id": "d2b81cc9-2508-4ff6-865d-efa111b4834b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e843c02e-74c2-40f9-8100-4070fcd20cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2dad9668-c543-4d40-8345-fcc8249ca3dc",
        "cursor": {
          "ref": "2b532837-a7e1-4f5b-8859-328e44252f00",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "46a53e4d-30dc-4dbb-a263-ed4d6ad43184"
        },
        "item": {
          "id": "2dad9668-c543-4d40-8345-fcc8249ca3dc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "353b3308-29fd-4aed-ba1d-ae5e2abd616d",
          "status": "Created",
          "code": 201,
          "responseTime": 5640,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5366dbd4-702b-47a6-8898-39adc88314d9",
        "cursor": {
          "ref": "8329bdd8-14df-42f8-b3e3-c1f8dde3b59f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "584a23cf-de79-4d1e-9806-11dfd9c24fec"
        },
        "item": {
          "id": "5366dbd4-702b-47a6-8898-39adc88314d9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e11b9624-e818-4d18-8f23-2baa5cf3e940",
          "status": "Created",
          "code": 201,
          "responseTime": 5459,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3da72d-aa92-452a-916e-bd0905448548",
        "cursor": {
          "ref": "aae7fdc2-8b12-4a75-9b60-c543bc888f71",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d8f673f8-035a-40fc-81a8-0f0b3b96e14c"
        },
        "item": {
          "id": "0e3da72d-aa92-452a-916e-bd0905448548",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea7153b2-5d6d-4585-8dcb-5fb7a883d98c",
          "status": "Created",
          "code": 201,
          "responseTime": 4912,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5385fbc5-395b-4bb3-bc7d-48507205001a",
        "cursor": {
          "ref": "8b887c01-331b-47b0-bec1-ef510139eab5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a7a83a5e-34f2-45f2-a3f1-d3f1793ae84e"
        },
        "item": {
          "id": "5385fbc5-395b-4bb3-bc7d-48507205001a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "38adcc05-eeeb-438e-9530-e04e97f2972b",
          "status": "Created",
          "code": 201,
          "responseTime": 5241,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f403b682-0c26-4fd2-95e9-4e59f46e6d92",
        "cursor": {
          "ref": "de2f608d-e236-46b8-bbda-37a20677369b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "30a6849f-249e-4119-b0f9-d24bda94ea89"
        },
        "item": {
          "id": "f403b682-0c26-4fd2-95e9-4e59f46e6d92",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0b2a4750-06a6-4683-8438-c853ada8077b",
          "status": "Created",
          "code": 201,
          "responseTime": 5186,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-03T00:39:11Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-03T00:39:11Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d7d3f0ce-e632-46cc-b00d-b7efbf8be67e",
        "cursor": {
          "ref": "7e22ae8e-094c-4b60-ad9a-4d3b8a1eb9fe",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8f543440-4691-4deb-b677-8a51a74e2664"
        },
        "item": {
          "id": "d7d3f0ce-e632-46cc-b00d-b7efbf8be67e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0b7ae5fa-9c15-466f-9c41-33456899f9c5",
          "status": "Created",
          "code": 201,
          "responseTime": 5500,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eed2708-01b4-4df6-9c00-4000c14c4da4",
        "cursor": {
          "ref": "469d1fef-4c04-4c14-99ea-f48d0a0483b3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5a0073e1-ab3c-494b-8fb7-c6fe3d1c4ea0"
        },
        "item": {
          "id": "6eed2708-01b4-4df6-9c00-4000c14c4da4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2c18f680-2e87-4393-bd7f-32704f14c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f8173f-27c8-40d2-a5f1-9c31099ca99a",
        "cursor": {
          "ref": "5289bc23-6c90-41af-866e-cb645a5b93ec",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d6b0348e-618b-4ce9-97ac-d9f39533d9a1"
        },
        "item": {
          "id": "54f8173f-27c8-40d2-a5f1-9c31099ca99a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9413ba41-8fa5-4c45-bc52-b259b9ecf154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724e2f46-1edd-45b8-ae6b-1c63a10cbe0b",
        "cursor": {
          "ref": "8a21b4df-fdd1-479f-81ef-8be7f024d7ef",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d22e3987-24d5-485d-a381-a33122075b77"
        },
        "item": {
          "id": "724e2f46-1edd-45b8-ae6b-1c63a10cbe0b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "68dd83f7-d34e-4a20-a503-e46a1ef6ae3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fcd1ab-262d-4c2c-a092-08b0bfbd64fb",
        "cursor": {
          "ref": "6e5f72dd-21e2-4ea0-bd42-1063b2fa3052",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "735b3457-b2aa-45de-a817-a559aec85b77"
        },
        "item": {
          "id": "79fcd1ab-262d-4c2c-a092-08b0bfbd64fb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "61962852-87c7-47e4-aeb0-691a4807abc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864ee05d-1fce-41ee-8f3f-a342fe9a6d7e",
        "cursor": {
          "ref": "395265e8-7bd0-4efc-b56b-ca5f1074681f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "897d3f56-3eb4-49d5-96b7-356bab51a9dc"
        },
        "item": {
          "id": "864ee05d-1fce-41ee-8f3f-a342fe9a6d7e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bbbd3a82-7c53-4a34-81fc-0735a8d584d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49bdb49-5579-497d-827a-5dbba19bae80",
        "cursor": {
          "ref": "63f5e600-41b0-4521-b52d-303f5156bbdf",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7dee2319-b2be-484c-aae5-16db864cff25"
        },
        "item": {
          "id": "e49bdb49-5579-497d-827a-5dbba19bae80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "893c9f3c-b373-4a09-bb23-fa708e76b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778aa3c6-0922-461a-b78b-c896083d7eb4",
        "cursor": {
          "ref": "e8067ffd-930c-480e-891a-7ae2e99bdf98",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6231c9db-d04b-48eb-9478-f4c4837a0d88"
        },
        "item": {
          "id": "778aa3c6-0922-461a-b78b-c896083d7eb4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0370f17b-34e0-44aa-8dc5-8fd7d8fbf532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee943a4-02aa-44ca-b452-5831c17a7dfa",
        "cursor": {
          "ref": "92708b61-841a-42d8-886e-982dde030928",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c1bb9c3c-bd0e-4e0c-883f-3fc8bf977ed8"
        },
        "item": {
          "id": "0ee943a4-02aa-44ca-b452-5831c17a7dfa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "552c9837-aae5-44cb-baa1-1055a3e44f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d70ed6-d2ea-424b-8e02-d07bdc1825af",
        "cursor": {
          "ref": "120abb0a-49f2-4439-972f-f7712de12208",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a782e7fb-9f60-488e-87cc-b45e7dd8bade"
        },
        "item": {
          "id": "25d70ed6-d2ea-424b-8e02-d07bdc1825af",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "041ee6d4-095b-48a7-93c1-7f5beaf5043f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dd920c-487c-424b-8111-5cd30e551a54",
        "cursor": {
          "ref": "a5413ce5-9ffb-49e5-98f5-0c6dbca93b30",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd96fdc9-1a63-4d0e-986e-86eb978f7ad6"
        },
        "item": {
          "id": "41dd920c-487c-424b-8111-5cd30e551a54",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6f9e6b87-2d94-4b74-af3f-48e986d670c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acafd54a-b442-4633-b07a-0e9192eaf2cd",
        "cursor": {
          "ref": "57871cfa-eb44-414f-bcf9-d1daba7db631",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6863572f-4420-4500-b51c-b29ecaec29f9"
        },
        "item": {
          "id": "acafd54a-b442-4633-b07a-0e9192eaf2cd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "29f6db7a-21c0-47f8-b1c7-7c6bf3a2c26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8f4e2d-532e-4555-8516-d84bb4efa5ac",
        "cursor": {
          "ref": "dd7f5824-e0f7-40c9-b95d-0039765c863a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8d619dd1-f1d5-44b0-af54-13d5ec74e4e7"
        },
        "item": {
          "id": "8b8f4e2d-532e-4555-8516-d84bb4efa5ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "34924844-893e-4435-9836-c6db863e41b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccedc67-4688-4c80-952f-829b02f18061",
        "cursor": {
          "ref": "6ebcd3ed-3481-4d0b-b450-179cc330238d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9ac59be4-3d75-46a3-a27b-450f9f05a8b3"
        },
        "item": {
          "id": "8ccedc67-4688-4c80-952f-829b02f18061",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1f3fa41-fb44-4326-8a08-81dd82c00f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df3bd62-cf7c-48ff-89db-6e8db0eea1c7",
        "cursor": {
          "ref": "641bfe01-a701-4608-9897-de0866981874",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1504d0cf-c989-4e3f-87ea-5196012211af"
        },
        "item": {
          "id": "7df3bd62-cf7c-48ff-89db-6e8db0eea1c7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aaf6f091-cb30-437c-a135-385ee46739f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d0088b-6760-433b-ba16-10ada8800234",
        "cursor": {
          "ref": "991d713e-c8ef-4b46-8992-11d5dc42f937",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ca02f471-6600-4a88-9514-5e725c54bbd5"
        },
        "item": {
          "id": "f9d0088b-6760-433b-ba16-10ada8800234",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c8d4af3-d0e5-44cd-b403-5ed18faa8999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f519551-57a7-42e6-b351-d4b338d2d532",
        "cursor": {
          "ref": "9bfc3a58-9e52-44ae-9642-23963f325260",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9e9c025-3e3f-4a8d-9e2f-cd3c43c73644"
        },
        "item": {
          "id": "0f519551-57a7-42e6-b351-d4b338d2d532",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e84ae909-76f1-4d2b-8ddd-1fb484aad9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ad74f3-30c4-4266-9572-e6a730cc1463",
        "cursor": {
          "ref": "13b4fc5c-7a9b-4cc3-9cf4-d99959fef737",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5bc3fc92-6017-4f05-a18c-d3ecc4313d54"
        },
        "item": {
          "id": "29ad74f3-30c4-4266-9572-e6a730cc1463",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ea237e5-b8f3-4492-9f2a-eeda84ef32c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726aebdb-e2f1-4000-a050-6710b9ea24e3",
        "cursor": {
          "ref": "58a2e088-480c-46c3-bd16-e41566db96bb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "773ba6d9-581a-4e9a-abb2-fe30db68d217"
        },
        "item": {
          "id": "726aebdb-e2f1-4000-a050-6710b9ea24e3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "02dc96b1-4ac8-48eb-b2a3-e122d5eef51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba349d59-cb61-49c5-8892-e8bdc92a47dd",
        "cursor": {
          "ref": "b8f94ccf-7dd9-4091-b180-5d7d16761545",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c367ca5f-4ae3-40f0-bc61-5c451ada1631"
        },
        "item": {
          "id": "ba349d59-cb61-49c5-8892-e8bdc92a47dd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e91c30a0-6cb0-48a6-952e-48a99a58df65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58905267-3c6a-44f0-b6b9-0a2f2d137edf",
        "cursor": {
          "ref": "a85f5b39-c77d-4822-b68a-24c2968f0277",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "32236981-df70-4c8c-ac76-8a7a0a50af5d"
        },
        "item": {
          "id": "58905267-3c6a-44f0-b6b9-0a2f2d137edf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1c2c0237-0857-4402-9741-b226bae7f2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f1fac3-0749-4c35-bb67-ec6d18b52ffc",
        "cursor": {
          "ref": "1b1f01a1-69b6-4ad1-80c9-6d07a66ef703",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f4822621-be26-4579-af2d-33df6eba8b80"
        },
        "item": {
          "id": "35f1fac3-0749-4c35-bb67-ec6d18b52ffc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5eeda8ab-e0ae-4f4f-9508-9b5598bcf7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c8658d-3d5e-4fe3-8d25-691bcf75cfe8",
        "cursor": {
          "ref": "99d50adc-0a48-4589-8273-b21e3dbe6d45",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bcdd3d7e-77ad-463b-9b2e-4a6b8eda9a41"
        },
        "item": {
          "id": "b9c8658d-3d5e-4fe3-8d25-691bcf75cfe8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d982ed47-7e8b-4a68-ae65-25185db48701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b029d8-72be-4687-a1e5-d392cb1270b9",
        "cursor": {
          "ref": "23da1ca2-2645-47e5-aa99-09b29d894f9e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42956991-86a1-45db-89a6-c72d7b40e575"
        },
        "item": {
          "id": "74b029d8-72be-4687-a1e5-d392cb1270b9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6bef2d75-3d1c-43fe-9f15-7b8e938be851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846cf484-8494-4a87-a7f0-e1ef12051f6e",
        "cursor": {
          "ref": "e47c37ae-dc04-459a-ab2c-d86addba9d44",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8150c122-680b-4f44-a7a6-63496961edc3"
        },
        "item": {
          "id": "846cf484-8494-4a87-a7f0-e1ef12051f6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6169336-e735-4bb1-8d87-6b01e8c263e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cd39a9-1618-41ea-94e7-d448fcfe71ec",
        "cursor": {
          "ref": "1b5b7c9a-08ca-4989-829e-619349295fcc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e498ba4d-9fef-4da9-b93c-9ec19841181a"
        },
        "item": {
          "id": "84cd39a9-1618-41ea-94e7-d448fcfe71ec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "99a904ea-b3c7-44c7-afe7-6678fcffe965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e413d8b6-e679-414f-9173-206ae89c161d",
        "cursor": {
          "ref": "23a283bd-6410-49dd-b121-3467a17e1142",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3bcf5ed4-6760-49a0-81a8-6e6d03d68b9e"
        },
        "item": {
          "id": "e413d8b6-e679-414f-9173-206ae89c161d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd2f7a8f-c29b-4d02-a046-994db06370e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f784584d-b9c8-4057-a02b-95f46fdc0585",
        "cursor": {
          "ref": "f6ab4a82-7a68-4da6-81b6-5604c8ff034b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7e8b6143-903b-49ff-abe2-14ddbaf55a68"
        },
        "item": {
          "id": "f784584d-b9c8-4057-a02b-95f46fdc0585",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2aff32f7-7077-4b28-bf38-2c31c5badaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2159dfb3-9a57-44ae-ba24-a19b0f42d947",
        "cursor": {
          "ref": "a73b2578-9a7e-41e6-af9e-2c33082a9425",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "58904f43-367a-4a06-96f8-9f0a82189894"
        },
        "item": {
          "id": "2159dfb3-9a57-44ae-ba24-a19b0f42d947",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0eda051e-7a67-4751-8dae-756ae7f36433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53557f17-0d3e-408e-a66a-bb3293c81e44",
        "cursor": {
          "ref": "37c5494b-7b51-41d9-8471-18c3a1f0a8f5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "60387109-6ba1-4612-b72b-b7306a402cdc"
        },
        "item": {
          "id": "53557f17-0d3e-408e-a66a-bb3293c81e44",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "313183e3-6294-4811-8bc4-af939a4abc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96123bff-ab91-4ddd-be93-848ae1cc06b6",
        "cursor": {
          "ref": "2704c4e4-18bd-46bc-a525-655a4caa183a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9d3fcfc9-0d3b-46d6-a7a2-50debb594b4f"
        },
        "item": {
          "id": "96123bff-ab91-4ddd-be93-848ae1cc06b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9e7303d5-993c-4434-a89f-e89744c0f104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b770638b-588a-434c-acd8-584648d8d3f9",
        "cursor": {
          "ref": "11fd4d05-b43d-4a75-8934-705c4daee5ed",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a1a39639-a9db-496f-8b02-1cc6594a2fb1"
        },
        "item": {
          "id": "b770638b-588a-434c-acd8-584648d8d3f9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ebe0366c-2e7d-4e15-9e93-56bac5c62e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9175b375-e25c-44a1-92b5-6a7a39873435",
        "cursor": {
          "ref": "a6c84883-b963-44e7-8c07-85369ef49178",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c7f77a93-8684-4343-a5c7-a96cfd25c4c0"
        },
        "item": {
          "id": "9175b375-e25c-44a1-92b5-6a7a39873435",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "12e64080-2535-4d22-bbdd-05bc2a273d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb85e18-f68e-45b7-a215-b82add709eb2",
        "cursor": {
          "ref": "dc761c06-c742-413b-9a3f-8f6649b0c195",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c18cf288-aeca-4364-964e-50872d9a47e0"
        },
        "item": {
          "id": "cfb85e18-f68e-45b7-a215-b82add709eb2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8188ab4a-e4ac-406c-b6c3-8a833ac71360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd4b643-8f71-457f-a5fd-0f2429bc0401",
        "cursor": {
          "ref": "46377a1f-3e47-4b1d-884b-91f28cb97093",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "723a13af-d87e-405e-a80b-27af1c04c988"
        },
        "item": {
          "id": "6dd4b643-8f71-457f-a5fd-0f2429bc0401",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "899884a9-2091-4a82-88b1-f1f4be66596f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82431e43-3601-42c3-ab34-3bd13a25d580",
        "cursor": {
          "ref": "08b49b80-9db2-4e5a-84b3-a6216561f3c4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e83c5880-77d9-4328-9b65-771850527927"
        },
        "item": {
          "id": "82431e43-3601-42c3-ab34-3bd13a25d580",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ed90cc35-3a71-4d04-b4f0-46b2eb2f579c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1622a964-ce05-42d4-9ec7-6c528429d231",
        "cursor": {
          "ref": "b9de1db1-5f48-4410-be81-cfa0c3139d71",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02aaddae-f687-48eb-9e64-00110ae84cb6"
        },
        "item": {
          "id": "1622a964-ce05-42d4-9ec7-6c528429d231",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "752b0a37-a4cc-4635-b5ce-d5fc18451ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152fa0f3-aca0-4e5d-adba-65e9446efaca",
        "cursor": {
          "ref": "abd67a3c-2e30-44e8-95e6-4aa62dc79a18",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e5bf9624-9fc1-4e59-a8f1-3a656d853ac7"
        },
        "item": {
          "id": "152fa0f3-aca0-4e5d-adba-65e9446efaca",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c4595e47-4f8c-4e6c-b1f3-34d05b7b964b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1d2def-fadd-47ab-85dd-2970f4e09c57",
        "cursor": {
          "ref": "e59a9024-5caa-4c7f-98b8-39c16a1aff86",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3c2b8dd6-cac6-4926-bcd3-de6b48ca860f"
        },
        "item": {
          "id": "0d1d2def-fadd-47ab-85dd-2970f4e09c57",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fb897c6f-d8b9-4f37-b963-a2e9e235c677",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab36cbbc-297e-4133-928a-7c1e56e87291",
        "cursor": {
          "ref": "388e632e-977a-4686-a963-40036267a88d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "86328a72-45e5-42d6-90a5-a1cb7086a107"
        },
        "item": {
          "id": "ab36cbbc-297e-4133-928a-7c1e56e87291",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "598a337b-adc0-4087-9100-19c38424090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b28e9ea-a099-4709-84f9-c903f3f8f766",
        "cursor": {
          "ref": "3a67bee9-ddf5-4c0d-b433-20ad4717adcc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d9b54d36-b9fe-415a-9ca7-c07e1c0e1caf"
        },
        "item": {
          "id": "7b28e9ea-a099-4709-84f9-c903f3f8f766",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e9c30c37-8f02-4b6c-9551-684426abca8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a117eafb-13d1-4d4f-88f2-c15096d6a651",
        "cursor": {
          "ref": "cac2a1d4-201e-44dd-86c9-fe27dac6ba57",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0f15fc14-4e37-4708-9c34-11a526600201"
        },
        "item": {
          "id": "a117eafb-13d1-4d4f-88f2-c15096d6a651",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "78c138e1-47a9-4d96-87db-6e89d2c9cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a88be87-ac63-498d-b7d3-9c2c76ef3ed0",
        "cursor": {
          "ref": "f3a6dbb7-3087-4fc4-ba95-b7ad1ed119d8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cddea7c0-ac2c-4d78-88c3-f8b4e1f8c867"
        },
        "item": {
          "id": "9a88be87-ac63-498d-b7d3-9c2c76ef3ed0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cea516b1-d165-4e77-8326-635dea58d356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7433c7cd-5854-4768-974f-6550b267294b",
        "cursor": {
          "ref": "d3338d1a-3cf2-4c80-bb57-306e63cc7c61",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9c362245-3c09-45e4-825d-e1e81fab3149"
        },
        "item": {
          "id": "7433c7cd-5854-4768-974f-6550b267294b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6185adf9-89fc-4240-a564-a5595d2be44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c5430-f279-4ec8-92b9-9322da171e97",
        "cursor": {
          "ref": "8413a7b8-ba42-4ac9-87aa-f896f8a0a695",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d368b407-1680-41aa-bf9e-a1a44c709771"
        },
        "item": {
          "id": "c37c5430-f279-4ec8-92b9-9322da171e97",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8aab0aff-cbf8-4b5b-ac8a-a6df2d797aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85036bdb-d2c7-49f1-ac1c-394784074a70",
        "cursor": {
          "ref": "1068b886-3502-4bc9-9141-2343d2f0aadd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37a52b0d-3c4c-4b99-83eb-4f0cba3a5593"
        },
        "item": {
          "id": "85036bdb-d2c7-49f1-ac1c-394784074a70",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2a425e63-0793-4ce4-823e-7a20cb3505c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6fcb8a-b083-4365-a08f-817299c4113e",
        "cursor": {
          "ref": "b931754a-4661-43dc-9014-6e06b5acc1e5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7190a145-6f4d-405e-9e9d-7cd2d8f0241f"
        },
        "item": {
          "id": "ef6fcb8a-b083-4365-a08f-817299c4113e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "45904156-3059-4fe6-874f-aa3a5d976505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc58391-a831-4acf-932b-58279f32f771",
        "cursor": {
          "ref": "a6863771-f2e4-4fc9-8b3e-e9cd7ff211c0",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c7444d93-8f87-442b-a0c9-a13c9c0d8825"
        },
        "item": {
          "id": "cdc58391-a831-4acf-932b-58279f32f771",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4e0047ad-26c0-45ce-a148-0d8e8ce4cb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bed654b-ffa9-4e1a-ab16-6d53d851df62",
        "cursor": {
          "ref": "64df1a9e-b80e-4c61-8841-155794048257",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e8ff8f73-223c-4fcc-805c-96eb864e68a1"
        },
        "item": {
          "id": "6bed654b-ffa9-4e1a-ab16-6d53d851df62",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bac9fcfa-f375-4cf3-86f8-9a1f0783f2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49247ad-8216-4831-9b52-ff33ccd62a18",
        "cursor": {
          "ref": "3684c869-a068-4f50-8872-836607ae8807",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "056dbe27-472a-4bc4-8519-e5d50ac45458"
        },
        "item": {
          "id": "f49247ad-8216-4831-9b52-ff33ccd62a18",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b8bba87e-2205-4f25-b442-cd608604dd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332537c3-ce03-4339-867f-d3ea07757308",
        "cursor": {
          "ref": "18c8e37b-2d8c-4c63-92b9-a23320fbd492",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "148f3771-9a11-402c-b82f-aba066cc0399"
        },
        "item": {
          "id": "332537c3-ce03-4339-867f-d3ea07757308",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ea7e3317-83b2-4b73-b1a2-cd2b6aaece5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce2e03c-75bb-4b91-967f-e61a1e76d29a",
        "cursor": {
          "ref": "afbb6183-70c6-4933-b4ce-83936f22a892",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "87f28f4a-4424-422a-9ff0-0aa3cab19282"
        },
        "item": {
          "id": "cce2e03c-75bb-4b91-967f-e61a1e76d29a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9c8b73bc-47ce-4b02-b48d-260c7a40ef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e918644-49db-47ed-9289-8e3211e21373",
        "cursor": {
          "ref": "72961936-6d60-4d35-a974-4e9827e5d928",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5d7ba292-a968-4ded-b0b9-2d4bd5a10661"
        },
        "item": {
          "id": "7e918644-49db-47ed-9289-8e3211e21373",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5626868e-020e-4ecc-a558-354c068fe80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec478fc-51e9-4219-8052-58bb7b563393",
        "cursor": {
          "ref": "47e31edf-ad5b-4efc-bb44-6c7074a50ee7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "73277ad1-4c82-4d35-b59b-78b9a1513207"
        },
        "item": {
          "id": "1ec478fc-51e9-4219-8052-58bb7b563393",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "01c766dd-11eb-4f92-ad2e-5c33aca76d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d476b2db-994b-4612-960a-3cd30cde8cd6",
        "cursor": {
          "ref": "1615c224-3453-4d69-8899-668e5b2c1750",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52c164b0-996f-4bc9-82f0-cad2c0ea10b8"
        },
        "item": {
          "id": "d476b2db-994b-4612-960a-3cd30cde8cd6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0bf352a3-637f-48c0-aceb-8e6d8f5c06ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f983b06-290c-44fd-b541-2922a700d1f9",
        "cursor": {
          "ref": "ed0218b4-c71e-4f77-a57d-de45b2635346",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f0c15f32-d24f-4d58-b9e9-5066876519bb"
        },
        "item": {
          "id": "8f983b06-290c-44fd-b541-2922a700d1f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9a8d5614-b410-41b1-aaba-61611bafd1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad7b4d-82f0-4a6b-aa13-c9e86734e9ca",
        "cursor": {
          "ref": "37973e46-4b29-4f18-8df8-ba5e8256134f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2accf4af-7d87-4eda-b674-2692b1359a4d"
        },
        "item": {
          "id": "27ad7b4d-82f0-4a6b-aa13-c9e86734e9ca",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6289f805-b286-4339-8116-808dbb80f459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab30f6c0-74fb-4e43-b612-8fdc7f2ec8bb",
        "cursor": {
          "ref": "2c25d3de-84db-42bc-a2a1-dabc91c155b2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bbbf7ee3-bfe0-4458-a26c-2ba7feef286c"
        },
        "item": {
          "id": "ab30f6c0-74fb-4e43-b612-8fdc7f2ec8bb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "90d0f66b-89d3-4809-833a-431a7a168261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bb2bc6-122f-4103-8666-e27a87930ff6",
        "cursor": {
          "ref": "696eb250-1bae-4ff2-9add-5078433655c3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "07ae2229-5c97-4c1f-9c39-03f4ff529bf9"
        },
        "item": {
          "id": "e0bb2bc6-122f-4103-8666-e27a87930ff6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5159f701-17ff-4a62-88af-8dab2ebb0882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eb7c9d-cdb9-4004-b916-f329f0e89b21",
        "cursor": {
          "ref": "31687d2f-3aff-4c06-938b-f4c2e125242d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "60b3a4d9-cdc7-494c-acb1-3f490486c7c2"
        },
        "item": {
          "id": "92eb7c9d-cdb9-4004-b916-f329f0e89b21",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2aa9b185-17ff-4c70-aeda-ccc1292248db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ef7db-ba27-4c82-88e0-570b262b458b",
        "cursor": {
          "ref": "a2ce9e82-f949-4317-a4a3-2bcb5c7fc930",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2f552a11-9d75-4ab9-ab7e-7ae624ea1394"
        },
        "item": {
          "id": "312ef7db-ba27-4c82-88e0-570b262b458b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c06b8c96-6c90-4ab1-9197-c7e8f47402c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83811f7-ffa7-4b93-8824-78ceedfd0c11",
        "cursor": {
          "ref": "03620795-aa89-4dc7-87c5-fcec7c2b0d97",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c6d15fd6-aa9c-492e-bbed-0f1b7fae2b5f"
        },
        "item": {
          "id": "b83811f7-ffa7-4b93-8824-78ceedfd0c11",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "59db3803-83ad-4226-9cae-1bb91d7582c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e6659e-4c17-4c2b-adf6-d611fa54a634",
        "cursor": {
          "ref": "acb44bdd-494b-4b3a-9dd0-1130e1cc3498",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b8cc35f7-4f96-4942-858f-097e22641a60"
        },
        "item": {
          "id": "74e6659e-4c17-4c2b-adf6-d611fa54a634",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8eaa2602-5979-4332-a11b-53cc36893625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba68526-c141-4e47-9f5b-f309b710f8bc",
        "cursor": {
          "ref": "f0d83dc5-6894-4c4d-b64f-bfbc56a781ed",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7e21421-0983-40ca-a987-8c2854c28175"
        },
        "item": {
          "id": "8ba68526-c141-4e47-9f5b-f309b710f8bc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9fa53213-b037-4d09-ba56-1af7e516cf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb8ef5e-7618-425f-930e-02641560167f",
        "cursor": {
          "ref": "d1d63643-c1f2-4e18-bb2c-6439758589f3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a5df7a60-fbf3-4d2b-8789-6f32602c80e0"
        },
        "item": {
          "id": "9bb8ef5e-7618-425f-930e-02641560167f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f33dc546-5604-4f92-b73f-f326cd634ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1680a2-123a-4c1a-8611-b113023b6ab6",
        "cursor": {
          "ref": "e1d6f39b-3064-4838-88ca-4f6d459b1085",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "26bc7560-4cfc-410f-a882-cd1bb319fa78"
        },
        "item": {
          "id": "0b1680a2-123a-4c1a-8611-b113023b6ab6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "40762493-5df3-4482-933a-e2d9194e9321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ace5520-bdaf-4a2d-a075-5d6f9e3dbf6a",
        "cursor": {
          "ref": "28c36498-d638-4e89-a238-567bce6ed169",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "33afc58e-4b8f-4b17-aa3d-080a1a8a168b"
        },
        "item": {
          "id": "8ace5520-bdaf-4a2d-a075-5d6f9e3dbf6a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e165e76e-82e1-4189-8206-a144c5caafcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307d8559-511d-4bf0-a27f-12afc0892696",
        "cursor": {
          "ref": "c34a18b6-de54-4785-9bd1-0ae395190b5b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67c54b62-53da-480d-955f-d2373eaf7388"
        },
        "item": {
          "id": "307d8559-511d-4bf0-a27f-12afc0892696",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "24d44660-4673-4019-8c95-bec2d6d98cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7b9141-a739-4d95-b570-fd5b9988504b",
        "cursor": {
          "ref": "b7976b0e-675e-4ff9-a313-10fefe7d5266",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dccdffc7-7cc2-443c-a75a-34c56c812b3b"
        },
        "item": {
          "id": "bb7b9141-a739-4d95-b570-fd5b9988504b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "415d7c9e-d5fe-4739-be8e-84224c82d916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1bc473-afc2-41ad-b4b5-aab4423268f7",
        "cursor": {
          "ref": "416a34c8-9e46-4897-84f7-4baec1819bd3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6265fbad-8029-481b-8b78-4bb27c7be33b"
        },
        "item": {
          "id": "9a1bc473-afc2-41ad-b4b5-aab4423268f7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f129a2f6-6080-44ef-b548-22f0ded3334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601a7cc2-e159-4e7e-9824-14178b301919",
        "cursor": {
          "ref": "fcaa15d6-5c97-4e0a-a5ad-bee57662c628",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2ce1d39c-92a5-41a3-8412-e2ebee828f24"
        },
        "item": {
          "id": "601a7cc2-e159-4e7e-9824-14178b301919",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8a77aba3-2dd8-4117-a944-67fe4840577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badaad65-dddc-44a6-bc43-7843357dd4a1",
        "cursor": {
          "ref": "8c7dafd8-9677-4fdb-97ec-39ba94de4c11",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99b1107e-72b6-4bec-be38-3c02fd7c9517"
        },
        "item": {
          "id": "badaad65-dddc-44a6-bc43-7843357dd4a1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9d6ef212-7e4b-41b5-b63d-cf2577ae383b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c77b63-e569-48b9-9f70-34caccf5f6aa",
        "cursor": {
          "ref": "52dd7612-b339-49f2-9669-c8064e6a8c2d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e1adccfc-f9ed-48c3-8c63-943753c0d610"
        },
        "item": {
          "id": "20c77b63-e569-48b9-9f70-34caccf5f6aa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f750e7ae-1f36-4b3f-b373-49300cd3bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e6ca88-0212-4661-87b1-29296044c69d",
        "cursor": {
          "ref": "1867592f-b388-46ad-8519-0971f3d4eada",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8e2c470-5dba-4ec8-b615-386b22e4e154"
        },
        "item": {
          "id": "63e6ca88-0212-4661-87b1-29296044c69d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "32a0d092-bcb9-43f7-ac05-6ef6321093eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a461aef-ec69-44ac-88c0-95fd36ee0701",
        "cursor": {
          "ref": "f2bf4bb2-8c47-450f-81b1-11ff144fc5b7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9b339054-efe9-44cf-ac4b-162314294e0c"
        },
        "item": {
          "id": "8a461aef-ec69-44ac-88c0-95fd36ee0701",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5bedc77a-5a63-4f47-80c0-43b118d6866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eb205e-e8c0-4c69-9f3d-3c18edebad1b",
        "cursor": {
          "ref": "cccdc772-e673-47e9-8b34-74712209f851",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c7a9bcb2-23ac-432b-984b-6802232b647d"
        },
        "item": {
          "id": "02eb205e-e8c0-4c69-9f3d-3c18edebad1b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9bc68dd2-a469-4a4c-b945-fdf3392d77e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96735a19-b2a4-4d60-8492-d66b4e08f828",
        "cursor": {
          "ref": "0f429bce-14a5-40b0-90ce-d290603db56d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c15e27e5-6b8f-4222-b047-5fd5844b1105"
        },
        "item": {
          "id": "96735a19-b2a4-4d60-8492-d66b4e08f828",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d5d65958-73db-4d57-b068-64bc8518331c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97534a9c-53f9-4ea2-9604-c3ed8b6b4cd6",
        "cursor": {
          "ref": "174f90b0-d20a-46e3-a759-77a9606f521e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "52be6101-114e-494d-96d0-0131605784b8"
        },
        "item": {
          "id": "97534a9c-53f9-4ea2-9604-c3ed8b6b4cd6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c66623ae-f8b2-4aa7-8099-0abbd0481e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7049151-faec-418c-ba51-65438ad2c658",
        "cursor": {
          "ref": "f0d18fa1-052d-4172-a314-d85ad516005c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "68595470-cd62-4d1a-9b3d-10b287fce57f"
        },
        "item": {
          "id": "d7049151-faec-418c-ba51-65438ad2c658",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c0ba1582-d6a4-4a20-a104-cf269fc2a99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1966b140-6aa0-4b00-89f9-13d947c1452b",
        "cursor": {
          "ref": "ec4bf888-40d1-42f3-9cb7-dee0c3863613",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "59e31ef9-c279-47ab-a11b-39cfb7ec1e97"
        },
        "item": {
          "id": "1966b140-6aa0-4b00-89f9-13d947c1452b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "245c5d81-0d3d-41b7-9b43-69b67d48a0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fada545-fb54-4808-9f30-be94e5b8f63a",
        "cursor": {
          "ref": "cac0c872-aa11-443e-a878-8f38ebe39f66",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c39f90d4-2733-45b1-89a7-3dabcee3cf36"
        },
        "item": {
          "id": "5fada545-fb54-4808-9f30-be94e5b8f63a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b8433e87-1187-4c9a-a7d1-5d23e7a453e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1108434e-2e55-44a0-be8b-cc51ed2a8f6c",
        "cursor": {
          "ref": "cac04a3e-ca19-4221-b622-64aa128cae3d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9d7da655-db19-47dd-9992-a841b908fc74"
        },
        "item": {
          "id": "1108434e-2e55-44a0-be8b-cc51ed2a8f6c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eb1f2ab4-9046-4eb7-843f-6c7c89e5e801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af2f9d0-d72e-446a-994f-df2a0d6f9a76",
        "cursor": {
          "ref": "c9c5d731-5537-46ac-af2c-6fee6d9b5e0c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a7aef5fd-ad9d-4f97-9733-ffb8deb9afde"
        },
        "item": {
          "id": "9af2f9d0-d72e-446a-994f-df2a0d6f9a76",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3d849c0-8852-41a7-9dca-a1dcc218880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da1003d-ece7-4663-94bd-97f758de3c73",
        "cursor": {
          "ref": "5e91d03c-ad3f-4f1d-9f7a-8fbaeaabca8b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "95e6e648-d1be-4a05-b440-c3792085c8b5"
        },
        "item": {
          "id": "4da1003d-ece7-4663-94bd-97f758de3c73",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fdceb652-b441-4984-8133-2036889fb7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c6778-a318-48b7-9f44-f6d48370c503",
        "cursor": {
          "ref": "3c025802-3511-4b99-bfc4-08de02265a74",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "453c3523-6e12-4c42-9fe7-3c3cf3b58d92"
        },
        "item": {
          "id": "1e4c6778-a318-48b7-9f44-f6d48370c503",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2b7831d0-d100-45a5-b8fe-0f23fcdaa613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc28e52c-9388-4c99-8110-bc557f7a74be",
        "cursor": {
          "ref": "85f631a7-42f4-467a-b5d6-5928ade1816f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e7404f7d-076f-4b23-980c-1eed899f6c69"
        },
        "item": {
          "id": "cc28e52c-9388-4c99-8110-bc557f7a74be",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "890b343e-ed68-43aa-bdae-45c165ba8f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca33ae70-51d1-492d-86d9-11e805d502fc",
        "cursor": {
          "ref": "f65e0d67-5358-4c3b-8f9c-a41c98a9c0c9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "973b5f12-51c9-4922-bef6-187a4647c482"
        },
        "item": {
          "id": "ca33ae70-51d1-492d-86d9-11e805d502fc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b71e634d-0702-47f8-ac05-05df774dcddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f60df9-e8f5-4791-a9d3-b8dbceada93e",
        "cursor": {
          "ref": "96753f1b-cf9c-4b5e-b024-27e7e9048b87",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "98737fa9-1916-4195-b401-56dec99d6d2a"
        },
        "item": {
          "id": "08f60df9-e8f5-4791-a9d3-b8dbceada93e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a757aae3-41e8-4a84-96e2-db11355f2dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2cd0c1-b226-41ac-9479-992193dfedcc",
        "cursor": {
          "ref": "cbd0d35e-c810-4fd0-aaad-040a19a34398",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56970982-a31b-4e1e-b38e-80a1fe8582aa"
        },
        "item": {
          "id": "1d2cd0c1-b226-41ac-9479-992193dfedcc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d9559045-cc8f-496b-be4a-25a0d7c3dde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02110606-f492-4e53-9672-d1bd915b267d",
        "cursor": {
          "ref": "94ec9628-3a08-48dd-aba8-89b9bc560410",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "40544562-d865-42ea-bff2-de373dc37569"
        },
        "item": {
          "id": "02110606-f492-4e53-9672-d1bd915b267d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d30c60ae-66d1-4f2e-93a1-2672b6d46202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22124d8c-7597-403b-a3a4-610be7b20574",
        "cursor": {
          "ref": "491c6792-4926-43bf-a6e3-ec8e29e19bb9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5b0d6780-c185-47c3-8244-f3c6207f2751"
        },
        "item": {
          "id": "22124d8c-7597-403b-a3a4-610be7b20574",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9a9043d5-f644-4b19-84e9-93f97104d680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea584691-ea22-4eac-b82d-9a6842912145",
        "cursor": {
          "ref": "36a94b66-6427-4302-b300-d9d85eeb379c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "266d7f00-d343-48ea-bd6e-16bc2eeda7df"
        },
        "item": {
          "id": "ea584691-ea22-4eac-b82d-9a6842912145",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c4959ebe-407e-4a3a-b331-65eba3fcaecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c611b166-30cb-486e-a462-752e215fc5bf",
        "cursor": {
          "ref": "6bdb85b8-c6eb-4ff5-b8ff-e4b3c1e3a772",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2da75fad-414e-4e1b-bda9-fc190e2f00bb"
        },
        "item": {
          "id": "c611b166-30cb-486e-a462-752e215fc5bf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "151f6ebc-5b25-4957-bd57-2a6622e5c3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db09e65-f459-4fa0-bd91-908cc7261210",
        "cursor": {
          "ref": "70f9b16b-b3b1-4faa-8fbe-d1d49ddbe3b2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6f91138b-46e3-48a6-b7f5-5911f1718832"
        },
        "item": {
          "id": "4db09e65-f459-4fa0-bd91-908cc7261210",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "81c71ef0-1568-4d03-a1d5-24f51bfbf4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c27587-6c22-4d17-9ec5-718867cafa2c",
        "cursor": {
          "ref": "21ccadd7-8542-4c0d-a7f9-98175f49e160",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3a6edf44-c30c-4656-88fa-7a2894b50d27"
        },
        "item": {
          "id": "33c27587-6c22-4d17-9ec5-718867cafa2c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e3b7c41-c87a-4c16-b083-d974e238708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb03290e-2c6f-4e53-b06f-15853212b9ac",
        "cursor": {
          "ref": "7d9829d8-983e-458e-a13d-43bb7b143ed2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "971170c7-cbe4-4652-b842-1760004849d2"
        },
        "item": {
          "id": "fb03290e-2c6f-4e53-b06f-15853212b9ac",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "90d60ecb-7567-4dbc-b765-c2479e0bd54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27869f1e-1f74-4330-96b0-959811352d11",
        "cursor": {
          "ref": "6cb8dd40-ae75-47d2-9ddb-67a0aa9b5d40",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b6d0cb71-7b4c-46d0-ae1e-523d0f2d1a5a"
        },
        "item": {
          "id": "27869f1e-1f74-4330-96b0-959811352d11",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f1afde14-f434-4240-a230-d1269bf1d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8d1525-51af-4fc7-9c9e-c5b6e81f79d6",
        "cursor": {
          "ref": "1b065ecb-9a85-4c9f-b882-5c6751eae29f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d81685ac-0d7f-434a-af0e-4ae743eded6b"
        },
        "item": {
          "id": "bb8d1525-51af-4fc7-9c9e-c5b6e81f79d6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "398c990c-12f2-42eb-8de5-d375c445850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546db72d-cfc0-4a1d-851f-794754aac575",
        "cursor": {
          "ref": "2260ff81-a8a4-4424-ba17-9274957e8429",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "40ccc711-0e12-4b35-869b-013eb5e8800e"
        },
        "item": {
          "id": "546db72d-cfc0-4a1d-851f-794754aac575",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ad35eaca-97ce-472d-ab76-b939dbceecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55874594-de76-4829-b4a0-3add0d194df1",
        "cursor": {
          "ref": "48cbda8b-06c2-4195-a402-510dd00a48a8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d931b299-123c-476b-a724-c30bc2593ce7"
        },
        "item": {
          "id": "55874594-de76-4829-b4a0-3add0d194df1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "799a8bf3-9f16-49f9-b410-c381c9939392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d3a4a2-084f-4ee6-a9e6-725eabb5e661",
        "cursor": {
          "ref": "197ff50a-6c98-4c26-9a12-0ad4cbe14155",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d9eb9661-6cfc-43ad-98f1-5facc685b74a"
        },
        "item": {
          "id": "68d3a4a2-084f-4ee6-a9e6-725eabb5e661",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d3a2eeeb-721b-45bc-89be-32be9bf941fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83abac4-dbbe-4b5c-ae63-967464bf99ea",
        "cursor": {
          "ref": "54b691a4-3e38-4c3e-870d-bf4fec85a611",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0875f46a-cb59-4d51-b3a5-a1e3c6347a1f"
        },
        "item": {
          "id": "b83abac4-dbbe-4b5c-ae63-967464bf99ea",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2b41b992-f4ba-4394-a592-8d6eccd24530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff840557-583b-4446-966d-a68e7720b350",
        "cursor": {
          "ref": "b6d151a8-4cc1-464b-b5b0-a69fbe15108e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3da1029a-4e22-412c-9ceb-109d5797d74b"
        },
        "item": {
          "id": "ff840557-583b-4446-966d-a68e7720b350",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a151eccc-0f99-45f1-b10f-fb75dc1e7e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8936a03-2306-4196-8793-fd78bb5d9c26",
        "cursor": {
          "ref": "43b7c2b1-cfd1-431d-8a3b-4532669ba674",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "711d4698-4e6d-4e95-b43f-5d48309d9a85"
        },
        "item": {
          "id": "b8936a03-2306-4196-8793-fd78bb5d9c26",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "76229fbc-4c28-430a-9f68-7d63e53fcc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ef61e1-12d1-461d-82cc-9023f07ae584",
        "cursor": {
          "ref": "4edcb3cc-1451-4ba0-bdb4-a32bcbab2f9d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "988967be-f342-4892-9ffd-45ed107ccc99"
        },
        "item": {
          "id": "78ef61e1-12d1-461d-82cc-9023f07ae584",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "98609d8b-25f0-450f-af3b-b6de66a735bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9916cc-4632-4c23-8f9b-a2bfa26cc354",
        "cursor": {
          "ref": "c22a2671-d813-4c3b-9d8a-d927470b3fb2",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e699be84-20f8-46cc-8392-bd495185e4bf"
        },
        "item": {
          "id": "6e9916cc-4632-4c23-8f9b-a2bfa26cc354",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e5bb1cac-a86b-4787-a038-5cd7fd1ecc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4884e4b-2c1a-4650-824f-9b8f7f590577",
        "cursor": {
          "ref": "0d012c9b-f5e9-4adb-ad18-393332a80210",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0cf91f87-c22a-42bf-9ab7-39973b1227b8"
        },
        "item": {
          "id": "e4884e4b-2c1a-4650-824f-9b8f7f590577",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "beef8ae9-1250-48b5-b906-7fb78cabbcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3162feae-29bd-452d-9ef9-42754d89be6b",
        "cursor": {
          "ref": "3b07dc85-79a5-4cb0-9e2c-d186fb893c55",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c8a9349d-feee-484a-8bf4-4698b03ee1d2"
        },
        "item": {
          "id": "3162feae-29bd-452d-9ef9-42754d89be6b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "622bc363-d20e-418c-9fbf-feca05bc5a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99891ddf-895a-4090-af16-5eccf3136052",
        "cursor": {
          "ref": "bbd5fd90-7fb5-4205-8a46-38a06325d756",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4e540fb7-0c50-458d-866f-ee23d410ad93"
        },
        "item": {
          "id": "99891ddf-895a-4090-af16-5eccf3136052",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f69b2862-1c35-4752-831d-a19fd75afb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3430a420-37fa-4632-a2a7-9145e274f319",
        "cursor": {
          "ref": "8e79bac5-93c1-405e-b302-ef8935fc8b60",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1519ff51-47a0-4b31-bcfd-0b2c589de196"
        },
        "item": {
          "id": "3430a420-37fa-4632-a2a7-9145e274f319",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f275d19a-b5f3-4212-8dd4-1f4c5abe74b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302409b0-3407-45de-af17-c3f71a2a2052",
        "cursor": {
          "ref": "135618a9-2aef-4365-88d3-dcad0f4880fe",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d85f54db-b669-4271-88c9-816283f987a7"
        },
        "item": {
          "id": "302409b0-3407-45de-af17-c3f71a2a2052",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "888734ad-fd35-49e6-b6e1-42e910ce8a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1463ab75-8a5d-4cae-89a6-c5bd8f5b69cd",
        "cursor": {
          "ref": "89757e4d-bc72-42b2-9574-0fa80f2d748c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5b2b48e3-a37c-4782-981c-b6971434cc3e"
        },
        "item": {
          "id": "1463ab75-8a5d-4cae-89a6-c5bd8f5b69cd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5705c42c-f686-4e59-981b-9a84f44052b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80650c80-9cfd-490d-b136-1d580cded9d7",
        "cursor": {
          "ref": "1ff6f7d3-3bf9-48fc-897b-b17a349959c7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c4be7c2d-6f96-42ec-8388-395042b5e867"
        },
        "item": {
          "id": "80650c80-9cfd-490d-b136-1d580cded9d7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0fc8203c-01cb-4c35-b1c1-919062bc3ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4515133d-3b09-4b31-9513-2196dd38ca2c",
        "cursor": {
          "ref": "86320647-4fb8-44b2-9d84-e0da8292ccf3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "47a5f9ba-0eac-43e4-af17-c306c0f2145d"
        },
        "item": {
          "id": "4515133d-3b09-4b31-9513-2196dd38ca2c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ef21dd39-ce93-41a0-9c79-e0126445b33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e1d90-1040-4d5d-a232-ba00f4317222",
        "cursor": {
          "ref": "474bc045-8be6-4ac2-aca0-f890cbf924e7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a32193ac-03c1-484f-a0a2-a3cae5106fcd"
        },
        "item": {
          "id": "740e1d90-1040-4d5d-a232-ba00f4317222",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5c2059bc-dd0a-4767-8f05-a14ea53afe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7d82aa-2e9a-4109-bba7-2c245a3556cf",
        "cursor": {
          "ref": "49ccb810-c0ba-4d6d-9801-196216c32fb1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c5f8d5ee-c662-41a3-a989-5b062df25df2"
        },
        "item": {
          "id": "3d7d82aa-2e9a-4109-bba7-2c245a3556cf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73f09f01-0767-4f95-b008-c4ad8c882cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5ecc2c-a6f4-42ca-914b-1250f2935f72",
        "cursor": {
          "ref": "f799fbda-43b4-42bf-a111-58b19654eb48",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d76619a4-4a79-4472-a9c8-454eac6680ff"
        },
        "item": {
          "id": "1d5ecc2c-a6f4-42ca-914b-1250f2935f72",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a8bc73dd-7f8f-42a2-93b5-789be96e7d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30308eb-eb2e-463b-854e-cf8c993c3684",
        "cursor": {
          "ref": "06226148-4e39-40e4-8120-9b7193ab6225",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a0b15815-2b2e-4488-8392-ae85a610741b"
        },
        "item": {
          "id": "a30308eb-eb2e-463b-854e-cf8c993c3684",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2e4567a3-f4a0-4b01-ade7-9d124c36e2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1a911d-cd7f-4ded-b42a-0f91b1f6267c",
        "cursor": {
          "ref": "0ce96c92-693f-4aa7-bd4c-b4a6623a02fd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "209a6cf5-aa79-4028-aac2-2d8080433801"
        },
        "item": {
          "id": "0d1a911d-cd7f-4ded-b42a-0f91b1f6267c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a2773c74-6171-4f83-ba9b-68799c637f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c05dbb-f5ef-4123-b6c3-1d7766c181a1",
        "cursor": {
          "ref": "92972a7e-c018-40dd-a440-090f86a96013",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "816918d7-2564-49c0-b311-fccd92ec09ce"
        },
        "item": {
          "id": "39c05dbb-f5ef-4123-b6c3-1d7766c181a1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e5be73f6-78ea-441e-a9be-20170f53dcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4237f709-3457-4036-beaf-e9017763d1f5",
        "cursor": {
          "ref": "6854188d-9d73-47fe-94a5-455139673aea",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1db76eb1-c327-4360-831c-251e340d591e"
        },
        "item": {
          "id": "4237f709-3457-4036-beaf-e9017763d1f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "72a422c4-ab71-465e-ad8a-19703235f7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5132cc08-0222-45d9-88a3-f9ceba942707",
        "cursor": {
          "ref": "54ea7453-d7cc-4065-9c2e-9e83b5d21f36",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "41a7c393-b1da-4684-80cc-3fb2892af904"
        },
        "item": {
          "id": "5132cc08-0222-45d9-88a3-f9ceba942707",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "07df353c-6827-4706-a494-dc08dc946850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902e1bf2-e08c-496a-8989-a75d9acafc84",
        "cursor": {
          "ref": "ce005e72-3f9a-4912-bac0-79e9a14a3818",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4dcb82ee-c81a-40ee-a8e0-66be8736190d"
        },
        "item": {
          "id": "902e1bf2-e08c-496a-8989-a75d9acafc84",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8a42054d-4e8c-4b1a-8ad2-f5f4e0d58338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c902874c-e120-4cc6-8577-c7dbee906dff",
        "cursor": {
          "ref": "a6d47823-905c-431e-bd31-655540ae85f3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5dc3ba4f-c476-46e9-9c09-781d3c0540bb"
        },
        "item": {
          "id": "c902874c-e120-4cc6-8577-c7dbee906dff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5410a2b-95b3-45cd-b6be-8063b9d705d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3f927a-4c76-4b73-8d54-cbb6c7c118ef",
        "cursor": {
          "ref": "9cc4f77a-61f7-4564-b8cf-2e53b11ac230",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eda9de43-4998-45a9-bcc5-fa2f043eada1"
        },
        "item": {
          "id": "ce3f927a-4c76-4b73-8d54-cbb6c7c118ef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "67253fcf-3efd-424e-8bca-d1801fe15a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b99d366-47d1-4667-93e8-2554e955b469",
        "cursor": {
          "ref": "b18e3632-a057-42c5-9412-5e50bca2db06",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "faefb388-6c3a-4325-a7b7-33bf0f7ab188"
        },
        "item": {
          "id": "7b99d366-47d1-4667-93e8-2554e955b469",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e1de4229-73ab-4e9c-b94c-90665a94cf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c06ac8-4e1c-47a4-b96c-a7c5ebcf815a",
        "cursor": {
          "ref": "b71b41bb-9b3c-46a7-9532-916f1d658b76",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "08c7b8e2-3ded-4d6a-b4a4-9747e0fd5ff2"
        },
        "item": {
          "id": "46c06ac8-4e1c-47a4-b96c-a7c5ebcf815a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f4f185cc-7e41-44ab-9797-0238fafe580c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f7031f-0e01-48a7-9105-a5e25ffa3fec",
        "cursor": {
          "ref": "15ac7967-d4f3-4c2d-aba6-6c01ba930d95",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cb579fd4-8462-4844-8b0d-258b1ec906d3"
        },
        "item": {
          "id": "a2f7031f-0e01-48a7-9105-a5e25ffa3fec",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7e10f1ed-0769-4d65-a710-8020e96ea022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c53c39-871b-493c-8a81-3afc3e2251b4",
        "cursor": {
          "ref": "aeb20902-a18c-4c50-b4d0-4a79c7038861",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c62196bd-43a3-4c1f-a863-51ff19aeaef4"
        },
        "item": {
          "id": "e4c53c39-871b-493c-8a81-3afc3e2251b4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "87d8d19e-5652-4369-a6ea-c2631f2c34ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b8a1bf-b76b-4cff-825e-03358ebf1c9b",
        "cursor": {
          "ref": "668f7114-824b-4396-833e-1e0539a5a073",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5da89b06-f358-444c-a9ad-b19b43fc24f6"
        },
        "item": {
          "id": "59b8a1bf-b76b-4cff-825e-03358ebf1c9b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7d7da5d-5848-4c23-9e49-7484828c491b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68796800-a01d-414f-bd2a-2e125bb356cd",
        "cursor": {
          "ref": "9f37582b-1c54-4d3c-967d-c7167d371e9c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9dc09fab-a1d9-4667-8f74-3ada2b85f907"
        },
        "item": {
          "id": "68796800-a01d-414f-bd2a-2e125bb356cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f265b35-7141-41b0-a57f-3ce83fcfe5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395a9e2b-19a4-40ca-8955-4552ce765994",
        "cursor": {
          "ref": "662a86a6-c91e-48ec-9168-98f06d74a2c8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6486a9c1-e83b-44b7-9ae1-0678ce13981f"
        },
        "item": {
          "id": "395a9e2b-19a4-40ca-8955-4552ce765994",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e772217a-1740-4509-8807-5999ad844b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6b62de-1367-4c34-b66a-22f3ff01c4cd",
        "cursor": {
          "ref": "e250090f-01c0-4200-b4ec-fb1464a0a918",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d51be65b-2f42-4042-86db-21a786da06fe"
        },
        "item": {
          "id": "4d6b62de-1367-4c34-b66a-22f3ff01c4cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d41878c8-76ee-4ae7-b976-12369fa8e52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3ec6d1-cb3c-41b4-b23d-7a78aeef64d7",
        "cursor": {
          "ref": "5bcf12f5-c265-46ca-8086-1a863062f1aa",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b53e433a-b426-4d42-a718-ac7bc1bb5cdf"
        },
        "item": {
          "id": "fb3ec6d1-cb3c-41b4-b23d-7a78aeef64d7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c2c44655-cc5b-4c2e-90eb-7b3271a45e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f641bc9a-af11-4246-be06-d39125e0776c",
        "cursor": {
          "ref": "eab92cd2-0c54-4ccd-84bd-69bedd99b986",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "be304346-08bc-4c3d-a56a-7ee8ddfe3321"
        },
        "item": {
          "id": "f641bc9a-af11-4246-be06-d39125e0776c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "da8a9978-4e7c-4f9b-a46a-6115901883cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd470a-2cbf-4762-b923-e781ab0974fb",
        "cursor": {
          "ref": "3d435ac8-800b-4f1c-acfb-322bd4b704ad",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f2e23aa8-0bb3-474d-9592-5caf1b903d03"
        },
        "item": {
          "id": "3cfd470a-2cbf-4762-b923-e781ab0974fb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e3564fb-4104-4590-b3fb-1a18e00c86bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ebcf11-3620-4fde-b6d0-0c912b640810",
        "cursor": {
          "ref": "2c1cfe27-555e-4bba-bee3-466504ed8f0b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1407e3fa-5b4b-4113-be12-80b011559a75"
        },
        "item": {
          "id": "b9ebcf11-3620-4fde-b6d0-0c912b640810",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0a55982f-8de1-4c55-8cf7-cabf3ac83570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05d1c63-6209-4636-b8bd-19be24b3ccba",
        "cursor": {
          "ref": "5ebedba1-fdd2-4e7e-9056-09941deb824e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d9a26c8-d368-43ba-b976-0a5dcc3878ae"
        },
        "item": {
          "id": "f05d1c63-6209-4636-b8bd-19be24b3ccba",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8f0f716e-bd08-4a48-9f1c-1fa68407e77e",
          "status": "OK",
          "code": 200,
          "responseTime": 2204,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "158a64e8-d0dd-4bf0-ba12-ca5600f24a6e",
        "cursor": {
          "ref": "198ee826-0299-45bf-bee3-3b73c96ae87f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bb249acc-6ba8-4666-a4cc-2bd810f657ca"
        },
        "item": {
          "id": "158a64e8-d0dd-4bf0-ba12-ca5600f24a6e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2e10ba97-0415-41af-9fc2-3ad6d658d73b",
          "status": "OK",
          "code": 200,
          "responseTime": 2847,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7680ac-e535-4977-932d-2a3007b16922",
        "cursor": {
          "ref": "68137a19-71a8-4466-a924-157f33623fe1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1c8863fd-c4f8-432f-aad4-f72343a052a6"
        },
        "item": {
          "id": "8a7680ac-e535-4977-932d-2a3007b16922",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a844670f-9507-4e85-99df-3ed1b8303889",
          "status": "OK",
          "code": 200,
          "responseTime": 2290,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f24bdbe-6e28-4351-a867-f5d0c2432cde",
        "cursor": {
          "ref": "95ac0b05-fb6c-46c4-a771-97a056c94d16",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "766c8399-f72b-4292-a660-d6a2e6118bf6"
        },
        "item": {
          "id": "7f24bdbe-6e28-4351-a867-f5d0c2432cde",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "855d7f79-e85c-40bf-bc27-0a3de42d7d4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f24bdbe-6e28-4351-a867-f5d0c2432cde",
        "cursor": {
          "ref": "95ac0b05-fb6c-46c4-a771-97a056c94d16",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "766c8399-f72b-4292-a660-d6a2e6118bf6"
        },
        "item": {
          "id": "7f24bdbe-6e28-4351-a867-f5d0c2432cde",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "855d7f79-e85c-40bf-bc27-0a3de42d7d4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f983e5c-4c98-4630-b468-8f493868f598",
        "cursor": {
          "ref": "37b14023-ca02-4a42-9132-012cf2bfc503",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "16d148f6-e4c7-4dd7-a6f3-c9f24bfd0637"
        },
        "item": {
          "id": "0f983e5c-4c98-4630-b468-8f493868f598",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "91461a35-108a-45f6-a16c-1d651a34e4f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac473f8-5ab5-4123-920e-2657b1086b2e",
        "cursor": {
          "ref": "5e6c5dd2-22c2-451d-a900-0e324bdf8b77",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "29fbb759-0b0b-44c4-87d1-1c845b330d0a"
        },
        "item": {
          "id": "dac473f8-5ab5-4123-920e-2657b1086b2e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0f26ccc9-e881-4d71-9fa6-af5da1e14f5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}