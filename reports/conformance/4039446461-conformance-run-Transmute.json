{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4dd83a00-a0b6-45c8-8635-9e70e3fbd1fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ffe20488-eaf9-489a-825a-c5c4660e1a95",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "554351cc-696f-4296-a5c0-6e9be09d0721",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7bb4c755-5f4a-4008-8fd8-6deabb0a7833"
                }
              }
            ]
          },
          {
            "id": "6b8eba4e-89b1-4e24-9aa4-ec63df19380a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "329bfb66-d4ff-4804-90f0-fe2b58953872",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ec06cb0f-7b23-45f1-9e9e-287572193909"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "706e0091-650f-45df-848c-6c047f0311e7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c60db61b-71ce-4858-a018-7c61245e3c8c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cb4c6f0-8656-4a05-a9d6-e704ce88ea79",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b83ecb3-7902-4959-93ed-7a33d7ece8b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e97d82b-4708-4d15-a693-d9edce5afdb0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4361ba3e-b627-4ada-a771-d183458cd94f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a704078c-01b2-4298-97da-e7515c2a9e80"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f0d2299b-a85e-4582-ad13-71137d8f0669",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70ac11df-820f-4384-812a-2ff6daa62d9e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d85cb99-6782-4fd2-ab8e-9ce3cdfca7b6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7db66b2c-81a8-483f-8d13-92cc12d1e414"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "333e6f40-3fac-4e83-9a3f-0ab069f944a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "811160a7-c0b6-4a44-a8ca-243cb79efe53"
            }
          }
        ]
      },
      {
        "id": "388f51c4-b343-4dea-8a3b-09f763a6a486",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a1ead0f8-31c2-497b-9835-90e1181c9ef8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8254144d-fd69-44bf-897c-58b44fdc43ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1fea4042-84d5-4294-b7f9-5ca9306341b0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fcf038-eb2b-4cd5-8556-c06adb8cc31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a1d39af-6381-4ffe-8ed3-36229ca7607e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6350c-a0bd-4e35-8728-5622b0d5ead0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1308a09f-df99-4812-bd1d-ffe4a0d22b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b760daa-d3b8-4d8f-8610-61530de564bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee395df-756a-4bfe-9e23-e39e01e99cef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f40de9-3b7c-4d05-8890-63e90d6a2f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7254141f-24f9-43c6-820d-0eab8c96ab10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4fd036d-3fd1-4e00-bae0-e5451d364509",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ff3cba8-419d-490d-a636-f1bf2d1df955",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e605e490-f391-4f2c-a577-3ac41152e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7698d42d-1d09-4e37-9f43-c79a334f03ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0ad4f0-1c56-4cba-a5fd-f32b5bbd2b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e447c587-6ebe-4aaf-9446-1bcdad67d292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94190a2-1091-4ebd-83f5-25f7481d6ae9",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87119949-2e8c-4c63-9e28-562a6a69ad65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc041b6c-6362-4ab6-825f-28445abdf888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720027c6-5d50-4df9-afc7-b80862e966f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "59349b07-09b8-4b52-bb85-651ab074142f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dcd499d7-c90d-4557-b57f-c030a7f1dd49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac20f787-788a-4eac-92ef-d9b4c4963886",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75246829-f8c7-4156-a7bb-ba6010414324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "60fdd20e-dae3-46b1-99b7-a7c1d93164cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ef7e31e-aad7-45e1-91e6-bca711e9f3c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6a23fffe-996d-4edd-960c-34d2ec2bc0af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37afc3db-4986-4d3f-8436-675451ffd869",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86cc4a82-caf7-41fe-a31e-6acd193670f3"
            }
          }
        ]
      },
      {
        "id": "2f565999-b347-4108-8c89-7a6d023bd5fb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "692b7a59-4008-4b87-ae79-bd7441dbdd62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1201c69-4f3e-4f53-ad7c-c54347bf1a8a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eaec7cf7-174f-4532-9266-b523f51d78ef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1916ce-2322-40a1-960b-51efacab706c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc509e2d-ad1d-4057-9f19-3d679e6b5b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e27b35-15d3-4e49-91ac-f755a18e357b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bc0c308-04b7-48ee-8fc7-dc14f93327f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bca338-56bd-48da-8b9e-cf6a3bde3afe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a178596-5c62-4f9b-a1d2-2d5a09b269f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75966f87-b6a3-4b57-902d-e4cbc235846a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25994df-0db1-45bd-b4d1-39dbd07cc4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25321edf-dc5c-479a-8eec-3e20e2a501ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6157022a-3586-4be5-9b96-2ef60dff45e8",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba38d9e6-c4b1-45e1-91db-68887ad4c870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd3bb91-a45a-41d4-ace7-d6d93bef4dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86b0647-9f48-4150-bd0d-a28a5a5a91a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d33f9b8d-62d2-4bba-80ab-137ad85fabc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d768d4-bd6e-4588-b24f-e07a876f5730",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a210ac8f-7292-445b-8492-7bd465db5194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6704591-5e7e-4c21-b4fd-24c4a9fb90f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b72b0a-b405-4b12-8995-8f2c938a3b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d4f061e-9ed9-40ce-891d-21052b3a5c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c979d51-c7cb-4a69-9f03-eb1c2078dcff",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff35c8ec-3a18-46e1-82de-befd991bc4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28a1101-fe1c-472e-8948-109560a402cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb457d-01f3-4fb1-943d-acd15739d3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f43b160-2a2e-4a1b-b69a-64170b94d2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f48a4b-843e-4637-9270-e1d0879c8562",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61234b3c-acc4-4644-8372-182e0f5307bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2966e7a0-b152-469e-aa24-837fc6e4d794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659e5d19-c2dc-49c6-96c3-d08859ae26b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "016cb88e-884b-468c-821a-f7b0c0b7917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e8f153-f0aa-46f7-b8b1-66c421a0d9b7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e2485c-5970-45a8-abed-3a7d00007dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f83563-9a30-4459-b05d-90a38248fcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c2ac51-3456-41f4-acad-6c949b081cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "972acd0a-da74-481f-b0e3-c03cf60c284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea33c5d-f05d-4143-9335-3817a9039206",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d9dd22-e5e2-49e0-baf7-4adaec369283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b121a0-7925-478b-b533-2a93730d92c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057058e6-81a8-4c39-95ed-f8aeee1daaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8c28795-f64e-4e3f-b091-047faa206012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf5f15f-11af-49dc-a458-225d5cbfab6d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f04251d-8513-4535-811b-ee4fe7aaa5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594d4dce-d07f-4ccc-99de-250f7c6f2253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca185ab3-c671-40bf-af3d-056e8665521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ce42385-98b5-4335-acec-b89616aadfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523dbe2f-655a-4078-b0e5-8c0c32269dca",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a49f6a-207f-46d2-8575-0d475fd17c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79645dba-1727-4397-b7c8-0c4393b8b8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa7cd94-0a60-4fc9-bbd8-3fad8323d16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b930aac-3b3f-4443-9c2b-7f9d4607da5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fb987e-11a3-4d73-ba44-8db4a79f24b4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24535a6c-21ef-49f4-b732-e9dffecaeed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a130e875-9b8c-48b2-89e7-6e3ab79a2fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf30644-3e58-4245-9c10-90a520d5bcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88b0b419-ce6c-4b2e-9575-25570a80c85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4844e3b3-4486-4d0f-affb-78407865fe90",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdcca3c-15d5-450d-add2-9f6af8131b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd71ef3c-2059-4f9d-88ec-62b6b2417c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a1a014-41ba-45d7-b341-84245ee6a4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73fec0a-f800-4201-afb0-389635c1af86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d83181-3e55-4439-98bd-a6b513b9896a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefcd83a-b555-4581-8b1f-9944787a9dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfca2c5-aac2-4344-b8d3-ba8a9d7c9521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2053548-1277-4ebe-9671-0f4e77e22e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282eadde-5ba9-44b6-baa5-70f388ed0029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267850ed-efe1-4721-99e3-d0287d42e98c",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4ad5c7-0d2a-48c4-a512-da629f24ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33984572-0bf3-4b3d-806c-d04c1e56c791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5173460e-61d2-498a-a485-80da906a9314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "10624417-3255-4561-b173-59a3e8653e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f09d25d-5928-45fb-b98a-1485f3fd1999",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f81a6aa-5d05-4887-bb43-b2818c2c30a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033c6812-a8ab-4e4e-bc2e-a44dba5d2e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6619248b-e1dc-4382-a256-4e06d5f92b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62d3b744-193d-48a3-87d5-b55a74b73739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba639b7-f5e2-47ae-8c25-6989ebafd811",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad16fa7-77d2-4223-bba5-f72ac11bbc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d30bd60-66b4-4c9a-b9b4-e156a204ac5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b121a7a7-d85f-4dc7-af94-a8275825a48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a338a60-c56e-424d-9f8a-13383c36d602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b102b0ef-b53f-4748-a713-69bbcf753105",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2732ea-35b1-4e18-8d0f-1cc38ed8a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852439b7-ac59-4cf5-b8e7-a7dfc811c6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf12aed-46c2-4301-a87d-0d4e3ccd391f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dca30d7-7f58-41fc-9828-bb99b4267638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f309948-e62e-4670-8eb0-de85fa22d1ad",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d26390-4fd4-4481-ba08-09973ba4fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b79b9df-c8ec-4427-9730-6992b7d7abf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb48b0b-24ce-488b-b5ce-cd1813aa10b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca1452a9-13a0-4ce1-87bd-b277e4d1c06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac74670-1362-4180-a1c7-783ab208fa02",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f006ec-ba2c-4116-b124-2629d5061c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f90401-c32a-4afe-bae0-6f1622552717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b0d2da-e4fc-40f0-a5da-ba2054fd56d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "017c4c9c-4cbc-486e-ad54-c48be226e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ad7a1d-4a2e-4fe5-adb0-807247d294f5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0319eb1-ccf0-411c-9319-16978905cc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db99041e-2b91-4b48-9ec0-689a4404d114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b539c-56b6-4868-8c57-d65488227f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "19be2e90-b278-41e3-a473-6fd9ea824511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32c6caf-eef7-4b46-bf8d-44d68ef20825",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded2a16-087e-48ec-88ca-0e2a5fad82a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac555a4-ab82-49d7-8daf-b94188747d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74dd647-e378-4b63-8a0c-32de4945da76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db01a183-f0a6-427f-bf6f-54a6c7fc1e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217525c4-b665-49ed-9557-7742bc5cadd3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8473d98-4ce2-40aa-8507-d2cdd7518839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4efc28b-2cfd-4011-a501-61a37f8811ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4051fe-89e5-40a8-ae6b-89ec7a382bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "855ec322-2862-48de-84b0-ed222d83d601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5186c7b1-31fe-4039-b2a1-1027d99872a4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f478ea-9c06-4d37-b5a6-350e59837653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661818f9-c154-449c-bdd8-3b507c830a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce5730b-7c89-41f7-a111-53e40a3625fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3f69d9-9237-4b12-bae8-25c645197195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68684f55-7b7b-4abb-8138-faad709bcf12",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a51376-713b-4cef-84bf-334a996b322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28839c9d-2053-42c8-8eb1-5341ee8cf6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955f803e-022d-49fb-b04d-9c68ce00557e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51770b6f-916a-46e5-a62c-4a10318da02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867fd3e5-feed-44d3-b5b1-d7b02941537c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc96fd2-c51d-4f46-b709-6998a6edfbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9346b4-fb1f-4da3-b74b-78700df29077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eab49f3-b996-4970-b328-f21742d056a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3323bfaa-49e9-4c04-bcd1-8d7b2dd8ab66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe62ab3-c7ae-427f-b863-211ec44351b6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdae9f7-f6dd-41a5-bd30-7e8b57df6d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0043de-8a06-42f1-bba2-8a613bec3b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d669b7a-43c7-44ff-a61f-b17c3e80cefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a706dc27-bdae-4f51-ab8f-f06b2c11d434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed602e62-f438-444c-9200-5d141840e8fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b4229a-fade-448a-b1b0-82de50cde773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0730df-db1f-48d1-ac95-ec3ed9c03ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69640e63-4952-423d-8eee-d2d4746542d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1692d8ab-0d88-4553-bb84-41250c4a84c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d392d4-9496-4449-9267-1d2d0f70b6a8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582a1327-4fd8-425d-85b6-34394a588d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f07489-a1cc-48b2-a6e9-0e786a2750e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d6ff01-6737-40a5-b1c9-d763c2813b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f92818-daed-4c5c-aee2-5c6d4f5a2d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b7182d-070f-4f06-81b5-694a368775a5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c959051f-d8a8-495c-b946-014b3f925a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa48bf2-b604-4dc4-9a6b-26345b1642b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a27c40-700c-470f-9542-48004635e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f687e7-939a-4958-9e12-7e059f8e5da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ed8379-fc2a-4473-a09d-e7bef9e9baac",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc3e8de-c080-42d8-ba13-1de0288def02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9047de-4e62-48e9-8732-878781fa4528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b902a4-1764-48ac-99c1-652681c5f6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5cb273-6ab5-4da1-8801-8f007fa1e142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6579b7-3a54-4607-80be-8cb6ed165033",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0b7749-d2a0-4ad5-b8f6-0bec995b19ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1719d5-0f59-4c92-8b0b-f6bf0cd2615a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff35292e-ea07-4d06-acca-5064fee4ae34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a5b0ba-1274-4d7e-b746-69861087521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449946c8-4e75-460e-8acc-337803cd0336",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c5ddcf-1373-46a2-8c08-3c7d332093a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6586b47-e84a-4c28-ac89-5a69dc007c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6124bd1c-ec72-4848-bcf3-977c7ac2a6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f878dd-29ad-4e59-b95f-0cd1d74b80cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a7fae5-03b3-4af9-a326-f6a84e7c6850",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0968d7ac-a10c-4e1b-92d5-e3255258b51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b98e47f-1c06-4bad-89f6-3e4688848534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a4427f-1719-4caf-bc87-0a8a4634a703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64800a50-1d5c-4553-ad6b-ca62de742e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c033642d-3b1d-4025-90f8-4b8ee6222e99",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af0d4c-d095-43e3-a9c7-5b992a6ecf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98853372-893d-44c3-aeb3-3d14ad371a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e781f713-736e-45b9-b068-0a1ff718e437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9043544-fa3c-4dee-a1e2-670d77d02eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba7eaf5-f6c5-4bd8-96fb-c9c2db80202a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7683848-07ef-479a-be9a-0fd1cfd65234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d547c03-2c92-46f0-aa43-c788631ddec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed750c4d-915b-4cae-afc1-39df691afb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed52aff8-6684-4b10-b8bf-23e0581595bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b23682-5c07-44af-8843-71a8843ee48f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ddecf-eb0c-45ba-bf80-62ea9da5c47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b178395e-c0fd-4f98-aa03-f6a69b5b1531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9f2b68-fbf9-4a79-abc8-89f62844876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39803b2-7ab9-4b84-a9be-8e5b2ce33a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e48759-ebc7-45f7-8eb1-0b3b47c2b243",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38faa54-7470-44ce-9232-8585046d5c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdd2650-63db-4aaf-bbd5-7e12b6efa7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bea0f14-0bbe-4f08-be68-e92a8d563e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5f711b0e-f005-4554-91bb-490f7406c318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e690b5e-5434-41f0-a0d4-fd4658f9da1a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d65d1-f26a-455c-a0e7-78bcb3357221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "367a15a8-24c6-4030-b55e-7df3018bb15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab88fe83-9e62-41ea-bd43-5895426a8353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fea33779-26f4-43b4-82e3-c5f25fcfee31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe4788a-2e99-48d7-91c3-2ed2f6f1fc44",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7314f4db-2394-476a-a4be-885f6c8db0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa416e2d-ee97-48b4-b3b3-f9123286ea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa870365-0079-4bcf-834b-0a4c9500ffdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb408869-6594-4869-bc4a-309e9cc090a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725939f-4d63-488e-9739-60bf0da20d93",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95693e0-831b-4dcb-b58a-472f7262e96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fbe8a0-d3f1-4afa-8015-0e8ddc6a14f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd53039-7c1b-4496-a282-85fbd9a1839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6e3831-82d4-4c93-8fe5-be2bdd792b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cdd606-376d-4640-a765-a83229feefc8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0529a3d5-f80c-46cc-9fd3-cb2a7c757631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbc667e-29bb-452d-9691-f005573b4448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec5caaa-ae67-4206-bbd5-8dbdd6f25204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8457985-9885-4d94-8f05-a84989bc6ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878d3483-1181-4b5e-ad4e-87e6cea5cec3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1a095a-a773-4bb0-a241-160feedc22b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ca06d9-f73d-48c5-846b-bf8c6fa02eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334ffc3c-49d8-4d6c-8768-ff37518899b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80505aec-2612-4802-98d7-533b8ecdf494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d78cf5a-e1a9-4837-ad5f-eb5ea9147b89",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64db10f-762b-4cf9-aef1-4700deb5ac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400c5edc-a1e0-4403-864d-bab9d6ca4b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2909e5a8-ab7b-4b0b-8bcd-481ad18843af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90ab647-3dd7-4116-a8ec-8a6afff81afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8afd36-768a-407a-bd17-20dfdacb0c81",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9213bd5-2cf2-45bc-8af0-82d75aa4010a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e30c94f-aa08-4656-9a80-1c67f44b816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb56d99e-1c72-4736-8188-50d00972fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d95655c5-4fa3-432b-ba05-ce645e5a2416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86654534-1f2b-42a8-b503-52e174de74c3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c897deba-dc04-4854-9e15-21b836fee6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a430f196-61cc-4375-b1cd-1f1aa23938ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002c50b3-fb4a-46db-bd6c-fa1e334abe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "108d5306-88a7-4051-884e-735cb05e5572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4880d4-7fb9-4440-b329-b6c50dc6eba8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af974f3-798e-437e-8f47-edc18e62ddc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbb2558-b5c1-4129-a380-d548e18e19b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3d6e78-6803-4391-a538-16ee60f08475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "840f897f-3c89-4cf4-b09f-ee47f2a1ed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c211538f-66a3-4351-ae12-5fa189af2b1a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9429a101-d917-4372-9fc4-2bbe4c028130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3c1202-2a4a-422e-b321-48920c286291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea62ef2-8336-449c-9543-c568fc9c3dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f20aa5-a953-428b-a1aa-3d819d93887a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e2c391-98fa-43f0-8cb9-489bfd721558",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc39e76-ca88-4070-8347-9e71e9e7a2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198ebe55-c9e0-4ecb-bcc3-56346eaa38f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10315b81-13c3-4e4c-af27-145a1ddea61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a28df66c-a94b-4156-a4e7-ab36fae4e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3f84e2-6735-4dc4-9741-6b0f4cce8170",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90676ca4-ccd7-418b-bd1f-eb2d338ff711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22aa3f84-1b79-4887-a3cd-875e2beeb44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c345ebd-0e4a-4942-8d18-a234039413ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8529f3-c6e3-455d-807b-26185c2108a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b81b8d-bd94-4d97-99fe-cba9b78da6eb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c948b500-7589-4513-9b74-d9c7134b21a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8364a561-e348-45e8-b450-bb523d261e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5adcf71-56ca-44c0-aa60-c13693d74e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac493a9-b8f8-4352-8a48-6245c7ef9256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bfd2f2-636f-4e74-94cc-13ee0f7f658b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc441d-c65b-40cd-b89b-828fd7ad4bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4872a7-999c-4ded-8798-8e1690cbdcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b48593e-10c3-4b7f-b4d3-a723cefddc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6744298-204e-459f-a213-9a69165d965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f81e38d-86f4-426d-8009-cd45196da388",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db264584-a8cc-42e2-b402-787ed306998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccaf0b6-8533-46ca-b469-0c92597305d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e7c6c6-1b46-4b58-b2fd-751c341e0516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22aa0386-00ec-45ac-ae23-88cadad8b4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff747c7-887f-4958-b2da-f157806c6979",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43c571c-631a-4d1e-a00c-9caad349c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a21299-0d1e-43d6-94e4-431ea0471875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68cc712-fbf4-4ae6-a836-d394b2f88471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d661d14c-3651-4966-8961-e90457f0d7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd55490-1d10-4419-83ab-2998d0071a00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc55ed8f-1e96-4dc2-8b84-6c67dc586a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0f11fd-5b00-4eb2-87ce-4b5df139dc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb011cf-9201-4ef2-b792-c1519882a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfe5381-eba2-4c18-8fb6-5c7699cef9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d5d77-a646-4e32-aa28-53dc11b9b409",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5479035-7260-4ce1-95d9-648d671c8e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6455fc43-137a-4407-934c-b1778380178c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b65b9f-a013-4313-95d9-01b5b67d54de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead88d2f-e309-42cf-bf22-2de8231b7696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe58c90-b6a0-49a1-8117-12596e3d93ad",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a418ec-d307-447c-a22a-f91465fc0fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35d56a4-4fad-4335-b02d-e2fce786b9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c92b8-2d00-4153-9e15-ec462dcc5711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9665fc8f-f2d3-4f72-a237-856e86051417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e739f226-760a-4e8c-8592-15aa75a1dd6a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18254c86-b869-4144-94b3-2e60e078a264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c8b849-4e32-4f15-80a5-8735085fd93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c55bf9-1b43-4f48-945a-66a3951af538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "130ffd32-48a8-4254-a6d3-f9c5581598ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d7317-3237-413a-a302-43dee591a5c1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05a3966-8fbd-43c7-af94-576526fca1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9250499d-7e07-4859-bba1-16ed48bcf54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1443f4f0-235a-47ea-bed9-6f915f5a4056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "84806537-6d5b-4f1b-b6e6-dca7ef4cfb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c48b12-a887-4d42-b66c-b205f748fbec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69da70d3-a6f0-48c6-9302-614ef7e16b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af46c4f-3d74-4d20-b142-ff6d4c69f900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30806adf-e9ca-4eb8-92b2-6e13502c5d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4259fabc-5de4-44d4-9a6c-8030ed4f7d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ef1274-393a-497c-abf2-3a5edc0e08cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84afb4e8-65d9-43d6-a4fc-b3ae09485548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb71e9ea-e0ef-42d8-9e05-2e2402305008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0452446-45c0-4236-9b85-15b070afbfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41a8976-d1de-4b3e-a366-9e16038b37e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c3c33e-92fb-44da-a6fa-0df81271f68d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff64f22a-e904-4c14-91b1-883ddb068e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aed099-0519-4606-98a1-a19963bf9ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e68f69f-ed1e-4528-93b8-171d932b53c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f1a0b8-d6b0-4284-93f4-da08ffc20b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5d32ed-265a-4f94-915c-4b256a18ac44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4697dcb4-5986-4ad4-88cf-47707adb8214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6845d5-46ed-4532-97e0-fec74f775c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3205a5f6-a68f-48b7-af64-26a2e0a24e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f830aaf0-08b2-4721-ac18-fa031217ff64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5d893e-dad6-4d2e-8ca8-f5c46f548fa8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325dd122-a19b-4795-a6f0-d017c857dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13341d1-c516-47b6-bc57-c2a4771e5535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f228382-bbe7-4f32-a023-82036b2cd0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e95c4af-b9cc-45f9-b849-7979bf4d1be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def76908-de25-4db4-8513-c09d50a14eae",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1f1d7a-9112-4bd9-8723-f908732071fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5228879-ab7e-4f8e-9cdb-0e206b5982a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1377674c-cf56-4d51-acd4-5e5489dd41d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c73f1e8a-58ef-45be-b25a-520128f66139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3528d6-b88a-4405-afbb-e0e9db6360a6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aaae50-4481-46ca-84d7-49f3f2c622ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5886beef-ef74-43f4-9c3b-0eb140b26e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddfa20b-735f-480e-91b1-8e0717943c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a62aa16-381c-425c-b337-ee3a02c49842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c046a0-4eb4-487d-9116-468040d1aa96",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340bed64-eaf4-489c-876b-81928bac2522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff69335-23b1-40b4-a835-7c6b42947762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb66d8c-4b16-46ab-b59c-4a089bfe3c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8d2c7f-21a7-45b2-8c2f-df56c8c0fcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881b7957-f500-4cbb-99f0-d49436cc7821",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3109b4-59b2-4f2d-bf41-2cc7c52d2ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732eee75-84e0-483a-8ab2-e479c8f49824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74ee867-d433-4a0d-a015-08207f33e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34f3f00-12f7-456b-8368-208753fce095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e6cfdb-77a2-49ed-83e0-9c9e694a454f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6fa296-5785-44a9-b22e-51d4792019c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94b2330-adee-448b-8a95-483e7b0120f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61698c7f-481b-43ce-a7a0-0e2e3deda998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a48dc49-0915-421f-8737-c7627800fe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a4d2fa-cfcb-4e27-81e7-cfbe7066b739",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bb15cf-cd29-4ba4-b4ed-8d66677ca8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fb2484-fbbd-474b-abdf-412e2bab992f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24521f9-3db5-4cae-b2e8-a39708199054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f44b688-82f7-4950-987c-6b1391d5b7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f7c5fb-c062-460b-b04f-8b598784b828",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e3cff-19a4-4075-a814-cfc0c1ac2fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20cd9e4-948a-4e30-addb-f6ded3ffd788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f0b1fa-5564-4e97-809e-f0088d248e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45d5389-2e01-4967-9522-b5586c572356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900822f-459e-4634-8fdc-d217b56f43d5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28343d5-2ca0-4040-97b9-c6ed2d3b3fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e70cc3-9702-4e89-845d-6c8862000620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45814145-3140-4499-9681-327f70ca6d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb08d3f-bd14-478b-83c2-65e1ba87fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8393dba2-0f84-4e36-a710-e8af848bebb4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef0312-2fd6-4e70-9aa5-9bb1d87f0cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1179ada-66bc-4aa2-8f16-0ee9c3804960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685e2896-5a69-4857-af8b-16afcb99c626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4739cd81-b5be-4ff1-8807-f2ffd4840900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc96f50-6f72-4a09-90de-75206c92cbdd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287d6b1a-5906-413d-9e46-228861c840e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a134ae0f-8310-4490-b605-4156153f4955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a2c75-4817-46af-802a-67f0673f680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9840087c-28a1-41e3-a57e-84d436b3f720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1f182f-383f-41dc-90cd-db327bfb3855",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff86962b-ab77-4203-9220-6f5bb18de544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c94b59b-56f3-4c01-9b34-12cf40b87d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a03f731-4153-4005-9817-d6d1dc3f94b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ce8219-2eae-4283-896c-3e40f351bea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ee6e1c-3766-49cc-a4ec-1548cd2393d8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c61377-2228-4a6c-8a4e-7ddb30395003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3567068-e4c8-4d5b-9c4f-59d1a29e6e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12571f60-d0c4-4679-9332-96f01b990581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "334b75ce-06fb-4a14-88b6-e5424517de5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311d1496-63c4-439b-8d16-b4c6cc920ba5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e986d6ca-a1f5-4ba0-a435-260bde92387c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6ad447-67fa-42b5-a4d6-381f04840bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a3a62f-2be9-46c7-9192-ab7ab7c9f4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e23eac-380d-4672-9b61-9510cc393bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655c579b-8e0e-4660-be09-66671a4024e8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8178c25a-961d-47b4-838b-852a22454c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c635375f-a1c6-4c00-a3c5-85c3b6d5dc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a717f682-5d62-497d-b79f-502702442e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b26f1c0-07d0-4265-b7ca-793623d33caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be88520-2e11-4b9b-866d-f9266beb84c8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2927a66a-fd0d-456c-ba68-c95612e7d263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f580b4e4-bc49-4e55-b025-ff366f401e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a428c8-49cc-4aad-9971-ba8cc154852c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fb1e8e-783b-4699-adf8-7e9fb4168a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d151e3e-911a-4182-857a-4a6a57690c45",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676edc11-297c-488f-85d5-1bbb3a3e9f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7902e3-29e7-468a-93de-406045695fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b95427-e8cc-42d0-9c70-b38de6883e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c90f60f9-2685-4d97-9392-68a98f0c6a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7930919d-6498-4e28-966e-c8a5bc4b5483",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1503ee-3a12-482c-92d8-d2a727e1abf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32697d2a-d1ab-45d1-962f-6f032317d487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2949ff9f-23ee-4ba9-ba2c-d86fc7c4b16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "688d3c53-0f49-4515-9138-e8c4227fa5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3131be5b-607e-4c88-9413-9dc73b162a8a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc30b071-fd51-423a-b413-0578a3fe8532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5f9e99-c74b-4e7b-8410-3fde50b22663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b84c5b6-6aee-4da4-bedb-b05d422975ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1405bd-5573-4265-bfeb-ebc33d7cf100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f59c7ee-e763-4917-8184-4bf45b27f695",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf88a6c-c7d8-4cdb-8527-6ad562c6ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc577d7-9b48-4562-8d19-375f410f5804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9421986-5a95-4f09-affb-fcb394a58e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a297756c-d956-428f-a263-3d4e1e12c83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35904437-3492-4151-9d5a-33ac65bd5a69",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926e43f6-208e-4d08-87b8-fb2206c0600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d973a41f-cb9b-4772-850f-e82e87e9f1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55de95bf-ab2a-47dc-ad65-694b787352fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4f07b7-eeb4-499c-979b-acd9545a4066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d215ec-5ef1-4116-a8ca-99111da1e226",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4189c5f6-3132-420f-a10b-bc8f82c3e4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449afdc4-fdfe-4476-8b72-63b950654204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d55067d-713a-4505-9d5c-8ba3ad351233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8afb15-68d2-40f1-bca0-40871277fb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a20ecd-614b-4735-87d3-939e4e907ed7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558a8f9d-ae56-4a20-bca0-ea5f43a28eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64519e8d-a6d7-4297-b71d-1b4a914ce2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1ffea7-e2c6-47e3-a3c9-5e2e4eb835c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cffe69c-cb30-457f-ad07-f57fee57a3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593762b8-9bf2-4052-adb9-994aaa6ac2c2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e5227a-2289-49a3-8532-349541c03665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132c08fd-ec1c-44cf-ac71-1e10a4f6ec4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5342d8c4-cb42-42fb-b151-4f0cfc53b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2ffc76-d642-40ef-b903-7f60ee802168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f02342-e81e-4ec1-8d78-5f3bd2c29bd1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a815a91-eb7c-4e07-830d-cb35e3177978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0437b4cc-64a5-43fc-8956-d17549829117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c67f70-e634-4802-985b-2af73e9b5134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8a3b16-5db5-41ea-975a-cfbdce3a25bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa57f55-6888-43fd-b58f-48a7232508ef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81046c8b-9067-42db-8926-0bc6a48f12ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe61e56-83c5-4aa2-810c-a1f5fe89ba1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd97d092-82ee-47d6-a1b6-3ae8f3d1422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0345d71-72e6-44e9-8171-129dcbafc1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb78675d-028a-43dc-8b84-545ae5e889cc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe389f6-49c4-4e99-a647-ee438b32a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85bf005-4ff9-4f39-aa29-773c9765088b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79e0d1e-d006-48b7-bcbc-b56bca027a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e94c4e2c-0f92-4f09-baa8-1b5a27fad98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301e124e-940e-4718-a737-44832f101cfd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eee4f15-39d7-4584-8684-a1150c870c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c44a335-37d4-4c0f-9608-aca3eff939f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7575b418-a6a9-4d3e-8aa5-a1c70cbf71b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad908eff-0dc4-41a7-b6de-f616c18f6f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8963391-0289-4550-a8f4-5bfb30b51c1c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ca278a-6aa3-43aa-bdfa-8b78ea39a6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bf4f0a-abd4-4593-9653-8c0716494865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ac4209-16b6-44c1-83e7-a3ef815cf25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba3842d-4ac5-407d-9eb8-bae81bbe4e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c46002-f6a8-4993-a957-266718be022e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b8bba5-0362-46f1-bb55-c9179e8038dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c06f7c-1acb-487d-aa8e-a75e28f0394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86518e95-6bf6-40c7-b6fc-fe3c5df9acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b58babe1-6ff9-427d-a40b-fb7f2a4bf3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e187ea-b50b-4a22-a30b-f14841ff65c7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74041d4-a4e9-46b9-9094-e63f3c58ae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9c426f-8527-423a-8463-984600d1a8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ce84bc-f296-414c-9b98-56391151c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76442b58-9df1-4fe8-a9c2-e09ea8e2920d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb6fee0-98a6-45a3-8670-280b3253e2fa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264841bf-d8db-457b-b3b7-10cc625bdfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c0b7f6ef-6a7c-451e-9e17-347bd6a6d894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180a90d5-db1b-4718-8f82-c121b0c70444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "47e1a10e-723d-4fc4-aace-a6b25a6c4658"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "688e0358-5c69-42ff-86a0-8e48d809ee03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb394756-e439-4a9d-ae30-c740c5d94ff0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3561f3-087b-45de-868d-fc78eff3a54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18bfe6cc-bf6b-488b-96b9-87e46d0e4c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4742b525-c68c-410b-b32f-7e79dd10306a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "75d5eb19-03a3-45af-b640-55bbf81fb3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2723f4-ec5b-4523-8635-5ddba73bcac4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e1fb2b-b38e-446b-b0f5-aa312351bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "877e981e-1d81-4c26-b864-c9ed85af0580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d0c88-e62f-463c-a4c2-8a2c53a5dac2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8ad67436-7ef1-42e7-b229-b442c76ebb90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45d3980a-4091-4133-83ae-72170ebcb432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67690fa-2324-4440-9281-64da9f4d9e7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb025d12-db36-43df-9940-9afb7abcd672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb1ca2e3-a21f-4a36-8455-348f464cfe5d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "265ca0f2-3acf-4b49-9bd8-3476371e8003",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39eadfe2-c1a9-413c-9a57-030bdb1e8a42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b91bed2-254a-44d8-bbf6-d816b036a3e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c5271a8-bf23-46cc-8d95-84fed9e68c2e"
                }
              }
            ]
          },
          {
            "id": "3312f1e0-8ca5-422e-8de3-2a4a70e4ede5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20de79a0-b409-45e0-a59a-d178563e3776",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a448a66e-1c5d-4ea2-bfac-ad6676c9b7c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4c1a237-fd1b-4afb-a57b-2d08750e9559"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "499894e0-8341-43f8-91b8-e6f4a316fbb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88f20c39-f903-40e0-bf09-bbb9cbfbc0ca"
                    }
                  }
                ]
              },
              {
                "id": "036eb08e-e53f-479c-b984-d377c3f56ba3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9c66859-7fa0-42f9-bb0e-2541b9a18a80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "915cd4df-d5e2-4946-8c4a-4a57e3fa82a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d0adbe-8efa-4c4d-b69c-7c9ac7b5e072",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88a4c923-4734-4e03-9744-cfab50da057f"
                    }
                  }
                ]
              },
              {
                "id": "77b092cd-c6d1-4c3c-90ed-951cd7de466a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d893eb8-ad51-4c8c-a63f-77599dc92bda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b417b49-f55f-4b81-9a0e-416a3979fe87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88ede727-1196-4147-92f7-7717924ff0d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a03fcd3d-7d42-49c6-94e3-c57332f6f1c9"
                    }
                  }
                ]
              },
              {
                "id": "7f295c4a-d32d-471d-961e-4b9986b5b826",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45e1ac84-d662-4972-afb9-74cde05ee2c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3702cd55-e564-4d97-9b25-21c56a76f389"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0bb558-2e42-4505-aa9e-07ee6b165010",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5082f2be-e3df-492e-8299-e97fb068a6f4"
                    }
                  }
                ]
              },
              {
                "id": "c7e13d96-e2bd-45be-a6cb-8c01858ffd48",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84d04f96-585d-4000-bd69-90002fde20ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84ace196-5e8b-4c92-9ad7-33365a442c2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "777e6795-7921-428a-b59b-09f13e6c767d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9df59ae-667e-453d-b0a9-3db52b610943"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8314a66e-87d5-4193-bb85-0b924cac659d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "215b5fc0-6477-4041-b7d8-8ff501f99313"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5b35e182-c9c0-4895-87d4-8645c9bd3465",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe0dd80c-e828-4ba2-98fd-acafc237cea8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "629988c7-e57c-42a4-90f5-7dd7731b5028",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1b5303a6-d2e6-4eda-b2ea-190c6ee59fc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d56182a9-f224-4df5-97c6-bbf38cf87614",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b24d607f-644b-4adb-b939-905a8592ad44"
            }
          }
        ]
      },
      {
        "id": "175fbc33-2318-4380-b922-1321fb69ef2e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d5254a7-fcf2-49d2-9103-d492c60b2d96",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1140997-c3ce-4c97-bb5e-7fd2d644ed8e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d8a3a6c-5954-4779-9402-03ffee3de600",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3f25d3-6485-41c0-b472-b24fcb35d8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8116569a-1423-4ee7-b0bc-627cf0315880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314e23ba-2482-4d88-96eb-2d6caddfe55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4e40c5-6376-4560-90e2-09764ba3d11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feecdb84-c6b6-459f-b1d6-3c53b351ec11",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9041f1d2-953c-481f-9cb1-1ebbf6727cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed419d6-2ab4-4402-96c8-70c180357855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b01cad1-e702-436e-9238-26e42020234c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "679e04d0-9d10-48e8-aa0f-f144571fdb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4919bb4-10f9-48af-9200-36ddab27ce45",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b590b360-4077-497f-88d2-28bc4314acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5276a998-2ff3-4298-a3f4-1cd7ff60b28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6796fe7-07c8-4457-834a-ef789e3aa524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "907e28f4-5b52-44d7-bedc-0cb03bd1ee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a934a5c2-ccab-482f-afec-d148ff97d9a9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f5424-59ba-4fdd-a267-2dfc16bc5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a371837-be74-4bc3-bbe9-9adfee386394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5361c2b3-6285-4aca-b4fa-c91cfd7810d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bb28d2-03d5-47c1-b301-15078afaca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc849c06-5c42-4d35-951c-f113aa780964",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1569352-0fb4-4415-84db-1e4073d6528a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58606d76-3b6b-467f-a1c9-64a92b3cbc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effaf928-97a0-472e-8626-e8cded975b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7d4487-601f-455f-81de-206ac62b2b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0bfd09-5441-4052-a070-a7bb0b46542d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddf279e-e60c-4519-84a8-3f39bafec774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b764a6d4-e492-4930-9cbb-cb49182a3449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34f54c1-fb9d-4e1e-9e13-0ee9f6faf770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79281c0e-e6bb-4743-b59c-efdf224fd0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d4d831-45f3-4fb6-98e9-4552aff276bd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad06928-16fd-40a0-94f7-47b98061b86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b937e60d-d536-41f4-9563-6ef78a2563c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f40b21-aed4-48f6-9e74-18e13a40666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ba9a98-2ded-4aab-8d50-b56c8ac7d578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef3e639-0d4a-45e9-908c-3558f874cc99",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa0002e-c933-4030-899e-f2274fd18a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075d4939-b840-4ebb-943f-1a357034e88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8bf2b6-9ea7-457c-b356-11401493a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c2e959-8479-4623-9657-9d7765f2d04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc63bb-1df8-44d7-8f94-5340f4c1cc02",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63652a23-8bb8-4675-9761-b378d7b4348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b90e3ae-141a-4961-8a3e-2e6aa607a04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34f6c91-3bf7-4122-bfa3-0b879be5d592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6b014f-0434-46ab-987d-677804385aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c84e17c-f131-44f7-aae1-ab31ffb0046b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c6a0a0-374e-4413-9efe-c263bb2151ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6298694-c34b-4f2c-9109-7084332c7f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87873b5d-0aac-4309-8ab7-378f8f491fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a5fba7-d412-4702-9cb7-a35f31a085ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a330f5c-ea12-4450-8ec3-f9f4dff919c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93d01d0-df77-4cb3-8167-3f3e2f7b5bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdfee49-bd94-45fe-86f7-d87cca15a078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d97eb50-aa7c-4d28-aea5-64cad1c197b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "79399713-244f-4b5f-b629-8d6d23a85239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b52498-588d-4d45-b5e9-aaea38425d11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682535df-6fd5-4495-82d6-4e1d8e010943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e823bb76-0378-44ed-acc7-a19272069a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed445acd-d279-4af7-8c4b-d8b307ff7655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc12d26c-27b7-4e63-a445-5b62b174c595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8d44ac-5b10-44e3-91d4-17559a02b729",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59460d7c-74b4-45b5-a64b-96156aef7707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ddb8ce-cf98-474f-9411-091ae3403a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad95a7f7-928c-4d53-b400-58b6bdb2cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "086b8a4d-4f9e-477c-94e6-2820199597c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c4b155-e4bd-4edd-8ee1-0371dd22a8cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd10288-fcfc-473d-9c9e-7709c2529368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb246a9-00da-4cb7-91aa-180b0c5855cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37be51e9-00be-4bd2-b0ea-57dd247b199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6009893e-d07f-4eb2-9322-aa618d236f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ae224e-f2e2-4fa7-893d-429e322848da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1fbd03-769a-4945-adb8-2d52f69aaa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af81c31d-7fb1-45c1-8a40-0e2c6c05c925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12111a5-68b1-4ebe-b80c-3e0687e07a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "810e4099-ec0e-4989-8dcd-b704c49eb306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f00d62-d934-4e02-b2ce-64d4a2c6e037",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e88bb6-ec9a-40b4-82d5-df15328efa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9335c1f-f0ae-4702-84c8-c2667bfd4a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df67365c-3e56-4ffb-b86b-544e9507b2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c34a10b-48ad-4de4-8771-85bbf1e6ba61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47042aea-7b0d-4ce3-b59a-201d4fde97fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd12e9d-efdc-4d78-a67c-8648cb78e916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32e1787-ed56-40c0-b7b9-7251717ae8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb914da8-988d-4229-b28f-40f53c65b621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfab06f-5d8e-44d6-b8ba-1ea50f26df69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029e9476-240a-47d8-8903-4bc46cbd4ce3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10af353-aff3-483f-9553-1dc714535305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26287f57-1a85-4bb9-9876-1198baea43df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5075cfd5-a0a8-4ad7-8683-ed8d5bd256da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ab6f52-2489-47b1-ad76-4f4ac8eadb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d398e517-7087-4ebc-ba92-b6591f12d526",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6c01de-06cc-4230-9010-9962e39e4e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d8c541-8f21-4bcb-b65d-7617e212ec2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ad2775-7190-46e4-9c9d-ad5ea10d0de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52ef9ecc-356f-4fad-b246-022b7bef65dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a585b08-1924-41ba-a5d3-9bbbb1e16128",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca9f57a-4580-4707-aac5-6d7e8ba195f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1fe0d2-49d5-4077-aa4f-7888b78187a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff10a43-9727-447a-bcb9-b596aecb750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb833245-efe9-4d8b-8ae7-56483d682f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600b586a-7ed7-4065-b8f9-6914a47ddb37",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca957ff3-1303-411b-8589-ce56fd6066cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac54100-8a1c-4c78-b02f-27aad54c4704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444153d5-9365-487d-be79-fcdd2658ae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e4d801-46ca-4afd-ba72-038169994015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f445291-3781-4c5b-b8e3-a3aaf9e6f0d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddc5ef4-aaad-4a7d-bf98-5fecbdccf718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fcd6a7-4628-419b-934f-1b885dc88deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c768a2-5586-41ae-bc8f-b3ce2ed1234b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed140a94-b73b-460e-89a3-953473ddc0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff74442-7916-4606-8bf2-829caa219b88",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cd2513-9534-469a-be97-a5b704e7e10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f5ffd1-5914-4ff7-b8cb-baf492f71b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bf29f0-fc04-482f-b98d-5e73e82692d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0b5e10-b500-4b57-8ab5-0323385835bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27329cc3-d979-4a4c-b425-b5232670aa07",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba4b86c-1e06-4622-9d32-736ec4696042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57068c94-615e-4e06-8a65-0f2a946647ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbff1c0a-acdf-4b49-aaad-cd44e709e984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18df2e35-b7f3-4b09-83d0-0e060087cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2988e26c-059c-43a4-9840-c409ed3f3b25",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e144ca6d-7b14-4e1f-977d-cd04f3c20ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6236ffc-f17e-4fe0-b2e8-e9b7912a3e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fb5032-39f4-48c7-a100-fecda7210bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fd6a10-4454-450a-8cf5-4b10d9ae2241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cee2b7e-8fdd-4f02-97ab-41a9fc9394fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218e54ae-b27b-4090-a515-120e0830b8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac0324b-e0ea-41c3-8218-d228db5dbbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d78c89a-aa76-42d2-bf09-eb9836acfe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c90cd2-766c-4cd2-9129-4809fa5f4e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aaf393-7e93-490d-adcc-6e2619e59a1c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b48528-073c-4fbb-af43-604efc13c2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa870ae-2866-45e9-ac46-061fe45238e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa89de0-d1bd-47fd-9d4d-e4211d82a31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "384c5400-c4cd-4279-b1ce-6d4d26a44134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a29eda-03c0-4459-b009-460de8c9479e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff86cd9b-b819-4168-bf21-7cb89d12fc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3933992c-aca1-4e72-abb9-9bc7a39a6229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c5ceec-11b5-4574-b8b5-130e0486eb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6a4329-bc25-4516-a3d6-85b721d0c505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd16def-2a97-4b12-a8c5-2d6adf21f7a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b84ee0-d966-416d-a031-bddfc620280a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682ac51e-f0a1-4282-af13-8662f0f8a506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2854b144-d90e-431c-9ffb-1ee21850a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ebfdeb-cc25-4c1f-ae1f-ebee932999ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c2402a-7835-4f5c-bb33-7e2fd25cfc18",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cdab86-7ad1-49e7-886e-fac92271dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eff5ec4-2547-49a6-8326-9456aab8b61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c9bceb-d409-464c-ac0c-4bdf83f7e711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b473cc1-d669-4b13-840a-583e907cd65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0da6f95-d628-4d6f-9afd-79ff8d07583e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf8d2d6-e7af-4306-a326-9d7f6541c1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e2a3e8-fd06-43d1-9596-f2c607919d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d453a5-54b5-4670-ba4b-5485d1fabb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23878cb-dde7-4941-a646-341bdc2a37a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd10f6d7-1c15-4f2a-a6fd-a4183ea30e7f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2227baf-e9ff-4118-875d-1c4b5d61ace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23045f25-67dc-4090-b7b9-032d3045d734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed2d097-458e-4454-b67c-b4e13b2e75f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60549e4f-69c9-4853-9652-f7d1a2ad5f16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a7d1012-5283-437c-9b46-e89b5ce3973e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c2079c7-e083-4b9f-bbd5-fc7816e3e03b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5af8af-e793-4ef1-846e-81de28c23df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49296289-af2f-451c-a3f2-971e8b4f41ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bbbcd5-ac62-47ea-b031-83da425d9cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20f46300-b56c-4e72-a5a6-2b0740e899a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97917ce-4fa9-41e4-81b0-5d837626a897",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3113f0-159a-4aeb-aed8-9f4f67d635c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "9ae4add0-f0d6-49f3-872e-5fa5b5c4a8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b45264-88de-480b-88e4-2c6bd03c59a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0f31429-7cf7-4916-98e3-721909066db6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "903761de-3a19-46f8-88e5-dc4960a2b9c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e952b63-5bad-4b41-8e6b-361cce90551c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2516445c-4a50-481e-b451-0e97aa2b991f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "152ff60a-319d-48b9-becd-5371ddc98778"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e335dcd4-8a48-4a3c-9c89-e000f6aecece",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49037e21-4721-4786-b92a-2d8d6f011e57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07f74262-49e2-4a57-87f2-0cebf481d7d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aaf7b8e1-a991-489b-acb4-44c020c65e48"
            }
          }
        ]
      },
      {
        "id": "4d7c2877-9128-4717-a864-e27bedc21cbb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "75aef840-ae84-421f-8dc3-40430a335a2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1759e06e-32a5-41b7-9dd0-cbbd442c4dd5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3fa780d-dfb3-4712-89ed-89cfd54d3be4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ed33d1-2447-4827-9e65-0da7248163e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e713a643-7b85-4c3f-920a-b17ba5ec8fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e779f7fb-66cb-4d17-906b-4e01ec0ccf4b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c854bee9-b937-4384-a5a2-54cf85060a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb2f835-de08-442b-9f2e-c813b8534f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb356cf-b4ba-48f6-a69c-d0bfd52def63",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7160f-c969-4c31-a6a8-abd58fdaca71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5759d9a-ff6e-484b-ba0a-e609b429566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd40ab8-de2d-462c-8bd7-05c43e1924a9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658ff5e3-18d4-4938-b1bb-7328e727034e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d530c8-f3b1-4a1f-9199-bffcf07a22c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b928dae-5cfe-496f-91e9-879fd9e14732",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92f7fc9-6e85-4f23-a278-be12dee274fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf977599-2bf9-4168-b4bc-9dd15c42a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da2edb2-8e8f-4f08-8aef-4450d95cfa48",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da804723-78d7-4de3-94b9-c00c761205b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bb627f-054a-41a2-b53d-da23764be40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f05fc5c-965e-4561-96ae-7e69809c5c16",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba03d1bb-6776-4843-a306-83d23b1d763f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6494dfaa-f550-44f1-ae8b-5aa2276d0af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9816c273-59a3-4721-aec0-faffa215221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8456374-975f-45de-b5ff-36fa9ac2d018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafffde5-a9aa-4fc7-bffc-439e030390e8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf2dd1-e1b7-4641-be71-322e746818c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789e8a2e-7992-498a-8689-3ebf9183d173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103753e9-21a9-45e6-9d17-d33b62ed36a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6044383c-74bd-4a3a-bf0d-d2a88bcbef52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99dec2e-55c0-4454-92a3-10a28e72c45f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e36f5-17f0-4f7a-8da2-98dac2c51d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acce1559-81b9-4d54-94bb-d2738b32245d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5eebc6-974a-4c3b-b3f1-3245012f02f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e196d5-fa1a-471d-bd29-cf7f2900bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acbe2e3-fae4-4901-b79f-46bcb0cd1467",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dae7e79-1747-4205-a5d6-33d37df63508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecbebab-0be9-4324-a10b-0e5ad450978c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1626b4f9-9685-464d-9bba-4172a3e13815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12828f7-71e8-4ebe-9ad5-fb306d2c33a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4fcf37-d5b1-4ddd-bb10-0928dbb9fd73",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254ff371-7b67-4d49-8359-fc8b337bd4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f72e17-5be4-48ac-b48c-7b26d823dabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7109a49-9e3d-4c9b-927b-315176bacd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e0982f-94ee-4f7a-ab2f-a412b731e554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fe1181-661d-4322-b96b-f2d889448b2f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0f2887-293d-4577-93e8-19099b9e74e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94590db-3d6e-4195-8622-e2134073eaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9908009-dcdf-4fad-964f-8313194a7559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31841de3-6583-4be2-b03f-4e90f249106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6ef60a-a4b3-453c-a315-f6da4bd1d3a8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573a8ea9-4678-4fe3-a1bf-cf33e21577bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36924185-a02f-47ca-b140-8981c932b53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab82d179-9aad-472d-a079-96e2e8d8f928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964c5045-9225-4695-8831-e29737a8b577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486247c7-3e88-4beb-844e-0e6c7741a303",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c682a950-3727-47f5-8e62-612c549eab16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0778f1-d556-4eca-bcd0-bb0402b1c7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8ef7ea-4fe4-4b16-9fd3-9ccb7aee60e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d27a72f-ed60-4cdc-a018-c9a227fb04aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffa4d57-4720-4612-8c32-32e4a415b03e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55dd2b-5921-4e8a-8f81-fdabb45cf684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe0f06f-ee17-4f9c-a540-b432061e26f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee40b65-7b7a-4427-b358-0203730bd423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7b0037-f456-40a2-ba58-18d1ddf3b27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6adbdb-9fa6-48da-92cf-96a9c372a699",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700c5b82-3ba2-4893-97b3-1103733e8613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c45fe14-1112-4c6f-8026-e774afc6f11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056e6984-353f-45ad-a6dc-669a0a073915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d92646f-fd03-4570-ad68-55d56d4e3a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c326bdb8-b8c4-4c53-a87d-1e0c83e64947",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2846ab1c-4980-4abd-87bb-b6c38390c473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30050773-50ce-40ba-8153-9481ad270b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4333a130-ae3a-467b-adb6-69e1997047cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777f0f45-d909-4f35-9ee9-5ce4e3b65f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21ca79e-c391-411f-8d23-8c5655243d0a",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e8a2fe-58a7-46ae-a784-300553aa063f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891e143a-7455-4ffb-8286-a1f903a3d456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95903a37-389b-4b1a-8e58-b7aef14e4be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123f71e4-50e6-4940-ae02-4aa59a3874ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e6805-f3b1-4a42-a41c-3d3adff55bc3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ee02bf-c1f1-4531-8347-53633db92d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dddc58a-9032-409c-8068-e745e5c4694e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42dd3e7-7001-43d3-98ae-01fddfb868b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5824a994-1366-4b57-92bd-7e90f7c941ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1f859c-a32f-469f-8628-d656f70d0b62",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ade35-52f4-4bb1-9d34-757d6dcdae04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3457aaa7-61bb-46e6-8798-96d4991acb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b59d38-d866-4295-b8bb-13edadf21ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7f3582-3971-4f22-860b-5a415cdc2ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1773bde-566f-4088-9fc9-2b6c38ec255f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1259920-2538-449c-ab70-10823654c1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cae526-b6ad-44ef-aa3b-53b0ee23d0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4ed25b-4bd4-49fa-8329-de599ad26eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3bd87c-f7e7-491a-9cad-54e351de74cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b45d732-fc62-463b-839b-aef45a43931d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d70b2ea-df3f-47a7-8db1-ad2430fc1fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a67a428-2bc3-4bbd-9be5-def6041952f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5918f-47ca-4c7a-979e-074b261b2785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e9a3cb-316b-4a4f-ac4a-3fdc8b004bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7bdcb0-7305-443c-aa32-651681d4e6ff",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad9f34a-b70a-4a4d-a38e-7f0f1112e3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e02b7f3-854b-4276-a5f1-c026202a41f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a804b6-439e-411b-952f-9229e4f1bf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb85031-c612-46c2-82f8-0dcc692eaf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f1c7f6-553c-4856-a413-d4e9bb73c83d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27197174-9400-4b85-a02e-548a076ee11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820bdb45-ec43-437d-b085-86a13f4aa916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a9f23a-e03b-4626-a997-d49080532a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a2f680-e209-45ed-a5c0-2fff3b936afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed142ac-f988-4917-8744-20a46596e038",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329463af-2946-4d0c-87fa-ce882f518a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0c1681-2c31-47d5-9311-07d4efc78387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af03ad1a-8405-4d3b-802e-968b79625c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7ec817-84a8-4cf7-8f98-9c54bb45fc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4883cc-8bf9-4e69-b708-52aaa0432c8d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff9669a-9024-413d-81dd-bb455c0846dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45df8373-d075-4b80-b392-7d32283a9e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340ed74-1c7a-4a3d-a2ff-57c1061848c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f78ea5-0ff9-4cf1-919a-f642b662c923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6336ff9b-3e54-43e3-9dbd-68f86fe9b1ef",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c410d9-2aab-4209-84dd-b101c94850d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef1be86-9646-4fa6-bd00-9a60f856d058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3cf59e-3dc8-47f6-bdda-08c69c67aa82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f13a9b-0ded-44be-b1b3-4e930303c413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c6ce94-b9cd-4e34-b6db-d4c1b161bbfa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9211e234-eac4-4427-87b0-67c7b6e33ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d437de3-afde-49ed-a18a-ca5f04e422fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea3eb86-7d9c-44fc-a3f4-1d7ceabe9612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132b58e0-2e04-4fb8-b426-8172748626fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d7002a-fc5a-4935-9cef-7b5eea353330",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2d5f50-f379-4448-8e45-b6f2572cfe0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae472280-d36e-41d5-8a1b-6134ffcc6856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb67ab65-f785-4f58-b87a-5117f9916202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715e476d-104d-4f1c-b2a5-4794cd16d838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8905ace-a866-4e6a-a07c-e3811a1709d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dedf059-c764-47f7-af94-06cdbcd36816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6557b9aa-6149-494e-aa93-08967d3050ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ffec33-6a5a-487f-9577-67a2510fadef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc04c559-9ed8-431d-8e08-ce2edac456f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3143dcaf-0dc6-4b8e-a104-b14ca3d8201d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04460c56-b40c-4f69-81fe-c758705e9060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209f6c1e-ffd0-4375-bcfb-c7efbde8ed6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4d0d9f-7501-4ead-ba05-8a4eb9ed5c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c1f436-0d57-4418-9ae8-a5d08ab3c208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600887f3-cf73-4f6f-9aa6-094c16fe2e79",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79461a82-baae-4fab-acae-63fd0b73f0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48211fba-a3f7-40d0-b06a-6ebb1c495734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b59eaea-f6dc-4e5d-b00d-0df0f58dc6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd709a5-5bcc-418f-a539-acb8d7b46469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fe53be-dc0e-43c6-a8dc-9b6d813b5214",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06eb94a-23cb-452a-b2fa-220c8e91d519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2534517f-6f80-467d-9b2e-d43875f9054d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcfb33e-1f8a-4503-a156-78b0ca6aa04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8934276-3e1c-4ac7-8870-ef863915975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a739be-341e-4b4a-858f-adedf3a094ab",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00422d9-c477-446f-97e2-0b82db13b2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2e3ec4-f4a5-4940-b5e6-cf7d5bf3c46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcd9d32-3af3-48a5-94ac-2cfa14c958f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9fa949-a68c-4e3e-9481-c82538f64f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edff294a-9e46-4369-aaab-e9d81292c70e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df432285-cbdb-44f3-bb54-c3ff86907ff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225f6310-f60f-4a76-ae76-4126b9826340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66da3a40-ddca-4a2f-a479-82d5df8edf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996a169b-555a-4f92-a0c1-69b026992c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a37150-f7b9-448d-a715-689338a08cfb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7fbac1-93c7-4f9f-8ee0-ca5c65d2bc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e139d0-c9dd-46f0-b674-de5225fca246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2989bb-f94c-4e2b-8d53-2735c81a9800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec2eb8f-d1a3-4fcf-8c4f-0d79df2e3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e73e84-646d-4f79-a1c0-9739d1627a7a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee83eea-ddae-4c0d-9e03-1e4abe9ecdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337df49e-9ea3-4db7-ac3e-43a14e56adac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ba9e8a-d0b6-4bd8-903f-3f04d7ae8b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67c9edd-001e-4b38-a1cd-31869a7aee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747ba521-6be8-4ab4-b471-0b9c4f986749",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1783bd-591b-4f8b-83be-2da8488c5568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2287314-1d7a-4a4a-8a4b-7e08db3eb096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6253a282-6b3c-4839-bf65-3d7d13952715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1d922e-e7e8-4fec-9481-3966e8cd211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6ad2f9-7826-4594-8b66-879934b0f185",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80f4d94-d8c2-4554-a672-d2cfd879143c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ae8fb7-6dec-43f6-ab0b-f3b10a23e92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81ac481-f20d-4cbc-acdd-a13d252833a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cdd9fb-06ca-438f-9a4f-e52ddcd505fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5248056d-028b-4ff5-bee9-7ffe15ea9b42",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42586ede-c301-4e79-a304-fbec0b392134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e1cb71-59d9-48f9-a20c-b2787c15e742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fe3afd-bdef-493f-aa1d-b36f8c33eaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1845fc4-be03-4b7f-ba65-fcbdef212af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a46532-53f7-47c3-ab4e-3cc043ac397e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb16e0f-05a4-4d2a-a803-deb01d0d0d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8695048b-2fdd-4a2d-ae7f-c18f14f0f8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd945d52-e16f-40be-abad-fe26399063df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566a34c1-30fb-4a4c-97a5-1f48823f10e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bb012f-e691-4e17-81d8-0ebff0c81220",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc31a77-ce30-4af2-850a-c094d6151fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dd449d-0c34-494e-a49f-0edb73841566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea46d754-a754-4ace-a0c5-bd48ed274716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b12158-67b4-42ef-95a0-a36d7b4b5278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866e4212-8402-442e-a956-703e443e6a12",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84500d5-31f1-4cbe-9f3a-2ae52dc66cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a1eb02-569a-46e0-bb97-2f8df2adf2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2863cd69-97fe-438d-a152-d110b4d23cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561de6d2-055c-472f-ab0f-e5bc7434949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359f8b38-900e-4c66-afc2-ed831de66755",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17c02c6-8505-408e-8bf9-af8aff617068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684fce55-4824-4eb1-a7ce-f960ca9e6d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af82f6c-56f2-47f4-827e-0d16a1ad10ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b0ccb1-b803-44b0-915d-d96074348db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7bc91e-0d2e-4033-80bc-1ec01fcbe7ee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d4680e-9dbd-4b49-8c2d-45bb6ea27161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915c1600-a1c4-4170-8f81-42113a21da9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc293631-b37e-4a3d-a403-54e704cdd0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd4958a-968d-4c21-b9fb-117c487bc2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f040353-06ed-4f67-b602-87caa070e759",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17685db4-417a-4f03-9bba-67f0b430634b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d547875b-05e6-408c-9fa0-ef95b5b3d043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762d362-3338-40b2-bacb-dae133e1ae7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404ee292-56fd-4eec-8e81-e53646ff4060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34296e65-be0e-4ba4-a085-b7a3b7f40f91",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290e93c6-01b0-4c30-905c-45b5142b429d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8d4912-19dc-44d6-8cfd-fbc6ee61b140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832f2a81-af0f-4c5f-886a-040e4bcdffa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb2e11-8aa2-4cc5-9d54-f98f5b3b6b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd9f914-b00f-400c-826e-9b8483c76ff4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3636c60-0ea4-4294-9634-0e850d3e9598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba49558-1ec8-40ee-af79-e87658f9ab4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3721dd04-1e66-49b9-8ca8-f7542cdd4e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f786e07-9c89-4352-8eec-07e4d9763d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cbc686-99df-46a9-a2b4-952f7d0bdd2e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fafd02-4058-4b9e-9d93-af38d953f19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492d593a-58ab-4671-ab1d-38cf1a2bf6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf08f42e-bc72-4f77-b7a4-613f2c5e2b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c80d9b5-6be1-4355-9f88-b7c26e06117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ff108c-7180-4ba0-99ab-3343aeff928a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3ce487-f38e-4e91-b7d7-dbcfba56270c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0493d3a4-1d73-4b13-bc7b-3db8ca168730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94928084-6429-4bf6-bbf0-7fd5b59962ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5612c9f-9793-46a5-bd01-45105959775d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e214feea-61b1-48b0-9b5d-b7ea87264296",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23ebf22-54c3-4286-8792-303ad75d2bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab2d046-f333-4862-af49-8eed89656b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55761119-2f4d-4f4f-b696-27de779ded0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e1d139-0601-42f5-b410-fc4b6b91f078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ab5015-6576-4d4e-a4a0-125b435224d6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84dc5a8-594c-49af-b9de-b9f50da16bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e56de91-3797-4acb-ae61-6527d66dfe1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a680c8dd-e24d-4601-85b9-5cdcc5a5c10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6231c2-bb77-4306-af53-844871d88469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37417061-8340-44dc-b276-0b269d200c18",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d649a51-aedc-4b58-8dc8-53de7831cbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324ea9c6-7fd3-4886-b5ec-059b1a9f515e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff55da15-b170-4fa8-b7ab-d1746a8b0bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118d203d-0b06-4144-b5c8-e3a630654ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da86af79-cb05-4d90-b703-3a1ec1ef02d7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf206cc6-e285-4b28-9dce-015210fa50cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1c0d43-2390-4227-9761-18ca0d60a42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c5bfe8-0cfa-4f5b-b58a-76647e39f8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ef85ae-7dae-4b86-a887-a8f25ab242b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a24dd91-69e9-4729-b99c-53dfaf14378f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef55048b-8ecc-43ff-85d8-5b9d65626a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffff0fab-f385-4e15-b87a-da9301cf9952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128f4673-68be-44d9-8131-5ae9a556e969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf9e71a-eaeb-4a8d-bb87-9d05fc676415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b119be7-17ab-4ce8-92ab-9b5b037a2e62",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbe109a-e34a-4544-84b6-f77e7fd89ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c0c396-bbbc-4dba-8109-297ba0669847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d99c4d-8e70-4d59-9b03-ae0c249756e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886ae5fe-0859-4871-a7e9-39e7a864e712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f660c7e-cd69-4dd5-9f9c-bf1571357af1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b50cab-73ec-4649-8743-703c833c45cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e8c346-3912-452d-9966-6d29552b45db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89d0aab-ba2b-44a9-beef-e33bfd0dfcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a6a73e-48c7-470e-95ac-2720637c11bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b55878a-b9e3-4ea7-a8bd-133362a6d028",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857e06ef-d32d-4282-863e-4d976c9b5c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f175f027-496c-4d58-a34c-fa79df173554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539a986-5c88-403b-8406-6bbb1d191de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cc78cd-d773-4c60-841a-4978d516c073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323f7358-f27e-43c6-a3d7-c99c3b50f65b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e111c5-f358-40a5-9a6d-8b9a3a5566c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cfc1db-3bb0-4f70-96f3-749efad09d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba6e116-aae7-46e0-a087-29ca5476309d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b9ca69-0efd-4a91-91ab-76a65b0c7ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339eb0f9-b189-4774-8aac-3344f8f53782",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf5b575-037c-4ae5-bdf7-82b203fc4b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e430da-bfeb-434c-af93-f2824a556d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014d7aed-5570-4fd9-9ce4-2713d5a4535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c069ff4-6026-4adb-9e19-35b895eca90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc34814-9acd-404d-b432-d9a52a065d64",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a924db-ee06-4692-894f-2e825c777454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66955465-7854-4c07-87a1-59a8f99d9345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df37ba7-3d41-4207-87b4-20a16e78ca92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead2f8c3-83f8-49d7-9da7-568b5754a616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb83111-0f79-43c7-9496-cdae50fb5deb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c5657a-d3f6-4118-bad4-db41114821ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6df63e-eb27-46f7-8404-a6b32c78aab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028b70ed-f83a-484d-ace1-8e20eede79ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e290efec-711d-4719-b84c-4f4af447e6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01d09d-35e6-4a1d-b7d8-2dce23c15723",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87dacf7-7dea-4bac-8d2c-ec4381a6c831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77eca70b-025a-440b-8c1f-02714d0cd955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a103682a-1e0c-443f-af86-209bc9ff5dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42dc655-deb6-410c-9811-e580671b2494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f7abde-fd45-4be4-8067-0ee322e4baab",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb4738b-6bb0-4c20-a339-60c665bd9836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a887c432-e391-40e1-8c33-6dde41dc6f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab29b7b-03bc-4084-82cf-5471a59378b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837e2269-754a-4c5d-8b4c-7c68dbc77e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe93f7-4fc6-466b-9d0b-c807565327b0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723336dd-f15a-4dad-bc30-2012c258a396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61469d39-bac2-457a-b6e7-4e209c8b1725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f038e6-1009-4337-b63f-6e239db2f60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a774c1-b12e-4f9b-9b44-b488109f598d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04acc82-dd45-4168-94e1-5410300301f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249fa3ed-1de5-4d4e-bf2b-e0222d743d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da23bf2-9ae8-4ef0-8b57-265d98022cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db4f7e-d32d-498a-9882-d19767679b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859f37ae-9bbc-44dd-96ba-285c47d96a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c543cacd-8826-4624-b039-9d3843a34fe8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3d75a0-663d-40df-bf02-5dcf622b91eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d654cd-1a12-42e5-afc4-3572bd75f637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea49f79-b309-4875-9cb0-1cef7961a9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8b64cd-511e-4d2b-acd6-a010555dac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d699dfb5-b9f6-40c7-8f63-01156bacb618",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb9939f-1221-4829-b53e-4854de44a193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad28c081-452f-4de8-b883-2eeb5bc5ae69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba3f2d-7140-43d1-b6d7-c98cae118bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef7f14b-eaf3-4ae7-b366-11fd210194a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d5822-7711-43f5-8dfc-b3652b575e07",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6eeea3-d153-4c6b-9420-45d328fde9d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f470b341-4db5-4ab2-b655-1c6fda10c871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ebe975-059e-4424-8482-dff1d798038e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e56dc5-1d5b-4b2b-8be2-19065c23c193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97927efc-b9b9-4c43-b7df-cf843927a06d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f0c9de-9671-46e1-8481-36d5b7773f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b86732e-ff1b-409c-9da0-2244a3ff5556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269eb075-0c1b-40bd-b816-f5201d1cf635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8726659-ec7b-40aa-b4a3-56f105875a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dbf97d-7fab-441b-a406-18cce72bb102",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac84e57-0aec-448a-aa9f-b00345634bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f0ae4e-9154-4bfb-b9ba-7f9bcf0c61cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1583ed-339b-4894-9a1d-70f4d43ccc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d277aff2-388e-4c9e-90de-0f1e3758cf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dd66d9-71dc-4708-a649-22149ee8419a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96d946a-ac24-4185-881a-41239c00f997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1643f9d8-534a-46b7-b4ec-919334f02f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a93a22d-61d5-4f07-8bdc-5cb142b4af9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d347a2-389c-4af4-a285-5124b67df649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effe21e2-dae0-4d0e-a3a1-a91362d283e0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f023d1a-6634-41ef-a393-3f9909d5aeea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25265b7-de18-4742-86ff-45fa60b69e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d888af0-512b-4d78-a170-778c5d43dbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f332e80f-0ff4-4799-842c-e26af8b27353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5cda24-6c7b-4632-bb4f-ac03e7f14a45",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad4e211-57a8-4f55-9691-883eb0e6d116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b79b7c94-9653-47fe-afb6-523ac8fb90c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec57db0-cda9-4fcc-8e27-58b76b297c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f389d99a-cb14-4ac8-937e-8f6b304c9c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17732aec-4c4b-437f-bf7c-dbac41530893",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d5f53-ae6e-4eaf-9129-12f26c008546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b56679-7487-4178-ba9d-04c66157a659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a477fab-58a0-4b83-9b8a-a824bb4edfa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85860a2c-0d9d-4d35-9a7f-0cb5b02493ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c43857-7893-4845-aa78-1d45ba892ab1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec9ba63-f28f-46e6-871b-9f9368f493f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dcfaf8-6473-4058-9a5f-f525f2478550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338cfcd9-494c-4705-b2c2-2b32ff806cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f67c22-b6a1-4701-8da4-57c91ebf8cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baed4247-65fc-4129-8115-5a288cd6def6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1d47b1-3a38-4cfb-986f-1354bde51fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a46425dd-690d-49bd-a759-3454312306dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26541a9f-aacf-4c69-9577-117093447d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80174598-e68c-4b2e-af38-7d6eec75c43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ea7a80-0aa1-4fa1-a510-7eb72bb3f505",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eeff89-a900-45d9-808d-c5f3a92c0032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2208d44-69c8-4127-9fb2-a12f6156ee17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3892345d-e19e-4175-8401-ad0fe0c89c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6fd9d7-0b0d-4fe1-b79e-134d933c1922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ad8a6c-30b2-42c3-8cec-e59cf8d27e84",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdc570d-6deb-452e-97f0-d0e0b70279c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb2f1ef-77ca-45b0-b23e-fb354c649ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a747e74d-d723-4627-afa8-ae4f97627622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3f10c4-53d2-44e7-83f1-92d3be9e313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1a3d9c-e4bf-4829-9fbf-66148dc36e92",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa38da3-f1fb-4d4a-8134-c97e8ca8848d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803565c2-1e6c-4c22-934d-54b59be9ff82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a589ee8e-a30d-4787-8895-6c7d082367ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269dae21-29d8-4d6d-9dfc-e699fcbc4534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1f592e-226f-4785-a73f-065a7fa78157",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2569f080-6a16-4703-b7d7-4487fb8367a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6aec81d-072b-4f7a-bdfa-3cbd3541a355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec96322f-9012-4a69-8943-84b6435dde9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2383e0a8-5182-490e-be88-784b397935cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf868ea-77ae-49eb-8081-fe7ccfebf755",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2149dc29-4b6a-4485-a56d-2643aaea3c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de043c62-e0a4-427f-a4f2-3b22ad77c522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a14e64-c921-46f8-b861-1058d9921b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8451f7-8cdd-4058-a630-c3dbd83960c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9452799e-56a3-460d-b8fc-9b60804cad47",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49a0fbe-8af8-4598-a4a1-ed7e8afd114f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ed7aee-7239-4cc3-9fc9-480614e8ed32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932fca45-a5d8-4cfa-a567-17a4a3e39cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba6be4b-467e-47ac-94f2-06c48a0957ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73d5c81-750d-4ea0-879c-8890ed709db1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936729fe-4edb-4651-8ad6-17f51088ed43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee33e362-1044-4560-8050-a2cdc1f9118f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862261a5-58ff-489a-8a3c-cc0ee8db359b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b911396b-7631-4674-8e14-2359a17628ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa6d891-e3f6-4060-9990-462fc04e0d72",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a72573-068d-40a3-9f29-a2802374e1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7ddda0-e58a-49c2-ada2-48ebb90fa284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc18c62-03e8-4c5e-94e7-0f54505c26fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4457ac64-329d-459f-aa68-b22745414e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5440c15d-8b61-4858-9c1f-98a2934f2d38",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a10b657-58e1-4df2-bd62-14159acdfb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e653da8-48ac-4588-a168-17ceb049eed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911ca35-698e-410e-ac3c-7c825830b88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de1b3a1-c0a9-4f56-b719-a8c63548d9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8396c0-f5b2-41d7-9b90-74fcd70053c5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c073182-3d1e-40e0-a5ab-9deb5a5569ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e10ac87-4973-4a42-a683-7aa70135f8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f48b63-9d1a-4a50-8cd6-a77e0f0e6f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2585a8a7-8056-4cee-a874-9b4ad5a30db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccde9de-a6be-45ed-843b-69837c12df57",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b01736-762c-4f85-92a3-37fa7f65413b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478c9605-4e7e-461d-a405-03e5c30531d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a70f94-b8b1-40be-81b8-3160354e8c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1678186e-72ec-42a4-acaf-171acf66f6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc4008d-a7b9-4118-8de4-5837b7dcda60",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f449f2-30e3-45df-8174-a05a5fb23f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a49f1e-c272-4c89-a399-b6ae38b231dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beca809-f2a8-44b8-befa-e57f80da4870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf881e03-3f30-4425-a0da-43cb17fd9866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e57415-3f3e-4ce7-9fdc-ee672447ea20",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2151a244-ea86-4b97-a567-039fbd824342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f2f3a8-bbc6-4e1d-b296-a515698e0ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d143f25c-05a3-44da-98db-4d81753abdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad88e5a9-59d5-4e9d-a3ca-63f0cfb33729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee4dbaf-9ec0-47c9-b3f6-75c64995da97",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba8d41b-6994-4b7d-88d9-0764210c3f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad87ff3e-3a72-4647-bc14-ab591440127b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f29c44-505a-470b-9059-220b8946903d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad7864e-51c2-4eac-837d-c4724cfad101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f1e670-b0c5-4a3d-abf0-1ea114a36bf1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8f61f4-6961-47bd-9d34-3d5f06600d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96b7754-01bb-49f1-8cf0-5453459be2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed46a020-5796-4a09-a772-621d3c712ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7f5113-3178-42cd-ad32-1474e940b07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55baabe1-2cc1-4caa-bd54-cde1469dfdde",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9038bd65-a901-4436-b526-8329abbbf8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38629cbf-fec6-4702-bb36-6d42e53a285f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0631de29-4346-4455-89c4-8126fd1b1014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff14276d-2ed6-4d68-80e7-99faf1bc0554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b06b90c-2651-4888-9b52-6089bf2bdb8b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabae6f4-0cf4-4c46-be99-497a132ff5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7751ff8e-0243-474b-bb2f-635789471d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d011ec75-6418-42ed-8ffe-e27c8e65d1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b3a661-973a-4c4d-a9a4-3fcd9f2e8427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d1756c-d0ad-4af7-a25e-629c3c7ec2ba",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d158dc6e-23c9-4461-90ed-73876796bc95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884b2af8-6a0e-464b-b7b9-69e099fa590e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f427c02-761d-493b-b086-56b6edd231c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3589a2-ab35-4732-959c-82b03f52a859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb7e2f3-d06b-4bf4-ab37-e8cda92fec43",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a370c258-4e29-44af-a55b-239609ce59cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0113baef-fa10-452d-a00e-412d5ea1166b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036812b6-a95d-4e26-bf72-6637e1c1c00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fa1269-7374-4362-b499-c7a6a2e7c7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a428a43a-b0ab-4376-99b3-0c545fc140ea",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3d30b1-ef57-4abc-913f-dad86eff1591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a466258a-bfa2-4f86-97ba-69aaca375884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b18b8cb-d0c3-491e-aad0-3014f888b9c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa4d8d3-99b7-45aa-a27a-d37d8d0f1859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3beae7-bcce-445a-9cd1-4847b3167188",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efddfb71-5a45-4fcb-8ec7-24bba945de48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6230c1-a138-4bdc-a080-cb93947dbc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39bd898-f608-4eb3-9d5a-9af91da235d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd483c5b-a424-4a3f-8166-d53af79bc519"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13727294-27c6-4ae8-8c05-4a155c98ef0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b67d7ac-4f91-4283-9dd2-92c5fd3fca85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b874d40e-544c-4b81-af8f-47369a281ae7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "571347ee-1973-4be4-af29-1a8ef9c0b3c4"
                    }
                  }
                ]
              },
              {
                "id": "75aea25d-47ae-4863-8e0f-36a81d907a9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1daa1b1b-bcfc-4341-b2d5-059d7de37612",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07f62ba-1e8b-48ff-be4f-1fc9e1838d33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "82f30ced-a17e-4f64-8961-f902b4041943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e956f913-c1af-40f6-adc8-e7e04ba05e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8cf2021-e33c-46b8-857b-45e00a04c06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc76263-ed4a-4524-8262-c5b39afb0e2c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98e147b-af20-4617-ad56-2ad56355fa2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e1fed94-14a9-44c7-b59c-27d4b888939e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf10c36-ac19-4c81-9465-7ee4d9ce8bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50f1c6b3-8c14-4172-af5c-adef49ce4dc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5d0e617-0236-4ded-8dd0-7d5b3d621f8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e296707-8697-4d01-aab6-d6db71069def"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dacff44-c372-4e5b-86aa-ae5def64f9f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e064d358-db1d-46cf-831e-e2f115b8c191"
                    }
                  }
                ]
              },
              {
                "id": "e570db25-f936-4b20-b1a1-dadd80f53f79",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2de86087-9966-4f01-b9be-6ebc0ff6df6a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9acf184-5f5d-4bcd-aae7-6f0a1fddff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c39e4f6a-5e5b-425b-a05b-def4830bb03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7604e629-5098-4c46-bbaf-ee8777558914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0e3ac9-027e-4c71-a77a-047b9d789eaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b3a4c452-9444-436e-a2bd-6af5de2477b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c528ff0a-d77e-41b6-872e-6b9918fd0bfc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94738f9e-adfa-40cd-9e4d-5112986fa599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dee2059e-e02c-41d4-b877-e8422a07190d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7069c2-9bfb-4935-837f-59b0dfc4d0eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2084c964-0acc-4936-9fe6-f28bbaf117aa"
                    }
                  }
                ]
              },
              {
                "id": "259c31ef-3e14-4166-99e2-3e8770619f8d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00b989a6-f178-479c-89cb-2ad74fb61cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3bad2529-32c8-405c-b908-c4ca12a8f530"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca416965-df37-4094-8583-157888410f69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5340a7-9ae9-4278-9aa3-9f658fb8d564"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39cb6fbf-41ac-47a9-8a63-c3da36e89aa3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "56001283-54d0-461a-a88a-e6fc912d5df2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc56b8fb-3bb0-4380-a855-72c007649aab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb6338cf-f882-40de-bd4b-15f9554b2a89"
            }
          }
        ]
      },
      {
        "id": "3476ee96-6bf4-457a-bbea-88c68c043cab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "495eebb2-c3d0-43d7-9d13-7149135d1d5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f82ae746-4d61-429a-8e2c-ad934243e676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5b4b77-958a-40a0-88f6-d8eba56935ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2629dd01-9f6f-4fcf-8216-e13b6f29887b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696de67a-9142-44a4-b8b3-995c203e2605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47d45e3f-4857-4296-b8aa-50c5bfe7e730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f70eb09-0ca2-48e0-a008-cf8e7aa4473d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ebef3b-743b-4955-8853-2500d3ab1464",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cc62588-5a8e-436e-8320-ae38ee51ef7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753cffee-6776-4b0e-b74a-5d499958a00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b8a6118-7662-4ae4-b5d8-734c2f6e5a4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee87b09c-7448-42a4-b047-054d4a314df1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6613348-7459-4732-9d7b-6845a49b360a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26733493-9d4c-4042-8d70-555637378567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9670b3cc-fa62-4506-8595-f9ad7f43d062"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ee37767-1f1d-497e-a994-aecc49f79306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "01355ae4-bb48-401a-a6f7-ef7c7bfc889a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6d6d2d7-f844-45bd-ba7e-5cd3dd0a7248",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7386d03b-e889-4680-bcb9-27d385a8d24c"
            }
          }
        ]
      },
      {
        "id": "90d5aa4e-b348-44b6-be49-d73f6a064092",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "783899e2-f1d2-4868-a045-4bb7e278b467",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e38ecffa-dc0d-43a2-8aa1-84c5146279d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eea2fe5e-6214-4049-99a7-599743e26e5c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77601653-501b-4a97-9b37-f6eea6e0a79f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30a38345-3a4c-4267-8172-a342a35a63c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66f8d43-0af9-46c1-8b30-1e834e6e8e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e04be7dd-16c2-4e50-95c6-ab599e518eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f423844a-b063-4233-8225-64e3836a9770",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2df476-af33-4a9a-a207-ee41f41f6045",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d9f7674-e40d-47cc-838a-66154367e235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a124667-a5eb-4d61-a0b4-a96c9a5f8644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88488511-a499-4dd0-82ac-7e51ddc7fa39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaf113a7-587f-40db-82ca-d06e1c56247e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f8ce17c-35ac-46c4-a047-2db3c92fd973"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d2025f-e5a5-4d84-8b00-93c35b44738d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3efa1e50-2301-467c-bf22-532ae9025c62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d3be2d9-ccf2-4a48-9d64-05d759b7849c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0ff39594-d8fb-4eec-868f-07187fdc0b85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "384c004f-7584-4fff-aaa8-a2b42af768e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49272476-53d1-4f79-8a42-2f67ae5e6713"
            }
          }
        ]
      },
      {
        "id": "030b6e27-cc5d-4eb7-9513-eaf2b450895e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "05cf051d-5035-44de-bbfa-256a4733a654",
            "name": "Negative Testing",
            "item": [
              {
                "id": "393c5cc2-2f76-4d24-96a7-61254c343091",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb8fdfb0-021d-48c4-b076-59accb15ff96",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4912c32b-a036-4753-9665-0a62656ea888",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "779e857a-c343-4752-984b-2ad24e782424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af66933f-b9a6-40c2-b1ba-6c5d8b0f9686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a7f6582-db60-478e-91c2-601f01ad2727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d682d062-d688-4fc2-a277-eb26d2ae2712",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ff2fcc-d2ce-40b2-96de-9b1358de7d08",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "99df3187-8162-4bd1-845c-20fe8a8df3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6659d9f3-ecd3-4782-be25-e7e79accd950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c7ea4d6-0ff9-471c-94d4-b73e92c24924"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e9751b-0feb-4567-bc1c-e4f38a8df846",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad4996a7-1133-4509-b219-9b483b16a8a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b40b0a6f-e008-4aab-9923-10c1b9b3eb89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76121f00-c581-4b2c-a42a-8c0b06ab8801"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff070a05-fb71-49c4-ba47-ca40ee2ff42b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c8eaa3cc-2cfd-4179-b339-fa9a8c9a9d36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bb78c47-ba92-4874-a109-7eb11a66b7dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0ff7577-e2cf-48fd-abff-d73d8fc59a13"
            }
          }
        ]
      },
      {
        "id": "6abbf2e6-c61e-4128-a5d0-a8d73ffbda24",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f53cfbeb-d05d-43b0-903b-d0fd1121257a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90d72b99-5960-47df-8ead-d08d5ffbaeb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "17ba372f-0890-4cc3-8a98-505bb23c65d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6055fd9a-5eb8-4bee-95a4-796ca0cb2724",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c6935e8-6d79-44d2-82a1-13a2e607f2c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 573.9083969465651,
      "responseMin": 19,
      "responseMax": 7080,
      "responseSd": 724.0796785726401,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675038951384,
      "completed": 1675039112642
    },
    "executions": [
      {
        "id": "ffe20488-eaf9-489a-825a-c5c4660e1a95",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "96be7196-e8e3-441b-a216-900e498069cc",
          "httpRequestId": "70486cc2-427e-4046-b9b3-84f559699100"
        },
        "item": {
          "id": "ffe20488-eaf9-489a-825a-c5c4660e1a95",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ab0b6722-88d9-4003-9d5b-e67bdb331d6e",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "6b8eba4e-89b1-4e24-9aa4-ec63df19380a",
        "cursor": {
          "ref": "2c332b1f-eb3e-4ff5-9248-857f02f33ea0",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b272f1f-6c85-4fcc-9026-bf76bf68dec8"
        },
        "item": {
          "id": "6b8eba4e-89b1-4e24-9aa4-ec63df19380a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f57f3505-1ae9-4494-92f6-fa98d355bb3c",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "7cb4c6f0-8656-4a05-a9d6-e704ce88ea79",
        "cursor": {
          "ref": "3f016b0e-f6d4-4961-b062-611e9d00936b",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b1a08172-8d3b-421a-99bc-97d4e5262678"
        },
        "item": {
          "id": "7cb4c6f0-8656-4a05-a9d6-e704ce88ea79",
          "name": "did_json"
        },
        "response": {
          "id": "533a6447-d1c1-48b1-bddf-0ca537428887",
          "status": "OK",
          "code": 200,
          "responseTime": 825,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea4042-84d5-4294-b7f9-5ca9306341b0",
        "cursor": {
          "ref": "c202607e-7017-41ef-8901-9677b38762e3",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99f807f6-eeec-4d22-879b-e0c63c5d06fb"
        },
        "item": {
          "id": "1fea4042-84d5-4294-b7f9-5ca9306341b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "475d3e31-13b0-49cb-bc53-72ecac7f83f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea4042-84d5-4294-b7f9-5ca9306341b0",
        "cursor": {
          "ref": "c202607e-7017-41ef-8901-9677b38762e3",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99f807f6-eeec-4d22-879b-e0c63c5d06fb"
        },
        "item": {
          "id": "1fea4042-84d5-4294-b7f9-5ca9306341b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "475d3e31-13b0-49cb-bc53-72ecac7f83f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6350c-a0bd-4e35-8728-5622b0d5ead0",
        "cursor": {
          "ref": "9f6e34a1-9abe-443b-a831-dd338dc415a7",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9af3b88d-27f0-4006-b231-993196a2a4df"
        },
        "item": {
          "id": "25b6350c-a0bd-4e35-8728-5622b0d5ead0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "48fa99d0-c931-485a-80f7-6ea69e1ce3b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 555,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee395df-756a-4bfe-9e23-e39e01e99cef",
        "cursor": {
          "ref": "0898407a-3208-4b2a-89c9-0a26e3e6c202",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cfbb1def-2927-4068-8b2d-345a7a2b30ee"
        },
        "item": {
          "id": "dee395df-756a-4bfe-9e23-e39e01e99cef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7b225187-1ca9-464f-aede-99ed04cb2a21",
          "status": "Not Found",
          "code": 404,
          "responseTime": 563,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3cba8-419d-490d-a636-f1bf2d1df955",
        "cursor": {
          "ref": "7603850a-d7c0-41e9-9105-f8e93ceb5aee",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "02ab74bf-0233-45fd-aa0b-7478a3e0c1a7"
        },
        "item": {
          "id": "2ff3cba8-419d-490d-a636-f1bf2d1df955",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f0abcaec-ff11-4382-bbdd-519185e3d773",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94190a2-1091-4ebd-83f5-25f7481d6ae9",
        "cursor": {
          "ref": "cf79b852-ba13-40a9-b9d2-3fa664cae182",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ca801126-04e6-4cff-b4ef-ddfdc7709141"
        },
        "item": {
          "id": "e94190a2-1091-4ebd-83f5-25f7481d6ae9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "78215aa4-e068-420e-b903-5359cf42da5d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 859,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94190a2-1091-4ebd-83f5-25f7481d6ae9",
        "cursor": {
          "ref": "cf79b852-ba13-40a9-b9d2-3fa664cae182",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ca801126-04e6-4cff-b4ef-ddfdc7709141"
        },
        "item": {
          "id": "e94190a2-1091-4ebd-83f5-25f7481d6ae9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "78215aa4-e068-420e-b903-5359cf42da5d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 859,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac20f787-788a-4eac-92ef-d9b4c4963886",
        "cursor": {
          "ref": "4bc2f2ac-c37e-4a37-8617-8cafd87a623f",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4b94e4ff-79be-4049-a294-e8034fdceb6e"
        },
        "item": {
          "id": "ac20f787-788a-4eac-92ef-d9b4c4963886",
          "name": "identifiers"
        },
        "response": {
          "id": "99041124-d099-4ad1-bbc7-036332d310c7",
          "status": "OK",
          "code": 200,
          "responseTime": 1205,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec7cf7-174f-4532-9266-b523f51d78ef",
        "cursor": {
          "ref": "1b9a442d-c578-41dd-96e9-4d913725ed74",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1a6046a1-9d2b-43db-950c-3753b69aeaf1"
        },
        "item": {
          "id": "eaec7cf7-174f-4532-9266-b523f51d78ef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "44b61161-5489-4006-824e-52a4b8e8e701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec7cf7-174f-4532-9266-b523f51d78ef",
        "cursor": {
          "ref": "1b9a442d-c578-41dd-96e9-4d913725ed74",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1a6046a1-9d2b-43db-950c-3753b69aeaf1"
        },
        "item": {
          "id": "eaec7cf7-174f-4532-9266-b523f51d78ef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "44b61161-5489-4006-824e-52a4b8e8e701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bca338-56bd-48da-8b9e-cf6a3bde3afe",
        "cursor": {
          "ref": "9528946e-0196-44a0-ab87-1cc84ab7213f",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb8d7070-a3d2-435a-b790-c44f88e834ce"
        },
        "item": {
          "id": "49bca338-56bd-48da-8b9e-cf6a3bde3afe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "003b7129-f388-4a31-bf1b-0aee37520d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6157022a-3586-4be5-9b96-2ef60dff45e8",
        "cursor": {
          "ref": "4f7ad82a-fe06-47ad-93a8-3f873a1e25a6",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86c0f22a-1e98-4b83-913a-3ff60c98e402"
        },
        "item": {
          "id": "6157022a-3586-4be5-9b96-2ef60dff45e8",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "09273f83-49a1-4a35-9f76-449526bb950a",
          "status": "Created",
          "code": 201,
          "responseTime": 3676,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "49d768d4-bd6e-4588-b24f-e07a876f5730",
        "cursor": {
          "ref": "03fd21d3-1bdf-4c9f-9ba8-78cab62ec8aa",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9acb3c9-b767-42bf-909f-5516b71b8218"
        },
        "item": {
          "id": "49d768d4-bd6e-4588-b24f-e07a876f5730",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f07425e4-39a4-4023-9851-a3903395fd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c979d51-c7cb-4a69-9f03-eb1c2078dcff",
        "cursor": {
          "ref": "eceef0a6-782c-4423-b6c0-96e2836cd698",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5b38ed08-3ea9-48df-b224-53f35e7d49dd"
        },
        "item": {
          "id": "6c979d51-c7cb-4a69-9f03-eb1c2078dcff",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e728834b-4a9b-4b8f-b6ce-d132d861fe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f48a4b-843e-4637-9270-e1d0879c8562",
        "cursor": {
          "ref": "6a519900-c0af-4675-aef4-b93cb1f1043e",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a930c6f9-2ebe-42d2-84a3-cb8c0efc453a"
        },
        "item": {
          "id": "93f48a4b-843e-4637-9270-e1d0879c8562",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "807f6450-29be-4f33-9584-43459fc60e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e8f153-f0aa-46f7-b8b1-66c421a0d9b7",
        "cursor": {
          "ref": "d78e9521-011f-4aca-b244-57b66c7e2fc4",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b4e3f236-707c-493d-b427-4cd67654d1ee"
        },
        "item": {
          "id": "b1e8f153-f0aa-46f7-b8b1-66c421a0d9b7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "38ddd0bd-0832-402c-9aae-0fe17a97f663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea33c5d-f05d-4143-9335-3817a9039206",
        "cursor": {
          "ref": "4ad0228d-6e21-4f9c-9c57-fced01ccea99",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "359e070f-b6f9-421c-8618-7752197a2c59"
        },
        "item": {
          "id": "4ea33c5d-f05d-4143-9335-3817a9039206",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0605911d-a194-45cb-8dc1-9b98ea947199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf5f15f-11af-49dc-a458-225d5cbfab6d",
        "cursor": {
          "ref": "01957df1-2640-47dd-a754-6a8f56143951",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7349a1b9-ad38-4e01-8027-eeecd90cca01"
        },
        "item": {
          "id": "cdf5f15f-11af-49dc-a458-225d5cbfab6d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "abdc6e43-d68e-41b1-8436-1c020bc021d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523dbe2f-655a-4078-b0e5-8c0c32269dca",
        "cursor": {
          "ref": "2a33bd7a-670f-47f7-b151-4be0fa58695c",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e9d85f4-3b93-40fa-b09c-80f0163f29cc"
        },
        "item": {
          "id": "523dbe2f-655a-4078-b0e5-8c0c32269dca",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9415d7d7-1671-4026-b089-0498590d5585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fb987e-11a3-4d73-ba44-8db4a79f24b4",
        "cursor": {
          "ref": "7331fa71-e2d3-47c1-ad0c-4aad8c966984",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d4d8c707-b687-4527-bf9a-010b08152b0e"
        },
        "item": {
          "id": "94fb987e-11a3-4d73-ba44-8db4a79f24b4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b3cbcb22-e313-4e77-b161-cb8be42d5452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4844e3b3-4486-4d0f-affb-78407865fe90",
        "cursor": {
          "ref": "3e06b084-1863-482d-8f84-00301651960b",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3badf08a-f256-4e5e-9c10-bc800a96a0c1"
        },
        "item": {
          "id": "4844e3b3-4486-4d0f-affb-78407865fe90",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "007d3552-336d-44f4-9336-dfcd0c264d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d83181-3e55-4439-98bd-a6b513b9896a",
        "cursor": {
          "ref": "27077b08-630e-4a93-bb68-a9f3fa7ee55a",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0a8982b4-1c49-44dd-9ef3-9e08afd180ce"
        },
        "item": {
          "id": "23d83181-3e55-4439-98bd-a6b513b9896a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8edfc8a8-f4f8-450a-acd3-7d91adbf77b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267850ed-efe1-4721-99e3-d0287d42e98c",
        "cursor": {
          "ref": "3b007bf1-e946-4295-814c-915bff4fca98",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7ef6d907-1229-43ec-afc3-fb34cfde581d"
        },
        "item": {
          "id": "267850ed-efe1-4721-99e3-d0287d42e98c",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "482eeca5-8a9d-45da-9f2c-c5eec20a3b91",
          "status": "Created",
          "code": 201,
          "responseTime": 4637,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "4f09d25d-5928-45fb-b98a-1485f3fd1999",
        "cursor": {
          "ref": "e88fd51b-8cd8-4c27-8f94-bb705c2b9191",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "23f45df4-b678-45e1-8118-965271eaef7a"
        },
        "item": {
          "id": "4f09d25d-5928-45fb-b98a-1485f3fd1999",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "09982582-1902-4ce5-abb3-223def5951fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba639b7-f5e2-47ae-8c25-6989ebafd811",
        "cursor": {
          "ref": "00966778-061c-4344-986d-221c1fd3872b",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e2b6e5d4-9264-4d09-9b87-c733b79e4171"
        },
        "item": {
          "id": "0ba639b7-f5e2-47ae-8c25-6989ebafd811",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d923dbbb-12b7-48bf-875c-91f50e1527c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b102b0ef-b53f-4748-a713-69bbcf753105",
        "cursor": {
          "ref": "70264956-fd91-4533-b1a0-31c5e7bc6acf",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "57692eb2-83f0-45db-b767-c7ee85b045a6"
        },
        "item": {
          "id": "b102b0ef-b53f-4748-a713-69bbcf753105",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "28a34056-97e6-4f37-88a1-41d684ad64ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f309948-e62e-4670-8eb0-de85fa22d1ad",
        "cursor": {
          "ref": "042a3320-3c4e-41e5-9ee6-8ea0e22db4ac",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6712ef97-d8e9-42fa-8b16-294fe8b75306"
        },
        "item": {
          "id": "0f309948-e62e-4670-8eb0-de85fa22d1ad",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a0d6949f-8a58-4faa-b68a-bf8a2387b764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac74670-1362-4180-a1c7-783ab208fa02",
        "cursor": {
          "ref": "c524d1bb-7f9b-42b8-bd61-b2c711d83487",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "916a9eff-732d-4707-87d6-76976dec4132"
        },
        "item": {
          "id": "5ac74670-1362-4180-a1c7-783ab208fa02",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0a5aaecc-c180-419d-bc1e-5082101c1f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ad7a1d-4a2e-4fe5-adb0-807247d294f5",
        "cursor": {
          "ref": "13f34633-a30f-4d5f-bf83-95b6c8e9f998",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "677904ee-0fa0-4e7e-8555-237ec2cca5af"
        },
        "item": {
          "id": "92ad7a1d-4a2e-4fe5-adb0-807247d294f5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "49e0fd59-54cb-44e3-b11b-b156c704f2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32c6caf-eef7-4b46-bf8d-44d68ef20825",
        "cursor": {
          "ref": "d6733c62-93be-4184-a211-5de308b2e383",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b6f2b748-431b-4988-a4ca-8c2e450bbd09"
        },
        "item": {
          "id": "f32c6caf-eef7-4b46-bf8d-44d68ef20825",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b73d8fed-edea-4964-a99a-a78749b38dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217525c4-b665-49ed-9557-7742bc5cadd3",
        "cursor": {
          "ref": "67dd1480-ccc7-4f31-8aa2-8a203a3e7a73",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f17666ed-8172-4f3c-a4e7-96f6766e4200"
        },
        "item": {
          "id": "217525c4-b665-49ed-9557-7742bc5cadd3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "17d8eac7-b922-470a-9051-7d4db2d1a505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5186c7b1-31fe-4039-b2a1-1027d99872a4",
        "cursor": {
          "ref": "36ee5ea5-b853-414e-a41c-41862224eaa4",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d7c9c077-a2d1-4a4d-8789-5576001a7e74"
        },
        "item": {
          "id": "5186c7b1-31fe-4039-b2a1-1027d99872a4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b3373aa9-5712-453a-9125-175d49fe7057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68684f55-7b7b-4abb-8138-faad709bcf12",
        "cursor": {
          "ref": "3ab33080-d090-4ec0-8669-2003e29d42da",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5923a9fa-4ee0-46aa-9b22-0a528868d36d"
        },
        "item": {
          "id": "68684f55-7b7b-4abb-8138-faad709bcf12",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c926adbb-b04a-4a35-b7e1-d8387b8c1ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867fd3e5-feed-44d3-b5b1-d7b02941537c",
        "cursor": {
          "ref": "2bd17ff6-a462-4a23-a968-a88303816694",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a7f46c50-39cc-46cd-aac5-27920c416a67"
        },
        "item": {
          "id": "867fd3e5-feed-44d3-b5b1-d7b02941537c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7fdcc0fe-bf17-40ff-a087-38b840a6dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe62ab3-c7ae-427f-b863-211ec44351b6",
        "cursor": {
          "ref": "a313b4b1-fd4d-491a-a1a9-ab15cacdc354",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9e1b34d8-68e3-4625-8063-83682656e065"
        },
        "item": {
          "id": "3fe62ab3-c7ae-427f-b863-211ec44351b6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6bbe2241-0fcf-401c-bac4-f9b836bd395a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1651,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "ed602e62-f438-444c-9200-5d141840e8fe",
        "cursor": {
          "ref": "1db089d8-f1b4-4a14-9c0b-8b45078a6a20",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cce3798c-1fc4-4ed3-ae8e-9d60b12fc1d5"
        },
        "item": {
          "id": "ed602e62-f438-444c-9200-5d141840e8fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b2b5a241-5814-446a-9e2a-61ad7c6877cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d392d4-9496-4449-9267-1d2d0f70b6a8",
        "cursor": {
          "ref": "e646426f-0857-4ca3-ac59-a4af5d55f1e4",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ba77325b-406f-40c5-ad5a-a17af864b6dd"
        },
        "item": {
          "id": "82d392d4-9496-4449-9267-1d2d0f70b6a8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f60ce564-dd20-4f41-9e8a-41724a01f508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b7182d-070f-4f06-81b5-694a368775a5",
        "cursor": {
          "ref": "83d9b91a-2a31-4c71-b9d1-b7bef0e3d4a8",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dffe0100-3f98-414e-b147-6346c478475f"
        },
        "item": {
          "id": "61b7182d-070f-4f06-81b5-694a368775a5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4d2cbe45-93c9-4845-ac4d-e2eb853621e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ed8379-fc2a-4473-a09d-e7bef9e9baac",
        "cursor": {
          "ref": "e1f33d89-6512-4782-ad3d-c1f7f4258364",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7a0fac71-5cf8-47de-80bb-d79b5d39c8b1"
        },
        "item": {
          "id": "33ed8379-fc2a-4473-a09d-e7bef9e9baac",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9118150-09ce-4bd0-83dd-1436dc2899af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6579b7-3a54-4607-80be-8cb6ed165033",
        "cursor": {
          "ref": "a5b8c7b0-9b73-4651-84c2-1e9cdcbdf80b",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "175a6b1b-b0dc-4dbd-96a8-221715a57d22"
        },
        "item": {
          "id": "ef6579b7-3a54-4607-80be-8cb6ed165033",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e099c168-c6d2-4b75-8910-34a269409a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449946c8-4e75-460e-8acc-337803cd0336",
        "cursor": {
          "ref": "22080d19-7117-4de7-b80c-3495753a589a",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "207b48d8-f912-46ac-97aa-258c4e25eece"
        },
        "item": {
          "id": "449946c8-4e75-460e-8acc-337803cd0336",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "743034e5-c7d6-45dd-af51-fe93cfd5269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a7fae5-03b3-4af9-a326-f6a84e7c6850",
        "cursor": {
          "ref": "42287acb-ec92-4a3e-a304-cf0c954db479",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f6efa42d-fb0a-4cdd-b164-1cc06b0a706e"
        },
        "item": {
          "id": "f4a7fae5-03b3-4af9-a326-f6a84e7c6850",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "95dfffcb-7aad-4596-a88a-cb69d6fe5ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c033642d-3b1d-4025-90f8-4b8ee6222e99",
        "cursor": {
          "ref": "c07dacf1-3574-4e2d-a763-59cbb44b992c",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c83f7295-3c2b-4135-b159-bbbdd64e22f7"
        },
        "item": {
          "id": "c033642d-3b1d-4025-90f8-4b8ee6222e99",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d6092cd3-6376-4171-9317-3756792403ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba7eaf5-f6c5-4bd8-96fb-c9c2db80202a",
        "cursor": {
          "ref": "e0949043-fc13-474b-8a68-cd7dc08242c2",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ead18369-7db4-4745-9eba-21fcfa09c75e"
        },
        "item": {
          "id": "2ba7eaf5-f6c5-4bd8-96fb-c9c2db80202a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f140cd06-a8af-42ab-85a8-8ceb3bd2be00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b23682-5c07-44af-8843-71a8843ee48f",
        "cursor": {
          "ref": "d4f964e4-19ee-41f7-b14a-55512f645f6e",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fe8556ce-ae55-4ec7-94a4-e24afa1b8645"
        },
        "item": {
          "id": "c8b23682-5c07-44af-8843-71a8843ee48f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2de1629a-cb37-4613-8991-28f5b44e02de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e48759-ebc7-45f7-8eb1-0b3b47c2b243",
        "cursor": {
          "ref": "12e1c97c-ef09-4da8-a2eb-17526ea8e89b",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71ca8081-a477-447f-85bb-00248fe71976"
        },
        "item": {
          "id": "38e48759-ebc7-45f7-8eb1-0b3b47c2b243",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6c91267c-7fd3-4a67-9e89-ed522e0101ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e690b5e-5434-41f0-a0d4-fd4658f9da1a",
        "cursor": {
          "ref": "a2aae5e9-6f7e-47cd-bf29-c8aab110f984",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "153e57e5-9782-4012-8eeb-9a53878b8f5c"
        },
        "item": {
          "id": "4e690b5e-5434-41f0-a0d4-fd4658f9da1a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c577a8e4-541f-4ea3-b302-79dae9a32684",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 531,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe4788a-2e99-48d7-91c3-2ed2f6f1fc44",
        "cursor": {
          "ref": "e54cd4b0-bc36-4b6c-9953-f4b5353665c4",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "62eac917-db75-4705-8e54-e507c1b39f7f"
        },
        "item": {
          "id": "8fe4788a-2e99-48d7-91c3-2ed2f6f1fc44",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f00d45cc-0ffd-4ae7-9dfb-52497425450a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 451,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "2725939f-4d63-488e-9739-60bf0da20d93",
        "cursor": {
          "ref": "4ffaa3ea-f333-4399-bdc6-a37cdeabb1d4",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c90b9b4b-7a33-4679-9406-5a1218568e17"
        },
        "item": {
          "id": "2725939f-4d63-488e-9739-60bf0da20d93",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "284edc7d-18cb-4c5f-b0e0-cf3b6484fbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cdd606-376d-4640-a765-a83229feefc8",
        "cursor": {
          "ref": "bdeb8650-b70d-4821-a79e-7b2f69463ffd",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7c28bc8e-1003-4ace-94ea-10215fc71501"
        },
        "item": {
          "id": "f8cdd606-376d-4640-a765-a83229feefc8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f2a8884d-ab76-4683-9806-560e01410a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878d3483-1181-4b5e-ad4e-87e6cea5cec3",
        "cursor": {
          "ref": "ca848b75-e81c-4877-8e22-9bfb6c1b04d5",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8460e792-f13f-4af6-a6f3-dc15ba1bc3b7"
        },
        "item": {
          "id": "878d3483-1181-4b5e-ad4e-87e6cea5cec3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8d6d1a7e-c9ea-4bb3-913a-86378b6a114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d78cf5a-e1a9-4837-ad5f-eb5ea9147b89",
        "cursor": {
          "ref": "7be93a3c-14d0-4582-b79b-f8592e6c8f13",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a2a92ed3-4d21-46dd-98e6-01bd14e29278"
        },
        "item": {
          "id": "7d78cf5a-e1a9-4837-ad5f-eb5ea9147b89",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f7b69b1-f021-4fd7-ade7-4e1d60a76041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8afd36-768a-407a-bd17-20dfdacb0c81",
        "cursor": {
          "ref": "3e6b0d56-7782-4a7f-8177-b4701114db59",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6e0c0424-8ac2-4401-9a39-cc07041f9953"
        },
        "item": {
          "id": "ab8afd36-768a-407a-bd17-20dfdacb0c81",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "604b4328-b1f5-440f-8553-1ae50a8eee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86654534-1f2b-42a8-b503-52e174de74c3",
        "cursor": {
          "ref": "848752d1-958f-4b44-a555-3aed8192f6d5",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1f9f6816-562b-46db-8cb7-93a8e66e985a"
        },
        "item": {
          "id": "86654534-1f2b-42a8-b503-52e174de74c3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "07b4df96-d9c6-43a2-87ca-d43b81f6002f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 535,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4880d4-7fb9-4440-b329-b6c50dc6eba8",
        "cursor": {
          "ref": "5a58f53e-0d80-4121-9882-62eb7ff69ed5",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe62c89a-d2b3-4126-8dd0-161e274decd1"
        },
        "item": {
          "id": "3b4880d4-7fb9-4440-b329-b6c50dc6eba8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c102ecd8-468a-4f5f-9218-f8f5c7e5faf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c211538f-66a3-4351-ae12-5fa189af2b1a",
        "cursor": {
          "ref": "15cecdb0-e52c-4025-9a53-491833586ec2",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c029826-7045-4898-9deb-0de6d1b499d2"
        },
        "item": {
          "id": "c211538f-66a3-4351-ae12-5fa189af2b1a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "505f5c35-936a-4e45-8e8e-b1d14b5e1f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e2c391-98fa-43f0-8cb9-489bfd721558",
        "cursor": {
          "ref": "6ecb6233-3459-4c43-83fc-a11e0a12f0f7",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8ed52a8b-a067-41ac-8c13-62553adbeac7"
        },
        "item": {
          "id": "27e2c391-98fa-43f0-8cb9-489bfd721558",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7b45a2ce-3c3a-40b2-80dc-44b158acb057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3f84e2-6735-4dc4-9741-6b0f4cce8170",
        "cursor": {
          "ref": "805be2db-b60e-452e-96aa-213c975ecdbe",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6055d2b2-1602-4bf6-93eb-579eaf816ed9"
        },
        "item": {
          "id": "ec3f84e2-6735-4dc4-9741-6b0f4cce8170",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "17518f75-5573-48a7-8bb4-84107980f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b81b8d-bd94-4d97-99fe-cba9b78da6eb",
        "cursor": {
          "ref": "37ab1b5b-b27e-4dac-915b-1731b3e2a130",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "37a05a84-7472-4a84-82e4-26f2676ee51a"
        },
        "item": {
          "id": "e7b81b8d-bd94-4d97-99fe-cba9b78da6eb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8d588e81-8261-4a6a-8f00-a270092ee5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bfd2f2-636f-4e74-94cc-13ee0f7f658b",
        "cursor": {
          "ref": "5e84a7e9-382a-41d2-9cf0-22b9b1afa9ad",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "85eeab63-71ac-4684-86d4-a0075ab632dd"
        },
        "item": {
          "id": "e1bfd2f2-636f-4e74-94cc-13ee0f7f658b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "195ae8c6-565f-403c-865b-b93b4ebaa298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81e38d-86f4-426d-8009-cd45196da388",
        "cursor": {
          "ref": "9afbd8cd-a78f-468b-9f86-2f66909e56c1",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7208b9ce-32dc-465b-ad75-76b11e2c9da7"
        },
        "item": {
          "id": "0f81e38d-86f4-426d-8009-cd45196da388",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "04e9b80f-0667-4137-84c7-b090c438c374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff747c7-887f-4958-b2da-f157806c6979",
        "cursor": {
          "ref": "7977d04c-9514-40b5-a7b9-47fe036cff22",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7e5a477c-a90e-4db3-aa4f-e7b941047087"
        },
        "item": {
          "id": "4ff747c7-887f-4958-b2da-f157806c6979",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "01f3f961-5d71-4342-8cf1-44a77d7d7318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd55490-1d10-4419-83ab-2998d0071a00",
        "cursor": {
          "ref": "18860f29-f8d5-46a8-9996-3d8c5b0c72c4",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "13ded093-fa76-42c5-914c-1185e81db486"
        },
        "item": {
          "id": "7fd55490-1d10-4419-83ab-2998d0071a00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "34ef6064-a7d8-43fa-bd50-1cdc216c79f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d5d77-a646-4e32-aa28-53dc11b9b409",
        "cursor": {
          "ref": "c19686bd-9702-46bb-9317-f2c6f5d8b157",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "40533fe9-49ac-49e7-b2aa-370b537aa976"
        },
        "item": {
          "id": "b86d5d77-a646-4e32-aa28-53dc11b9b409",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7ff83a4a-20db-449e-8774-04568f80f333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe58c90-b6a0-49a1-8117-12596e3d93ad",
        "cursor": {
          "ref": "3adfbf20-d1fc-4db9-991f-042f7cb0e2f0",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73f3dd17-0702-4a75-aa8d-a260f036146a"
        },
        "item": {
          "id": "3fe58c90-b6a0-49a1-8117-12596e3d93ad",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "466e4d4e-ba88-4bff-ad2c-c5479cf34316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e739f226-760a-4e8c-8592-15aa75a1dd6a",
        "cursor": {
          "ref": "03c5742d-869f-4587-9403-ca74652c983c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ae194c5a-c148-4a43-bb20-e86f599a8b9f"
        },
        "item": {
          "id": "e739f226-760a-4e8c-8592-15aa75a1dd6a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "671c2bc6-acc8-4b88-ac78-ca5c5b405859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d7317-3237-413a-a302-43dee591a5c1",
        "cursor": {
          "ref": "54e716b0-043b-4d83-8eb1-77461a2efe75",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "40a4dd6b-084b-41cf-83fa-d9afbd744fec"
        },
        "item": {
          "id": "465d7317-3237-413a-a302-43dee591a5c1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a18c0db8-8005-43ad-a70f-8a926f0c7bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c48b12-a887-4d42-b66c-b205f748fbec",
        "cursor": {
          "ref": "e6f78351-e4c5-4a4f-8bab-a95c3f47ee88",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f37dec88-338c-4862-b7e4-412a2a7544e5"
        },
        "item": {
          "id": "69c48b12-a887-4d42-b66c-b205f748fbec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "67b0887c-5d71-4d11-86be-1824080a609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ef1274-393a-497c-abf2-3a5edc0e08cb",
        "cursor": {
          "ref": "ce94a0d3-27eb-4845-b87c-aee02dd3b796",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a817c9b9-e4a5-4681-bd01-308af22c842e"
        },
        "item": {
          "id": "b5ef1274-393a-497c-abf2-3a5edc0e08cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "36a68194-d078-4086-8f5e-7f473f80bac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c3c33e-92fb-44da-a6fa-0df81271f68d",
        "cursor": {
          "ref": "16774303-faff-4dc2-bf9d-5338531ed1a6",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dc510585-fa11-4779-9a52-1744b1de5c8f"
        },
        "item": {
          "id": "f3c3c33e-92fb-44da-a6fa-0df81271f68d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a6560ac8-617d-4827-b648-0e566d7ab92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5d32ed-265a-4f94-915c-4b256a18ac44",
        "cursor": {
          "ref": "0e1d0bc7-70dd-4f6e-92e4-91b9e137e862",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "66451e58-f75c-41c7-bdcf-adeb678ed8d6"
        },
        "item": {
          "id": "ad5d32ed-265a-4f94-915c-4b256a18ac44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e3229d4-e59a-4cbb-b98c-d615234ae942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d893e-dad6-4d2e-8ca8-f5c46f548fa8",
        "cursor": {
          "ref": "0e7fdea4-6371-4ee0-9352-2f4a33aa63a8",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "26652575-c43a-44d0-ada1-255d931de730"
        },
        "item": {
          "id": "5b5d893e-dad6-4d2e-8ca8-f5c46f548fa8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f8844244-d433-45ed-a386-bdcffe1b535c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def76908-de25-4db4-8513-c09d50a14eae",
        "cursor": {
          "ref": "1eb796bc-7bce-44ff-9e63-6b73a041966e",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9412384a-0ace-4f7a-984e-ea9860eab025"
        },
        "item": {
          "id": "def76908-de25-4db4-8513-c09d50a14eae",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "13d05c1a-b100-46ec-8dcc-02590c9bf7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3528d6-b88a-4405-afbb-e0e9db6360a6",
        "cursor": {
          "ref": "9549634a-8b32-46fb-bda6-36a6f1d6dedc",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "440a13e2-7593-40ae-8090-8886386fb980"
        },
        "item": {
          "id": "7d3528d6-b88a-4405-afbb-e0e9db6360a6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "24bc6257-d3ea-4b97-b301-56f9ff5c9da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c046a0-4eb4-487d-9116-468040d1aa96",
        "cursor": {
          "ref": "3982bb63-f693-408f-86a9-9e8a426db1d1",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a773f43d-9a85-4a9f-aa6d-7712750a0be7"
        },
        "item": {
          "id": "54c046a0-4eb4-487d-9116-468040d1aa96",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1655184e-31cb-424d-87b6-a8d55dca8436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881b7957-f500-4cbb-99f0-d49436cc7821",
        "cursor": {
          "ref": "8c84ddc0-6d14-4b41-b87b-048b3b73310c",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e2178b02-afe2-45e9-b6a8-6bd3cf63079f"
        },
        "item": {
          "id": "881b7957-f500-4cbb-99f0-d49436cc7821",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c5b93e35-dc2b-4bf2-ae5a-d928afb71b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e6cfdb-77a2-49ed-83e0-9c9e694a454f",
        "cursor": {
          "ref": "104cb5e7-03cf-450b-90e0-2eafa785f0c1",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f8a92eec-9fbf-42eb-86b7-b3791828e310"
        },
        "item": {
          "id": "c0e6cfdb-77a2-49ed-83e0-9c9e694a454f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fce09f33-3f08-40c1-bdec-56c4ea1baace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a4d2fa-cfcb-4e27-81e7-cfbe7066b739",
        "cursor": {
          "ref": "4b708f60-8e64-4c52-8160-49a33d9b63e7",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "742f2d18-893d-48df-b2a5-e2dcc143184f"
        },
        "item": {
          "id": "31a4d2fa-cfcb-4e27-81e7-cfbe7066b739",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f7ecc31d-b981-4399-9879-f9ff92c3b3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f7c5fb-c062-460b-b04f-8b598784b828",
        "cursor": {
          "ref": "c2d3042d-adbb-402e-82c4-47c23669eca2",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eaee031d-9a1e-4c78-a6d2-650ad7d2db66"
        },
        "item": {
          "id": "12f7c5fb-c062-460b-b04f-8b598784b828",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "80203cb5-bbd8-4a7c-b0ea-65112674e159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900822f-459e-4634-8fdc-d217b56f43d5",
        "cursor": {
          "ref": "33d10831-c738-42d5-b476-3cbc78d73d8f",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e0eebc4b-6ad3-4ccf-a338-0dd0d46ba9ff"
        },
        "item": {
          "id": "7900822f-459e-4634-8fdc-d217b56f43d5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a1fac554-6fe6-414c-88e3-07c50fbc354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8393dba2-0f84-4e36-a710-e8af848bebb4",
        "cursor": {
          "ref": "23e83ccf-d58c-4197-9d75-c59151a3f410",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f79ad6db-36c2-4311-b934-7a54ec84aef8"
        },
        "item": {
          "id": "8393dba2-0f84-4e36-a710-e8af848bebb4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "acd16871-0e2c-4dfb-bb96-3380d8f89b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc96f50-6f72-4a09-90de-75206c92cbdd",
        "cursor": {
          "ref": "4b44efa2-e7e8-47f2-b624-a2f6b4da86f8",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4ff49793-44a7-4df5-9e08-ebf9d210c682"
        },
        "item": {
          "id": "bcc96f50-6f72-4a09-90de-75206c92cbdd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "400c05a8-847a-48ce-8a86-5a27e26c8808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1f182f-383f-41dc-90cd-db327bfb3855",
        "cursor": {
          "ref": "3a44b323-9457-4343-a898-59b090185cbf",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99332f9f-7b70-4db9-b030-3ef7bbb7d8a9"
        },
        "item": {
          "id": "8b1f182f-383f-41dc-90cd-db327bfb3855",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d389e15c-f3ed-4ba1-87c9-431888681954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ee6e1c-3766-49cc-a4ec-1548cd2393d8",
        "cursor": {
          "ref": "6dcdcd79-cd18-4d82-9ddd-a8d53d0c7b58",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be4254ef-e5f1-4e37-a9e1-5d882db4c0b9"
        },
        "item": {
          "id": "b7ee6e1c-3766-49cc-a4ec-1548cd2393d8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b67fa273-1506-423a-8f6b-06da5b697d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311d1496-63c4-439b-8d16-b4c6cc920ba5",
        "cursor": {
          "ref": "8bd61a42-6943-4b87-99b9-20425b14cc5f",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5030b81a-15a6-4936-85c6-4b4caf332620"
        },
        "item": {
          "id": "311d1496-63c4-439b-8d16-b4c6cc920ba5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "11a843e1-227c-4b8d-87dc-4bbbe9448067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655c579b-8e0e-4660-be09-66671a4024e8",
        "cursor": {
          "ref": "18988b54-d376-42f8-8320-0e75f3a84105",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f6861606-a2b1-4193-adf2-cbe4ecb2d0b2"
        },
        "item": {
          "id": "655c579b-8e0e-4660-be09-66671a4024e8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "09440b79-436b-4306-af9e-a7670ac95c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be88520-2e11-4b9b-866d-f9266beb84c8",
        "cursor": {
          "ref": "7f344dbf-98e8-4ba1-8440-79212f98cf2c",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "013981f8-8bcd-4916-89e6-460e6a342efa"
        },
        "item": {
          "id": "8be88520-2e11-4b9b-866d-f9266beb84c8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "038dcb1c-2860-4244-8f03-9d80ccbf977f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d151e3e-911a-4182-857a-4a6a57690c45",
        "cursor": {
          "ref": "3401d2e6-4a20-49c0-a47d-16efc8a022a8",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "42c655e1-ac5c-4b9e-bf06-a65de219bc37"
        },
        "item": {
          "id": "5d151e3e-911a-4182-857a-4a6a57690c45",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "abaa6201-2081-40e4-baa2-7c88a55aa1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7930919d-6498-4e28-966e-c8a5bc4b5483",
        "cursor": {
          "ref": "23e4f90a-ec9f-403d-b5fe-1ba37ace91a0",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1552625f-0a20-42a3-a028-2124e7481414"
        },
        "item": {
          "id": "7930919d-6498-4e28-966e-c8a5bc4b5483",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7ceb45bd-c246-4de1-82da-21f265568c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3131be5b-607e-4c88-9413-9dc73b162a8a",
        "cursor": {
          "ref": "f8523081-680a-4dc8-9b99-365d97ab3240",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "18b5f74f-e12c-4362-bd3a-802d0fbd4c50"
        },
        "item": {
          "id": "3131be5b-607e-4c88-9413-9dc73b162a8a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd1cde9a-83dc-41c6-ae71-2b669d053861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f59c7ee-e763-4917-8184-4bf45b27f695",
        "cursor": {
          "ref": "303f80e1-bef5-40e1-b22e-2ee04893f086",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d83d9845-31dd-4f45-89e6-d8de8ada3254"
        },
        "item": {
          "id": "9f59c7ee-e763-4917-8184-4bf45b27f695",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "22ce36a1-8ccc-4c7f-b163-e475ecdf88b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35904437-3492-4151-9d5a-33ac65bd5a69",
        "cursor": {
          "ref": "fa8b99ac-39bf-405d-96a1-d34927ad7a9f",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ba465e69-3016-4fe3-aaf3-ba50f04b9a39"
        },
        "item": {
          "id": "35904437-3492-4151-9d5a-33ac65bd5a69",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8c5266ba-2344-4f02-8a22-3676201b3745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d215ec-5ef1-4116-a8ca-99111da1e226",
        "cursor": {
          "ref": "8826d64d-b86d-40be-a350-7e2ce6f67e3e",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a4f47653-ce93-4034-b049-dfe80ff0cb44"
        },
        "item": {
          "id": "58d215ec-5ef1-4116-a8ca-99111da1e226",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6f5a2d06-b9e8-41fe-9322-67a722e2f1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a20ecd-614b-4735-87d3-939e4e907ed7",
        "cursor": {
          "ref": "1a165203-3660-45a3-a2bc-b53b4eb57df7",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "54639e8d-93bb-4e51-b70d-f8e852a96a1a"
        },
        "item": {
          "id": "f7a20ecd-614b-4735-87d3-939e4e907ed7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c79d13d9-f1f2-4ba3-937e-d1ddabcac560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593762b8-9bf2-4052-adb9-994aaa6ac2c2",
        "cursor": {
          "ref": "2bba9406-d4e3-4517-bcf9-67351b4da253",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4d71e43d-e01a-4ee2-af5c-d5fa826f0964"
        },
        "item": {
          "id": "593762b8-9bf2-4052-adb9-994aaa6ac2c2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "093d794e-1364-424b-93c8-d162e75b8aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f02342-e81e-4ec1-8d78-5f3bd2c29bd1",
        "cursor": {
          "ref": "7667bf50-750b-4c2e-a496-ff860c81a115",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "31fe870d-9f64-4e51-8f4b-9365c3acdad3"
        },
        "item": {
          "id": "e4f02342-e81e-4ec1-8d78-5f3bd2c29bd1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6facf696-664d-4941-91e5-730c9619b850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa57f55-6888-43fd-b58f-48a7232508ef",
        "cursor": {
          "ref": "3147ecce-589d-46e9-9de1-ab7f3aec6299",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "526bece2-de3b-4d26-996d-4c3924f33086"
        },
        "item": {
          "id": "5fa57f55-6888-43fd-b58f-48a7232508ef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bcd893a9-cc09-4aa5-be30-aef2cbbe2734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb78675d-028a-43dc-8b84-545ae5e889cc",
        "cursor": {
          "ref": "fa56db27-67e5-4ce9-afdd-3220adb18ff4",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7ba79985-7e72-4c37-b729-2d30ae3b5faf"
        },
        "item": {
          "id": "fb78675d-028a-43dc-8b84-545ae5e889cc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ea605f0-5719-48b9-a6ce-dbaebb3f7daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301e124e-940e-4718-a737-44832f101cfd",
        "cursor": {
          "ref": "610269ab-4cfc-4b50-b3f7-4d23402817e9",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0d22b79-a82a-4ecd-ba55-259827cd5278"
        },
        "item": {
          "id": "301e124e-940e-4718-a737-44832f101cfd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c289f176-4fe7-4501-b5f9-f82a16fc2e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8963391-0289-4550-a8f4-5bfb30b51c1c",
        "cursor": {
          "ref": "425f6b6d-fb8c-4250-b091-aa9f6c74f154",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "058341e9-9158-4df4-a69d-b1a2c90e1873"
        },
        "item": {
          "id": "c8963391-0289-4550-a8f4-5bfb30b51c1c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4939663f-6e42-43fc-8548-5eda9c24f22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c46002-f6a8-4993-a957-266718be022e",
        "cursor": {
          "ref": "2848c38b-b4ed-4510-926c-540fa33436a7",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9665b145-5d40-4cc7-8ae2-b680e05587bb"
        },
        "item": {
          "id": "52c46002-f6a8-4993-a957-266718be022e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "29597f27-1432-465a-87ea-104779eaae61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e187ea-b50b-4a22-a30b-f14841ff65c7",
        "cursor": {
          "ref": "2894ab88-f2e9-4fc2-a2ee-2c0c17d06e65",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0fcad2f0-cf80-483b-b986-979a2037ab5b"
        },
        "item": {
          "id": "36e187ea-b50b-4a22-a30b-f14841ff65c7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eabe5259-5fc2-4d12-887a-5b79ebd5012e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb6fee0-98a6-45a3-8670-280b3253e2fa",
        "cursor": {
          "ref": "7dd23843-6753-4945-9a49-6c56182ceebd",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8671a8e2-cd02-4de3-b161-58d8ab1f0363"
        },
        "item": {
          "id": "8eb6fee0-98a6-45a3-8670-280b3253e2fa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "869cca4d-1f74-4181-8879-72b75add364a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb394756-e439-4a9d-ae30-c740c5d94ff0",
        "cursor": {
          "ref": "a55e3e70-9808-457b-8602-1ff7cd71164d",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "23f72423-555d-4fcc-9023-bb97acb0beb2"
        },
        "item": {
          "id": "cb394756-e439-4a9d-ae30-c740c5d94ff0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a6966f8d-7525-40ea-92b3-1ffd0dfdab9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2723f4-ec5b-4523-8635-5ddba73bcac4",
        "cursor": {
          "ref": "a1657b42-8794-4779-812c-aa18f42ae666",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d8ea870f-f894-45dc-aa75-d534c57f2298"
        },
        "item": {
          "id": "cf2723f4-ec5b-4523-8635-5ddba73bcac4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9f5b1c1a-2419-4b61-b01e-93baf45121fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 553,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20de79a0-b409-45e0-a59a-d178563e3776",
        "cursor": {
          "ref": "4e5ea07d-c797-418a-b29e-0180571c435a",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "48c38681-820e-498d-8a12-99837f5931c0"
        },
        "item": {
          "id": "20de79a0-b409-45e0-a59a-d178563e3776",
          "name": "credentials_issue"
        },
        "response": {
          "id": "acf268ca-8cf0-4592-8899-48d8aee21aa1",
          "status": "Created",
          "code": 201,
          "responseTime": 3994,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "036eb08e-e53f-479c-b984-d377c3f56ba3",
        "cursor": {
          "ref": "dceebee1-493d-4867-9b89-59041a7441b8",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a730dbae-0fbd-4de8-a39f-cee7cf21e208"
        },
        "item": {
          "id": "036eb08e-e53f-479c-b984-d377c3f56ba3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "91485263-c8c7-48c5-8816-63ce82ca274d",
          "status": "Created",
          "code": 201,
          "responseTime": 7080,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "77b092cd-c6d1-4c3c-90ed-951cd7de466a",
        "cursor": {
          "ref": "9fa80803-5b02-4861-a451-82eefef7dbb5",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "554a7d51-8265-4fb0-9739-dc47b6e5c5e1"
        },
        "item": {
          "id": "77b092cd-c6d1-4c3c-90ed-951cd7de466a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4a6f91eb-87c8-4c99-bee9-988271623a63",
          "status": "Created",
          "code": 201,
          "responseTime": 4238,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "7f295c4a-d32d-471d-961e-4b9986b5b826",
        "cursor": {
          "ref": "58779122-7b7a-4a86-8d1d-f3a79ddabca4",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9269e931-7d49-4deb-a1a7-1c0d7aeb6011"
        },
        "item": {
          "id": "7f295c4a-d32d-471d-961e-4b9986b5b826",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4185b9fb-58c4-4a20-81e9-1517ad49caf6",
          "status": "Created",
          "code": 201,
          "responseTime": 3854,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "c7e13d96-e2bd-45be-a6cb-8c01858ffd48",
        "cursor": {
          "ref": "5fdf94d7-4467-4f50-87d9-a0eee402feed",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "be2b87bd-a8d5-41e9-9678-eb72d18c87e1"
        },
        "item": {
          "id": "c7e13d96-e2bd-45be-a6cb-8c01858ffd48",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "acc0f788-cb41-4e2d-b1fc-b14da196e51d",
          "status": "Created",
          "code": 201,
          "responseTime": 4565,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "1d8a3a6c-5954-4779-9402-03ffee3de600",
        "cursor": {
          "ref": "f497f6e7-c585-4616-bd4a-489e29a9958c",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8c2d3159-72ee-46f4-8e81-af3715aa0b54"
        },
        "item": {
          "id": "1d8a3a6c-5954-4779-9402-03ffee3de600",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60a33b6a-f05c-41f0-9036-4249586c9d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8a3a6c-5954-4779-9402-03ffee3de600",
        "cursor": {
          "ref": "f497f6e7-c585-4616-bd4a-489e29a9958c",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8c2d3159-72ee-46f4-8e81-af3715aa0b54"
        },
        "item": {
          "id": "1d8a3a6c-5954-4779-9402-03ffee3de600",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60a33b6a-f05c-41f0-9036-4249586c9d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feecdb84-c6b6-459f-b1d6-3c53b351ec11",
        "cursor": {
          "ref": "6caa6302-c1ec-42df-bffd-133c51ac1e9c",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "86dd67da-0de2-45cc-a7cf-621987b0a273"
        },
        "item": {
          "id": "feecdb84-c6b6-459f-b1d6-3c53b351ec11",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb57fe3f-a023-4276-9376-05a539af5419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4919bb4-10f9-48af-9200-36ddab27ce45",
        "cursor": {
          "ref": "5ae3ceae-c9ae-4006-a3a4-a5c47bf19b9c",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6dc04601-2a37-45f0-9898-ece62c511028"
        },
        "item": {
          "id": "f4919bb4-10f9-48af-9200-36ddab27ce45",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4a9de492-3db0-4631-b867-8d3c8da8dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a934a5c2-ccab-482f-afec-d148ff97d9a9",
        "cursor": {
          "ref": "a6b07715-1b2d-40e4-8967-7b36feb022a9",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2e1e8f7e-76be-47be-8c33-516334dfe4a3"
        },
        "item": {
          "id": "a934a5c2-ccab-482f-afec-d148ff97d9a9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15c897e9-0212-487e-b01b-5d777581b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc849c06-5c42-4d35-951c-f113aa780964",
        "cursor": {
          "ref": "825189cc-7a1c-49b4-8b2e-5b7f96bc6709",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "52745c9a-66aa-4eee-945b-7b558a3a67e7"
        },
        "item": {
          "id": "bc849c06-5c42-4d35-951c-f113aa780964",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1614c36d-d2b2-4dbe-9063-36e67986ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0bfd09-5441-4052-a070-a7bb0b46542d",
        "cursor": {
          "ref": "2f3788ee-2f8c-433b-9261-ecf645296494",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fe955d79-0149-41c4-a8a2-5b13d6007406"
        },
        "item": {
          "id": "1d0bfd09-5441-4052-a070-a7bb0b46542d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "06df0518-b79d-4461-873a-e32cc257c546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d4d831-45f3-4fb6-98e9-4552aff276bd",
        "cursor": {
          "ref": "743a241e-7e7c-4d45-b080-f396941ffb95",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3147ea8b-585a-4d36-a489-481f5fcf04be"
        },
        "item": {
          "id": "36d4d831-45f3-4fb6-98e9-4552aff276bd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb815238-7078-4fb4-b52a-1c403f2354aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef3e639-0d4a-45e9-908c-3558f874cc99",
        "cursor": {
          "ref": "b0abc00c-8422-4ebe-bdbf-849ca84eeb57",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a60d0d94-7edb-457d-b074-aa743909c014"
        },
        "item": {
          "id": "4ef3e639-0d4a-45e9-908c-3558f874cc99",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "28890a97-b4f5-41b3-b7c3-acb58a3effe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc63bb-1df8-44d7-8f94-5340f4c1cc02",
        "cursor": {
          "ref": "3b880ddd-3ee9-4c19-b1bd-15eb6fbd7d84",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ec685f4-faa8-4fd3-b61e-04554345886c"
        },
        "item": {
          "id": "47fc63bb-1df8-44d7-8f94-5340f4c1cc02",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48b7a95f-1c81-4eaa-9a88-352370e99a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c84e17c-f131-44f7-aae1-ab31ffb0046b",
        "cursor": {
          "ref": "1ca07818-db7a-4a52-9529-70e053976c4d",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a71a359f-ecd9-40e9-b49e-5c25d6b7199e"
        },
        "item": {
          "id": "3c84e17c-f131-44f7-aae1-ab31ffb0046b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a82893c4-2962-4962-b542-8744d922a9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a330f5c-ea12-4450-8ec3-f9f4dff919c8",
        "cursor": {
          "ref": "8cd29fa6-6772-442c-9842-6ff9b64a540d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5471d8ac-29b7-4138-b0f2-83c01e7fea1d"
        },
        "item": {
          "id": "1a330f5c-ea12-4450-8ec3-f9f4dff919c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b0f0a930-28ab-4904-8d0c-35e327527ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b52498-588d-4d45-b5e9-aaea38425d11",
        "cursor": {
          "ref": "31696c34-372d-48e9-b015-6a261170cac6",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "396c4ff2-dd93-4055-af58-ffbd3deda76e"
        },
        "item": {
          "id": "c8b52498-588d-4d45-b5e9-aaea38425d11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "64d96dc8-4bf1-439c-b8d7-986b4d4a5d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8d44ac-5b10-44e3-91d4-17559a02b729",
        "cursor": {
          "ref": "41f50fcb-3404-4ef4-bf7d-2f7989ed5cd1",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0617cd40-9637-4306-a96f-119349d37c47"
        },
        "item": {
          "id": "8a8d44ac-5b10-44e3-91d4-17559a02b729",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "adb5b13e-10bb-428f-9aa0-187dc9ca5dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c4b155-e4bd-4edd-8ee1-0371dd22a8cb",
        "cursor": {
          "ref": "debf9f81-e2ec-43bb-a0b8-84bfb9c558b0",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "41267d64-072a-4095-b969-11afcdf37aac"
        },
        "item": {
          "id": "14c4b155-e4bd-4edd-8ee1-0371dd22a8cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a060e103-8333-4b4b-88eb-ae957fcda2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ae224e-f2e2-4fa7-893d-429e322848da",
        "cursor": {
          "ref": "3238db47-a683-4b3c-b9e6-dc0c9e325b65",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "db02319a-ee3d-46a5-8c55-ad3b7c402e76"
        },
        "item": {
          "id": "d8ae224e-f2e2-4fa7-893d-429e322848da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e27104eb-4cd3-4927-845c-77e2a1afc2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f00d62-d934-4e02-b2ce-64d4a2c6e037",
        "cursor": {
          "ref": "a544dd94-bc2e-4ce1-aaf3-c962021e8d59",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "182af1ca-5155-4136-b670-6fd5714adc1c"
        },
        "item": {
          "id": "91f00d62-d934-4e02-b2ce-64d4a2c6e037",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2d71af44-06fb-4893-83b5-5d654e585242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47042aea-7b0d-4ce3-b59a-201d4fde97fb",
        "cursor": {
          "ref": "75ade071-c815-4e38-a66f-b897360ca2b4",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "46ab3770-72fa-485a-84b7-6f53d8242598"
        },
        "item": {
          "id": "47042aea-7b0d-4ce3-b59a-201d4fde97fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e7fdf6c4-8360-4ab4-9b20-a4120b332a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029e9476-240a-47d8-8903-4bc46cbd4ce3",
        "cursor": {
          "ref": "976ac81c-63ef-44ff-badc-621b7844b729",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "48015019-a448-449a-bc5b-62ad98d3899e"
        },
        "item": {
          "id": "029e9476-240a-47d8-8903-4bc46cbd4ce3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe4b8500-eea0-41da-b548-5930eb9fd06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d398e517-7087-4ebc-ba92-b6591f12d526",
        "cursor": {
          "ref": "3f5e8ea5-d383-404d-b24d-a42795470277",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d1d6f2ef-1af9-4974-9709-f16f4f9ba224"
        },
        "item": {
          "id": "d398e517-7087-4ebc-ba92-b6591f12d526",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0a5b2e0d-b34c-4ea9-a337-dd9dca44b288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a585b08-1924-41ba-a5d3-9bbbb1e16128",
        "cursor": {
          "ref": "d952154e-e57d-415d-9231-8bdca7e39bbd",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf32bab0-34b8-4f57-9e09-3f97362f1ee7"
        },
        "item": {
          "id": "3a585b08-1924-41ba-a5d3-9bbbb1e16128",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e87dd9cd-e517-48b0-a162-947e57089543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600b586a-7ed7-4065-b8f9-6914a47ddb37",
        "cursor": {
          "ref": "52ce76d2-e51b-42df-a453-2e49e531d288",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b6c356bd-790f-4f6d-b131-561a4081d4da"
        },
        "item": {
          "id": "600b586a-7ed7-4065-b8f9-6914a47ddb37",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0b77d1d-9d85-4cf6-945c-64af516dd2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f445291-3781-4c5b-b8e3-a3aaf9e6f0d6",
        "cursor": {
          "ref": "52efec0a-d0bc-41a7-b428-20eadd569afb",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ca0bf7b5-8cc3-4199-8a1b-31df05e32bbd"
        },
        "item": {
          "id": "3f445291-3781-4c5b-b8e3-a3aaf9e6f0d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b30f54a-94d5-42bd-b2ba-e0958ceb8fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff74442-7916-4606-8bf2-829caa219b88",
        "cursor": {
          "ref": "fbf7f461-f70c-4da4-8529-3ac03abdaa4d",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "77cdc7df-c1eb-4d44-a067-1645c4f2e059"
        },
        "item": {
          "id": "aff74442-7916-4606-8bf2-829caa219b88",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "641a69a5-3880-4aad-98d6-a3b4bd150b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27329cc3-d979-4a4c-b425-b5232670aa07",
        "cursor": {
          "ref": "4693e2fc-4f58-40e6-bdef-f74d8b49b80d",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "99ce214c-c3ab-4ca4-bcce-95fac7308675"
        },
        "item": {
          "id": "27329cc3-d979-4a4c-b425-b5232670aa07",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "938d422f-1efa-4386-86e4-5639e34c3a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2988e26c-059c-43a4-9840-c409ed3f3b25",
        "cursor": {
          "ref": "82f1964e-58de-4f19-94a7-a4493d708c8c",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17f2ea3b-5962-42ec-8f74-e794bff5bcc7"
        },
        "item": {
          "id": "2988e26c-059c-43a4-9840-c409ed3f3b25",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d0c76c8-6a03-4640-a58c-b542700fb2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cee2b7e-8fdd-4f02-97ab-41a9fc9394fb",
        "cursor": {
          "ref": "95add579-b4e7-4e2d-8b9d-c115cdec75f2",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "73db6369-031c-4b9f-9817-f71c693563cc"
        },
        "item": {
          "id": "7cee2b7e-8fdd-4f02-97ab-41a9fc9394fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3cd77cc2-cc4d-40d8-ba51-13625d47f9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aaf393-7e93-490d-adcc-6e2619e59a1c",
        "cursor": {
          "ref": "d91aaee4-9c04-46d7-8e0b-a4796383fea9",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8270c483-0dfa-4f78-b406-b2c9ca7fe3b5"
        },
        "item": {
          "id": "f2aaf393-7e93-490d-adcc-6e2619e59a1c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ae74822-c5de-4f66-961c-4972edb8e133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a29eda-03c0-4459-b009-460de8c9479e",
        "cursor": {
          "ref": "b0273351-c534-463e-9728-3b1ca8176e45",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b2229581-a922-4ff6-be1a-63b218e3ca50"
        },
        "item": {
          "id": "d9a29eda-03c0-4459-b009-460de8c9479e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3edddda4-d60b-42ce-a582-6d44e520a24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd16def-2a97-4b12-a8c5-2d6adf21f7a1",
        "cursor": {
          "ref": "fba76ab0-0c4e-4274-b616-f0026fe0d6bd",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "826ea051-064c-4310-8a1c-0e36802c21ed"
        },
        "item": {
          "id": "0fd16def-2a97-4b12-a8c5-2d6adf21f7a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fab6c40c-3a79-4ced-8e11-b17baaa19434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c2402a-7835-4f5c-bb33-7e2fd25cfc18",
        "cursor": {
          "ref": "dd662b90-175c-4617-b29a-f7c8787ddaa0",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b5578eb8-ad6f-48e3-9ec7-e7b9c4711a90"
        },
        "item": {
          "id": "37c2402a-7835-4f5c-bb33-7e2fd25cfc18",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7f01245c-a7ca-4b82-8c33-9e4173023100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0da6f95-d628-4d6f-9afd-79ff8d07583e",
        "cursor": {
          "ref": "13524154-1cb3-44b1-be9d-a03158083631",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3a7a300a-38a3-43eb-b078-f6bf4d15f355"
        },
        "item": {
          "id": "f0da6f95-d628-4d6f-9afd-79ff8d07583e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e51dbd79-4723-4592-8050-651359dfa636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd10f6d7-1c15-4f2a-a6fd-a4183ea30e7f",
        "cursor": {
          "ref": "3863e951-791a-4b7c-a37b-3512a9548f7a",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e26e475c-90f1-4c94-8f0b-056c70285376"
        },
        "item": {
          "id": "fd10f6d7-1c15-4f2a-a6fd-a4183ea30e7f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f4de0da7-4b5d-437a-ac3f-ac18dabcdfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2079c7-e083-4b9f-bbd5-fc7816e3e03b",
        "cursor": {
          "ref": "427fd1a2-5f50-42ae-9c6a-a52538cbe667",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "08b60f9d-e379-4157-9b43-0de6cae0e662"
        },
        "item": {
          "id": "7c2079c7-e083-4b9f-bbd5-fc7816e3e03b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "881f7b4f-92ee-48d7-b1af-180ff469f7b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97917ce-4fa9-41e4-81b0-5d837626a897",
        "cursor": {
          "ref": "9a14a5aa-4023-4294-b6c9-ebe507df5360",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ab1a6d6a-5bc4-467f-bb1a-88625f4d4595"
        },
        "item": {
          "id": "d97917ce-4fa9-41e4-81b0-5d837626a897",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "88abe8dd-5b1c-4f4c-ab18-0df71af8f933",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa780d-dfb3-4712-89ed-89cfd54d3be4",
        "cursor": {
          "ref": "7512dc0e-9170-4718-9c32-8b7af7797c29",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5fda3f67-dd4e-40cb-8135-b7cc688d2105"
        },
        "item": {
          "id": "b3fa780d-dfb3-4712-89ed-89cfd54d3be4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a33ab272-b27d-42a3-8b87-17d13fea7c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa780d-dfb3-4712-89ed-89cfd54d3be4",
        "cursor": {
          "ref": "7512dc0e-9170-4718-9c32-8b7af7797c29",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5fda3f67-dd4e-40cb-8135-b7cc688d2105"
        },
        "item": {
          "id": "b3fa780d-dfb3-4712-89ed-89cfd54d3be4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a33ab272-b27d-42a3-8b87-17d13fea7c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e779f7fb-66cb-4d17-906b-4e01ec0ccf4b",
        "cursor": {
          "ref": "1b036183-1b14-449d-869e-b5eedd0340ed",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "25315724-9c32-4d44-a09e-269048b946d7"
        },
        "item": {
          "id": "e779f7fb-66cb-4d17-906b-4e01ec0ccf4b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "19668de4-2edb-4540-9928-8a0bd92dbd93",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "9bb356cf-b4ba-48f6-a69c-d0bfd52def63",
        "cursor": {
          "ref": "f1fbe20d-7a44-4c0f-b8e6-7d53a45e2454",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7db5db59-7ef6-4b27-83c6-ef8129400a15"
        },
        "item": {
          "id": "9bb356cf-b4ba-48f6-a69c-d0bfd52def63",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ece4ca35-a8e4-4ffd-a6ef-0813ab15c066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd40ab8-de2d-462c-8bd7-05c43e1924a9",
        "cursor": {
          "ref": "f6aa89dc-2896-4efd-83ce-cc4fecf0ed48",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7e315e09-fe23-4b36-a228-9bde76080c80"
        },
        "item": {
          "id": "8bd40ab8-de2d-462c-8bd7-05c43e1924a9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81b89127-b884-41c1-955f-10d3fc158e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b928dae-5cfe-496f-91e9-879fd9e14732",
        "cursor": {
          "ref": "b6eff20f-824f-418b-8127-8d69fa451b0e",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6876e7e4-0092-410a-92bc-cacfa3ceb213"
        },
        "item": {
          "id": "1b928dae-5cfe-496f-91e9-879fd9e14732",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "53bdde42-4790-4321-b772-c1e79a5cad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da2edb2-8e8f-4f08-8aef-4450d95cfa48",
        "cursor": {
          "ref": "a57ee508-efc1-40cd-b40d-c4ccb4ae26fb",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "446b1415-38a0-46bf-9851-6d1aed0db86f"
        },
        "item": {
          "id": "0da2edb2-8e8f-4f08-8aef-4450d95cfa48",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "da0e060b-b030-463b-9b5b-9cd4b96991b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f05fc5c-965e-4561-96ae-7e69809c5c16",
        "cursor": {
          "ref": "383d129c-18fe-46fb-83a7-7bc0e36eb0aa",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "766a3904-1582-4835-819a-2680c667217b"
        },
        "item": {
          "id": "9f05fc5c-965e-4561-96ae-7e69809c5c16",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "08a603ba-ae2c-4816-9e76-a1076b2cde2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafffde5-a9aa-4fc7-bffc-439e030390e8",
        "cursor": {
          "ref": "b5b67319-8bc1-4c1a-afff-881c791a142f",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e612593-0eb6-4f66-9e28-3ff9c6f59c20"
        },
        "item": {
          "id": "eafffde5-a9aa-4fc7-bffc-439e030390e8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "629ce081-3aed-46b9-b365-6b6271188066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99dec2e-55c0-4454-92a3-10a28e72c45f",
        "cursor": {
          "ref": "c74b789a-6ab3-49b6-9290-9d8d7f4cd605",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "971894c9-bcb4-4551-a956-5d4ad7985fe2"
        },
        "item": {
          "id": "f99dec2e-55c0-4454-92a3-10a28e72c45f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b6ef0388-d257-489a-8ebc-77562c4a1861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acbe2e3-fae4-4901-b79f-46bcb0cd1467",
        "cursor": {
          "ref": "5c0f9785-d079-474c-95ee-8fb1872f16dc",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34fa11c9-fd85-4e51-82b2-c3f398315a6a"
        },
        "item": {
          "id": "2acbe2e3-fae4-4901-b79f-46bcb0cd1467",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bbaa5c77-1cb3-4e93-b899-7e030f26a273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4fcf37-d5b1-4ddd-bb10-0928dbb9fd73",
        "cursor": {
          "ref": "01bfa182-283c-4ed5-9bcc-f3407bc9ca87",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "251e5093-78f9-488a-a3b2-cf3d8041bd08"
        },
        "item": {
          "id": "6b4fcf37-d5b1-4ddd-bb10-0928dbb9fd73",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2e96b33a-64bc-4d62-bad5-4d819ed60d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fe1181-661d-4322-b96b-f2d889448b2f",
        "cursor": {
          "ref": "8f3b9449-507a-4a61-82e7-4f3377c883b1",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c7a793ee-526a-4531-8d72-f92c1f5bb514"
        },
        "item": {
          "id": "b2fe1181-661d-4322-b96b-f2d889448b2f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c29ed78e-1c2b-4f01-9c7c-2e8e70291510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6ef60a-a4b3-453c-a315-f6da4bd1d3a8",
        "cursor": {
          "ref": "8273ae35-c043-4d1c-81d1-30e7da2df680",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4fb0a934-e123-4117-be35-14bcb155399f"
        },
        "item": {
          "id": "cc6ef60a-a4b3-453c-a315-f6da4bd1d3a8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1646189b-e437-41b1-b363-7bb35b074be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486247c7-3e88-4beb-844e-0e6c7741a303",
        "cursor": {
          "ref": "1e062f64-837d-4811-800c-ed06a185d9d5",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "95b08f55-9843-4446-b0cb-be91b38934ce"
        },
        "item": {
          "id": "486247c7-3e88-4beb-844e-0e6c7741a303",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a599decd-60e4-46e4-8628-91c16eb5394b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffa4d57-4720-4612-8c32-32e4a415b03e",
        "cursor": {
          "ref": "8c754f74-e76f-438c-b4a8-ea4596bbd5e9",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c706c449-67c1-41b2-891f-e1d16db0ec22"
        },
        "item": {
          "id": "6ffa4d57-4720-4612-8c32-32e4a415b03e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2ac3721e-f15f-4681-b293-602e20a80746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6adbdb-9fa6-48da-92cf-96a9c372a699",
        "cursor": {
          "ref": "b492b246-60c8-4b53-ba36-57a61d3d2293",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5f309f75-0d34-485e-8d15-97bfed243846"
        },
        "item": {
          "id": "4b6adbdb-9fa6-48da-92cf-96a9c372a699",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "882a2b2f-968b-45ec-a8b4-f20cea1d2d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c326bdb8-b8c4-4c53-a87d-1e0c83e64947",
        "cursor": {
          "ref": "2d71841a-745d-49a0-93f2-d536746d555a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "db4c8956-e786-4b6f-a08c-b264a9bd695b"
        },
        "item": {
          "id": "c326bdb8-b8c4-4c53-a87d-1e0c83e64947",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8d9c2132-5686-4f08-bfe7-9e2d5f15e3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21ca79e-c391-411f-8d23-8c5655243d0a",
        "cursor": {
          "ref": "1038f706-98c5-4a9c-b986-da07afb0e67f",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0b1dde34-9def-478c-9221-c74001169fa5"
        },
        "item": {
          "id": "a21ca79e-c391-411f-8d23-8c5655243d0a",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "75f81ba3-0273-4c47-8e6a-ff74c231cbfb",
          "status": "OK",
          "code": 200,
          "responseTime": 1850,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "342e6805-f3b1-4a42-a41c-3d3adff55bc3",
        "cursor": {
          "ref": "e77f5187-26c2-4b2c-91e3-ed96b65532fa",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4aaedb31-d3da-4c58-8dbd-1f2410ef3fec"
        },
        "item": {
          "id": "342e6805-f3b1-4a42-a41c-3d3adff55bc3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "944f3ae7-3e35-482f-95e4-1edcd9fc097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1f859c-a32f-469f-8628-d656f70d0b62",
        "cursor": {
          "ref": "e73c484d-0139-44e0-a736-70acf8090fe2",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1d074c41-b782-42bc-8b1f-afc78760eb7a"
        },
        "item": {
          "id": "4e1f859c-a32f-469f-8628-d656f70d0b62",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1dc8f8b-d1c4-4339-9098-de54e6f77c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1773bde-566f-4088-9fc9-2b6c38ec255f",
        "cursor": {
          "ref": "7ead1a21-3f7f-41bb-ad92-4f3f14e87582",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dd5a446a-3672-4a1c-9fcc-80f3b78ce892"
        },
        "item": {
          "id": "c1773bde-566f-4088-9fc9-2b6c38ec255f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ab1aa388-a741-45a3-b4e1-81ab724adebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b45d732-fc62-463b-839b-aef45a43931d",
        "cursor": {
          "ref": "a9752693-945d-4584-b7f0-8dc5d0986a63",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d95e2a28-7554-47f9-a208-c3d06a0c34ee"
        },
        "item": {
          "id": "9b45d732-fc62-463b-839b-aef45a43931d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cd2d66c6-d5e5-45be-8c52-34274293d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7bdcb0-7305-443c-aa32-651681d4e6ff",
        "cursor": {
          "ref": "01992300-1d28-4a99-b28f-fefa06517a4b",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "32634669-3125-4ef7-b928-e04899be26a6"
        },
        "item": {
          "id": "ed7bdcb0-7305-443c-aa32-651681d4e6ff",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "03f06664-19f3-4c3c-805a-bd07e75026cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f1c7f6-553c-4856-a413-d4e9bb73c83d",
        "cursor": {
          "ref": "a520c962-23b6-4dc4-b928-5c865cf2453f",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f22517ca-501f-426d-9a0b-96f7cfdad250"
        },
        "item": {
          "id": "84f1c7f6-553c-4856-a413-d4e9bb73c83d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4533ea15-d927-40a0-9e6e-08c94409b3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed142ac-f988-4917-8744-20a46596e038",
        "cursor": {
          "ref": "6c5e0438-983d-4d89-82ed-3eb10669066c",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "caf4739a-e6ad-40b1-9ef6-829d9dfdbe8e"
        },
        "item": {
          "id": "5ed142ac-f988-4917-8744-20a46596e038",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "82587b21-e4e4-415e-baef-01ab35880d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4883cc-8bf9-4e69-b708-52aaa0432c8d",
        "cursor": {
          "ref": "ec051582-75a4-416f-b162-03a3b6a100d1",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2798026e-de07-49cd-9f5a-d31359cc9983"
        },
        "item": {
          "id": "0a4883cc-8bf9-4e69-b708-52aaa0432c8d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6fa31638-c6b5-407d-9f9a-c8350866c64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6336ff9b-3e54-43e3-9dbd-68f86fe9b1ef",
        "cursor": {
          "ref": "4dfd954b-7b9a-41ee-b6ee-ec452c444888",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c276b72f-f095-46b5-b7fa-28f9eeea24f1"
        },
        "item": {
          "id": "6336ff9b-3e54-43e3-9dbd-68f86fe9b1ef",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "398848cd-7774-434f-ba88-ec8f420dea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c6ce94-b9cd-4e34-b6db-d4c1b161bbfa",
        "cursor": {
          "ref": "92ed0dd6-611b-4107-b880-f4ab320f696e",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e21e4823-2a43-4559-b5b5-54191c1ac3fb"
        },
        "item": {
          "id": "c9c6ce94-b9cd-4e34-b6db-d4c1b161bbfa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4fa71fc7-eab0-46c2-9b8f-084f1a78070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d7002a-fc5a-4935-9cef-7b5eea353330",
        "cursor": {
          "ref": "754fe446-53d5-4d5b-930a-b5c282646604",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "74860171-2c1d-4596-ae48-a9fdb63c198f"
        },
        "item": {
          "id": "26d7002a-fc5a-4935-9cef-7b5eea353330",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "12309e51-db4d-4718-8d3d-b07fd58f754b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8905ace-a866-4e6a-a07c-e3811a1709d4",
        "cursor": {
          "ref": "7a4551f6-e860-4986-84bb-9f24f2b084a8",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4a191b47-6b3b-4804-9e87-35b43432dd94"
        },
        "item": {
          "id": "f8905ace-a866-4e6a-a07c-e3811a1709d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "85328f49-1840-4eec-8f96-acbf3f066e51",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "3143dcaf-0dc6-4b8e-a104-b14ca3d8201d",
        "cursor": {
          "ref": "ed1ac693-b87d-49d0-808d-d0b51efce778",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "07c516eb-21fd-4faa-9cc4-9c1257082b1a"
        },
        "item": {
          "id": "3143dcaf-0dc6-4b8e-a104-b14ca3d8201d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1939f453-689e-4b29-8b35-c0326c4c641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600887f3-cf73-4f6f-9aa6-094c16fe2e79",
        "cursor": {
          "ref": "8a88b975-4a5e-4a2c-9239-f2451fa82382",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "206ad19f-9072-455f-8845-dfb628a0b717"
        },
        "item": {
          "id": "600887f3-cf73-4f6f-9aa6-094c16fe2e79",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "798c3d49-9b13-496a-8755-7df765e0f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fe53be-dc0e-43c6-a8dc-9b6d813b5214",
        "cursor": {
          "ref": "c511c104-375e-4dd3-a1be-0d3b301031ab",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c9e9a3b4-b52d-4aa0-bf16-31c3cb85f87e"
        },
        "item": {
          "id": "d1fe53be-dc0e-43c6-a8dc-9b6d813b5214",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b8181b28-6751-4386-b35b-2f9ea52720bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a739be-341e-4b4a-858f-adedf3a094ab",
        "cursor": {
          "ref": "48efda2a-fe76-401f-9376-599beab79e51",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2da3314e-7028-43ba-98b7-cc4beff15f27"
        },
        "item": {
          "id": "b7a739be-341e-4b4a-858f-adedf3a094ab",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0816fc8c-47c7-45aa-8ff8-75a3f9b0a13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edff294a-9e46-4369-aaab-e9d81292c70e",
        "cursor": {
          "ref": "1edd5670-6cc6-4f43-bdd0-cf306bf3b541",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d3fec409-1727-402d-bb41-4e1a275d3e19"
        },
        "item": {
          "id": "edff294a-9e46-4369-aaab-e9d81292c70e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7dfe8d34-554b-461f-9a4c-f2d02963550a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a37150-f7b9-448d-a715-689338a08cfb",
        "cursor": {
          "ref": "3db6c634-1682-437c-974b-8af626ce5937",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3dd963af-b90f-4044-b134-f97bd7e52c25"
        },
        "item": {
          "id": "b3a37150-f7b9-448d-a715-689338a08cfb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "924d66a4-5b70-4986-b6ef-c8f9f3c63431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e73e84-646d-4f79-a1c0-9739d1627a7a",
        "cursor": {
          "ref": "2a231f94-0a2b-432e-9b58-67bac58db138",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7128803a-077d-4e87-bd12-4ab16566f018"
        },
        "item": {
          "id": "62e73e84-646d-4f79-a1c0-9739d1627a7a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "66cd14e2-b208-4fe6-9563-a0b3d7b36510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747ba521-6be8-4ab4-b471-0b9c4f986749",
        "cursor": {
          "ref": "5bf56095-c16f-4061-a8ff-0ac9b3f67e0a",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "16a2dabc-d4dd-41a9-a3c9-84aca670fc1c"
        },
        "item": {
          "id": "747ba521-6be8-4ab4-b471-0b9c4f986749",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ed690217-b4ca-46eb-a113-e04ccbf00f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6ad2f9-7826-4594-8b66-879934b0f185",
        "cursor": {
          "ref": "d89f247d-7fea-49f9-af8c-e66fa3c9ea82",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "604563bc-3414-413f-b5b3-56bfc736a5ef"
        },
        "item": {
          "id": "4c6ad2f9-7826-4594-8b66-879934b0f185",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c6cc9beb-4daa-4667-be52-feede228153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5248056d-028b-4ff5-bee9-7ffe15ea9b42",
        "cursor": {
          "ref": "8074bf31-425b-4ab9-8452-193a03caa28d",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7d9b12ca-3eb9-4903-a444-1f0b3c9b2f19"
        },
        "item": {
          "id": "5248056d-028b-4ff5-bee9-7ffe15ea9b42",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "056bc56b-d634-48f8-8bb4-dd634b1b80ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a46532-53f7-47c3-ab4e-3cc043ac397e",
        "cursor": {
          "ref": "4520d525-ae08-40dd-85f6-23efb05948f1",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "706daae4-c1f1-4aef-aa63-1642aa1e1fec"
        },
        "item": {
          "id": "66a46532-53f7-47c3-ab4e-3cc043ac397e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ba2b6b7-3cc9-425c-a393-5f6430608836",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "d4bb012f-e691-4e17-81d8-0ebff0c81220",
        "cursor": {
          "ref": "48355215-34d1-40df-b068-63696f731233",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a042c753-0ea6-408d-b71f-491fdb6e724b"
        },
        "item": {
          "id": "d4bb012f-e691-4e17-81d8-0ebff0c81220",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ea7efa7e-8150-463e-9928-991825926954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866e4212-8402-442e-a956-703e443e6a12",
        "cursor": {
          "ref": "925ff3f9-7c01-4b45-ab06-1df16646ee7f",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8f46c537-5d70-4a81-8d02-e13ffce00937"
        },
        "item": {
          "id": "866e4212-8402-442e-a956-703e443e6a12",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "59f0bafc-892d-4214-a997-72922342fd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359f8b38-900e-4c66-afc2-ed831de66755",
        "cursor": {
          "ref": "5447ff2a-0eb0-4c92-8e7a-2d54408df8cb",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6edea8e8-c0f1-4b95-bbb8-acef5c4bdbe9"
        },
        "item": {
          "id": "359f8b38-900e-4c66-afc2-ed831de66755",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8707e0dc-3f2b-462b-b61e-154576d80fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7bc91e-0d2e-4033-80bc-1ec01fcbe7ee",
        "cursor": {
          "ref": "82cf04d2-0ade-4728-a633-72159911a857",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d761a86e-e693-4f7d-8d15-f2a91da7ebea"
        },
        "item": {
          "id": "7e7bc91e-0d2e-4033-80bc-1ec01fcbe7ee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "89ef9b8e-378e-456f-852a-701823bcbbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f040353-06ed-4f67-b602-87caa070e759",
        "cursor": {
          "ref": "72eab039-d587-4415-9a1f-e8afdadd4c1a",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d9ffa29e-ca3a-4cf4-90f9-12bc90973e78"
        },
        "item": {
          "id": "3f040353-06ed-4f67-b602-87caa070e759",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f343b379-5410-400f-bcb7-2a44cd21196e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34296e65-be0e-4ba4-a085-b7a3b7f40f91",
        "cursor": {
          "ref": "3e37c4fb-95c6-4c27-9a84-5c716df79e3c",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "695db1e0-c9b6-4e3f-a20f-61e75c2282e0"
        },
        "item": {
          "id": "34296e65-be0e-4ba4-a085-b7a3b7f40f91",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e7417334-09a9-456b-ade4-09e9576125ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd9f914-b00f-400c-826e-9b8483c76ff4",
        "cursor": {
          "ref": "8216619f-a482-430f-bcea-eb3b81d9ac1d",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a0b32d5-16f8-4f0f-8b47-4d7db671f038"
        },
        "item": {
          "id": "ecd9f914-b00f-400c-826e-9b8483c76ff4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ee994f2a-9a74-4813-b8b5-f8dac83d54ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cbc686-99df-46a9-a2b4-952f7d0bdd2e",
        "cursor": {
          "ref": "259a0aef-aaf8-4741-94e7-64f3d1263b0f",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "db4f376e-aabd-4809-a7da-d88b20d03986"
        },
        "item": {
          "id": "d8cbc686-99df-46a9-a2b4-952f7d0bdd2e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f09c3f6c-93bf-4f69-874c-aa3167264292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ff108c-7180-4ba0-99ab-3343aeff928a",
        "cursor": {
          "ref": "1067e62a-4bfd-4b9b-b142-a1dc7f5da7e2",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d991b335-ce98-4c73-bef2-7d267077a496"
        },
        "item": {
          "id": "40ff108c-7180-4ba0-99ab-3343aeff928a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4ce2e0ab-66e7-4c68-b605-f0c1d72038d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e214feea-61b1-48b0-9b5d-b7ea87264296",
        "cursor": {
          "ref": "8bde509d-4964-4512-9b1e-3f95d45f578b",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4d72b50d-22c1-4cfd-91a5-dd5dfe00c3d3"
        },
        "item": {
          "id": "e214feea-61b1-48b0-9b5d-b7ea87264296",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bb99c1ec-7c15-4d92-9e74-1af63172e4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ab5015-6576-4d4e-a4a0-125b435224d6",
        "cursor": {
          "ref": "4f4fbe63-482c-412c-aa3d-f044153f604f",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3211573a-4e81-48c2-92ee-66b1e4a4abe2"
        },
        "item": {
          "id": "75ab5015-6576-4d4e-a4a0-125b435224d6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2f2b9986-db08-4fbb-a8df-87a1e0b4acc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37417061-8340-44dc-b276-0b269d200c18",
        "cursor": {
          "ref": "91374b4a-6b43-455a-99f5-ab25bc7b29a2",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e1ff500d-ae9d-4022-9d8e-3ed29fed83c8"
        },
        "item": {
          "id": "37417061-8340-44dc-b276-0b269d200c18",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e53166f7-ceb0-4df9-ae07-955db347b021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da86af79-cb05-4d90-b703-3a1ec1ef02d7",
        "cursor": {
          "ref": "e763cb4e-941f-47eb-abcc-d13086bc862e",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "08c1ae42-7bad-49f4-85dd-4366c1afae32"
        },
        "item": {
          "id": "da86af79-cb05-4d90-b703-3a1ec1ef02d7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "77c11745-0b4a-4e2d-b894-0abb7304c3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a24dd91-69e9-4729-b99c-53dfaf14378f",
        "cursor": {
          "ref": "16966268-2892-41e0-92ed-a741aa2ba4d1",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4151ecd1-6ff6-4526-97a1-b9775ad5864a"
        },
        "item": {
          "id": "4a24dd91-69e9-4729-b99c-53dfaf14378f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "db720cd7-e962-4882-9f6b-ff5b19381136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b119be7-17ab-4ce8-92ab-9b5b037a2e62",
        "cursor": {
          "ref": "6ca86d55-9df8-4a4d-b198-a134da0a5a52",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7d06b9f4-8f88-4347-a3a6-851065eac4fc"
        },
        "item": {
          "id": "2b119be7-17ab-4ce8-92ab-9b5b037a2e62",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "35698ded-ba10-485c-94f1-311403cd833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f660c7e-cd69-4dd5-9f9c-bf1571357af1",
        "cursor": {
          "ref": "85e78ec4-2d25-405b-8a01-5a31e089541b",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a08277e6-f1c3-4966-80c1-f770b3754ecf"
        },
        "item": {
          "id": "0f660c7e-cd69-4dd5-9f9c-bf1571357af1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "87775a07-380d-4dc6-b83f-0e968be9866d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b55878a-b9e3-4ea7-a8bd-133362a6d028",
        "cursor": {
          "ref": "6308c811-f40f-47ca-bafb-4da6eebe7779",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "754ac3e4-6cae-4ee3-bc0a-dac7f0d4391a"
        },
        "item": {
          "id": "9b55878a-b9e3-4ea7-a8bd-133362a6d028",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0727f00c-f328-436e-b7e4-ec7f931001cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323f7358-f27e-43c6-a3d7-c99c3b50f65b",
        "cursor": {
          "ref": "43be5835-be23-4dbd-bc69-7ef99e84dab5",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1be15028-21c9-42ff-b7da-d2bd52989a68"
        },
        "item": {
          "id": "323f7358-f27e-43c6-a3d7-c99c3b50f65b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7896ee63-01b1-4eb7-b634-a12e1450d5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339eb0f9-b189-4774-8aac-3344f8f53782",
        "cursor": {
          "ref": "1c432792-05af-4908-a7af-b8f060b43d38",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d7c4e9d6-e8c5-44fa-8415-04051ce9097c"
        },
        "item": {
          "id": "339eb0f9-b189-4774-8aac-3344f8f53782",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6de63983-0231-4a25-a03b-6959cad0577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc34814-9acd-404d-b432-d9a52a065d64",
        "cursor": {
          "ref": "1bf061a9-2dc6-41f8-a21c-d666a3c83b3d",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "37f0221b-fe1f-45a0-b55e-99c0ab23993d"
        },
        "item": {
          "id": "efc34814-9acd-404d-b432-d9a52a065d64",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a0bd0501-b4c2-4c18-8eac-c2512f673e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb83111-0f79-43c7-9496-cdae50fb5deb",
        "cursor": {
          "ref": "4d8f478d-c34a-4663-a59f-ce72be989e69",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6fdaf188-ca36-42a1-9b88-a455c800319a"
        },
        "item": {
          "id": "4fb83111-0f79-43c7-9496-cdae50fb5deb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "afd90b6a-ef0e-4dad-8e34-4e9089b624bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01d09d-35e6-4a1d-b7d8-2dce23c15723",
        "cursor": {
          "ref": "991439b6-de48-4d9a-b100-991030fb386e",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a24787ec-37ed-421e-8124-7577ebfc8637"
        },
        "item": {
          "id": "3b01d09d-35e6-4a1d-b7d8-2dce23c15723",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "91676f8a-8549-4a39-95ef-8d9bb28d7505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f7abde-fd45-4be4-8067-0ee322e4baab",
        "cursor": {
          "ref": "61e02637-bf11-4aac-a01d-a16728052e04",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "19c0fa47-03b3-4e5f-9bbe-cf87cebdc873"
        },
        "item": {
          "id": "73f7abde-fd45-4be4-8067-0ee322e4baab",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bfbb46d9-f741-40a3-ae1c-390ac38ff8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe93f7-4fc6-466b-9d0b-c807565327b0",
        "cursor": {
          "ref": "28558f8e-bb6b-4d4c-aeb1-f529e0e03677",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "80197e30-09a6-4203-a2aa-3eb7a313bf4a"
        },
        "item": {
          "id": "fdfe93f7-4fc6-466b-9d0b-c807565327b0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "38e8d8ed-40ae-418d-be18-77841f49b770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04acc82-dd45-4168-94e1-5410300301f3",
        "cursor": {
          "ref": "29755383-215c-40ec-80a4-68257d23243b",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c9b79faf-cbb5-457d-8cea-2fecf7144d91"
        },
        "item": {
          "id": "d04acc82-dd45-4168-94e1-5410300301f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8464bcdc-b3dd-40d8-bd9f-9b924fab4a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c543cacd-8826-4624-b039-9d3843a34fe8",
        "cursor": {
          "ref": "cafca02b-3f67-41d4-8a04-389f1617ffe6",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "49a9973b-ae3c-46ba-8fd7-9829bb103450"
        },
        "item": {
          "id": "c543cacd-8826-4624-b039-9d3843a34fe8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2d3cf42f-292b-4138-82db-533cc831f654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d699dfb5-b9f6-40c7-8f63-01156bacb618",
        "cursor": {
          "ref": "b0fff9f8-5330-460c-b41d-9b0f4a58f94a",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c9b1c49d-dbc0-4e66-b488-007ffcceb166"
        },
        "item": {
          "id": "d699dfb5-b9f6-40c7-8f63-01156bacb618",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "191d99e5-ff7d-4a24-8714-961dbd6fffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d5822-7711-43f5-8dfc-b3652b575e07",
        "cursor": {
          "ref": "d2995d98-abd8-44ee-b32f-a492ebb7c104",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f27590aa-0047-49c0-bb0c-d221e39ddfc8"
        },
        "item": {
          "id": "240d5822-7711-43f5-8dfc-b3652b575e07",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "76af945b-6113-434b-a136-05689ab99890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97927efc-b9b9-4c43-b7df-cf843927a06d",
        "cursor": {
          "ref": "237dab4a-d30d-4765-9f5e-0d765182a8d1",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7c813849-71ad-4a2e-b6c9-ea4cac0e4de3"
        },
        "item": {
          "id": "97927efc-b9b9-4c43-b7df-cf843927a06d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9a2d3f41-b5fc-41bb-bc19-c3e8aede0e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dbf97d-7fab-441b-a406-18cce72bb102",
        "cursor": {
          "ref": "82348706-3502-4386-a449-a811b0ee5dbe",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a888b1cb-a125-45a5-b138-7bc8d5ee1c33"
        },
        "item": {
          "id": "d3dbf97d-7fab-441b-a406-18cce72bb102",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "911c53a4-a93d-41ce-933f-2d7ec1ba3c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dd66d9-71dc-4708-a649-22149ee8419a",
        "cursor": {
          "ref": "5733ba54-e018-4426-8606-df310c4c7cec",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "eaa8e535-66c6-4ed8-bde1-5810a1d4e469"
        },
        "item": {
          "id": "35dd66d9-71dc-4708-a649-22149ee8419a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "352db577-205a-4903-979e-29f425c062be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effe21e2-dae0-4d0e-a3a1-a91362d283e0",
        "cursor": {
          "ref": "1b55873c-45a4-419d-bce9-a2fe3faacf3b",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8f0d53d-2623-48ee-a4f5-2c78ea09d460"
        },
        "item": {
          "id": "effe21e2-dae0-4d0e-a3a1-a91362d283e0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0c180afb-e139-4e66-9d18-ebb04ed6a6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5cda24-6c7b-4632-bb4f-ac03e7f14a45",
        "cursor": {
          "ref": "49a8d777-4908-4e57-aab1-1d93f87c324e",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c3a6bbd2-9b65-48f9-8b1e-9b92a338efe3"
        },
        "item": {
          "id": "ee5cda24-6c7b-4632-bb4f-ac03e7f14a45",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "be6f8100-b0b1-47a5-bc97-4102a074ffba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17732aec-4c4b-437f-bf7c-dbac41530893",
        "cursor": {
          "ref": "0bd7ebbb-7e83-4367-92b0-33723eaa7d77",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "243e56db-8792-4855-85a3-faa062d36c5e"
        },
        "item": {
          "id": "17732aec-4c4b-437f-bf7c-dbac41530893",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1c90c06b-a6ca-4236-be44-d4ec1545213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c43857-7893-4845-aa78-1d45ba892ab1",
        "cursor": {
          "ref": "4e4cdfc7-e09a-4e89-90db-688c3ddc5d43",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "14acd27a-98ee-46a1-91bb-ab16c724cb4f"
        },
        "item": {
          "id": "b2c43857-7893-4845-aa78-1d45ba892ab1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "60620eda-bb4c-4977-a9cf-c38fea7e6aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baed4247-65fc-4129-8115-5a288cd6def6",
        "cursor": {
          "ref": "c75b28ad-e9dc-4f0f-bd53-618cba732c04",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1aa61d60-59d7-4479-b0c3-d9fc34ea669a"
        },
        "item": {
          "id": "baed4247-65fc-4129-8115-5a288cd6def6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2b0efaad-03f4-4b0a-8a71-ba4cc34ad52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ea7a80-0aa1-4fa1-a510-7eb72bb3f505",
        "cursor": {
          "ref": "2a8f22de-cfe2-4066-8208-6f41b67cefa1",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a52d059e-01bb-48c1-8383-6f331c95fef4"
        },
        "item": {
          "id": "15ea7a80-0aa1-4fa1-a510-7eb72bb3f505",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "58088efb-7f06-4a34-adba-a3e0be7a6ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ad8a6c-30b2-42c3-8cec-e59cf8d27e84",
        "cursor": {
          "ref": "f39f8f91-fa7f-4dbd-a678-b283492d8535",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "33ac408e-1810-4a1b-85ed-6ff998f60828"
        },
        "item": {
          "id": "b4ad8a6c-30b2-42c3-8cec-e59cf8d27e84",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "33d19b5b-bd0c-4163-880e-9c5fa86018e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1a3d9c-e4bf-4829-9fbf-66148dc36e92",
        "cursor": {
          "ref": "bb70c94a-34bd-4693-9636-c7a89ab14b02",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ee66553-2c3b-43f2-97e5-cbd9e27992a6"
        },
        "item": {
          "id": "ed1a3d9c-e4bf-4829-9fbf-66148dc36e92",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "899c0720-bd44-41c6-ba30-d6640f80d4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1f592e-226f-4785-a73f-065a7fa78157",
        "cursor": {
          "ref": "cb0439dd-ebb9-4747-896c-cf881e2b4c12",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5994272e-452d-478c-83ab-0d75b0bb93fb"
        },
        "item": {
          "id": "3e1f592e-226f-4785-a73f-065a7fa78157",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "42a13b13-66b3-4820-9827-3352ebbc7812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf868ea-77ae-49eb-8081-fe7ccfebf755",
        "cursor": {
          "ref": "34d7961c-f8d3-40f7-8d0e-ee571a1d9edd",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3a459185-7310-420a-a0f6-76118842c4ce"
        },
        "item": {
          "id": "5bf868ea-77ae-49eb-8081-fe7ccfebf755",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d93217ff-a292-4b03-a053-c456b086e1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9452799e-56a3-460d-b8fc-9b60804cad47",
        "cursor": {
          "ref": "2c1598f8-afe4-4f1d-9a8f-1c55a0e4c2ed",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4e14043a-9008-4a1a-bc85-0ca6f3361b60"
        },
        "item": {
          "id": "9452799e-56a3-460d-b8fc-9b60804cad47",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6bb3262a-4128-482a-a022-a4e21ba066c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73d5c81-750d-4ea0-879c-8890ed709db1",
        "cursor": {
          "ref": "b013a21d-324f-4d28-aaec-965dcc272c71",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b39a369e-f0ac-4358-93f0-721e08da7703"
        },
        "item": {
          "id": "c73d5c81-750d-4ea0-879c-8890ed709db1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7ae3a2a0-dcbe-4155-b65f-2d7fd54f7870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa6d891-e3f6-4060-9990-462fc04e0d72",
        "cursor": {
          "ref": "1e5fd605-c3ac-48b6-be71-79272321f92d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e2eb4ad-5eb0-48fe-90b4-d196eed71e87"
        },
        "item": {
          "id": "5fa6d891-e3f6-4060-9990-462fc04e0d72",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f5e05338-a5b6-4944-a2c9-14ac90584418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5440c15d-8b61-4858-9c1f-98a2934f2d38",
        "cursor": {
          "ref": "1c821fd6-d392-4dbf-9e15-459dfa4ba298",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fb87a6f7-7e5b-40aa-870c-9556b0b1892b"
        },
        "item": {
          "id": "5440c15d-8b61-4858-9c1f-98a2934f2d38",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "24ae1aa5-d345-4ec4-bc24-8a3ac374da40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8396c0-f5b2-41d7-9b90-74fcd70053c5",
        "cursor": {
          "ref": "86dcdba6-0496-44e5-b61e-6bba4bf1bdee",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3032ad6-3d9f-44fc-8021-701026c28fd1"
        },
        "item": {
          "id": "dd8396c0-f5b2-41d7-9b90-74fcd70053c5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6259c1f4-3568-457d-a99c-e36fa92b8306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccde9de-a6be-45ed-843b-69837c12df57",
        "cursor": {
          "ref": "df776724-b458-4ea0-af89-ffa868d21484",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "437c372c-b4e8-49ba-bf38-e5ad731540f7"
        },
        "item": {
          "id": "2ccde9de-a6be-45ed-843b-69837c12df57",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5dcffc58-e701-479f-95b4-67b0a41869e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc4008d-a7b9-4118-8de4-5837b7dcda60",
        "cursor": {
          "ref": "c1e1efaf-d2d6-4c0c-a032-4c76f23e68a7",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1afe0386-f675-43ca-a668-6d1735765eeb"
        },
        "item": {
          "id": "dbc4008d-a7b9-4118-8de4-5837b7dcda60",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "663b7f6c-86cd-4dba-ab48-9f48041c2472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e57415-3f3e-4ce7-9fdc-ee672447ea20",
        "cursor": {
          "ref": "33ce7660-d4b6-4bb2-9dcf-48508a7b53ec",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f5fe69e6-938a-47e0-9728-87fd7b1fb62e"
        },
        "item": {
          "id": "d7e57415-3f3e-4ce7-9fdc-ee672447ea20",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d5521ee8-36a9-4890-a26e-8c0cb41cf3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee4dbaf-9ec0-47c9-b3f6-75c64995da97",
        "cursor": {
          "ref": "3f7b7b27-cd55-4d3b-9ce7-6a9744bdb70c",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed6e61bf-388c-4be0-a5f6-8f095e66aad8"
        },
        "item": {
          "id": "9ee4dbaf-9ec0-47c9-b3f6-75c64995da97",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ed0b5cd9-a76e-47db-8e33-64162b0925a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f1e670-b0c5-4a3d-abf0-1ea114a36bf1",
        "cursor": {
          "ref": "2c6437d3-a72e-4b03-8089-2b5646853ebd",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "77f513aa-02b3-4159-aa3e-4d628d9f84f8"
        },
        "item": {
          "id": "c8f1e670-b0c5-4a3d-abf0-1ea114a36bf1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70bc9bcb-6bc2-416e-abaf-e3e8fb44bea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55baabe1-2cc1-4caa-bd54-cde1469dfdde",
        "cursor": {
          "ref": "a1054582-07b5-46b4-b7b2-29208de39f9e",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "61b7d022-7697-449a-a804-a352e6f47944"
        },
        "item": {
          "id": "55baabe1-2cc1-4caa-bd54-cde1469dfdde",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3bfe7586-13fe-4b08-88fe-e5a11fa290a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06b90c-2651-4888-9b52-6089bf2bdb8b",
        "cursor": {
          "ref": "f0479b7b-88f3-499f-b111-ecff44f17619",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "42339d6c-683f-4a28-8785-cdc9a40b9f71"
        },
        "item": {
          "id": "7b06b90c-2651-4888-9b52-6089bf2bdb8b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "236486e8-45ba-44d8-8c00-aa9e69f02138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d1756c-d0ad-4af7-a25e-629c3c7ec2ba",
        "cursor": {
          "ref": "33a6aa4a-7703-4c65-9349-c3079faa475a",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bd55d559-9822-47a2-bc83-32e124d317ee"
        },
        "item": {
          "id": "95d1756c-d0ad-4af7-a25e-629c3c7ec2ba",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "092a9bfd-eece-4053-815a-1ee1435127e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb7e2f3-d06b-4bf4-ab37-e8cda92fec43",
        "cursor": {
          "ref": "ff6a81ed-d57c-45e2-90bd-00332e988e40",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "011506c6-c9d5-453a-87bb-e08b832d80bd"
        },
        "item": {
          "id": "4fb7e2f3-d06b-4bf4-ab37-e8cda92fec43",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d945e3de-fc97-433b-ac63-f5df76293e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a428a43a-b0ab-4376-99b3-0c545fc140ea",
        "cursor": {
          "ref": "8d8d6d2f-4caf-4143-9a62-7f6a432eaaea",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0a71410d-be4b-4eb5-9393-cc03a312200b"
        },
        "item": {
          "id": "a428a43a-b0ab-4376-99b3-0c545fc140ea",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1e16f3e3-e4c3-439d-a77d-eb27783b77e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3beae7-bcce-445a-9cd1-4847b3167188",
        "cursor": {
          "ref": "e9369dc7-bb44-42f3-ac54-f6d1025d45fd",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d61a283c-cffd-4e49-9fa1-0d8bb81ba8b3"
        },
        "item": {
          "id": "2f3beae7-bcce-445a-9cd1-4847b3167188",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "28849207-ecb8-4949-8a41-84151006fbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daa1b1b-bcfc-4341-b2d5-059d7de37612",
        "cursor": {
          "ref": "383096f9-cfbc-4c97-b6ae-53765bd2c467",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "db956399-8bb0-4819-8c6b-933e7a0d1311"
        },
        "item": {
          "id": "1daa1b1b-bcfc-4341-b2d5-059d7de37612",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "024cbdc0-ddf2-41e5-96a1-755a0b1daee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc76263-ed4a-4524-8262-c5b39afb0e2c",
        "cursor": {
          "ref": "7bf06d3a-4e77-4415-a22b-168a99346720",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f35c4624-a39f-4f9d-b78f-258b4ab39677"
        },
        "item": {
          "id": "bdc76263-ed4a-4524-8262-c5b39afb0e2c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d34c275d-890a-4d47-8154-15c83e7a2f94",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 345,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de86087-9966-4f01-b9be-6ebc0ff6df6a",
        "cursor": {
          "ref": "e3633ecd-69db-4382-b1f7-cfb75a35a407",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c66b635d-3883-484a-b9cc-af1b98b5b969"
        },
        "item": {
          "id": "2de86087-9966-4f01-b9be-6ebc0ff6df6a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "41e8ebb4-ccea-44f1-a8a0-b8c5bfd6ce98",
          "status": "OK",
          "code": 200,
          "responseTime": 350,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c528ff0a-d77e-41b6-872e-6b9918fd0bfc",
        "cursor": {
          "ref": "f67f79bb-0610-4527-97f4-ee264b1bda59",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a7113753-003b-436d-86d1-c133e589ba9b"
        },
        "item": {
          "id": "c528ff0a-d77e-41b6-872e-6b9918fd0bfc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "240b5f6f-ec4e-42cb-b7db-c42be162f4bc",
          "status": "OK",
          "code": 200,
          "responseTime": 1930,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "259c31ef-3e14-4166-99e2-3e8770619f8d",
        "cursor": {
          "ref": "540e58fb-4113-4f10-8d90-d2246080c353",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7a6ce52e-61b3-489c-a774-e2afc73d5a7f"
        },
        "item": {
          "id": "259c31ef-3e14-4166-99e2-3e8770619f8d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "49cd39c0-928a-497b-b0bb-d999809fd84e",
          "status": "OK",
          "code": 200,
          "responseTime": 1791,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
        "cursor": {
          "ref": "fa3aa8d1-cee2-403c-9a5b-eb5afe754313",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c8fc99a-312d-49ce-83cb-bf3fd5005550"
        },
        "item": {
          "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2eb0331a-4103-4472-8b82-96f3281e9154",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
        "cursor": {
          "ref": "fa3aa8d1-cee2-403c-9a5b-eb5afe754313",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c8fc99a-312d-49ce-83cb-bf3fd5005550"
        },
        "item": {
          "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2eb0331a-4103-4472-8b82-96f3281e9154",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
        "cursor": {
          "ref": "fa3aa8d1-cee2-403c-9a5b-eb5afe754313",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c8fc99a-312d-49ce-83cb-bf3fd5005550"
        },
        "item": {
          "id": "b33f6eeb-1a36-4c4f-89eb-9efed012ca1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2eb0331a-4103-4472-8b82-96f3281e9154",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f70eb09-0ca2-48e0-a008-cf8e7aa4473d",
        "cursor": {
          "ref": "dac5b0b6-e757-4b70-8eba-6f5d3f681ce2",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f7c57b1c-4ce4-42bf-93d9-dcc08dea9d9b"
        },
        "item": {
          "id": "1f70eb09-0ca2-48e0-a008-cf8e7aa4473d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "af768f41-3adb-46f8-9886-1de49772ff25",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 269,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea2fe5e-6214-4049-99a7-599743e26e5c",
        "cursor": {
          "ref": "36bafb70-6c66-4bd0-8175-d85ab2a19066",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a8d9bc76-ad54-4391-82d5-4d3381ff18ac"
        },
        "item": {
          "id": "eea2fe5e-6214-4049-99a7-599743e26e5c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "10e730d8-3c96-40f8-9738-3ab65893fc8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea2fe5e-6214-4049-99a7-599743e26e5c",
        "cursor": {
          "ref": "36bafb70-6c66-4bd0-8175-d85ab2a19066",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a8d9bc76-ad54-4391-82d5-4d3381ff18ac"
        },
        "item": {
          "id": "eea2fe5e-6214-4049-99a7-599743e26e5c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "10e730d8-3c96-40f8-9738-3ab65893fc8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f423844a-b063-4233-8225-64e3836a9770",
        "cursor": {
          "ref": "a3c5a19b-b445-45a8-af82-99faa375e51d",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3fde3eae-b4f5-447d-94cf-2037b4001a56"
        },
        "item": {
          "id": "f423844a-b063-4233-8225-64e3836a9770",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3ab38d2c-c7c5-4cdb-85c0-84ed8e8b91ed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8fdfb0-021d-48c4-b076-59accb15ff96",
        "cursor": {
          "ref": "f62590ca-3faa-467e-8d5e-099859f70b39",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "efde6fc0-f9ec-4c0c-81cc-2be78f8039e6"
        },
        "item": {
          "id": "eb8fdfb0-021d-48c4-b076-59accb15ff96",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b833bc8b-c5ac-42a9-b92f-79a65f99c037",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8fdfb0-021d-48c4-b076-59accb15ff96",
        "cursor": {
          "ref": "f62590ca-3faa-467e-8d5e-099859f70b39",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "efde6fc0-f9ec-4c0c-81cc-2be78f8039e6"
        },
        "item": {
          "id": "eb8fdfb0-021d-48c4-b076-59accb15ff96",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b833bc8b-c5ac-42a9-b92f-79a65f99c037",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d682d062-d688-4fc2-a277-eb26d2ae2712",
        "cursor": {
          "ref": "a3979eb1-47cd-4e89-8996-5a71c8c29722",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "644380bb-b8a9-4096-ae70-268909d6c033"
        },
        "item": {
          "id": "d682d062-d688-4fc2-a277-eb26d2ae2712",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1a4a8cd8-0e3c-4f46-805c-056988ed36c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}