{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "26db728d-ef69-4135-adbb-ef1f04633f10",
        "name": "Clear Cache",
        "item": [
          {
            "id": "aa803896-e0ad-4708-a06e-428d408aa836",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ff81b4e-69dc-42f9-88f3-910065b2840a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fab227cd-6717-4800-a738-9bc3e5c79d86"
                }
              }
            ]
          },
          {
            "id": "3c859fb1-00f5-4f8c-8de8-f08737bb577b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d75cc93-8596-444b-ad94-e24b35a48539",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93e7aa01-df70-48ce-8e55-736381e0eca7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63753a9d-23b2-4213-bdbd-d73998bd3202",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6f678df1-ba44-40e0-911c-3bcb18c46f60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e255d064-4739-4d55-9df3-b25eb19c82ae",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31725175-38aa-4a3c-b9cc-725b915af2ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2a180bb-fd69-466f-bb93-c8747a734ecc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b598589-ebcd-4f3d-8daa-7f9d4c88be83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97551244-d9f5-4cbb-a639-3fb8da52ed55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32322e8b-0a98-493e-a8a7-243b808e403b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3952676-bf93-459f-9e56-1cccc736ee6e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be46050e-0932-46d5-abb1-1c4e3c2ca65d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d0b46200-ab2d-4db7-aa88-fef67d1e327f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36b82f85-e106-4e8e-8398-05f0e07082e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fa696f6-a0d1-441a-a3c0-b7ce5787e6f3"
            }
          }
        ]
      },
      {
        "id": "99cd6218-0db9-4d59-b876-b27d6397c79a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5c7a4bac-120d-42f1-b700-a28bbc99c800",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe8f7efa-e8cc-40bc-812d-cee4ce378c2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0e1aded-c422-4d67-a39e-c64920330764",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45c6ee8-cc73-4a9b-9382-520974a66430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5725bcb3-4078-4d68-822b-d3ccb4738f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35092846-4a20-40be-b8e0-34f84b5018fb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044fa80f-0328-4d75-b8b8-67b61a6fde27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be434afd-dca2-475b-b61b-a97c091d0766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab2ede3-57c2-4996-84bf-bf2544ec3794",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5381ceda-2a0f-421a-9972-2cdf61b6b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e1868b2-86cb-4d34-98ba-93588848a162"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "856fd6ee-fdc8-4920-80da-ff753aea8cee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a4cee76-0145-445c-8947-b4ad823d7e6a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73bbf64-b13a-47c0-8984-d1a2753457b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63d03813-1888-4c0d-b64c-67a9c4bc63df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be8a446-bbbb-4bb1-a554-cef543f06b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c33320-511c-439f-acb3-d2383a5ff5ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e7da8de-0068-4c8e-af3c-1e3dda5c8310",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01e64e2e-5285-4330-922c-0e0f9e7ea424",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ed8a79f-7fab-4dc2-9b1c-4813e331faca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "793f6d74-dc88-4b89-b1eb-7f79e6f5d477"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81081b38-d2fa-4db0-b46b-f31a3fa3f7d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a101422b-cf1d-4096-9a53-01b567ae9639"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70bea539-a9f5-4d18-9a7e-845747b93ef6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f25455b-d200-44be-93f4-a5c54bae0add"
            }
          }
        ]
      },
      {
        "id": "42692875-d112-4133-81e8-9695b7f95739",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f813dede-1879-40b7-bcad-f550bb5cff16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4d937b4-3c00-4069-a9a1-dfb92703bfa7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eb2815ac-66b8-4753-92fd-08ebaec9942e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6f31ba-1f46-4b62-baea-0c70c3294b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61a82ff-bae6-4a2e-b663-d1b0b8b17774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ff5cc0-ad60-4d6a-96d0-2eadb0437ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f0fb1f3-b630-41ce-81dc-e0da9762b665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031b3856-907c-47a4-8810-7db8367c450b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43cf9fa-0fb7-4818-ba17-883d6f3c7b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c1adb7-532e-4ec7-9c86-1c92d4aa7c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58a531c-4bcb-4143-a0fb-aa5d4e68f7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67fcbed9-acb8-47d3-a00f-abfb9deecdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27056bd3-36e8-481b-94e2-080a435ae4f5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a78d8b-67c6-4605-bf59-7fb06330dee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cd598f-8952-49ce-b36e-7ac9e788d94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4322a4e4-6739-40cf-86c8-5233aad489d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd4444d-ca1b-440d-a3c2-31f287ae9ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff97dec-af46-4175-b8ea-c37e48265607",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6b0f7b-a080-4148-8cb6-ef50027eb106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5303a502-4fd8-4d79-940e-6589bc31f070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c54f9b-0b8f-46d0-8f4b-0ce9b76e4e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77b83726-07c0-4dd1-976e-1c7c2343162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825b5d4b-34a0-4cb9-b3d0-e30901c0fffc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c11dfb-2592-4d8a-b192-d2a2f1920aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc4c00b-6d2a-4347-9093-bc5324c1eead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb87204-7a67-40b9-b48b-fd6d028da8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16220743-c23f-4d43-ae1b-70f2704ba322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3871101e-3810-4518-87cd-1f989d4a56e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569d0dd6-a00f-4d47-81f0-413c043907fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb536ec-bf51-465a-9d98-3f511fff2594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2903517-e2cb-4ab8-81f3-fba6c8d23989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71001ab3-ad10-4b30-9916-700fd7d98d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0755c70-b519-4475-b503-5fdc522fa9b5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a420f3-fcd2-4bd4-978a-6b50b4e32997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9ade47-0dc8-4070-bd41-88613881b882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694f4794-2ada-4f4d-a6af-f9e98093d11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07867c49-9f30-4666-a0c3-3f49117f0ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5868f71e-2512-4b91-b871-e0725f0a0b94",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e104fd-9dc1-4504-b030-c50196d0192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10ea9e2-69cb-4332-93de-8c6ba4010ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa4347d-d6a5-4580-904a-d80991e2d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c780959-0cb9-4187-8a7f-28b7d073d8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a894ff0-7d15-42cd-a793-500b3d55428e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdeefdb-0811-434f-b892-6f5d3b8eff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f473c4f-6e54-4934-ae79-e9b354095553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e15551-9298-4b3d-bbfb-57ab1c9f0f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce545368-218b-4ca8-bb8c-be70f6ca0488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be7a2ae-7c52-49a1-b5ba-c8ef78b6aba7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4460590f-01f9-43a6-8a7f-17de159439d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca247ccc-5e8d-4580-b258-50a469a00b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e74e647-10b4-47fc-9ecc-1f7fb196d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27e7686d-f8fe-4fa4-91a5-9a35c15a3493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4252951a-dce2-470d-b1ea-ffe87ccf9a24",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97369ce6-456c-4d1e-9fd1-2d35e79b4e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f95255-da77-4d7c-b437-03590213156d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149e86d9-cc86-431f-a224-8cd206a8e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "017ed860-294d-484c-8951-1487ad70b05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f447d883-fb1c-413a-a7ea-c686c1d41345",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fc75e0-9777-4319-92e9-960b48ef85be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45006464-9a25-47e3-b710-2cdd2f8fba08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f0d1e-d831-4191-b830-01f0f52fd2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "974d6593-4363-45dd-9932-ae61bb00b3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6f73d8-3a55-4609-85c5-45401b201243",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee79b1b-11ac-40e3-96d7-9edd963733a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e7b99e-1b43-4e17-8d69-e7d8b46dc076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9269ded3-9157-43d2-9756-8d5beaa2a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d579b928-fd7c-4d7a-b552-c47b1d253b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd5a8d-d911-4eeb-99a1-91c8e31a196d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f485bf0e-81cf-4556-8b94-50b4c9b2e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bbe764-cef2-4150-8d5b-4590d589b896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10909ce1-a2bd-414f-9d6f-edcc82ca6cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ddaaa7a-a545-4869-a9a9-4aab33637492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188d4598-534d-4581-aca4-02fa147766e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64c076-97c8-44ba-aa0f-155fc3b6401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c0c296-eaa3-4ec2-96f9-a08d90ba31d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec493bc-ae0e-45f4-9b30-e5fe01241a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "850d7331-62eb-4b7e-b23b-5b86ab37c575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a52e389-5373-419b-a4e9-6adf69ffc84e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a8dd6e-c8c1-4d54-bab5-1b52569040d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b71c371-43cb-43ed-97a4-69aa42306fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d3342a-36e7-4c8f-b5b3-40794e5b9dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd7218c-9a8e-4624-9d35-89c84995abf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43c22e6-9cee-42a0-b330-ab5d67ff306a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4f966c-7363-40a8-87a8-0a18f8e19172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69422668-a338-427b-b7fc-a31b3e3f15da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769d4aef-d952-448b-bbf9-ee5615f7f938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b73afec-295a-40f8-8ba7-134f4bc9c348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77cc3ce-2724-4260-b794-16aea0228c8b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b14b40-395b-4592-8dc3-8557453ab099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a15cc6b-7655-48a0-8f37-a7d2e9087bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a03b0d-eb22-407c-b7de-886a26df1eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0864bb54-04f9-41ce-ad52-74fd7bc2a9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaa0f96-1889-41e1-be59-7670da0814a6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ebf311-c9e0-470c-847b-af2b4266e146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18fdd7f-f662-4d8a-be9b-39a330a70894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972ad18f-2be9-4145-b675-f889c0b395af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28cce68-669e-4491-97b9-5a6a42b1ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b919ecd-65c9-4f8e-af1b-53eca300341c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eafcc88-3c97-4deb-a2f3-117cdcdc2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdad6561-668a-458c-abfb-10c0dbf8ba50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668c2658-3430-42ff-a886-c75fd316f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f10cb80-d838-4b2f-9dd3-eda940ad9391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec1dd4-c1e0-4d9c-b76c-1ff3eb83bb0a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d3316-4c96-4138-936c-e95d04298f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3144ba40-81e6-4893-9e6b-fc68556373fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a439368-c77c-425f-a575-b409847241ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "417eb477-4096-492c-ab43-32f9c66c11a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b677e58-bff8-47cc-919c-3b71a5e67f33",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c13c8-0a1e-4dd3-a70e-7b7a1fcf2e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d1f12c-dd4c-4cdd-9156-c7d6cc9f3af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbe229d-ba9d-4458-a8c8-d22189be446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b4abd1-d2c1-4754-b6dd-b142cacd59f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeda4b2-22ee-4ac0-9515-d8d56669f4f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cacb39-cadb-4f20-88ca-f2ea65b92f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915d5afa-06ba-4e91-95b2-6d32cecec2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdc4cee-f1ee-4fb1-aa98-0f6b99f968b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e72ddd1d-9370-4f9f-93f7-c107fb5b9b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e1985f-0626-4cb3-8d59-977df2c376b7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6223c9b-bfa0-49b3-98c4-d59064897e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7cd332-7d3a-4b96-95f7-30ae231aafea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e733726e-94ba-4e8b-8cb8-09b85b2d580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "675549a2-65c4-41db-9ec6-199b3628aebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091927b9-3bb0-4378-a768-7d06bd629587",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acac296-ff07-4497-8ab1-e78ef64a8827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447998b3-3401-4c21-b3fe-32afdbde4e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b045c5f6-8d21-4b3d-8407-ce2244d314f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e428c61-8d40-45d2-afd4-dc12c5717d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9801929-1512-47fb-b94e-2e0d0dcace66",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0231f8fc-d42c-47da-a2b1-2437a61151eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59518c13-5d06-4c1a-858c-c8fd80e7f78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2dcb20-cfa3-491c-97f0-3730f74efeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f11dc5-fb28-4201-88be-e0f830558899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19df3023-91d4-45a8-8267-0f61a1d942aa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6960b78-30bd-4f4a-a0cf-cd222a540312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1116b0b-e780-4f9f-8344-51f115e3baa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f840e679-c329-46e6-843a-495240840d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21abadba-2805-4bbc-a762-d39321c7b35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801a1e2e-ef4a-4c56-90e8-5b50bfe8c5e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a781d14b-e589-4b4d-83b9-6c4383450623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5578f0-6eef-4056-afbe-37e24f9b3806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b9325c-3e47-4938-9e88-9be64dd496bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae790162-afb5-4dc3-90f2-0c3ce771f1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed516fe-5590-4d4d-bde1-cfd1e5028248",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22604001-e4d7-4caf-98a0-b4b68ecf5443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16ed838-d5ee-4dc3-b1ef-d2a2c50bdcc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e2162e-daf8-4929-a748-e7f3b3b2717b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea9b567-ff22-45fd-91fa-607727be45b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f8652d-1ff9-4ec6-8626-2286df631981",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eddfd5-015b-49b7-894a-2610f6e1f294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12ac685-1403-485e-9c39-b80a80dc73e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2230b822-64af-4ec9-8d8c-d865543f57c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "706ecdeb-6145-42aa-9c45-4023a2de8573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443d0531-37de-4da1-b548-3228de1ee124",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d589848-bd16-4647-a549-200880002152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a62881-bb32-44ba-9a7c-de50d8681898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fcca79-1cec-48f6-8f64-b87e158ed0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa395d56-7852-4ccc-85f4-29a59b4651e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df51f835-51b8-4d16-99a6-a1ecb79b4540",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d7158-3449-4ae4-89f9-4b15e99164b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f3c1a7-e969-42c4-af92-51f0d357f49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2114cabf-07d6-465a-b5f9-9c85ccb8ecad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4808ccd3-540d-4d4b-8666-0370005e5037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb8886-8aac-4de8-bc3f-6f6f0c574ae6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7101c32-5787-46a0-a62e-12214e69ed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86864d60-12da-4729-8386-8402a76b43c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ef8c24-81d2-48b2-a949-310e43fa7417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb134d54-159b-449a-a247-9bccf5383475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41829490-5277-465b-bee0-a853a319c43e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2564596c-c454-462a-824f-4ad6ab7db420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a628af-c40e-4a78-ac51-b31d8f523a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6a7666-1df1-4456-8f17-f85d2f986055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b1e976-84c7-4a91-ae90-6a279ff6af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d5bb14-cdbb-4b34-bed1-e6a0db85269f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93d1d5d-6afa-4a8e-8415-7d834dfb5197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a51ccc6-1116-46fb-80b8-ef9ac3a11b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb40dc9-3766-4016-9efb-0e21d1865064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d80ba7-7a1e-48b7-ad69-45b07df05412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392532da-f7d7-4f91-a85e-68e0d76f37f8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f8d494-fce1-4815-bfe8-0d052f480d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7e2fc1f-7e10-44bb-8ac6-d456c5a36f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c748c5-7022-46f3-9388-46f15c3a1d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e9d605-9110-4ff9-bd59-893361c3b991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604c85ba-2d2f-4103-8587-4a3361f9f56a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bd87b7-ade7-4b82-aa88-6043f95d1e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3cd9c3-14c6-47a7-85ac-cd31bdb66ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd34021-93b5-44a6-96ed-785c152e5fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d59362-760e-48dc-b9ec-f0f040eab5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e30554-3d68-4e96-8aa3-39c85044b92c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ea248a-ae8d-47af-9db0-a680445c6087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4f7339-b6d6-42cf-a12a-86d9d96f1cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41e36ab-4aaa-4ba0-933a-eaed0a01104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bc7b90-c106-4bfd-8a93-6680206b705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc76e70f-897d-40ec-876d-c0e3f78ea1f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b94b539-03ee-4f4c-992a-df95087d7a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9c4284-fb90-4d96-a44d-5a44c91400ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca57ff5-3df8-4bc7-88f2-20640067f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55516922-547b-47c5-9742-671b2dda8e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842707b2-27eb-47b6-960f-d23c383fdcf4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b827bff-320f-44ca-af63-e3c27bd2251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e42c35-35cd-41ac-8203-d324e74a3e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f50048-1a33-4d57-8a75-38b38e71bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7abe20-05b8-4115-b2a1-781830d4a3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeacec10-4295-4c8f-abe6-f6165539280e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597061f1-7d57-48b9-9639-ab5001eca759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8160d82-5731-4307-8bb5-28407fc3bb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c8f3db-6b1e-4282-9d33-bf0d7c1f410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c59fa3fe-f9ca-464d-8fcc-2ef0770ff62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8d8e87-b194-4bc2-b5fb-302a7d35f3cc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfab1e2-9a57-41d1-88c5-ad84007d5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d434f3-83c6-4ab2-ac70-be7582e16b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e532b-a84d-4933-ab73-c61e6402681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bd43ba96-6279-487a-8660-f9c2a0c66636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b2fff9-4e65-4300-b7c9-166c82cd6ab9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cabdeb5-6dd3-4e97-95c4-3d9745865b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b79ab4-d99c-490b-b143-14288e50340f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef0821e-1d4e-4589-b1d7-8523b42387f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b1f3bb-0a9a-4a36-b69c-0fca04fcfff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c01c94-2ebd-42f5-90c1-b8b47fe15c09",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a2a985-d4f0-44e5-8bb1-0d87ad97f7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603d3cfe-7b71-4673-b586-a5e613c4f52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d67024-60ec-4bfd-b3e4-9d43b0b32faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7a96a2-4d02-4512-9ae8-52224cadaabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb5c155-f8e8-4c74-9b57-4b9c9eaba9da",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a3299b-6670-4a9d-b05a-cea5c04eb931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8fb749-6b1f-4d3b-a314-5e0ec7dd14ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ecc7f5-2064-4975-98bb-4467f4eca121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10826538-9fe2-4c4e-af54-f071248e5af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd2f7dd-dfcf-4e7f-b99f-226b82b1ef7a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b19bfe-aeba-4d5e-8320-e3ad3058945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2206006-52c4-4768-b68e-c04b8b9e2636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf7c7ee-5437-488d-9564-86c3f4239969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a89b39d5-2148-4af4-8509-86559d740ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facf9bb0-68e5-468b-a536-4b5bac09a230",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5850871f-833b-4da9-95f2-1359abfb99d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8200463-a359-4331-a8f2-f2ede62084d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fa892e-d8f4-4823-a172-9d187212f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd28f7ed-5b46-4d7d-9431-16997e454dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0fcfa-a3ca-4d58-bfe8-af3f3c44ac96",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d223a3-5535-4ad7-ae41-ce634ba50222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21c7b71-f7dc-4202-9fc0-2065996d414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d19ac6-460a-4120-a611-4170bb1cfd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd974cd2-6fe9-4183-99db-b7c1f414f29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a2eb11-6fb4-4be5-a0ea-de7b59861c1f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d29dc08-9b49-4465-a2e3-9ae682e640b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e217cfd-0a36-4afd-9698-6402dff24294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf5250d-90da-478c-97e1-8b372de988e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5781d2-8750-443e-b2ae-aa8f873aa598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919c52d5-3c1b-4625-b9ae-9355cc7f378e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec84e13-b3d5-48d0-ae16-cb3710180004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ff63c1-a56c-4277-ad84-8a82b6c601c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5d0805-66dd-47f4-8802-15c187f99a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4071b9b1-3bb9-48dc-84b6-f09749a80e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f592909e-d4a0-49c5-9203-169765ff8ead",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feecd35-26e5-4c09-9c27-8ce39ea48f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abab14d-428d-4aff-ac12-9279bf74a940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94580101-3fe4-4d3e-892c-05e26c4e2c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65bccc6-8eda-4f48-8a79-c451399c4439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81c74f3-408a-4f1c-b375-a8138affcd01",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ab5d6d-68f6-4179-93ea-19043a422d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18aa84dd-9a3e-421f-80b7-b3666038743d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693919e9-654c-45c6-a24e-f44054299ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c49018c-7105-4534-a90a-a82134d5f40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da3312-44d1-4fba-a8d2-34af18f71e3d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d4419b-16fe-47a5-b389-f47b948a1573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03553ef-5465-421b-868d-1b965a389bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2fb226-22dd-4d73-bb5a-334f7b590808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b13c5219-2b17-4450-9638-d908474099ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb03e0f8-1ab1-45e0-a298-a0996cb745d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c80824-f477-456e-8d5e-79d56f155527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3733e165-593e-49b5-9f16-af54baa9baa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b22cdd-3e66-4f55-a5f7-27c93ca698b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d8d003-f715-4348-8e41-f198580c282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85270721-7662-4943-9ed5-7c9fd50b8f0b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548379de-2567-4a3f-bb27-74eab50c56d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634288b3-9274-4470-b72b-8078707dca6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3ab611-3fbd-43f3-96c6-19348b49ab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0043d0-ab3f-419f-92df-458593044807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2082fc15-8c4c-4473-a513-bf8b24e2b3da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a353144-8c1d-4f12-9c06-83cf3b57947e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a9fe52-0cab-4af0-90dd-94848bd45656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65575ad6-31e0-489c-8248-5b2fb40e1372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "adb22cd6-7cec-498f-a906-34ca9be0fb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec731a06-44c5-4d6a-83aa-d6f1e4a33216",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c48ca9d-5448-4a90-8967-61fdeb95d2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38dfbb35-443c-4eb1-b6e5-8525e972b7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e818d79-8463-4cdc-9457-94ce93883dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0078224e-935f-4605-b5d4-ecb79a2caa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a639ee2-8f1d-4514-ab50-1e3a23dd8ad2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471e32e6-600c-44cc-89ce-89cc7a5a68ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63be6e67-f1c3-4687-b4be-8a4dfc41b8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbb3909-aaad-4592-bc2a-c193d366811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fed4ad9-790a-4b7d-8171-470e088ce45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cd94cf-400d-4197-854d-453948ff2c95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99aab08-a354-41ce-88d1-549c8cbbdda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea07047-32b2-49fb-bbfb-4900e8a6cc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853cc769-8eb7-4454-83bd-4e2cd7b48341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a69f9070-12c2-44cb-b2dc-b1bfcf7e1354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a53d94-83fb-475f-8701-51611d7eee7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5324f516-5a1b-4eb6-acdb-446396cd3662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beb2ed7-2edb-44fa-916e-7579e9a1cfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cfee05-16aa-48be-a1e2-d96fb79f6d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5846f61f-4b9b-419f-a79c-8d9e9c76274d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e2979c-2042-40ab-96cb-6fdacbfc8dda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5526af19-5cb3-4706-9fa2-b60a02c478a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d654d7c4-c592-4c4b-b0f2-6b710088d872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b0851b-02a0-4793-8a54-e5aadbae1fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac358990-4bfc-447f-b791-455fa12125bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cdf8b1-89e6-424c-aec7-2e7d8d3de3ff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ea0e65-50ef-4b06-b059-22b98cb9ab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d2d60b-d2fe-43b4-8133-a47f532f4192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eb58bf-f8bb-412b-a3f6-26cda322c68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a82308c-33a4-4f50-81b2-5667e6ab5c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560a00c6-f4ff-4c12-9272-50dda420af63",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f7ad8a-10a3-45ca-a326-b4f040840135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae10694-9edf-4083-ad63-d35803c5127e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767d7694-2a6c-4d03-98ed-a79a5654e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b24a0b1-9a0c-4a49-bade-0cbd6c92e3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac363cd7-b13a-4bf4-9c8f-f56e209f51c9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d317e03e-3348-410a-9e96-d5457f161abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14508d34-80e4-414d-9fea-4b2bc05765b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298fd166-3128-4ae8-a3ae-c8335ff1a0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeefe64-78d9-4359-af11-27bbddc46fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc85a1a0-5475-4f4e-87a9-1f7fb8644864",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4ff0e7-fcbd-4ee9-bc9b-fb4d52e88944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c91088c-3b11-4386-98cd-29ec1706dd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27f692f-5484-4e16-b8e1-bba48725180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8787b4bd-9ee0-4392-88b2-d11b75ba08cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57ddfa7-2c55-4251-a42b-63ae0ce6d796",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87f2002-9cf9-4464-b3a6-74ee309c3506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57654d95-ce6b-40b3-874c-f7d79109a53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff6e478-cb1c-4e1a-8fdc-1c8ce276335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda522cc-e36a-4068-a874-61e0fcdc082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb44ab82-4f66-4d6d-acfe-ee197bed3b67",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cbf64d-822f-4856-9a18-eb9d196ab185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a079b27-7500-47d6-8962-d41a273bea27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa216d0-2067-418a-a8a8-8b02c219a24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24730683-e772-4c60-99b5-75553c5720f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c1d63c-de2f-49b1-9919-05de1cf10a70",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7afa0ff-605d-4444-814e-e3d9c65a0c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4f371d-2602-4864-94f9-eaa717a07642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e636d1-fb8b-48cd-bb62-4fdd7ff91063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc79df3-a411-4d13-b638-79448cdba358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28c84d6-1be5-4f98-9b98-9d59dfb6f0cb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaa26c0-c4fe-44ec-8947-abaed7feda70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b097fc9e-abf5-4aa0-a20b-00523c7b4ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc18a1e-1326-4999-8cda-af3c8bd57534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ec4049-babf-425f-9bd5-59b1e86d30f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82e47b-15ea-4ec7-872e-98b01ff3f600",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2aa943-61a8-486d-bd89-d7d304024156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07e03ea-f76f-44ec-beb0-247616dcedc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1825f84e-bb84-49b1-9f2d-12c168f45273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e5e99b-7b8b-47d2-b87b-0b4737140782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5318d477-6eac-429e-8500-0964390fb570",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300d06fb-4e7d-43e9-8759-e697e5b6adb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a221a03b-5131-488e-bd90-b7e429cd28ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77a8aac-ab86-486e-8ce1-2571f9f9e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45a89b9-ae73-41a7-b06b-cda3bafb4714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c9d26f-35fe-44bb-9347-6807e006e17a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3121f2f9-1b1e-4538-a1fa-d1dcae3a96eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfca2a53-268d-4d55-9849-2642a044f3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd07262e-b7b0-45cb-89fe-8901f866e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "705c3c7d-4410-452c-96a0-7b3ae4ae8595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1c6d66-d5d3-4918-b9ff-9fc515e6cf36",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cc1a6d-308b-4745-af81-dbf52191b40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea479f6-8fdf-42b4-b8ce-aa0b84bf5f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1c96e5-edb5-4cdd-9f56-df49a3b2c99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f870af5-5054-44a7-8d5b-34fac2d99b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6588a6-467d-427f-8378-61964e1f2aa0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0055adaa-2bb4-4ec5-a548-43a1d3d5fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da43b6e-2484-4247-8ffb-f98af63cb04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c480e4-8a4f-4a84-aae6-54a0a42790c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f55bb854-7532-4738-8fad-cd8fc8154a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747257de-4ff3-435e-b2b0-0bc843e87bd8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3f6265-a5e9-4962-b72b-ec452b341f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aa7a17-e8f5-40fc-bce4-e25ae9678715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90babed-2910-4afb-8e82-00b5f17ab978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a315cbae-fa1e-4acb-b32d-93689aa6f80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628ddd1-3b43-45cd-82c8-04d51f8e91f0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bb78e7-474f-4df6-a0bf-32aaf04de4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f610e32e-bf43-4ca2-80e5-736b42d2b1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a4472e-0dc4-43d9-bced-4fc36852e64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf22efc-70d3-4951-9e2a-959085aa4725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f21238-5a6e-4f84-81ad-62e9b9f8b2df",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bbc9a3-d6c7-44d1-ac98-e0fd368b5f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb1321a-96f9-494c-a2d8-06d6eaf41c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5711064-1f44-46e2-8fa6-1d371c3c1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66636b63-9e58-47ef-802a-293a463d8565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c299c6ce-dd15-4223-80eb-5d00702ea46c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846059f1-4419-4b24-950a-f8096edd5aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ea29ab-dd5f-472a-9ce8-52c27e70a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38db8210-bc87-42e7-bfc0-9b2f5cca9228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2189c4dd-8629-49e6-92e5-b5acdb0d65e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c0fd0f-e816-4d85-b5ab-6a003fb80597",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf0b8ce-e4e0-4145-8fd0-7b2997a6dd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9f49b4-13ee-4950-afaf-cfa934229109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc78a7-0f15-483f-822d-8da9035d4f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfacae35-c440-4789-8e9e-2353ffd14ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7be3b60-b2d4-4b5f-9fbe-c38890ce3843",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c329d1b4-bd11-48fa-ba1b-ede906127d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8a2a3c-a254-4528-96e1-49703ed15a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a644714-eca6-4063-87fa-a20f642e72df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6382d90-03e8-4382-b62c-fc901741d48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c43df-ce02-4132-8303-05d0ef34fafa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f96a1b8-de68-4f84-9534-7eb8d3c0530c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b41b4d-5391-461c-9c41-65b0ed87f9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b83624b-9eac-48e9-b1b1-0c6d6713f449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "476fb122-fcaf-4bcb-adba-16cc66435887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd03eea-b7e2-4663-81b8-1ef4125f6097",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2707ad-f765-4990-accd-8f222d14897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96868e8-4fc3-4a02-9f91-3d18ceb5eab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab5db6c-4e28-4d85-a3d5-8f5dea485f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d67d93-0541-4ebf-8cb0-b32d4f6ffe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a81bc7-7aa3-43dc-88a9-4f3eddfc3a94",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a474cb-efc0-4f1c-b51e-7e71e7c88ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119c2022-52bd-4093-b77e-95280baa3907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e07aa57-4832-43f0-aa61-5f4f870a79e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c34cb6f-816d-491b-80c4-c5f476ec4c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f977a8-d3f4-4513-b2ea-6ddfce067b43",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb35bdb7-e702-4212-ae24-f50b3ec1e999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7a587f-9373-491e-8d66-b3a6b2ff4db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca1732e-23f4-44f5-b841-b4ab0e9c9436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "819485fc-b903-4e5f-8f69-c1199befa160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813bd866-1f16-4b28-96b8-7a9d2e05f605",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4440af-0b35-4b51-ab81-183b800466e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca605a19-3add-4839-a3fa-834624d7846b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a49e7-2f8a-471f-a93b-e694eb8c8e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8e71d2-b6ca-4d24-81b0-dc30b8b96fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d7bca-2980-4301-b64d-aa7927ecb420",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ebbb8a-c19c-42bc-b0f2-4b72012bc110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ffd36d-0f6a-4a49-a8a2-1fcc90303668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82e3a30-dadc-40bf-91aa-bb029b3af0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b351e16-3241-4278-a611-c3b67f0183a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712c6dbe-25af-40b2-a93c-2a6b7066fb50",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b77655a-d1bb-4172-a1ef-28d92e9ad950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37be1866-8879-42b6-98a7-952a1c843fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e12b4a-fdf3-4a0c-a195-921685555fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41d93f8-8faf-4c57-977e-016949c77ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7681b7bf-df0c-45cf-b999-a60d2848580e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab19731-674e-4fba-abd3-2195f0850fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1289dc91-e5f0-45b0-9a3c-bdbd55dbd685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f790c42b-bb15-44cf-929b-39a9f930720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a862aa-bd38-4e53-8b80-abe619e96e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b629ac5e-a191-49a8-8cc0-31f55b1120be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c20d3a-476e-471b-9bb7-57f2cf5b6868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4667b68-3ee2-4901-a286-245366feb77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420920ad-36cf-4936-aea0-2fffaf965b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c41308-de94-4222-b38d-25e345d12a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4378ac7-c3d7-4d99-af64-9fe75187053e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17cb4ee-8c4b-4170-8a7c-835e4fe28c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb43f51d-67a5-4841-9e3b-7f97b45d6646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0822d09a-c168-4f2b-ae9b-03f1ded4b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c084be-fc53-4742-90c6-e0200ec6a83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2f0f0-3e28-43a5-8943-2a287f69eb20",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156336f3-d2ed-44a9-ba98-a1c34c3795c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49eaa301-74c6-4c38-abcb-766ca381de01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46c498e-e697-4874-b9ac-8a39bbdbfa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a05a96-c1a1-4704-abb5-637576e26bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0c02b6-e50d-4def-9632-d23d78e2551e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71adbf2-f45e-4242-815a-ed1e2190c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "701d0dc5-1edf-45c9-aa6e-2fdb848f6c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef4c678-1364-4957-b189-0cddda04092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0934ea4-7f17-4ab7-bd0e-ca80ce95f27b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce5af254-cd09-439e-8405-cc56a7d9a958",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f30282-10a7-41c3-89f9-d80452e5352c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d1d170-29a3-4314-9548-7242a1914a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0161f0f-0653-4b0e-8fe4-d1bc0ec09b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7659b95e-9c39-42e6-b24d-57b198cd7099",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5cda1ea-65b4-49f7-833f-605e09f161b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f32ace4-5208-461a-8ef8-06b79b8f307d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7984e20-6781-4811-bdea-57cf47697395"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "358dfee2-3096-42c7-b794-c57982604947",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31bd1365-812e-4898-acb3-f41cef079b0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b192f03-1a28-4994-8b16-501758583552",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f866369-e71e-47f2-9d43-f95a86d9e5d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f05d074-37fa-411b-a9f5-7ce232d35baa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14f6025c-8c6c-4120-993f-cf6bb89489c9"
                }
              }
            ]
          },
          {
            "id": "3366e8ed-4007-4753-8081-be5582b3d366",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f197fee5-f418-44f6-ac43-fca258ad869d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "39279f02-cc89-42fe-b886-7ca3c9cc3f20",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a8f378-b491-4031-818d-fbdc2fd70383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7213d973-7e1b-4417-97af-474ffdf967a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a7fa3f-acfd-4a92-9dd5-aedb12e543f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1204fc97-a8a5-40c2-adf6-6d9f834ff922"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "428138c5-dd60-4727-9373-2c3d3d4ea9a1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a504d63c-4b70-4615-99e8-bb2839bb9c2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cdec744-c2d7-43de-811e-d92b22b43bbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a82e3c5-393e-4f5d-bcd7-68fbafbd2161",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "596b1301-4a1a-4821-9790-913309869162"
                    }
                  }
                ]
              },
              {
                "id": "09b5b042-9390-45c0-b367-f4dce5a6acd6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19eed433-63e4-4207-a3c3-1f62100933b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d56668e-408a-478e-b2f1-3d365945da84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "181d4f41-7be5-4426-87ac-3697366539cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "064dc99d-95e0-4eb2-9426-7f62748e80eb"
                    }
                  }
                ]
              },
              {
                "id": "12e0cd99-ce90-483c-97a7-ae4630bde36f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "553a354c-b1d0-4778-b326-8868067cd6b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b0e432d-05d2-4470-b01f-d3e56dae87be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dea298f8-fc82-4f5f-b0e4-7a4ea3791671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f50c302-b817-4d90-b3c4-d86fde0be0a8"
                    }
                  }
                ]
              },
              {
                "id": "c725a4eb-e552-4c46-84f8-13d4cffa307d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f9d0c36-b12f-46c2-8ce6-118e2c248725",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e107bde-88cf-4f36-8f86-505d420ae0fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91a163ed-00e9-44ae-ad10-93148a79862e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee380f14-712f-4e7f-9285-49465944aabf"
                    }
                  }
                ]
              },
              {
                "id": "021c8b60-f051-4b3b-b0f8-907897bc3875",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8b21b05-78e5-4bbb-8e4f-5b725a8d8a9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "086d5385-3ac1-4cb1-83f7-95fa53f851ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49601c27-97d3-4fc1-a646-f36ece225086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "267b83ab-96c2-43ed-909e-e2b607b3d599"
                    }
                  }
                ]
              },
              {
                "id": "8915aff9-ec6e-4bc6-a9c5-a81d5051321c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a441422-d197-47d0-9637-acf4a9f08bb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e04740f-3fd6-454b-aad9-fbfe71b09cb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "769926d6-63d6-42c7-b411-0b6254790b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9965a34f-f493-4da0-b8ec-04cf2790fadf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "199be453-0f0e-4fac-97bc-29a4fc7c4003",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "393dad6a-0822-4b84-8a58-e95109f5b80d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc95c0a1-343e-4750-897e-07f78fecca8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba71070a-81a8-47bb-b9e7-c56aea08e484"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aba31441-66fb-4088-a545-92d8280c5171",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "70d5fecd-f55c-4af1-8a5d-ce067d82f507"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c0646a9-b294-437b-a793-b8c026cd1e85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d461da3-c307-4bdf-a39e-72b13941cf70"
            }
          }
        ]
      },
      {
        "id": "fcebb767-5383-49d8-ad13-58839a629970",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6cf72293-d632-46e1-bbef-4e4c0b39ede9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b22f5ea5-7b27-416c-ac93-1bc357a77628",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21f7f9ab-bc87-4360-9c4e-326e197dc203",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b865dee6-083c-428b-8f1e-0621f3a91944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940a9f5c-f4f1-421b-b2aa-d4adea1ddc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66a374a-41ea-439f-aa68-13fd5ce46d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad7166c-0ccc-41b9-8229-dfb3c2c83c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08384f3-acf8-4041-b198-fa00f37e2460",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f991643-40a1-47b4-9935-3f89f510795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f33d17d-7be0-4b38-aed7-005e80c34f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67de101-cd26-478a-a00b-a9cb3b31d50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "317fb522-8810-48b3-aef5-e52c860c69e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e519620e-ab3a-4ab0-851e-f24bfa7a1047",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96375a8-911e-450f-b565-c3753c914375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab45720d-171e-44fc-b4df-ae2cdcaf78a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366143f6-3989-4d5f-95d4-65d632ed4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5abed387-3124-4b1d-a39b-41526afaea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810b1756-9894-4367-9fa8-c075515c14e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caf315b-fc89-43b1-b6d4-efdcbc26d50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89adf2c5-4ec4-4e1c-a3ed-846466171625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb94824f-41df-4f0a-84fd-02c209c188c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f09d0b-4682-409f-9a63-10e297f98ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3cbda8-0e54-464e-95a3-822770c01764",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e46017f-cc3f-4db6-a360-101014828956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2ce579-5006-44a4-97d8-31f00b611e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821d7149-50d1-4ac2-91f6-92ca1a2b6bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7e8e9a-ad1d-4a04-9ed6-5581de30d00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0100eeb-8117-4b80-a481-1552a062383f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659c8d83-2b77-46ea-b6fd-84e820e08566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2f8f66-3e2e-4037-b6f5-06626dc7d3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba55951e-05d7-4993-b10d-7947e289c414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee538074-4115-456d-992a-3deda2d79952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d656a8-25b0-4170-9a15-087d35d3bfab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1071b11f-c2df-4cec-b711-dcfd3c17d8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33f35e7-757e-4da8-b0a1-daf7a84bf035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac61244-163b-4178-9f1a-cb216b913ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "891a508f-92fd-4de9-afd7-906e91414ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479a481a-7faf-4983-935d-40441f7ea058",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddebecd-569d-46d2-a6d9-2df67f1bfaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4db5e95-b0e8-4b81-aa26-64877bdfd6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa398f66-9ae4-4095-9d31-66c4b492416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba62752-39da-4394-accb-400e65ea3673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b8dc7a-7572-4885-b788-903789f57dd7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cb1a3c-ca66-4ce5-9d94-8dd410148e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a992627a-379e-496a-a72d-6b4d4a10c436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b946ce2-a66d-4048-8d65-90ed757c4a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff7944f-6437-4322-b282-d725994eb2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a542c0d0-1b86-4801-a5b3-1185760796fc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194f36c8-3d00-409b-8ea8-b89c91c77948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b804462e-02be-4d92-87aa-537cb31b092e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d349ef89-8ca1-4bda-b44d-6c9913980b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a52e91-95f4-4c14-b216-41dc40da7add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f223d8fc-eeab-4f6a-afbf-cda9bff5a61f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a407874e-f335-4e9e-a51a-827eb91d0a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16191af-f473-40f9-84bb-8886367cd9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfb8c6f-cce7-49f8-ada7-ffe3bb05afb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "05ec76ee-f840-4046-859e-73d79119a3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5a0e98-b997-4052-87bd-9b1d59261c16",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fe7b4f-2ce5-480f-b1fb-fb0add7de813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353c3709-03ea-4c0e-b7c5-5066a20bf78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c1aa3-8231-47ae-ae5d-ec7a479e4c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b6a495-9ddb-4246-b06b-7e46eb51606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6141b485-a6d1-4490-84bf-cdf82da7b39d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10418e1e-f090-49c8-b55b-9e999e34c181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ff32e7-4799-43dc-a468-dea83f953db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad6d457-4018-48f5-9074-6cc929966ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d460f7-b4a3-4538-8fa0-9d4ad9971198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bfb785-92cc-4b6b-a6a6-d8ccafb7c071",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a64fd2-f45c-421d-b036-4aa1f0d7a831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b40f33-f791-468e-b693-02681c0ed66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1783baa2-6985-4b5f-8689-bdc9e758fc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2adcdb68-8819-4402-98a5-081fdfdff2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68bba90-e8ce-44dd-8ba1-e5494fd02701",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf02d832-323e-48d5-9a2b-8c61ef9bac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756df3de-1cf8-42d3-b9cb-24312a366310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20719e90-7ac2-48da-b285-799067442e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "197a4e06-c6b6-46fe-b133-b30a1ac26fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f4f2b1-8144-4fa4-915e-cf7e33e93e42",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba39f99d-9add-46fa-bb71-910caa253300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921f818c-2ce2-4a27-af17-b749bc445fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae01fb37-e4e6-4a8f-87ab-4bd44f4c5829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b289ed-c314-4a0c-9e25-85ca96410b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0c7d5b-8ff3-44e7-8f65-3be316c75277",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f40cf7-c360-4305-bc50-cba9ddf9cd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db00731b-31c5-4a17-b633-ef8be3e1181b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe9344a-eea1-4351-8a26-9a8ef6db3327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2a7ffd-aeba-4372-953c-590fce424717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0899f5-bebf-495c-b966-0a1480f9423e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e68f283-e0ba-46d8-a2bc-73d442476f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10340a5b-5346-4a5d-bfce-155d90da51f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d80195-1e18-45bc-bd40-53658ee4e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ca50bb-7583-4839-b77f-0ff36f110157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ada79b-92e0-40d1-8809-70e2cd81a214",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85bfb37-5091-42f7-849f-593efe4d8664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9ec8e2-1b2d-40cd-918d-3227d10549e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8538c8df-ef58-4467-84eb-4eb161009133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "190fdb68-7e61-413b-9a7d-b41b63b2d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200638ee-40e3-4914-9659-59193b81e2cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28afe3e-0988-420b-99d3-980582a69a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64435587-4686-4c12-9a00-68d517b64212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb93eb63-8684-486f-a6dd-8e439609e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bee8d59-30af-48ad-8acd-da3f9d08b26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845bf328-9d08-4e14-b6f6-0ad31d0a45a5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17991cd-7cb6-458a-ae31-9aba30601298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b0047e-45e4-4b50-9708-495577a995f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a2079a-ce8e-49c7-8852-114f6b263673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c339b83-122a-44a5-9e8f-c576a5a2e57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8fe8db-3462-4e64-95f3-ad9e9d192d8d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a33a6d-1ef8-4c31-858f-bb556e4fcf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2a1c95-a44e-4fa6-a870-2b6977ecf3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56baa3a-2728-47d0-b32a-52836a224547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f35d307-c167-41dc-847e-c0b01a438209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daab6786-cc54-479b-90cd-cac3db03a239",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05d2d45-1f79-4f40-9743-5fbf46eaf50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c0b46d-a89b-449f-a107-4f3cb3a8b19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d67809-950a-4439-a3a2-902f46e70942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4682e9-f6e5-4b83-b699-2aed6c1f233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42c9461-5707-4501-bec5-f053e68f844b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f06cc0-5604-40c7-8d4a-4d6880ec8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af596425-7384-462b-937f-3b73948efd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecd272d-7a81-4fbe-a8a2-c6e13e97ad80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaecca56-0f27-400b-bf56-0e081f49bed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45297be-ad2a-4bd6-884b-7a2b111bc319",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e1ef2d-66af-41ff-8c5d-973fa2c3f728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb30394-796c-4cf7-843e-dbd59652063b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0823f7a8-560a-498e-be89-deb88d48e009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ca58e7-7e70-4d42-8e91-0171ff7c7374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff2f0b-8837-4981-8f78-bbb55b43ad01",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5799445d-feef-4799-9580-c4fd9502460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d715cc58-b26e-4788-991c-314c9efa88a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10711ed9-6fd5-48f0-8c1d-cd464a69aaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "654a0791-9e4a-4342-96a1-48f4026d10a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3725f8-5335-410d-a201-1f48918b8a74",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e369970-10bd-497f-aba2-c4319b6af273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249ca902-f9c9-4726-afdc-69f515995d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393c8c67-18be-41ed-b266-9fcf50567e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6339d8d5-b865-4afe-8eb0-0c05fff3e842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1d379e-2253-4b54-bd43-36ebd74b56f8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32183bb3-9d9d-4f5a-a1be-562c30144c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f17be6-ac33-4fbc-a599-3b3cc4c88abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2975884-b0ef-4377-b6eb-a948c9113155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ca3633-43a5-4418-ad50-84ca6f9a6acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5009a31e-ef33-4736-b759-0742cc3e5840",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b9b006-55b1-43c5-8a6f-feb9da1659b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a836306-bab7-47d3-85fa-e7a434368f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d2178e-6f9e-47e0-9d75-6ac3e4e7b114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df29d44f-c12b-4ded-a183-070dc4e74795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178ebb72-04be-4042-ac3d-a4342b6434ad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b0cfbc-77ad-4939-8217-6660db81ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505e710e-672f-402d-be64-ea4300d63b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589eca21-9ae8-460a-b7a2-bca17913950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e153120f-e52a-42cc-9a12-270953bc72bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a555d68-7821-4994-ab62-a772b173c648",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d6597d-bd11-4d7c-a508-1bdfdd64938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99abdea6-d875-4370-80ec-45d7a6eb6c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ded630-d366-41a8-ac32-603ea9fe39a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132bb8d9-3a84-40af-a175-6c0e3091ffcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eee7fe-4d3d-47aa-9889-5aa8d0f9e414",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7305d4b-d894-413d-a607-b776eca32390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc764a0-afe2-4788-91b6-c04ae18ed993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d5ff73-d713-4731-9dce-1e52f81d2ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08171918-82df-46c1-a1ea-397fd56dc6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28be9dc8-5599-478c-b8f7-398b7e30a519",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686fc17c-8217-476c-be71-d311750c0ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42093cb0-936f-4efe-a8a1-e6b721e611b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c1a6fc-219c-4adf-bb7f-1c5f5f78d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc95eca8-1c62-48df-9482-87808fbf6326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e72219d-377d-466d-98be-955714eb2110",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e79452d-2c4f-4d64-a895-01f9eb5ff7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577eb9fb-19c8-449c-b493-0f2c20484a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66f973b-e381-4bad-ac5e-e0614ea3244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f8df1e-005f-4d91-8e49-1287be39ab8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770f3bf3-4e89-46f1-9788-febfb85cfde8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c158e84b-348c-4e81-bebc-e26d4dac6046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f95181-2f0f-41b5-a290-44199fe60de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8245a06-29f4-4fc0-a098-c62fc7185b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049ac9a0-e7c8-4e89-9536-94c673e51a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7726c829-d472-43d5-b6ab-0a320f65bc78",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d777fbd-94ea-4ea8-abb0-838b32906d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069d64a4-9a99-4d65-a078-0f178800bcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c547bd4b-d148-427c-9847-a7b07c939f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2876ade-f08a-43e6-a8b4-5fbfd5ee126d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e981d0-adef-4f47-b6db-81d877329472",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7b67bc-bbab-41a8-b96e-2890f3e83a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab51e45-064c-4c2f-88c6-6a9d40ba927a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de71fbf-edd0-4820-8e80-f44ae71b269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd9d3a5-8fb1-447e-821b-b4b5ef4e62cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1333ccf0-339f-4e23-b33b-51fcd4f0e46b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bba5d1c4-5349-4073-b775-8df9698b3f1a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ed7953-32fe-4cc6-a8e5-21c1019e7a1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca20fa4-4b84-4282-9d66-a96376374c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e0ea64-9184-4e70-9641-50913a2c7af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a261225-e8cd-48d4-a29c-aa54c4d3907d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8411ab15-b5ad-4543-b34c-3806ab6f91d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc9ccb4e-a64e-43f2-8dff-fe61301f7768"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "214a4416-bb40-4f4a-be1a-7fb055bbcea5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b60ca6ba-0205-4d91-bfec-476f9cfd05d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d90f9d46-c3d0-4be1-bc3e-2cc00afe6065",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7979814f-a83f-4f59-b7e6-b04e3f086be7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "640a9c02-b27d-47db-8909-7ef39324468f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c46e520a-6432-424d-b812-c185fcd427d7"
            }
          }
        ]
      },
      {
        "id": "ade36d70-d66a-418a-934d-9dd872432f44",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "df4c0109-30f6-49bc-bcad-1ef79d24b9fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "457c7ce1-6b89-4c55-8bb6-86783b1f9ca8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a04e3718-2a38-4a79-868a-25be37d5c51e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dffec79-caa6-4cd4-bb34-5075e05c4252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6409da8f-8ff1-4bf9-b7d9-57a052c95e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bbafca-bd91-4bb3-8575-dc8110899406",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6ec448-b33a-46ed-81e8-6c6084d854fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1c84d8-5236-495e-872b-a64976e949f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f43476-6313-4eb8-86b0-76e94c743c03",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ae462e-2bdf-48b3-a294-72a8c681b104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3726e59f-a7c6-4b1d-8291-610a46fe8a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd78b55-e215-4506-bc24-d3fd010cd874",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae13c5c7-69db-4693-a43c-5a8f79fc27a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42154665-84f1-4e19-a4bd-af6d560124ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f430cae-538b-415d-8aba-a1af6242a617",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af3e67-0cd8-4bfa-b93f-f19bbf59e590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ff1bb6-26d3-48fe-bfeb-e5ffa5d487d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5f7506-2a75-450c-9f5c-59b119b33b9b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a988e8-326c-43e0-881b-8bdecf773e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3379cd-e7c6-4465-8d74-0c905f5dc569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143998db-b244-4625-8df9-b0259d5acb46",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa37c90-686a-4f80-8e0e-e42a082c2d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6d0ab6-3aad-48f8-98fd-7cfdb6e4c04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd129597-13c3-47cd-b4da-099f9504126f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec5b6fb-a4c7-49d9-8a57-65060969a54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337c401f-6297-4082-984e-b0e6fb632ca4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d58a73-ce82-4914-9524-8a3f0c53b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a4422c-7b02-4d31-9613-e2fdd2d8756a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b8315-5cd4-4e29-9d3f-d5a7cdb27226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ace252-b64e-4503-9ce0-4256ccc15d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf5afc5-a320-41d7-b56e-a813e97d82f7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d1fc0-d016-4126-b1b1-fc27a0054c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72054e9c-2699-4c5c-ba2e-cea1c0427c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79310d93-7b7d-476c-8e09-bd829447cd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbafc2c-298a-434e-a1f3-e3bab554628b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a958bb9b-ab27-4df0-be47-23f9ca5ab02e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a77396-6d73-433c-a8cf-1419db08c97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cb9eca-3a72-45dd-b066-878ea7444559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38039223-e404-4995-8dbc-4c9825ada8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54eb08fa-f544-449c-a6c4-8d03cb9cc484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b843baf-ec4f-4f1a-abf6-48f477db98d3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3b2ccb-f57a-4908-8f86-707129132238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8fa2ca-922e-4471-b834-2d18466bc945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877864e3-85c7-4e48-8984-4fdad7e8cb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278c86d6-0cbc-4f6b-b9d4-e36445afd233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e515d4a-79f7-4ae4-8ea4-a12614c3c01f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724ff75f-8ce6-4244-91c6-31efda1203e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8384a3b6-4809-4e38-930c-ccc99c488b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ceb77-8ba4-4f63-b4a1-e44b5f18f1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7b60fc-9c98-427c-8528-5b94117b9899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b30e0b4-babf-4a68-9b5a-98566119f729",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f23243-b4ef-44d0-914b-decde4095d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1975918f-642d-4441-8b5b-1fe252624ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747e9e18-d00f-427f-846b-33b9b499433e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddaec92f-a3a7-4a7a-a8f2-a227a1f88b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0142b3b1-5ea6-4ed0-9502-c821e36d2886",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5715de-8485-432d-a913-98921a4c670a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99aa186c-0c30-44a3-83be-24814202c27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ace897-7d2c-49fe-855f-bbde54e04b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61de5074-b38c-437a-bcf2-7f6474269ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccef219-6282-414e-8089-2cea2bdf88de",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92b10f0-6f09-4566-b9aa-eda4ee6418d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c276403-481f-4065-b10c-2250e2990b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eed5fe-02c1-4cd8-9810-b56e9e5f7239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955b4ba6-40e0-43d3-ab1f-e5bc46b22240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa0d299-a5ce-4b5a-88b7-7dd2772d8a01",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c4d80-8635-4507-8fbb-ff526c87cecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c76e64c-87d6-4e4c-9572-a98e1a4ac0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6d8137-bb75-4a4d-aa04-78096e8225df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c533f3f9-cfc0-4d29-9d73-d1f72f12ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33223f6e-b381-470e-84e8-4593756371df",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ea3220-2148-45ef-ad5e-63cb83c537aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a562088b-2167-4cdd-835d-074fd7450bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f244f6-25a4-451d-882c-0b56a04b88be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e54134-47b1-4102-8206-fe33bb9475cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d7b9e5-868e-4763-b65d-60d823e9dc3b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1087d997-7513-4fe3-80bf-a7472a21c1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c0de17-967c-467f-8a13-4ceecfa977fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7772b6f4-121e-4e7b-8113-33481b34c7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eacfb51-2931-4dc4-90e2-e5593bb81dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb007da-dc04-4a0f-a3e0-e2bfd235d714",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4253c642-4958-4ea2-83de-7cab6cba3e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b9a7d3-a669-404e-bdfa-2c4a045fb36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab06fee-877d-4b0f-a4ad-0aa77ac5fc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ce77c3-baf9-4d9e-afbe-3f5790e9450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b07f04d-7415-4181-9f06-3ee2a2b95d3b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365add69-8184-4ef1-9dfb-5a09a2c78ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e547509f-2e7e-4ad3-aec2-ccfdbe2b4979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bade3b7-6ccf-4366-96a0-1b89b80b7042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d9650e-a5af-4c3d-9f8d-66dc3a05a272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05eb229-8a21-49f4-93a6-cf6ebbb6ff34",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cdc188-6a9d-4a68-a37f-62f28978949f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f51f82-0952-42b9-a0aa-2dff5ff56194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b29248-e283-4930-aa53-2c14d2a0f2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e687d76-a46b-4170-956f-0fcd3891e939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74feb2a3-37f4-43bf-9e15-4946e004a2ed",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635681f7-2fb6-4bfe-a94d-25812daa6a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b56e4e4-1a88-4e5a-84bb-8718895ca7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df342008-0901-43d0-99e6-36af0c481363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f037f74e-6e08-4dee-a499-6e49d50bffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f02c7-b2d5-4ce2-b5cf-6ec3eb270b55",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e69c524-b69e-4550-9cb5-ad37582d3857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7a4c45-0452-485d-99a5-d0998308d334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1da84e-7bb6-4665-84d2-f2a45685f3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d15719-8d08-4eaa-a4b3-0b3867c4729c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4509fefb-fc4a-4209-a0c0-4f9a8252ab4b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb9b5b7-ce76-480b-978b-c7c177b2ab28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a4dadc-0bda-4ee3-b78d-c71e98a716fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec63423-74d9-4836-b7e6-7082b6a3bb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bf5a1e-9c73-421a-a3c2-af3744b4080e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806c6e92-c6d3-420e-b3d6-4f0abb12f7fd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a33aa5-75cb-4073-9915-837b470e357b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d388bb00-488a-4fea-a955-8ce31bbdc04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25afab95-e301-4f20-851e-a8d79efc3fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968c2720-5e52-4302-b60f-a33e8d31aaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc8fd1c-1335-44a0-8664-8958f74e442b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbb839e-a15b-4a3e-913e-2aeb6214a3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc835a34-1a1e-406f-9b4b-de0df4d0fe23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1d3fa6-bd8e-4dab-90d0-0ef0acfb9537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05e6f4c-2b19-480e-989a-3d52e98ef773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818543a6-4691-4cd4-bcd6-40661aa71617",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e664a48-d63b-4628-81e6-fe74d20fb9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4595a00b-15e7-4cfc-9330-c419fe38352a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b4b6ed-c4bb-4048-879e-a31faf649e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bcc512d-d542-48d9-b00d-f45bfc3acd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b27b19-d234-4800-a8c4-5682820d237c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40224e00-4dcd-4321-bfc3-ea2940f96bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3981a269-4c44-462d-ace1-f04b25f5810b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8227ed5-88a5-4810-b4e1-371c25d8e02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e0c4ad-ec27-4043-8f8a-1d987bd69bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff18eadd-471d-455c-a9fa-d6e0964b8ec6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99d866-19bc-43ba-93a9-41886a4197d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae95fc04-a54c-4890-bb11-d8b567484f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b55b76-a36a-4309-933e-9985db792217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cf947e-16b0-44a4-a365-20bf6847ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ceb50f-8d0e-410d-b0ab-2c1a27682b5e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b72e077-b6fa-4035-9e5e-16835c7ee09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d69523-2433-4b4a-8d9a-3c7234f019f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba6ef47-2258-468b-a8f4-ddb481118f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364bf736-a038-4b1c-944d-8aabfda1fd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a8dafa-804b-4f42-92ca-791fc2061480",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af568bc-50b7-4065-9c90-c331cd6052f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1767010d-ce1e-4b35-9443-3412f6901987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3242732f-9812-40c7-b8c4-a5b4ba5b888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cffc2e-c90a-4f82-be89-a97e93ccbaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b23084-c433-4631-a882-45f09b6a0d5d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7e40ad-5c8c-413a-a8e6-d6ecc86aae0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddde36c6-c2dd-4116-bc03-3ca3d505b4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66dd900-7c66-406f-81f7-e57795e8c8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa8caae-50b9-4a8a-b121-37215fb1173e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39190bbe-8f0a-4c81-aa95-4f11319846e2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042d0871-45db-4776-bf99-157eff8ac219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ba7800-0368-4d4b-9ba3-1afa3ff5df9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a21e591-7837-4f51-bd8c-9139d34c5ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c4e4d5-0a75-4567-930e-6ad1fd811229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78829f57-a0c4-49bf-b29b-e27de6500adc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7aae1e-0d95-46d3-b689-47689481c100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d49e74-88ae-48f7-8747-69dd4debbe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774933d0-7a57-4a4d-bad3-3167574cb1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eccfb6-0f73-427e-bb04-b7b7cee08567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41f8a4b-0544-45a4-aad3-88f9a60f4914",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c258ed4e-adf7-4102-afe4-9f59ffac2281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a79fc83-34eb-4f89-b3e3-3de77e9252d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a68d4e0-8c25-4674-adaa-ee4c4bbca09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1916d0-2346-4bb5-889b-c4424f0b3ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba65be1-0bf3-44c3-9966-c21c318d4de2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5c836d-a472-4858-995e-cf97c9339471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af9359e-a235-4d11-9869-250741f9540e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de861f2-1d18-45fd-b1e4-464fd787421c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856e2dd1-c5a1-4556-af50-358d0babe6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c5c413-6002-46aa-9683-9c6841bf0860",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a228dd67-8b67-4b8e-960f-6f89f58ec1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67048b56-cddc-4395-9aea-ff33455933eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced2182e-c2d0-4b14-9396-0576b71b1e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6ba4b4-3161-43b3-a0ef-3d267653bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362f252b-918d-4531-a6bf-f6cda09959e4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3c04bf-64e3-4be6-883a-d766095db61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a04cf2-dbca-415b-bc25-190f8bb5b3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c212e226-54fd-4d3a-8963-fffad8309a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08050015-e41a-46d2-bea9-31bfd107ecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f0395c-d995-4292-a823-8df665a4866b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ada17a-b2e1-447f-92ba-d91d8bc6d003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee21156-3209-4535-b834-f5991d98ca83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3657b0-1afd-4748-98e2-bc25ecef1b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4939336c-9ca0-4fa9-b713-759154f1f4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d889911e-df2c-4f8b-a149-a1613de23c6c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ba2df-0ab0-4de1-960a-581341631919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec02864-7899-45bc-9357-8234747609cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb67f88-bfe9-4d14-8c20-ee16b6124c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011ad2ee-535d-4b73-b967-8661a0b7415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e08c20-d902-4626-ab32-d03648bb0b23",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805788dd-8d73-47f6-af05-07ba84e1753c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54f4c3c-9217-4fc8-a9d5-cee6c62722ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ff8b68-7b1d-4bdc-9146-0abe63962db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853fd9f0-0885-4f68-93f5-dd08bb4393d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a667ad-1ab5-4810-8c4f-ee7956bee392",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87516c3e-0c9d-4df3-9787-01fc1b8e22a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58500fd-581c-4dda-8509-cec802775e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ba4f57-db2a-4370-b4c1-b5ff9169d228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489fbbfd-30c4-44f0-90d9-a171d60b6295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd58ed92-6260-4844-a6a8-35138c4eb1fe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a8269a-84fa-4b7c-bc1d-4b1861cce806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aed673-94be-449b-91d3-c8d8a5be7012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c2a726-925e-4ebf-bab2-6b4ffdf8e310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b865ca-3edd-4a88-998e-78432bff5fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71ae44-7230-4d16-98fa-67dd08731e8b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6285da-d011-4841-8750-767591bc70f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f904ac-acd2-4e62-a782-081e664de6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12993a5-e398-49dd-8b6e-9f05ec0fa81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd45e46-68ad-43d2-916f-017fb9cdbb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5927a769-f6ff-4816-bca6-dad53c24d904",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6803fc-3b2c-453b-bd88-8126ab3d36ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6166c55-1aba-4e8c-8ad9-80a0e9b9c6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c676bbde-1aa1-461b-bc65-888210812b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b22701-2f6d-41f4-9959-9b76edbc92ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a37891-b6ec-4ed6-8e67-39a0e343eee5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e846da9f-af16-4015-86c5-6daade1551a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95336bb4-f4f7-4545-83e2-9c393c8cd789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b2bf1c-a77c-4d7f-bd5d-8048e8617d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fce74bb-8490-4bf5-bccf-21e5ba370198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb772e4c-1e52-45f0-b658-f5d5d3f66ff2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8ccdce-612f-4333-8829-5681ab68334c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82654d76-5a23-4618-9ca6-12d2d843a91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ba0be5-2028-402d-89dd-7f41e1861834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7366f427-137e-4f5e-b778-ae3389c7a044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76e5488-8fd0-4b90-9547-abb48ca99952",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50947e-17e0-456a-85e0-b3d6298593c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac3a465-a576-4a95-9139-d452da0b12d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beea2a63-bcfa-4f0e-ac2c-b5b8aa286bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48181fc-fbd3-4888-8d33-4c1d46a130d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9493d76-a468-4fbf-81cb-a850dd7a1050",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec75238-3094-4d6f-ab1a-cd212ba82e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930f9693-ec33-4d66-b95b-ccf64508bb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd76723-2eb0-4156-835a-f1cd16c31909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e9f230-7ac1-486c-8e21-f26220d5e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113f233-85fc-44de-b77b-8d93c9f82958",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a10fcdb-ff58-41a4-b7f4-c11250806bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446c0899-1609-44b4-ad79-2c8be160abe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce7cacd-844e-4e7b-938b-43d9de9a173f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903c5a73-bc85-4245-9522-314fc1249372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d6b64-0bab-4b4f-888d-be17427f533e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70eef4d-35ef-47b9-bb10-d46f3d297bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15be0d68-0be6-4400-82d4-01b7e8339311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca25404-b1ad-49f4-a8ba-1628e0585b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1370471-3c31-4aac-8b86-f5f579c216d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a7bcb-5859-4e4a-bb41-2aae6f59b80c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30426042-9129-4d5a-8ae3-9fa2c25dc0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca66bd08-3b9e-4760-9497-773c44d3756c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca2af52-467c-4afc-91f8-4edf589a233e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d724388-b877-4d01-9777-add921564476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7462b46b-550e-4583-aca4-55f5d29ed658",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cf6cf2-bcc1-4a1c-ae75-cb18fc666187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaad24e-173d-4982-bfe3-829304b864b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb395603-9726-4c66-960e-391407731af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1135453f-187c-48de-b480-ff6246f97414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0f3f42-8efb-4b4b-b678-e823a19332ab",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd66ec50-d817-4579-bfb0-320125071664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e802228-6b6c-400a-b1fa-af6c4bd8e839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64a8f8c-27d7-492d-a98b-8af8baf792c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6283d806-ea8b-467a-882c-a1f60f8d4cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8282b3c7-d520-432b-bb87-451484fd80b5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868ef549-4805-4ce0-b659-12084c4893a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6a4b35-23d8-48a4-9342-360418e26bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9084861b-5b4c-4691-adfd-2605d5296aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13f95c9-5b00-492e-8e98-37d0ad592d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db11bc2-8f65-4930-aa9c-d4216199cad9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfb0539-db40-41c9-9d7c-9d8e32800922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed760974-9ea1-4c8d-8f79-6f8fe4c3eba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae976906-f14e-4fa2-bb73-cd1f083a04f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8d1c9c-277a-4e56-b0fb-de60089a6239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbd3960-f113-41d5-9e4b-314ccfc0de48",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ba2e96-f386-4820-93fb-314b3bf54c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c903a64-0073-486f-bf26-453952f1a473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d522c36c-cae1-4f01-8244-53cd976c2a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9208d9-e532-4922-a3e6-cf60900a05ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d89bd84-eed6-4b0b-91bb-0123aaec2435",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a35f9a-1c6c-4634-9e56-34d70bb5ad22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae45e3cd-b4e0-41e4-8d73-dfa3d6b38cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c79459-0007-4dbf-8c82-1c1bc614895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1e22df-07dd-45f8-b5bb-d96d2eae9d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcb8d82-a41c-456d-8460-2e7dbb19c660",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b29b7b-b5b7-4ec4-92dc-8e37bcdd5219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ecc663-fc32-4858-82df-5cae4ed17fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec15a82-d38d-45fe-ba6f-7909098a5392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40290ba-05e9-4f94-b88f-2d93d9e7ceec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d486f4-c5a7-4e2a-aa28-5c941e6161d9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54740f6c-e23f-4823-8c18-24689c65ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9729f448-9d4e-4e87-8a79-db962288023b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f6817d-9e6a-44a0-8b4b-3d7c1e8d2455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dd4a6c-75f4-4421-a517-c146b6684229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1565fdbc-d84a-4bcd-a3cd-9c48250b70d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c6999d-57e5-414c-a875-cb6b05f6b4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b80af3-9ef7-4aff-84d9-7fb3c630ce80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af05de2c-b420-4148-a363-4a0edd253cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2edb555-c526-4693-96d4-e67b7da2d1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f53f9d1-4a35-42e1-a36d-edae25b4e9c5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443608aa-7daf-4ae6-8990-4e9d81819645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9676a2c5-fa25-4c05-9ab1-964c21fdf2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0967d70-f063-459b-9822-4a2173854491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45a4dab-7297-4caa-b1dd-75ce085a2561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de9c17b-0b9b-4822-90bc-dfdd12121cb4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbe4929-3aa1-4d16-afd4-c87e3bf08ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ba7c76-c89f-4494-8848-9d456c290c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5637a0a9-fa0d-4f7e-8441-5a770cf5c423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad89012-925e-4db9-a0c4-315564a463e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d336435a-5b11-48a4-acc8-d14bfca21bb9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dfec14-31d1-4d1f-8a5e-58c3a9e98044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d46d1e-ab0f-46d7-b5f0-2a19837a74b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a17fdd-4bc4-4ef8-b72c-d2ed8f412f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f44248-ec13-4c2f-87aa-8a2c5fd54e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db09351-8f01-4e47-8dea-4324c36fd213",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f24b56-f3c2-4446-9867-66e7eb57395a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b347a64c-c201-41a9-b42b-e01297a54c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54137006-1994-4d54-ac47-31f897ab0537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5426a4-f9ad-4aa8-8305-be8a5a2e71cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e234dd3-887b-40c1-83fc-186b87a284a9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ee45a9-a59a-4622-acfe-bf881ef1d588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6781ac20-825c-4696-9684-0fe899c45419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62785586-82fc-4f3d-8262-446cd8b97274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed60085-7c8f-499d-a168-c4d4ecc59207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd7a66a-3a83-45fb-aadc-af4c8d3b2051",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fbcf3d-0ead-425f-a403-d010a585063e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8c0efa-3117-486f-8030-9e94b267b7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38475fc-75ea-491e-ac21-1f5b59d73dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511d5689-cccb-4925-b302-ef2308fe0988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba6e48f-929d-40cd-923c-c6ef7bbb5923",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70059345-825a-415d-91bc-0d569d0dbec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6c3907-bf14-4299-ab61-01eb5f1c2f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f838ba5b-4d71-4afb-a4bb-4fc5ca441619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63379c3f-cc9f-485c-800b-cd3fa9581e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f591823-285f-4656-80f1-82579eaf9253",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4799e895-c1c7-483e-8092-0846b0b94f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "010dcf88-8620-4e52-93c6-e6a6f981c026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ba03d4-3ee6-40aa-83ea-230ce8a69a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfa26b9-16ff-4c5b-8803-5f2dd78b3ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3275ecfb-4471-48ea-a0ee-85782f31cacf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fd0783-7d6d-49d2-8c63-3f5638f0678f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c6ccc9-8e9b-4bdd-8d4d-9e1f781c8cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3356b-0103-480b-9bb5-6349ae4ebbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9c6ac1-0eca-48b1-9b5e-5c694d367924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5c0417-8f72-4837-a759-aba3202dc06c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5bbf65-774a-4c12-8762-5517e05fb1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857b31a8-02ee-42aa-818d-b22e1c77e0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fb3187-faca-4988-9f6b-b71f1f1620be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22912792-eb28-48fb-85d6-7e1f2d3cbc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ff471d-db3e-4494-ba86-54ad8022f913",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4cf765-8359-415f-a98c-1e59dd88c186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c17c4e-b022-4115-8ed8-0054fc46ee9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6172ebbe-b963-4d36-b423-ca19d6c0940c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c48261e-f019-4d27-84df-aeef1a1526de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571a956b-8562-42e3-ae0b-b48164d27321",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbb9ff7-3d32-4314-bca9-41631e3f2462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bf71c2-d2fa-4e8e-8beb-3c7b8261cc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988d1264-8682-4f2b-ac3e-2f62a2d2b3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fd5c3a-cdec-4558-8d41-2775a4241b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67941b9e-4792-4a99-a5e5-812503fa2880",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41c7da0-0c1b-417c-99ef-d4fb5d12dc06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c5b628-c83e-4316-a2c8-a743903dc204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30136f04-2755-436b-b973-f7eeea9a7ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bb1a38-9664-4bd0-bf9d-2ff07f59ae08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f2566-125f-4b41-aef5-fda883bd3832",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ba073-e10d-4b05-81d8-451edda58ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd74f77-90e4-49d2-aca3-4fd0b5d41182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a358b-7b0e-4e82-a848-70b31bb2f45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c10e4c-35a4-4ce7-96d2-20fda556bf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716ced49-ad70-4de2-bd0c-c3b3ae2787ad",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762ce6d1-245c-43a4-9a34-83032bff0300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1db808d-ef0a-4c2c-8f4f-59017e1f2b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f396734-c7e4-4a47-9039-320b35837247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c0141c-3ef0-4e9b-9382-d7e4de273741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d356d3-f417-4231-8abe-31e5d5a33f40",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8579852f-1c58-482c-98ce-7a4d79b7eb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47d81de-d8d6-472a-9861-dd55281de720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe167276-0b5c-4e48-bac9-2c8fd08a2a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020e4a0e-fb19-4df3-8d72-a0b8775ffadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ea5b24-bfd0-4805-89d3-b328b4a05b3a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9524c1-c1d7-4c1d-9402-d57bf74d041b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc4a516-ef8a-4df4-b5dc-b5a01f004eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cb7c3d-2502-4765-92ae-ec659cf627da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f7b97d-41d8-4b89-9dce-1dea93a14c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8154826-cc5e-4d5c-b64d-af57e447d971",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6f4ef6-6a6a-4cf0-b1b4-0332e82cfe89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb6d8e6-057e-45bc-8978-2aeac1196da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c5526d-eb0d-4313-8a11-ab892f861110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c315b6e8-ae89-45d6-8fbb-5f4d95620fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a26222b-4f7f-4651-8a14-dd86e9c989aa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f222ea90-e751-48dc-83e2-02ad93ea0d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b20f591-5997-4f3c-b609-674f606fbcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77a131d-12d1-4c26-95fb-8094d603e260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3679f732-a582-467c-abba-590667a0b04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0effba8e-3e79-4be3-8f43-6f2a489c53fd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffec910-ab47-47bc-889c-4d7e1e6a0c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ade784-2459-47db-bfa5-b03a2ef7cd31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a87cc2-4356-4620-aca4-a313f5b85df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fdc6ef-93b7-4f75-96bc-2eb2372dab57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e505aef-98d2-4d77-978b-efdc0b0dc59f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281c2797-25b7-4df4-91c2-7892058b4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a276251-c5bd-4fea-9a86-ec2d0c9273f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e69525-7775-48b3-957c-e4ee1c511271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352c77b6-0603-4b3c-838e-519498d190ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ace9f6e-e801-442c-8b54-81ba7264c1c8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e5bcde-1cc9-4698-a08e-9ab64cef357e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7db7ca-63a6-4d30-bcea-3dfbd40f3152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561ddb89-979f-4f00-b047-e9b479223fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b11ab5-a66d-481b-b543-99348ebb1883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab6ce08-66d7-47b1-9f67-be8d05a6c883",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23efc33f-8376-4006-8b76-3be0664ad8f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df162ba0-ea26-442e-826d-a317dfb1a685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b9f2f8-f5b4-4ac8-9775-3f814f8cb3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e789f50-e01d-414a-9355-c3849669808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9eb0a7-109f-470e-b41a-a77c2d0a06cd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb55ee6-01cf-46ac-8749-ea9aafff0d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b44bc79-ee7a-4738-ae6b-5a2c5980747c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf05f4b-84ff-4a15-97a8-1d748c77c5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717994f8-f3e2-4cd3-88b9-444afb0e83c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236bfde1-f0ad-4b7c-91a2-234685214247",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3777134a-e807-49fe-b1f2-4dcd855ceb46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a712bed-3b10-44bc-a4e8-9ad581df1684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ae8f7-05fc-49cf-b7de-1290468a2527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e65a4f2-eaa4-49fd-95ef-ffd560302813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8ea05e-ca38-4fea-8e7d-33258ecd89ff",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e289e30-4aaf-4eab-85d0-8508c508973c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aec8371-7b6b-493e-9fcc-e40a505c8673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2f9480-e179-4b43-8161-c62b987048b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c808b05d-14ac-47ce-b179-00565173b2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c516d9-b944-4b31-a1c9-12675953beb5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f02ec0-05e5-49c9-b0e3-0d2658b6ae66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1de0cf-5906-4680-b7b8-1817092dd36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2bf030-ba01-418b-b5ad-9c46a1e56b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8033f4c-bee4-4935-8da2-823d6deaf738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66ebea5-76b2-4ae5-9793-fabb19431842",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d33dd75-e186-472f-ae52-3afdeabc502c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6cf759-076a-4d88-8d79-bdb2244bb993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6981c32d-a08f-414b-aa89-395279af65a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0af2bc-6b06-441c-9a01-f1fbd976183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4891fc3-7b03-44cf-82f9-a81638995aec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db81c92-0599-45d2-b37e-af3e3789a023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372656cc-0f8a-4670-9413-8dae698ec1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd79c8fb-4a5e-412c-9366-b3d37d1fb3e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd09c49-c157-408c-9cca-f66640dce07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edf10c3-2dad-42cb-9975-316c1bd88b91",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a110128-8483-4420-861f-485990e890aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca6a18d-367d-4296-a263-2438beafd8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17250dbf-9c64-4b43-ae1e-32e34770b3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f0a5c4-a3ad-46e9-9b58-34b93313a79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660a728b-9d4e-4ce1-b0c3-b7fdc6147d88",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ddefcb-4292-404e-8b04-7f100ed2a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d042da20-9ddd-4e3d-b0f1-36e3354fa660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cffcde-f592-4e14-8509-c2ebaa7a8f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d7b82e-3482-413d-9997-c227606ae568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbae5d1f-b3ca-495f-967c-9a91f9d1b18d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f03192d-9ce3-4b7d-b991-abc346a413d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e135f93-85d0-4607-a0f5-5d31d2289d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb344ef-ec61-43f1-adca-967bdbae843f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a001b0-5d04-40d4-bb19-abf37c9e53da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c519fedb-108c-44b2-a3b0-1403b307f6dc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008a45ed-c40a-46fc-9509-21624f44c036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae2d8e6-1d7c-485b-89f0-3a4e10273978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2528fb-2edf-4e3e-9f2e-6e9f87ab619a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b1bd01-ca64-465e-8b55-4a63765a41d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539b3a7-17d9-49d3-85c8-e480af92f523",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b05eeb-67c7-4592-b951-0f5779a7cdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c7e8d6-4daa-41bf-a318-cef476c65375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3b3cc-1ecc-40b7-aeff-dbcbd30c2c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f16601-510e-4a30-aefa-195f9ccf6da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba30006-f12e-402b-9697-aafc3a201996",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4313806d-fd52-4cb7-bd86-3c139fc35548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e009bf7a-d121-459f-b812-b4a2b3766427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482dba28-1a6b-4060-b118-d3379547c035",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab71faff-4e47-4db6-bae8-d70de15e58c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453742ad-0865-40fa-9d4f-c39888648fd1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fced174d-f459-4bbb-921f-5c031e414c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885fb1d8-1e3e-4bdf-8c8c-7f702b9b3183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3be1288-c49a-4a5d-a019-395ec5887ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963d13b9-c1fa-4cfb-b0b3-2ecf67b68b0c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eba185f-a795-442d-9eab-7ea336576633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea53923d-d5b1-47ac-a0c7-899a583cfba5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35d1752e-5abf-46c4-ba39-47cccc90506a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a038968-fb9b-4c1b-b2c4-98a2edb4dc31"
                    }
                  }
                ]
              },
              {
                "id": "9fc8857f-0eaa-460b-8582-65107c389be4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cce00637-98f4-4af4-beea-1210de96f5be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5939e52d-a9a7-4837-9d07-7f59b7c38260",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "36b6433d-b7a2-49dc-b4aa-a61f0d2728a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054365ee-9af3-48e6-8301-6a8c31ec5cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4247a6f0-5c98-46ea-b59b-ad92da6f311f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ca7149-a378-48b7-bb80-6dc8d327d9fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffab9d4b-e6ea-4c33-8a25-469a81bfa8ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "707e398a-c461-4518-ba2c-ff5b816fd25b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7646ddf0-008f-46ea-93a6-c760a8b61575"
                    }
                  }
                ]
              },
              {
                "id": "9f53785f-3de9-4239-aa1f-a9a111cb77f9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b2ce6353-6498-451a-9099-dd4cecb9d822",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da029e25-b081-4a9a-95e1-3e5646b9c71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0e0ca581-fed1-4ff5-a721-d7959ccde202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485fb69a-b12d-4be4-9113-fb820625fa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f86e9e5-c5e3-428a-9e91-c6ac5613d33d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "761000cc-4893-472b-af0e-3e87c7bfce8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcc73ef0-eaae-4403-822c-8107bfb4fefe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e79a3ad-2213-4759-ac35-8b9e59bc3bf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19b7a6d8-9d1f-4bd8-9c73-7f2e2541bffd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6f333ac-3618-4eda-8faa-aa7bda49411a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86ba863a-e3ca-4c86-a83c-bb2109327d80"
                    }
                  }
                ]
              },
              {
                "id": "99137086-0355-485f-883d-4f82d7a56e0c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3ed6940-f6a8-43e3-a7da-4f31e80cd646",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b975402a-ed7f-4138-9d47-a416aa3b697f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cbbf893-f581-44d6-b903-c65269cd24c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ff5827a-78f7-4ffe-b97f-e818d4911510"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d785375-f667-423e-b2d4-62805035b6cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "542629a8-5153-42a5-b509-1901c0b4895e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2be6e011-b697-4991-8e1e-0efa7de18714",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4575d5f6-fe31-4bfc-b218-6863c7226dcc"
            }
          }
        ]
      },
      {
        "id": "43500d79-c534-429b-b347-dce33276c214",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b30b33a9-e4ec-4ce8-91dd-6942c92da899",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a92d5ea-eaf6-4bd2-b63a-34733f56ce36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dbf1572-2b74-45f6-8ce4-b8c92b4bad44",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebccd487-261c-40e0-badf-efe208914cd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f8be1d89-df65-4403-9103-57d4771e5695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2cc728-9766-49fb-9ab5-f82c6572a5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad33abd0-02a9-4e25-9f60-e85fd87816e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02cb17fa-ff7e-41bc-a70a-4bfdce6c7b49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09b14c73-6533-4515-8b54-b0998aaf7417"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f068a93-573d-4fb6-95f0-3ab8c8d235e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "851ee576-306b-4d67-ab92-eb34be45b87a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5348da9c-b67a-4b80-b837-6b67550c0d1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7e9c1ebb-2ece-4476-a573-6601be0ffe5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6085e944-090c-441f-8312-bef548801dcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c8e5b77-c730-4c93-aff1-509269cdff3a"
            }
          }
        ]
      },
      {
        "id": "bdbcd996-c8ea-4c37-90f0-e410c41f1d23",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "23195840-63cf-42e7-b63b-b822bd98142f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80944b0c-11cb-4f75-8d41-e8b8b8f0261a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f3d500-e3ef-4170-98a2-738345de3e48",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4204d964-d4f9-4c44-b69e-c5b958c15ba9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8db8a7-9d44-491d-9169-a8a67ebbf233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab38cd2b-9a96-4a42-990d-34926dd02a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95eeb0d5-e5cd-4fa3-9a8f-cbc514e4c6b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03ad4ebe-1520-4608-8d2c-c4d1b2bc1fb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dc60308-d499-4f50-affb-0d2f5c307256"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c2ff344-ccc6-4108-8afc-5bf76acc0da4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cae543a1-614e-4489-a15b-b973bab08e8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afb91472-3c70-4442-a139-7299d9892287",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc6ea4ad-7258-4f6d-9c15-3dcc22050f1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79aee0b0-88f3-4f04-93c9-f76fcec5449f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac7b3b04-e7ff-44df-a9ac-bc1b5d99ceeb"
            }
          }
        ]
      },
      {
        "id": "a60e63e8-0569-44f7-a99d-3be66ed025e3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "26c20582-e357-4e37-95a3-3a682b95c0de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5210c3c5-4520-4fd4-a068-9c6164814a02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eeb83ae-3b29-43ed-a9c1-e3ec9467ac1a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc4ae4e-98ef-48eb-80c2-fa0d7919fc51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01b79084-e62e-4945-840e-ef11040033c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be87db3-027c-46c1-b34d-0bdbd173edb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f38cd6e6-ba95-4eba-9f65-673a296b6300"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41b0be6f-9a26-463d-a70a-867279a6b33f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "babd9aa4-f77a-47f9-918f-8966be0d9e58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f1caa6-823b-4832-b6be-b9c13a21724c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "540b38e3-1c65-44d1-851f-5f74961cc583"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d8f0f9b-3d0a-4a25-8956-a72b0465f5a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc4f22ea-fdd5-40a1-871b-cb2e68f3e10f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6987e41-58ff-4206-94c7-efe82218c4b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90a5ec3d-e4dc-46bc-b673-7783db5d5660"
            }
          }
        ]
      },
      {
        "id": "585e2feb-8056-4702-bb38-49e0a226baa3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e20bfd3-852e-41fa-8798-4a14edf4c249",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4aff523b-ed6f-4326-9fd5-181c1862a239",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c3792381-cb8c-47a9-af3f-5641044c6244",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9555d61-628f-45be-b1fb-20ba2217f1f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08b811f1-5cb9-4fce-a92c-51c39ccee6fb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 664.8849206349208,
      "responseMin": 13,
      "responseMax": 21617,
      "responseSd": 3251.0071550937896,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726533372119,
      "completed": 1726533548089
    },
    "executions": [
      {
        "id": "aa803896-e0ad-4708-a06e-428d408aa836",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c0fc0564-7a8c-4e3c-84e7-6300bb96d2a2",
          "httpRequestId": "eb53966c-1758-49da-875d-d7aa92b0f170"
        },
        "item": {
          "id": "aa803896-e0ad-4708-a06e-428d408aa836",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8acdbe79-8410-48c8-ab64-527d69cccf60",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "3c859fb1-00f5-4f8c-8de8-f08737bb577b",
        "cursor": {
          "ref": "01fd1e69-8878-4e28-a640-e8fa485aeeb7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "13da7136-f34f-4cb5-89a2-b095691176ba"
        },
        "item": {
          "id": "3c859fb1-00f5-4f8c-8de8-f08737bb577b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "38b48cbc-ee0f-49f4-90a7-76e63ab44d4e",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "e255d064-4739-4d55-9df3-b25eb19c82ae",
        "cursor": {
          "ref": "81f596fe-07c2-4750-a98e-77efbb8477d1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1cf0a423-b0b7-47eb-a2f8-0c2208ce986a"
        },
        "item": {
          "id": "e255d064-4739-4d55-9df3-b25eb19c82ae",
          "name": "did_json"
        },
        "response": {
          "id": "5b3ffa5a-c160-4aee-a1f5-1a291baf32db",
          "status": "OK",
          "code": 200,
          "responseTime": 430,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e1aded-c422-4d67-a39e-c64920330764",
        "cursor": {
          "ref": "8830e736-eb8b-4385-87e8-ef3379363b2a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8c302b8-d0c2-4ea6-8c02-70c9575d40a1"
        },
        "item": {
          "id": "e0e1aded-c422-4d67-a39e-c64920330764",
          "name": "did:invalid"
        },
        "response": {
          "id": "245136fd-b88f-4135-81e3-6f05cb48015f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2559,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e1aded-c422-4d67-a39e-c64920330764",
        "cursor": {
          "ref": "8830e736-eb8b-4385-87e8-ef3379363b2a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8c302b8-d0c2-4ea6-8c02-70c9575d40a1"
        },
        "item": {
          "id": "e0e1aded-c422-4d67-a39e-c64920330764",
          "name": "did:invalid"
        },
        "response": {
          "id": "245136fd-b88f-4135-81e3-6f05cb48015f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2559,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35092846-4a20-40be-b8e0-34f84b5018fb",
        "cursor": {
          "ref": "86889e51-99bc-4d57-b17b-32ba3065da6e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "83177dfb-93e4-4c5d-8d58-7058f12cd582"
        },
        "item": {
          "id": "35092846-4a20-40be-b8e0-34f84b5018fb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "016924b6-67ce-4109-ad5b-a5bb9000b915",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3168,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab2ede3-57c2-4996-84bf-bf2544ec3794",
        "cursor": {
          "ref": "cc5282a0-14d8-4de8-9dc9-860273081671",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f1c3ab20-17b6-4494-b170-e414ea6e0d64"
        },
        "item": {
          "id": "9ab2ede3-57c2-4996-84bf-bf2544ec3794",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "24137b3a-d6ad-4b93-b399-85e457b3fdfc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2163,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4cee76-0145-445c-8947-b4ad823d7e6a",
        "cursor": {
          "ref": "05f35853-c92d-43ad-8ceb-e92d7f278bf5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d47d12f3-3a79-4d52-a8a2-985a13c7081d"
        },
        "item": {
          "id": "7a4cee76-0145-445c-8947-b4ad823d7e6a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ef60cfc1-7127-485b-a91c-3e4b678dce55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e64e2e-5285-4330-922c-0e0f9e7ea424",
        "cursor": {
          "ref": "21f97a27-02d1-4e96-9eaf-3987e8747fa5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b60b9b5f-d1db-4e29-b3da-0d83c84bb401"
        },
        "item": {
          "id": "01e64e2e-5285-4330-922c-0e0f9e7ea424",
          "name": "identifiers"
        },
        "response": {
          "id": "9d185a8e-2715-4fd1-96a3-3d38990b9670",
          "status": "OK",
          "code": 200,
          "responseTime": 2309,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2815ac-66b8-4753-92fd-08ebaec9942e",
        "cursor": {
          "ref": "6de20b1a-fac4-4557-8a81-d47313d682f9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4ec1f375-192a-45fd-9a35-82a912e87901"
        },
        "item": {
          "id": "eb2815ac-66b8-4753-92fd-08ebaec9942e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee5359f1-522d-4a45-bb82-c3172ea8da9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b3856-907c-47a4-8810-7db8367c450b",
        "cursor": {
          "ref": "e35a4dfb-9130-43da-97d4-ec693bda03a8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d1ac2b1d-8926-4d1d-bd65-c507436644a5"
        },
        "item": {
          "id": "031b3856-907c-47a4-8810-7db8367c450b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2504eff9-f1e5-47d4-b428-5050ab1ae8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27056bd3-36e8-481b-94e2-080a435ae4f5",
        "cursor": {
          "ref": "8e84a30a-aa81-4eab-bdc2-27647a2910e6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1e004bcf-4d84-437b-b87e-d15f207b89d8"
        },
        "item": {
          "id": "27056bd3-36e8-481b-94e2-080a435ae4f5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0c63f2ec-e73b-43e7-a884-d068344b4c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff97dec-af46-4175-b8ea-c37e48265607",
        "cursor": {
          "ref": "441de89b-16b0-4316-9f0b-dc5d0cd45e0a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "61430699-8ca9-422e-9dc3-5a8898c2ae41"
        },
        "item": {
          "id": "3ff97dec-af46-4175-b8ea-c37e48265607",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ecfe04c6-bfd1-427f-8d49-2d391a5a0ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825b5d4b-34a0-4cb9-b3d0-e30901c0fffc",
        "cursor": {
          "ref": "92bc9e8a-a8a4-41ee-a544-0aaf1b2b9718",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b40c39b3-6249-4c9c-90c4-fb7c1b3a8e22"
        },
        "item": {
          "id": "825b5d4b-34a0-4cb9-b3d0-e30901c0fffc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ee413919-d646-49e8-8181-e32d5f113e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3871101e-3810-4518-87cd-1f989d4a56e3",
        "cursor": {
          "ref": "684ab0d5-1eea-458e-92a5-509f71f68719",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7b3d8da9-c53a-4f34-b295-7db154a176b9"
        },
        "item": {
          "id": "3871101e-3810-4518-87cd-1f989d4a56e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "21932b03-bdbc-4560-8529-159b97ff1750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0755c70-b519-4475-b503-5fdc522fa9b5",
        "cursor": {
          "ref": "fa1283e0-3460-4f93-a457-b4fd5ecdbd67",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "12584ccd-c4d2-4cc6-abc3-3b953125cd92"
        },
        "item": {
          "id": "b0755c70-b519-4475-b503-5fdc522fa9b5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db170da8-3821-4c9f-87e1-c1c60cf5cbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5868f71e-2512-4b91-b871-e0725f0a0b94",
        "cursor": {
          "ref": "8620d6c2-ab1d-49d3-a2c6-998799ae2c62",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a4a7c441-d5e8-48f3-b30e-bc7afa1b1a73"
        },
        "item": {
          "id": "5868f71e-2512-4b91-b871-e0725f0a0b94",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3ea85e92-4a94-49ef-ab44-48a36fbb5a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a894ff0-7d15-42cd-a793-500b3d55428e",
        "cursor": {
          "ref": "fd6d9bb2-70e6-4d88-800b-190479289b47",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a2870f59-dc33-4c40-91f6-29630f393307"
        },
        "item": {
          "id": "6a894ff0-7d15-42cd-a793-500b3d55428e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "06e6e4b8-9c19-4359-87d4-4f32461aaca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be7a2ae-7c52-49a1-b5ba-c8ef78b6aba7",
        "cursor": {
          "ref": "9ce7ecf3-c498-4c6e-8505-88de4b79e975",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bad18fd5-9bdc-456c-badd-0ce83129ce87"
        },
        "item": {
          "id": "6be7a2ae-7c52-49a1-b5ba-c8ef78b6aba7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3c6a947c-eb81-46bd-bffd-1560124c4203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4252951a-dce2-470d-b1ea-ffe87ccf9a24",
        "cursor": {
          "ref": "61411315-4972-40d6-a9f9-06d7799e4d9e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8d13d680-3002-4e8d-b190-724984fbeb7f"
        },
        "item": {
          "id": "4252951a-dce2-470d-b1ea-ffe87ccf9a24",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6b24807b-a173-476d-acb3-5a6d4147a7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f447d883-fb1c-413a-a7ea-c686c1d41345",
        "cursor": {
          "ref": "8ca3bbb5-be43-41b8-b895-c7028f760def",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a7608fa-585d-4f92-96e7-22acdbeab234"
        },
        "item": {
          "id": "f447d883-fb1c-413a-a7ea-c686c1d41345",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9a4c8cf6-f296-499d-8b5c-3a3fa29a798b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6f73d8-3a55-4609-85c5-45401b201243",
        "cursor": {
          "ref": "a55764aa-b6a0-48ca-9d3e-0563f2ac2439",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5827d2af-eff3-4fae-9df5-b74855ad2d9f"
        },
        "item": {
          "id": "be6f73d8-3a55-4609-85c5-45401b201243",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bc1175e5-e0b1-4e56-a6ec-e982aba049e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd5a8d-d911-4eeb-99a1-91c8e31a196d",
        "cursor": {
          "ref": "3d17990d-4fb1-4960-82de-fce6b79f17b0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4fb0eb8b-757e-447f-8635-e2e52ef96862"
        },
        "item": {
          "id": "84bd5a8d-d911-4eeb-99a1-91c8e31a196d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d18fec29-b5ab-4b12-81b5-296766921212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d4598-534d-4581-aca4-02fa147766e5",
        "cursor": {
          "ref": "d66883d9-97a0-470c-9ee0-9e3f8d63597d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f98d4352-a357-484e-a740-85430bd4b5c5"
        },
        "item": {
          "id": "188d4598-534d-4581-aca4-02fa147766e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "27776026-c2bf-42d3-8142-aceb6fb38288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a52e389-5373-419b-a4e9-6adf69ffc84e",
        "cursor": {
          "ref": "c7bedca1-4c5e-44d3-8496-bcbd4f9b5bca",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4152f406-f4c8-4059-bf27-6bf495c793dc"
        },
        "item": {
          "id": "0a52e389-5373-419b-a4e9-6adf69ffc84e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e5d50362-9011-4817-b3d0-9882e36743cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43c22e6-9cee-42a0-b330-ab5d67ff306a",
        "cursor": {
          "ref": "5cb06e37-def5-45c3-8e10-a58c2d4c5cea",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bc9f1995-8c73-4012-aa13-7c6972d1ac0b"
        },
        "item": {
          "id": "a43c22e6-9cee-42a0-b330-ab5d67ff306a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "faa34733-a8a5-42c3-ae06-71cd273be610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77cc3ce-2724-4260-b794-16aea0228c8b",
        "cursor": {
          "ref": "0edc31ac-2d9c-4a2b-b3c0-ebb90c067981",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "661bf655-356b-47d1-aab1-b0cae78f8358"
        },
        "item": {
          "id": "f77cc3ce-2724-4260-b794-16aea0228c8b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "87a162d8-4696-45c4-b355-f42879bba78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaa0f96-1889-41e1-be59-7670da0814a6",
        "cursor": {
          "ref": "278f7d20-d973-441d-9d4f-5ab802466bf4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d0c5b4fd-fdbe-4671-8113-457153a97b9a"
        },
        "item": {
          "id": "7aaa0f96-1889-41e1-be59-7670da0814a6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9c7c54c8-ea98-45bd-80bf-9211556b7a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b919ecd-65c9-4f8e-af1b-53eca300341c",
        "cursor": {
          "ref": "8838839a-b3e6-422e-9283-0112e72f4cb9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "045332c4-6a1b-416b-ac46-0c044091f2a5"
        },
        "item": {
          "id": "6b919ecd-65c9-4f8e-af1b-53eca300341c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ddb1f031-23e6-41da-b002-6f4224e28759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec1dd4-c1e0-4d9c-b76c-1ff3eb83bb0a",
        "cursor": {
          "ref": "c15bee6e-1b2e-437b-99aa-25219d8bba87",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a0b275e-b00a-4516-9ff6-592bdad86883"
        },
        "item": {
          "id": "87ec1dd4-c1e0-4d9c-b76c-1ff3eb83bb0a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3117df5d-2ecd-4c17-9803-168da8fe43af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b677e58-bff8-47cc-919c-3b71a5e67f33",
        "cursor": {
          "ref": "c8b8d57d-47da-4e89-a1a3-76452f1f070b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b4a8ee04-6465-4063-9a2b-a81da4aa8983"
        },
        "item": {
          "id": "5b677e58-bff8-47cc-919c-3b71a5e67f33",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d8576bc6-3b0b-4ca3-8ec7-e5f79a1cb7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeda4b2-22ee-4ac0-9515-d8d56669f4f9",
        "cursor": {
          "ref": "fbdbc914-c1b2-44dc-951f-fd3dfceb4c9e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bd59405b-eefc-418e-93ac-c55974ead2eb"
        },
        "item": {
          "id": "caeda4b2-22ee-4ac0-9515-d8d56669f4f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "91f83c4c-9623-4cad-9a4e-bb755037ab8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e1985f-0626-4cb3-8d59-977df2c376b7",
        "cursor": {
          "ref": "9a58e146-3713-4c61-acb7-deb98ad82da8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "161955a8-9afa-424e-b1b7-aceecff20b0f"
        },
        "item": {
          "id": "58e1985f-0626-4cb3-8d59-977df2c376b7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "23a65d63-d1dd-4adb-b644-85d11342b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091927b9-3bb0-4378-a768-7d06bd629587",
        "cursor": {
          "ref": "ca308090-870d-4313-99b4-82a634f6d957",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f29f019e-c678-4520-a3a4-6cf45ea8e616"
        },
        "item": {
          "id": "091927b9-3bb0-4378-a768-7d06bd629587",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9f6ffa3c-78c8-4eae-a87b-979936321234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9801929-1512-47fb-b94e-2e0d0dcace66",
        "cursor": {
          "ref": "d15b53dd-d8f3-4112-b868-6e22cbe7f0f7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ae67e41-27ea-4103-9d9d-a9f81b681e45"
        },
        "item": {
          "id": "e9801929-1512-47fb-b94e-2e0d0dcace66",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "11a1ed83-f848-46af-b66d-87c560a390c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19df3023-91d4-45a8-8267-0f61a1d942aa",
        "cursor": {
          "ref": "14950d36-ee44-47ac-a3e1-1577d15542df",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8f8c001b-65ac-4f4e-be90-9335afbbce20"
        },
        "item": {
          "id": "19df3023-91d4-45a8-8267-0f61a1d942aa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a2f4032c-77ea-4203-b806-95a00c4fb40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801a1e2e-ef4a-4c56-90e8-5b50bfe8c5e6",
        "cursor": {
          "ref": "a3f3ada6-4fdd-4350-9e94-4a57205a2e70",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "64725bd2-9195-4f5f-a9af-53df87ec3a48"
        },
        "item": {
          "id": "801a1e2e-ef4a-4c56-90e8-5b50bfe8c5e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dc356683-224f-455c-a108-4797d134b775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed516fe-5590-4d4d-bde1-cfd1e5028248",
        "cursor": {
          "ref": "149ea3ae-72ca-427e-9cca-c442000bc2c4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7a6631bd-2089-4b37-a007-70ef9eb65544"
        },
        "item": {
          "id": "6ed516fe-5590-4d4d-bde1-cfd1e5028248",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1b27adfa-9b3b-48a4-a4e4-90a850a4e076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f8652d-1ff9-4ec6-8626-2286df631981",
        "cursor": {
          "ref": "f9664631-bcd4-421f-8d42-637f6816e20e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e1442186-e553-4977-9c96-a5b7dc5d4549"
        },
        "item": {
          "id": "b9f8652d-1ff9-4ec6-8626-2286df631981",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8597e2ba-47b1-4960-a19f-e4cd69840439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443d0531-37de-4da1-b548-3228de1ee124",
        "cursor": {
          "ref": "6ce3a51d-1ff6-460e-8786-15346f201a1b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "44eb80ae-356e-47be-a462-60440532c360"
        },
        "item": {
          "id": "443d0531-37de-4da1-b548-3228de1ee124",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f0b2856f-9eb6-4e55-a217-04d8ed246f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df51f835-51b8-4d16-99a6-a1ecb79b4540",
        "cursor": {
          "ref": "4e7b482f-3ed2-45cf-a67f-46de0e968936",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5ff880f1-a692-4f15-9cef-e0dd687f9dd3"
        },
        "item": {
          "id": "df51f835-51b8-4d16-99a6-a1ecb79b4540",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad6506eb-86cf-4838-9b33-14b37d309ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb8886-8aac-4de8-bc3f-6f6f0c574ae6",
        "cursor": {
          "ref": "b4098205-0021-4899-862e-a312db69d711",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "21056ac8-a1da-4f79-be11-e67727698b51"
        },
        "item": {
          "id": "57fb8886-8aac-4de8-bc3f-6f6f0c574ae6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96ac44c9-4ac8-454f-ad4b-b753aed74115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41829490-5277-465b-bee0-a853a319c43e",
        "cursor": {
          "ref": "65008e32-7404-4b50-9724-4a8a6d7dc449",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b3e32d26-7e6b-401a-8cb0-c862b2ea31c2"
        },
        "item": {
          "id": "41829490-5277-465b-bee0-a853a319c43e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a0765b0-d015-488d-ab63-ed726bfbf5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d5bb14-cdbb-4b34-bed1-e6a0db85269f",
        "cursor": {
          "ref": "d74320e2-057a-4104-94b1-f4dbe456cde0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5890b9d9-7cb9-4995-a439-8baf5a98d58f"
        },
        "item": {
          "id": "e1d5bb14-cdbb-4b34-bed1-e6a0db85269f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "710e8a1b-d64a-4f54-95d0-b87a45f280a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392532da-f7d7-4f91-a85e-68e0d76f37f8",
        "cursor": {
          "ref": "80142390-90b6-4f7e-aab1-ce108b87de61",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29b4dc7f-cc6b-45ef-89d9-d89cbc15a3ed"
        },
        "item": {
          "id": "392532da-f7d7-4f91-a85e-68e0d76f37f8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c499688-f307-4794-8688-93d7fb695949",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604c85ba-2d2f-4103-8587-4a3361f9f56a",
        "cursor": {
          "ref": "4f611741-9415-48e2-8e36-caee690ae37c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "431ff02f-1b13-4293-b337-515d7101be0c"
        },
        "item": {
          "id": "604c85ba-2d2f-4103-8587-4a3361f9f56a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3b56ac41-e476-43ff-bf80-edcd2e5f8578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e30554-3d68-4e96-8aa3-39c85044b92c",
        "cursor": {
          "ref": "8d7fe73c-277e-41dd-b80c-9e17fe2d03f8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3f373014-52b7-47ac-b96b-fab12e3e7fa7"
        },
        "item": {
          "id": "63e30554-3d68-4e96-8aa3-39c85044b92c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f302419d-9c36-49ab-a5ce-ca35c9f5089c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc76e70f-897d-40ec-876d-c0e3f78ea1f7",
        "cursor": {
          "ref": "b1bafe6b-9da6-4f21-bda0-300dc728c43b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9e8d5fee-01b5-4d19-b332-50b471ec3658"
        },
        "item": {
          "id": "cc76e70f-897d-40ec-876d-c0e3f78ea1f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "07c84f8b-1d01-4819-aad6-3b314fea9a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842707b2-27eb-47b6-960f-d23c383fdcf4",
        "cursor": {
          "ref": "3a960433-3313-4e89-9d09-39560cf966f7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d8ca7c03-64c2-4c1b-a2fa-7e4b925e7089"
        },
        "item": {
          "id": "842707b2-27eb-47b6-960f-d23c383fdcf4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f237e24-086f-4e76-a219-d3d5decbe60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeacec10-4295-4c8f-abe6-f6165539280e",
        "cursor": {
          "ref": "b30570de-0250-4bf4-96b2-b5591cc24b3a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f3ae628d-1753-4a4a-8e0d-9f6a04574eca"
        },
        "item": {
          "id": "aeacec10-4295-4c8f-abe6-f6165539280e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8713b04b-3e71-41db-bfb0-61eafff6894a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8d8e87-b194-4bc2-b5fb-302a7d35f3cc",
        "cursor": {
          "ref": "dd0f50a7-5829-49c4-89fa-59da179e6bad",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a2f4e74-6077-4ed7-9474-1e1373bef04a"
        },
        "item": {
          "id": "9b8d8e87-b194-4bc2-b5fb-302a7d35f3cc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "23d65b5e-7467-4148-ad16-90401df5bcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b2fff9-4e65-4300-b7c9-166c82cd6ab9",
        "cursor": {
          "ref": "cd843d92-5da0-4290-95d7-47347fca936f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1711ecb8-808c-485f-84d1-dd3c296d44e4"
        },
        "item": {
          "id": "b0b2fff9-4e65-4300-b7c9-166c82cd6ab9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "32e4d590-925d-47d9-a800-8c4543956939",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c01c94-2ebd-42f5-90c1-b8b47fe15c09",
        "cursor": {
          "ref": "c0ac3d45-b62c-4f9a-8045-63165b48dd41",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "619fb8b9-f9d5-4db6-845b-1bc28e98a5b5"
        },
        "item": {
          "id": "51c01c94-2ebd-42f5-90c1-b8b47fe15c09",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4fc3eb1f-9d00-404b-9902-cb098e139f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb5c155-f8e8-4c74-9b57-4b9c9eaba9da",
        "cursor": {
          "ref": "b05a5238-ffe0-400d-8758-4e5a910c5aa5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "938032c7-b1a0-4d5e-81b0-4ba997fb6886"
        },
        "item": {
          "id": "fbb5c155-f8e8-4c74-9b57-4b9c9eaba9da",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50e4cfae-f6ba-4a7a-8636-b21562a7fb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd2f7dd-dfcf-4e7f-b99f-226b82b1ef7a",
        "cursor": {
          "ref": "6f3028c4-de82-47fc-831b-7d5b88598757",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "77c580a0-2262-4128-9776-e1c87477f3ae"
        },
        "item": {
          "id": "edd2f7dd-dfcf-4e7f-b99f-226b82b1ef7a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "75c06149-7ecd-46df-b85e-d102047848a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facf9bb0-68e5-468b-a536-4b5bac09a230",
        "cursor": {
          "ref": "800c2954-446e-4177-b2ff-35c7bd929cb3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1c210f30-2bf9-4d9a-b246-91013fcb58df"
        },
        "item": {
          "id": "facf9bb0-68e5-468b-a536-4b5bac09a230",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6e9b5d55-2e70-4d97-a74f-83cd1150fce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0fcfa-a3ca-4d58-bfe8-af3f3c44ac96",
        "cursor": {
          "ref": "d8a723cd-735b-4609-8021-44d478f7a92e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6b114a87-8a59-4f54-9c28-20e866838f28"
        },
        "item": {
          "id": "30a0fcfa-a3ca-4d58-bfe8-af3f3c44ac96",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7c90db7-d345-4d3d-940c-9435ba46e4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a2eb11-6fb4-4be5-a0ea-de7b59861c1f",
        "cursor": {
          "ref": "2819991a-d702-47a9-938e-58cc0c106ff9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a5ac7161-4784-4a37-a5b6-b8a186b4b299"
        },
        "item": {
          "id": "79a2eb11-6fb4-4be5-a0ea-de7b59861c1f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f2e46ad1-6e09-475a-b44a-b19b55902f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919c52d5-3c1b-4625-b9ae-9355cc7f378e",
        "cursor": {
          "ref": "d0f7476b-cb82-4d55-826e-d6d9779ffc90",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "823f4cd1-2c0c-44fc-b4ea-2a5f99809e2f"
        },
        "item": {
          "id": "919c52d5-3c1b-4625-b9ae-9355cc7f378e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "681deb91-ce9e-4185-85db-8dc579e7d10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f592909e-d4a0-49c5-9203-169765ff8ead",
        "cursor": {
          "ref": "982825ff-5480-4b6e-beea-a06e170fde1a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "78d03549-95f8-48a0-98a8-0ff306664269"
        },
        "item": {
          "id": "f592909e-d4a0-49c5-9203-169765ff8ead",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "45c2035e-8c51-4ad7-b3e1-f5db53d3decc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81c74f3-408a-4f1c-b375-a8138affcd01",
        "cursor": {
          "ref": "7eaac14d-5fac-4ca8-960d-d57f1b1200bb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ac4859c5-cb9e-4bb3-b5ac-2dc0e8555205"
        },
        "item": {
          "id": "c81c74f3-408a-4f1c-b375-a8138affcd01",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9ff5dcc7-79a4-45b8-9627-38444bd243c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da3312-44d1-4fba-a8d2-34af18f71e3d",
        "cursor": {
          "ref": "533179fc-5e1d-4bf1-8df2-0df1e441ccac",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c24fd416-6ec7-4d0e-85d0-5196f445d328"
        },
        "item": {
          "id": "68da3312-44d1-4fba-a8d2-34af18f71e3d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dd4883fa-f3f3-4195-bdf1-9eb4faf13172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb03e0f8-1ab1-45e0-a298-a0996cb745d8",
        "cursor": {
          "ref": "6d654152-948f-4a6f-a761-4b7cbf233623",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "98226d21-2c4f-48cf-9e12-34c4adf67aaf"
        },
        "item": {
          "id": "fb03e0f8-1ab1-45e0-a298-a0996cb745d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f803681a-ab4e-4743-a476-ac3ce1009b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85270721-7662-4943-9ed5-7c9fd50b8f0b",
        "cursor": {
          "ref": "d93a9aa7-0efc-4793-831a-93252d284e6d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "acbcfad6-5349-4d82-accb-120101f11f71"
        },
        "item": {
          "id": "85270721-7662-4943-9ed5-7c9fd50b8f0b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7a42ab87-be81-4365-9ffd-900591bd541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2082fc15-8c4c-4473-a513-bf8b24e2b3da",
        "cursor": {
          "ref": "ce9bc586-1278-449b-8869-d76911677c2c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c28c3428-cd52-437e-b721-49e3e1068eb6"
        },
        "item": {
          "id": "2082fc15-8c4c-4473-a513-bf8b24e2b3da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4db7a072-150b-4be4-9271-6c9bd00c7e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec731a06-44c5-4d6a-83aa-d6f1e4a33216",
        "cursor": {
          "ref": "3d7057a4-5b96-47f9-86e5-c20a8494416c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "68599189-e815-4aea-be53-1c71f0bcdef4"
        },
        "item": {
          "id": "ec731a06-44c5-4d6a-83aa-d6f1e4a33216",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b2133e39-0d68-4795-9734-0774305250ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a639ee2-8f1d-4514-ab50-1e3a23dd8ad2",
        "cursor": {
          "ref": "32ef2d8a-d6b4-4d7a-8df2-f58a1cb33de5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "80e46df4-7dd2-4161-895c-14a501cad3e7"
        },
        "item": {
          "id": "9a639ee2-8f1d-4514-ab50-1e3a23dd8ad2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "68825ca9-5e5d-4ab8-84e4-b2a06ed161ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cd94cf-400d-4197-854d-453948ff2c95",
        "cursor": {
          "ref": "cfeb5043-1634-4042-8642-5408319dc2b9",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "326aa20c-eb92-4754-a5db-a575fcc6b885"
        },
        "item": {
          "id": "91cd94cf-400d-4197-854d-453948ff2c95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f20fde8c-0063-441e-9ea9-fd1060f7e99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a53d94-83fb-475f-8701-51611d7eee7b",
        "cursor": {
          "ref": "c10b733e-2ffe-4709-9652-16bb0583649b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e2ceb779-5cfe-4c2d-9990-ee4b59ad1b83"
        },
        "item": {
          "id": "42a53d94-83fb-475f-8701-51611d7eee7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "870906df-940c-42a2-940d-d5220dafebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e2979c-2042-40ab-96cb-6fdacbfc8dda",
        "cursor": {
          "ref": "7fa0e4ce-9783-475d-beff-0db5fae00ee7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "661038ce-aeae-4de3-9dcc-3e8523601e62"
        },
        "item": {
          "id": "a9e2979c-2042-40ab-96cb-6fdacbfc8dda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "905062e9-e552-4dec-bfc5-d13973afbda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cdf8b1-89e6-424c-aec7-2e7d8d3de3ff",
        "cursor": {
          "ref": "1f0e3ef8-bda9-4043-9398-809e65d44f02",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "85bd6b17-6cd0-405f-9aed-f5d79162f37e"
        },
        "item": {
          "id": "01cdf8b1-89e6-424c-aec7-2e7d8d3de3ff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ac44bd4a-be67-4013-a40b-31eacb171b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560a00c6-f4ff-4c12-9272-50dda420af63",
        "cursor": {
          "ref": "777e2fc0-6329-4941-87d9-1afe4887754d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96d8cbcb-9a1f-48d0-ac4a-b186479300c7"
        },
        "item": {
          "id": "560a00c6-f4ff-4c12-9272-50dda420af63",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7e81e857-6532-423d-986f-25ae0be3c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac363cd7-b13a-4bf4-9c8f-f56e209f51c9",
        "cursor": {
          "ref": "946e837f-d739-481d-93c7-e5c54f89f0b9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cfd1aaba-5b08-485e-b103-62cc4bb30f83"
        },
        "item": {
          "id": "ac363cd7-b13a-4bf4-9c8f-f56e209f51c9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bc47e47e-1c72-445a-ac4b-04afb7cd4c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc85a1a0-5475-4f4e-87a9-1f7fb8644864",
        "cursor": {
          "ref": "2d36dcfe-0285-44cc-95d5-e3f47b3a5c67",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff2593ff-6aea-4efc-9d1a-ca0861f519fa"
        },
        "item": {
          "id": "fc85a1a0-5475-4f4e-87a9-1f7fb8644864",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e6eaaeaa-4ba7-41c7-bece-79816c657d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57ddfa7-2c55-4251-a42b-63ae0ce6d796",
        "cursor": {
          "ref": "41005b1e-3fb2-488a-a737-4b46cd31e6ab",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "01da34cc-5ba3-4f48-bb58-a9e0c4f785e9"
        },
        "item": {
          "id": "e57ddfa7-2c55-4251-a42b-63ae0ce6d796",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "59025273-5ac9-4ba7-98f3-efcf6acd8587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb44ab82-4f66-4d6d-acfe-ee197bed3b67",
        "cursor": {
          "ref": "2593f96b-3d46-41b7-a9eb-44c7938c47f7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "87c3639c-cf5c-41eb-a8e1-90c460ad27ea"
        },
        "item": {
          "id": "eb44ab82-4f66-4d6d-acfe-ee197bed3b67",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0fbd1e6b-3fc0-4578-af9d-b82fdcfee764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c1d63c-de2f-49b1-9919-05de1cf10a70",
        "cursor": {
          "ref": "14011c96-dbca-4f69-9159-06a6b0fd0889",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ce92d58f-1e63-4ab2-854c-2f2f3759f0b8"
        },
        "item": {
          "id": "13c1d63c-de2f-49b1-9919-05de1cf10a70",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a5b79fa2-08bb-4b13-b8cc-d96673286d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28c84d6-1be5-4f98-9b98-9d59dfb6f0cb",
        "cursor": {
          "ref": "320cc0f9-77de-4bb3-ab92-61cdbd94171c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4fd91038-a323-4a95-a4a5-7c3f16bf3cf8"
        },
        "item": {
          "id": "e28c84d6-1be5-4f98-9b98-9d59dfb6f0cb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d9ca608a-40a7-4bc9-9b60-08e982286e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82e47b-15ea-4ec7-872e-98b01ff3f600",
        "cursor": {
          "ref": "e080c3f1-9b49-48f9-b082-a721faed3545",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2379882-ace6-49a6-9d4d-0722c0ba44cd"
        },
        "item": {
          "id": "3e82e47b-15ea-4ec7-872e-98b01ff3f600",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e39a4ebc-f994-4b03-861c-d06d446041ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5318d477-6eac-429e-8500-0964390fb570",
        "cursor": {
          "ref": "ceaecf30-ae33-4b9a-b958-d460b9182fed",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8898fead-21b8-4bac-b4e4-a235955ad7b5"
        },
        "item": {
          "id": "5318d477-6eac-429e-8500-0964390fb570",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a325b20c-247c-4738-82b9-5c709338e74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c9d26f-35fe-44bb-9347-6807e006e17a",
        "cursor": {
          "ref": "f35bdc36-0a86-4b75-a788-269beaaa5b3b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "125d03dd-4c72-4900-be44-3d32e1ea876f"
        },
        "item": {
          "id": "e2c9d26f-35fe-44bb-9347-6807e006e17a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "56bff3b2-b251-4fb9-83cd-78b029fddcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1c6d66-d5d3-4918-b9ff-9fc515e6cf36",
        "cursor": {
          "ref": "6ae174f9-c90e-46cb-a313-5b31a3e84821",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "60fd2144-2711-485b-a132-450bb64cddd8"
        },
        "item": {
          "id": "0b1c6d66-d5d3-4918-b9ff-9fc515e6cf36",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ac49da69-ad76-4baf-9db9-2c0a7bfc3f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6588a6-467d-427f-8378-61964e1f2aa0",
        "cursor": {
          "ref": "5b5627a8-9ac3-4032-b621-2cc8e751fac6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e79f96ba-c65a-4c01-a16a-cf15a7695acc"
        },
        "item": {
          "id": "3d6588a6-467d-427f-8378-61964e1f2aa0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9f2daf5f-6cb6-4119-84c8-1a1f85219652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747257de-4ff3-435e-b2b0-0bc843e87bd8",
        "cursor": {
          "ref": "15f56f84-a513-42b3-adcd-ba1a331960df",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8a44ae76-db49-40c3-a7c0-11ec3ef77680"
        },
        "item": {
          "id": "747257de-4ff3-435e-b2b0-0bc843e87bd8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c63ec93-08aa-441e-81b6-5f8da309c534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628ddd1-3b43-45cd-82c8-04d51f8e91f0",
        "cursor": {
          "ref": "20637818-e483-4a50-95bf-9f5109158fdf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bf24b770-6a44-46e5-803f-f879717d3424"
        },
        "item": {
          "id": "f628ddd1-3b43-45cd-82c8-04d51f8e91f0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8b55115-e550-4b5e-b0a4-9a4cda556f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f21238-5a6e-4f84-81ad-62e9b9f8b2df",
        "cursor": {
          "ref": "949dc842-fd88-45d8-a329-066602aab840",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "86d6013a-99fa-4a77-bf90-11de3d2e94ea"
        },
        "item": {
          "id": "c0f21238-5a6e-4f84-81ad-62e9b9f8b2df",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6f276eb5-80b4-4043-a656-d70e0bedaaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c299c6ce-dd15-4223-80eb-5d00702ea46c",
        "cursor": {
          "ref": "958c027e-8f6f-4938-a66e-a815b3314b3e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54146a08-a5ef-42ee-bbf8-3f9118e56c2f"
        },
        "item": {
          "id": "c299c6ce-dd15-4223-80eb-5d00702ea46c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e90d0d2d-043e-4680-a449-59d9e8c829b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c0fd0f-e816-4d85-b5ab-6a003fb80597",
        "cursor": {
          "ref": "d714eebb-3e6d-4710-bff9-50617a911ea8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "29520ca2-4ca5-4a96-bd21-4ab91b8a5412"
        },
        "item": {
          "id": "b6c0fd0f-e816-4d85-b5ab-6a003fb80597",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "224ecfe9-8089-4d21-8851-34826b35ac7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7be3b60-b2d4-4b5f-9fbe-c38890ce3843",
        "cursor": {
          "ref": "5e4449be-90f4-446b-a8d7-ab85e85893b6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b8211732-cf61-45cd-85c0-bfec7648ec23"
        },
        "item": {
          "id": "d7be3b60-b2d4-4b5f-9fbe-c38890ce3843",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "17db01bd-b239-405f-baa5-b53b138dde0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c43df-ce02-4132-8303-05d0ef34fafa",
        "cursor": {
          "ref": "aebaebe1-84d5-4229-a661-77be0f3183db",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cfccba52-72cc-416a-bc36-35b3e4d47289"
        },
        "item": {
          "id": "6d2c43df-ce02-4132-8303-05d0ef34fafa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "df035217-64c3-4dcf-80bb-407e2c4587a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd03eea-b7e2-4663-81b8-1ef4125f6097",
        "cursor": {
          "ref": "14eccd28-747e-4076-a121-eacf067191b6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7ec3a06b-ac8a-411d-8587-924d7b954b9d"
        },
        "item": {
          "id": "2cd03eea-b7e2-4663-81b8-1ef4125f6097",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e2c0f308-f39d-4cde-ac88-55c02bd646f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a81bc7-7aa3-43dc-88a9-4f3eddfc3a94",
        "cursor": {
          "ref": "dfcb2d2f-8c72-46a6-ba9e-3951d7639153",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1129fb59-e0de-4559-b84c-866a475a1d42"
        },
        "item": {
          "id": "f4a81bc7-7aa3-43dc-88a9-4f3eddfc3a94",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "812836f5-04f7-4c8c-b9d7-08cf34d84ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f977a8-d3f4-4513-b2ea-6ddfce067b43",
        "cursor": {
          "ref": "5186df7f-cb2f-492b-a069-4fc150ac83df",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f717f212-748a-45a5-baff-777c2ceb821a"
        },
        "item": {
          "id": "86f977a8-d3f4-4513-b2ea-6ddfce067b43",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3ebc0cd6-1329-4525-836d-42b358c97841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813bd866-1f16-4b28-96b8-7a9d2e05f605",
        "cursor": {
          "ref": "70829109-67ec-47d4-8a3c-231c603def21",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "85e57564-c46b-4bde-b942-36fd14ac42bf"
        },
        "item": {
          "id": "813bd866-1f16-4b28-96b8-7a9d2e05f605",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d3185412-8e5e-41b0-986e-2d794aad2f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d7bca-2980-4301-b64d-aa7927ecb420",
        "cursor": {
          "ref": "a6b016dd-8cfc-48a4-bfef-a35414ec4b6b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "907da4b9-3575-4a3f-a983-fad700ce86de"
        },
        "item": {
          "id": "ce9d7bca-2980-4301-b64d-aa7927ecb420",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d4bb7b0b-02fd-44ae-8535-37373a377ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712c6dbe-25af-40b2-a93c-2a6b7066fb50",
        "cursor": {
          "ref": "2d5b7f27-9973-48e5-a5c7-d12af9d23824",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e4617cb7-c739-40ae-80f6-f0083cce1cb4"
        },
        "item": {
          "id": "712c6dbe-25af-40b2-a93c-2a6b7066fb50",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cd9a9a0f-b7fd-4717-a4a6-305ad94fc7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7681b7bf-df0c-45cf-b999-a60d2848580e",
        "cursor": {
          "ref": "29014001-f24f-4f0d-8f20-fcc31561de6a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f60c5849-1224-4d25-a79c-872ab7e4f678"
        },
        "item": {
          "id": "7681b7bf-df0c-45cf-b999-a60d2848580e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8f7da031-63e7-45b0-a61e-e8080508c7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629ac5e-a191-49a8-8cc0-31f55b1120be",
        "cursor": {
          "ref": "6c316c22-8271-4ce1-a3c7-fbe105e11cde",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1fb6b9fb-b406-4eb6-a82e-4a4240cc6d99"
        },
        "item": {
          "id": "b629ac5e-a191-49a8-8cc0-31f55b1120be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5415b1a3-da3f-4dd8-ad78-a4d8d9587c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4378ac7-c3d7-4d99-af64-9fe75187053e",
        "cursor": {
          "ref": "14396e0e-2b28-4eae-b3ee-a5fa307b1fdb",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "40b75ad0-804c-4558-8282-bfe4f7499c1c"
        },
        "item": {
          "id": "f4378ac7-c3d7-4d99-af64-9fe75187053e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "249afd74-bf17-4a0b-9f20-6990a6fc9e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2f0f0-3e28-43a5-8943-2a287f69eb20",
        "cursor": {
          "ref": "ee94d491-5c05-45bf-88f6-4e1f192618c6",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "167574b8-c5a5-41c2-aa2e-857685e2b92a"
        },
        "item": {
          "id": "09c2f0f0-3e28-43a5-8943-2a287f69eb20",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a4c81c29-179d-4c3b-8450-a21228e10b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0c02b6-e50d-4def-9632-d23d78e2551e",
        "cursor": {
          "ref": "c2968fdf-087f-4f94-8c21-7d9a04369350",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6d2ca710-b235-4980-a8d7-ce977eff722f"
        },
        "item": {
          "id": "ed0c02b6-e50d-4def-9632-d23d78e2551e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fb531aaf-85f1-468a-a2ab-6c401d333efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f30282-10a7-41c3-89f9-d80452e5352c",
        "cursor": {
          "ref": "90296c6d-9720-46f5-9641-222ff58f8e2b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2a359828-57f7-412b-9b63-985837876d53"
        },
        "item": {
          "id": "15f30282-10a7-41c3-89f9-d80452e5352c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2ef35a83-f6e6-46fb-96d1-763aabe3f9bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39279f02-cc89-42fe-b886-7ca3c9cc3f20",
        "cursor": {
          "ref": "eb4500d4-615a-4837-9b84-10dfd56a40c7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9780a88b-cfed-4bf2-97f3-fba56e8e15c3"
        },
        "item": {
          "id": "39279f02-cc89-42fe-b886-7ca3c9cc3f20",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "372cde10-3e46-433c-b436-1ed00f8c6259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "428138c5-dd60-4727-9373-2c3d3d4ea9a1",
        "cursor": {
          "ref": "1ad39e5f-cfbb-4d89-ad41-0427b8c50752",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9d48df97-1028-48f5-86a2-f6a24752cdbc"
        },
        "item": {
          "id": "428138c5-dd60-4727-9373-2c3d3d4ea9a1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3280fe0c-90f4-4ff5-9ce3-19f3aff167c9",
          "status": "Created",
          "code": 201,
          "responseTime": 21558,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b5b042-9390-45c0-b367-f4dce5a6acd6",
        "cursor": {
          "ref": "b7821bef-19d0-4a7f-baea-c74514c31b9f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "384794d2-80f8-476a-9d0e-06db48c65da3"
        },
        "item": {
          "id": "09b5b042-9390-45c0-b367-f4dce5a6acd6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9a2e9377-7b75-4697-832c-718429f87ffa",
          "status": "Created",
          "code": 201,
          "responseTime": 21594,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e0cd99-ce90-483c-97a7-ae4630bde36f",
        "cursor": {
          "ref": "29ce6324-c72b-4ab7-ac38-c3406b43abe2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b80acd1f-3188-4182-a955-ff5351810bc5"
        },
        "item": {
          "id": "12e0cd99-ce90-483c-97a7-ae4630bde36f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3e0be83a-f6a1-4955-a5d8-916feae69a0e",
          "status": "Created",
          "code": 201,
          "responseTime": 21617,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c725a4eb-e552-4c46-84f8-13d4cffa307d",
        "cursor": {
          "ref": "a1e79d28-7fec-4ab9-b905-9303821c0f50",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc35ddcd-ab37-44b9-bdbb-d8b928d6e4be"
        },
        "item": {
          "id": "c725a4eb-e552-4c46-84f8-13d4cffa307d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a977d17f-dd47-4bce-a2a2-d4692f0f4019",
          "status": "Created",
          "code": 201,
          "responseTime": 21069,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "021c8b60-f051-4b3b-b0f8-907897bc3875",
        "cursor": {
          "ref": "70d2902f-ee69-440b-bb74-c4d9ce334eeb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "888fb593-7e4c-4b18-9674-5bf68f93cd1d"
        },
        "item": {
          "id": "021c8b60-f051-4b3b-b0f8-907897bc3875",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "118a5659-3102-4609-bd85-5d2f60ca2243",
          "status": "Created",
          "code": 201,
          "responseTime": 21088,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-17T00:38:21Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-17T00:38:21Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8915aff9-ec6e-4bc6-a9c5-a81d5051321c",
        "cursor": {
          "ref": "1a13abc4-9b8d-43fd-a578-519a8d043057",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0fe42bd1-c103-43da-a4c8-3d8ba9df6636"
        },
        "item": {
          "id": "8915aff9-ec6e-4bc6-a9c5-a81d5051321c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "82c1b58a-70e1-4bab-a539-eee60a51b847",
          "status": "Created",
          "code": 201,
          "responseTime": 20623,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f7f9ab-bc87-4360-9c4e-326e197dc203",
        "cursor": {
          "ref": "3036c86b-718d-49b2-86fd-8dfb29608f64",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6400f4a4-6bfe-46eb-bd6b-6a6139bab894"
        },
        "item": {
          "id": "21f7f9ab-bc87-4360-9c4e-326e197dc203",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2362a8ab-0ebf-4452-bfc9-4ef6cabad17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08384f3-acf8-4041-b198-fa00f37e2460",
        "cursor": {
          "ref": "f4349fa7-168e-4a77-b725-6eaa2ded8abc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bc926731-82d2-4a49-92e9-cddd9f2542f8"
        },
        "item": {
          "id": "f08384f3-acf8-4041-b198-fa00f37e2460",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "324c1569-db21-48e1-a874-11191554b3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e519620e-ab3a-4ab0-851e-f24bfa7a1047",
        "cursor": {
          "ref": "bc036378-af56-4175-866d-22a9bea16b2c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3f58f841-ad02-4333-826d-e22a046e2b8d"
        },
        "item": {
          "id": "e519620e-ab3a-4ab0-851e-f24bfa7a1047",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8cd4ec00-d3b0-4433-9f8a-60d61f6ed737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810b1756-9894-4367-9fa8-c075515c14e1",
        "cursor": {
          "ref": "79688854-dd26-44e5-904a-cdcee41b5aec",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8c671d8a-eba1-4606-953e-b1a8fa01cd3f"
        },
        "item": {
          "id": "810b1756-9894-4367-9fa8-c075515c14e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3402f7ed-bdb8-4ce3-b761-39c61a57303e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3cbda8-0e54-464e-95a3-822770c01764",
        "cursor": {
          "ref": "73896c41-cd2c-4aa3-bba2-a5d6c39930aa",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cc2a4706-6757-4c24-9717-de8e1015c7cf"
        },
        "item": {
          "id": "3c3cbda8-0e54-464e-95a3-822770c01764",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ed3eb4f-ef5f-4708-92dd-7aa306e4c13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0100eeb-8117-4b80-a481-1552a062383f",
        "cursor": {
          "ref": "5d32d38d-7475-44ca-a5fa-e51227158fbc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e07411f-c57e-430d-a9b0-6fdace1e7a2c"
        },
        "item": {
          "id": "a0100eeb-8117-4b80-a481-1552a062383f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ace03f0c-2160-42e2-91fa-659298fc8a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d656a8-25b0-4170-9a15-087d35d3bfab",
        "cursor": {
          "ref": "30e5a0e8-551d-4e2d-ad5e-179eb440ef9e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd95d301-998c-4b4c-92af-6a68900375d2"
        },
        "item": {
          "id": "79d656a8-25b0-4170-9a15-087d35d3bfab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f62e2695-f354-4f8b-93f1-aaebce794d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479a481a-7faf-4983-935d-40441f7ea058",
        "cursor": {
          "ref": "21f9234d-bb0c-443b-b974-8ff3034105f8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5bbd24cd-465e-436b-b85a-c76637cb3613"
        },
        "item": {
          "id": "479a481a-7faf-4983-935d-40441f7ea058",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "54f249ff-61c3-4f50-9163-e0611597ff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b8dc7a-7572-4885-b788-903789f57dd7",
        "cursor": {
          "ref": "94152faf-8dc7-4041-be18-a6ac2651fa78",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "20138bcb-0e5a-434a-9ea6-4ffa2b8974a4"
        },
        "item": {
          "id": "56b8dc7a-7572-4885-b788-903789f57dd7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c7b2c865-9e16-4678-80a0-a3fddcc297b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a542c0d0-1b86-4801-a5b3-1185760796fc",
        "cursor": {
          "ref": "76468ee2-b844-453f-a9f1-8fd33df369fd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c8dbc37a-b241-412b-989a-b15808c7ae31"
        },
        "item": {
          "id": "a542c0d0-1b86-4801-a5b3-1185760796fc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "98eee498-0f18-4c77-983a-aa630e769aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f223d8fc-eeab-4f6a-afbf-cda9bff5a61f",
        "cursor": {
          "ref": "2778f3d6-9586-40bb-b47d-f6a01782f72c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "38c905be-742f-4cd5-b28f-fdca413aece1"
        },
        "item": {
          "id": "f223d8fc-eeab-4f6a-afbf-cda9bff5a61f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb23a576-6715-4040-b047-623a39655e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5a0e98-b997-4052-87bd-9b1d59261c16",
        "cursor": {
          "ref": "e93a512f-907d-44ae-ad50-a9a77b179959",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29196a8c-a5eb-4586-a21e-5faad076a1d8"
        },
        "item": {
          "id": "2c5a0e98-b997-4052-87bd-9b1d59261c16",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c2b2c290-0f37-44b6-ac20-e78b6fe9fa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6141b485-a6d1-4490-84bf-cdf82da7b39d",
        "cursor": {
          "ref": "72d4338b-9b8c-403b-b87e-f633f7d5cb66",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8d712022-4099-4181-b85f-89b251716fd6"
        },
        "item": {
          "id": "6141b485-a6d1-4490-84bf-cdf82da7b39d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0e6d480-2906-4b29-9a5c-26c43029db8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bfb785-92cc-4b6b-a6a6-d8ccafb7c071",
        "cursor": {
          "ref": "3e8ee7a5-e2f2-47a3-b131-ab1a6b2dca04",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1940fdfb-18b6-4d11-b0f3-b4c1002e658d"
        },
        "item": {
          "id": "a5bfb785-92cc-4b6b-a6a6-d8ccafb7c071",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24a0b5bb-ebbc-4c60-a95d-d570af012611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68bba90-e8ce-44dd-8ba1-e5494fd02701",
        "cursor": {
          "ref": "8b53803f-edbe-46a4-8376-a463738a48c0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "544fad65-4151-4b30-8240-192dfc166d89"
        },
        "item": {
          "id": "e68bba90-e8ce-44dd-8ba1-e5494fd02701",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9c5b411e-4d6d-4018-881f-44956465a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f4f2b1-8144-4fa4-915e-cf7e33e93e42",
        "cursor": {
          "ref": "17eb33fa-74a8-4a3f-a4b6-1de9f214d44f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4161127a-2444-4e8e-917c-02d13a31dd30"
        },
        "item": {
          "id": "10f4f2b1-8144-4fa4-915e-cf7e33e93e42",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aaa1d809-3a5a-480a-93b3-4d4a4db93c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0c7d5b-8ff3-44e7-8f65-3be316c75277",
        "cursor": {
          "ref": "7c4c269b-dccd-477a-b7fd-585ad8b43664",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6c8a5585-860f-49a3-87d8-fc63a6a6b3bc"
        },
        "item": {
          "id": "fe0c7d5b-8ff3-44e7-8f65-3be316c75277",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "040545c9-08f7-410e-a97e-89cf1a16896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0899f5-bebf-495c-b966-0a1480f9423e",
        "cursor": {
          "ref": "caa72254-7cc2-48d2-8235-243175ffbfd5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "022f08bb-0e53-4a23-bd24-6004b4005289"
        },
        "item": {
          "id": "7a0899f5-bebf-495c-b966-0a1480f9423e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "76cd105d-241e-4321-a91a-f59766a26cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ada79b-92e0-40d1-8809-70e2cd81a214",
        "cursor": {
          "ref": "994309fd-1dfe-45fb-92b4-a35bc7dbaa7c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3b9adf5b-d4c5-4cae-bc53-d5f2c54c0010"
        },
        "item": {
          "id": "60ada79b-92e0-40d1-8809-70e2cd81a214",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a45f72a-ab84-474e-8a34-a79d8c94ec05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200638ee-40e3-4914-9659-59193b81e2cc",
        "cursor": {
          "ref": "88f84d78-a69a-47c1-ba47-0f5519d1006a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c56fcb67-38af-4a10-99cb-d034af2ca543"
        },
        "item": {
          "id": "200638ee-40e3-4914-9659-59193b81e2cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2a1e2f50-b65a-40ec-af50-21f2cac6da89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845bf328-9d08-4e14-b6f6-0ad31d0a45a5",
        "cursor": {
          "ref": "7872f61c-45b6-492c-8b6a-a39e33a8386c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "31db73c7-69b6-4414-888b-c7e72aed2a5c"
        },
        "item": {
          "id": "845bf328-9d08-4e14-b6f6-0ad31d0a45a5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf7f6804-6838-4faf-9113-2967ec6c2167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8fe8db-3462-4e64-95f3-ad9e9d192d8d",
        "cursor": {
          "ref": "2f561299-1f02-4b92-8da6-8a32d91d714e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c56358ab-52f8-46dc-a42a-b924b5c724b4"
        },
        "item": {
          "id": "aa8fe8db-3462-4e64-95f3-ad9e9d192d8d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4e21441c-3e77-433c-a5ec-c30009331176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daab6786-cc54-479b-90cd-cac3db03a239",
        "cursor": {
          "ref": "f752bfb2-8c54-49d9-b229-64d72ae23104",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d4b0d2d1-8d0a-4a11-beee-75a6e37aee4f"
        },
        "item": {
          "id": "daab6786-cc54-479b-90cd-cac3db03a239",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b731e77-c8c9-46af-9493-f9fcd98529ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42c9461-5707-4501-bec5-f053e68f844b",
        "cursor": {
          "ref": "fd47c0ff-5dab-4348-b6ca-8c06802a5958",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aaaa0a51-0115-4bcd-8ca7-1d6c8626776b"
        },
        "item": {
          "id": "f42c9461-5707-4501-bec5-f053e68f844b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1a4ed66d-09f7-4e53-a4ef-18574044ff05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45297be-ad2a-4bd6-884b-7a2b111bc319",
        "cursor": {
          "ref": "e8ea5e22-85ec-4f87-9927-371d30e15a7d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1634587a-fc74-446d-9112-3ef003941d5f"
        },
        "item": {
          "id": "d45297be-ad2a-4bd6-884b-7a2b111bc319",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5cea3064-347c-4768-9445-3140b158a9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff2f0b-8837-4981-8f78-bbb55b43ad01",
        "cursor": {
          "ref": "a3b74fbe-fa0a-45b7-a78f-896abc83c3d1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1ad7b8b2-0b0e-42a8-828e-0b550bcb2d98"
        },
        "item": {
          "id": "f7ff2f0b-8837-4981-8f78-bbb55b43ad01",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "99c4980d-ea56-43f5-8d64-4db0449bd991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3725f8-5335-410d-a201-1f48918b8a74",
        "cursor": {
          "ref": "c6056eb4-ee0a-46b9-95b3-0730d5de71b8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9045e587-eec4-4bcc-97d2-4255ad7f1020"
        },
        "item": {
          "id": "2b3725f8-5335-410d-a201-1f48918b8a74",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9783f6dd-d97c-44e7-b34c-a9aaf4df66fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1d379e-2253-4b54-bd43-36ebd74b56f8",
        "cursor": {
          "ref": "457ec038-91a4-4d24-9b97-07a11fbfedef",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "42497808-1c2e-4d15-a1ae-5f8779d244fe"
        },
        "item": {
          "id": "7d1d379e-2253-4b54-bd43-36ebd74b56f8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17a9afc2-9007-4a8f-ba2d-3bcaf75fa015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5009a31e-ef33-4736-b759-0742cc3e5840",
        "cursor": {
          "ref": "bf8749ae-8e57-4182-956b-1b0ae8229cf8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b7611074-e097-441f-a3aa-0d3b1e39bd6a"
        },
        "item": {
          "id": "5009a31e-ef33-4736-b759-0742cc3e5840",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9012bd2-9cb0-454c-acf9-c621162bb7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178ebb72-04be-4042-ac3d-a4342b6434ad",
        "cursor": {
          "ref": "f9eb06a8-5205-43af-8670-fb8f49141ebe",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "183847ae-8da7-4e57-8d08-73b7afcfe1cb"
        },
        "item": {
          "id": "178ebb72-04be-4042-ac3d-a4342b6434ad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e13e0379-0d1f-4f01-a1f9-8fdbdb04e853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a555d68-7821-4994-ab62-a772b173c648",
        "cursor": {
          "ref": "f45243ab-9e8a-4649-bd93-5766beb1f29c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6201c980-167d-4fea-9bad-1cb267978cfa"
        },
        "item": {
          "id": "7a555d68-7821-4994-ab62-a772b173c648",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fecaca73-ec29-4903-a952-cff040df1ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eee7fe-4d3d-47aa-9889-5aa8d0f9e414",
        "cursor": {
          "ref": "c22ad33f-d280-4bf4-a9c8-0953b4c9d07c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2395f940-42c4-47b4-8eee-fb889411257a"
        },
        "item": {
          "id": "15eee7fe-4d3d-47aa-9889-5aa8d0f9e414",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "06fe9319-abd2-4603-8236-56b5c8c3a954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28be9dc8-5599-478c-b8f7-398b7e30a519",
        "cursor": {
          "ref": "c4e41ab3-44be-4dce-a0d1-3ae9681ee5e0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "18b28750-3e84-4108-ba72-0d08ce6d2f52"
        },
        "item": {
          "id": "28be9dc8-5599-478c-b8f7-398b7e30a519",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "577662e6-e6ca-4eab-a538-6c1503a7cde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e72219d-377d-466d-98be-955714eb2110",
        "cursor": {
          "ref": "01751d3d-5599-41c4-b821-5afe1790a705",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ba487232-dcd1-40fd-ac14-932df2643671"
        },
        "item": {
          "id": "1e72219d-377d-466d-98be-955714eb2110",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5fe411c7-5aef-41c7-9ce1-a6ec8b0cc7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770f3bf3-4e89-46f1-9788-febfb85cfde8",
        "cursor": {
          "ref": "4ec5ed81-7f31-4a2d-a86a-90ac1afa45b7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "308e3d15-5201-4346-974f-fc719ab0be69"
        },
        "item": {
          "id": "770f3bf3-4e89-46f1-9788-febfb85cfde8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5e157b5b-072c-409d-aa6f-9a6d7460daa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7726c829-d472-43d5-b6ab-0a320f65bc78",
        "cursor": {
          "ref": "e069dd20-b37d-44c0-b176-34508e6dcaa1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bf22b3a7-4374-4d5c-a1c3-28bc09b094d2"
        },
        "item": {
          "id": "7726c829-d472-43d5-b6ab-0a320f65bc78",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "883636b5-caec-4a7e-a0cb-c7f7892249be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e981d0-adef-4f47-b6db-81d877329472",
        "cursor": {
          "ref": "300727c4-f1a6-4057-87e5-1b777fd47b55",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a2fc30cb-305c-44aa-b73f-db0bd8707a05"
        },
        "item": {
          "id": "63e981d0-adef-4f47-b6db-81d877329472",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6ed77b54-9dbf-4ddf-821a-bd3865bbb8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba5d1c4-5349-4073-b775-8df9698b3f1a",
        "cursor": {
          "ref": "d0766763-d71c-466f-b003-c84277823e5d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "76a2ecff-869e-4f72-9b0d-9b0be20a1ba4"
        },
        "item": {
          "id": "bba5d1c4-5349-4073-b775-8df9698b3f1a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d01c1e23-8ace-4b8f-8f0e-3438259b6214",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04e3718-2a38-4a79-868a-25be37d5c51e",
        "cursor": {
          "ref": "f8d36c78-6b4d-4aba-acb4-a730186a9454",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9271c0b5-12d8-4781-9f56-3cf283dd494b"
        },
        "item": {
          "id": "a04e3718-2a38-4a79-868a-25be37d5c51e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8019796b-b0c4-41f4-b27e-297a979480a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bbafca-bd91-4bb3-8575-dc8110899406",
        "cursor": {
          "ref": "58fbb796-862b-4110-8216-c6ab4df3156a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f55a2550-8410-47da-97c0-034fecc76042"
        },
        "item": {
          "id": "b9bbafca-bd91-4bb3-8575-dc8110899406",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9035ba8b-f79e-4ae2-aa1b-fd9caadafabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f43476-6313-4eb8-86b0-76e94c743c03",
        "cursor": {
          "ref": "9c9fe4ea-150c-4ad1-b0c6-1cae070b58da",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7de50ab4-a3f3-48ff-8823-1617a6b3442c"
        },
        "item": {
          "id": "25f43476-6313-4eb8-86b0-76e94c743c03",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "038d5958-8161-403d-b859-1015862bd1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd78b55-e215-4506-bc24-d3fd010cd874",
        "cursor": {
          "ref": "71ce9606-1a66-46b3-8207-9858d71e41fb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8f350166-ae3e-4f90-bdac-43e6df911ef9"
        },
        "item": {
          "id": "ddd78b55-e215-4506-bc24-d3fd010cd874",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "449c7002-30fe-41fb-b5ff-952bd72b569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f430cae-538b-415d-8aba-a1af6242a617",
        "cursor": {
          "ref": "b8c60159-4939-45f4-ba6b-dab88fb6e532",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5d9e1534-90c1-4580-b4f2-70bb019c3562"
        },
        "item": {
          "id": "2f430cae-538b-415d-8aba-a1af6242a617",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "393d0bb7-6117-41cd-a403-d1cbd38365fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5f7506-2a75-450c-9f5c-59b119b33b9b",
        "cursor": {
          "ref": "8ca306f8-8efc-4325-bb5f-3771b77d5e3b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b206470a-099f-4c98-984f-fd910ec3d1e6"
        },
        "item": {
          "id": "3b5f7506-2a75-450c-9f5c-59b119b33b9b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bcc5636b-2db1-405e-b0d9-f9f663af6b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143998db-b244-4625-8df9-b0259d5acb46",
        "cursor": {
          "ref": "4e70694e-27b1-456f-901d-d05090188a0d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "50db565d-71ff-43f7-9d34-b4efcb77effd"
        },
        "item": {
          "id": "143998db-b244-4625-8df9-b0259d5acb46",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8027523b-d004-4b2e-9669-e5e5e2473216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337c401f-6297-4082-984e-b0e6fb632ca4",
        "cursor": {
          "ref": "62581469-238d-4882-ae9d-63885a530348",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "27dbdb5f-2966-4e66-a5bd-9cbecbae3284"
        },
        "item": {
          "id": "337c401f-6297-4082-984e-b0e6fb632ca4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bf40223f-fa6b-4ded-9413-db47bfa3e355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf5afc5-a320-41d7-b56e-a813e97d82f7",
        "cursor": {
          "ref": "6f32f349-76b3-486a-884f-1a85e14ff130",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4162b78a-623f-4680-b383-690f9e95ee47"
        },
        "item": {
          "id": "6bf5afc5-a320-41d7-b56e-a813e97d82f7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "09015ec2-577a-4f75-ba19-4d32b6107ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a958bb9b-ab27-4df0-be47-23f9ca5ab02e",
        "cursor": {
          "ref": "054596c4-a7fb-4d4b-8454-d5d7593c4d87",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1e7208dd-2465-4aad-bf3e-00e7007c09a3"
        },
        "item": {
          "id": "a958bb9b-ab27-4df0-be47-23f9ca5ab02e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6f42f2dc-4000-44b8-9e29-e587fb23f287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b843baf-ec4f-4f1a-abf6-48f477db98d3",
        "cursor": {
          "ref": "1924e0e0-7526-43b4-a312-f071c0884133",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c869b067-b872-4dd4-9c24-065c5ba3afc0"
        },
        "item": {
          "id": "1b843baf-ec4f-4f1a-abf6-48f477db98d3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7d47fd68-ff96-43a1-95e6-e5c90d88b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e515d4a-79f7-4ae4-8ea4-a12614c3c01f",
        "cursor": {
          "ref": "d31650a7-72f3-467c-a734-2e6ef875b547",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3229ee3e-2305-41d7-9d34-18b35978f08b"
        },
        "item": {
          "id": "5e515d4a-79f7-4ae4-8ea4-a12614c3c01f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9618cf7e-e0d8-4ffd-a463-ac6cd7a60cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b30e0b4-babf-4a68-9b5a-98566119f729",
        "cursor": {
          "ref": "504ec2ed-aaf3-4046-8ccb-00d2296d50da",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2f2c58a8-c49f-4110-966d-3866a3125f06"
        },
        "item": {
          "id": "3b30e0b4-babf-4a68-9b5a-98566119f729",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8c8a0034-7d19-408e-b134-90cc42674096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0142b3b1-5ea6-4ed0-9502-c821e36d2886",
        "cursor": {
          "ref": "34a3e25a-4136-4ed1-bac0-789079a869ac",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aaf7a09c-1389-43e5-8e7d-b4ee20474f8f"
        },
        "item": {
          "id": "0142b3b1-5ea6-4ed0-9502-c821e36d2886",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0fa0fbf8-031f-4387-a2e0-0706922425c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccef219-6282-414e-8089-2cea2bdf88de",
        "cursor": {
          "ref": "dfdef6ac-41e2-4ecf-a46f-44a8bd83849f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0248ab0e-a562-4034-9aa7-419d9aa89c2c"
        },
        "item": {
          "id": "2ccef219-6282-414e-8089-2cea2bdf88de",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d0d8aa71-ce99-4206-b615-b1ce7f789910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa0d299-a5ce-4b5a-88b7-7dd2772d8a01",
        "cursor": {
          "ref": "8fc319aa-881b-4212-afe2-f6deff2a3038",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "856f2e80-1465-43a9-a4f5-6884ae6fe56d"
        },
        "item": {
          "id": "7aa0d299-a5ce-4b5a-88b7-7dd2772d8a01",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "175cef8c-d293-4f53-87bd-754097e2899a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33223f6e-b381-470e-84e8-4593756371df",
        "cursor": {
          "ref": "2addd60b-9e89-4e67-8c8f-12d1afb373f6",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "486fe732-9c91-4036-a579-f66e929b9e5e"
        },
        "item": {
          "id": "33223f6e-b381-470e-84e8-4593756371df",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e2171384-524d-4b80-b368-fc8ed8ba0979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d7b9e5-868e-4763-b65d-60d823e9dc3b",
        "cursor": {
          "ref": "480bd4d8-a38a-4099-bc1d-385034c9b563",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "756c4342-02ee-4e2b-b2a2-7885e8eca2f9"
        },
        "item": {
          "id": "83d7b9e5-868e-4763-b65d-60d823e9dc3b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6baada52-627a-424d-aac4-cfd779606346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb007da-dc04-4a0f-a3e0-e2bfd235d714",
        "cursor": {
          "ref": "f1ff06fc-a97c-4ebc-92d4-7e49c6aeac21",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b0e1a12e-686e-4f0a-bff1-8696e29b00dd"
        },
        "item": {
          "id": "2cb007da-dc04-4a0f-a3e0-e2bfd235d714",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c9b5da76-f37b-4eb4-891b-b0a7a559c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b07f04d-7415-4181-9f06-3ee2a2b95d3b",
        "cursor": {
          "ref": "0d504eb7-20c0-4e61-8e93-b8442319013c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "58240bca-9f90-4d12-b59a-cf3e8ef1d4c1"
        },
        "item": {
          "id": "6b07f04d-7415-4181-9f06-3ee2a2b95d3b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "21507bfc-0078-4009-9368-3deac4104232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05eb229-8a21-49f4-93a6-cf6ebbb6ff34",
        "cursor": {
          "ref": "f59bab19-04ae-43ea-a0b0-c8469f0e8331",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3019d298-169d-4dd9-95ea-4619b48fc5c6"
        },
        "item": {
          "id": "a05eb229-8a21-49f4-93a6-cf6ebbb6ff34",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "06aa9560-2648-4881-9387-5205615b28dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74feb2a3-37f4-43bf-9e15-4946e004a2ed",
        "cursor": {
          "ref": "ee04d7f9-c8af-47c9-ac02-9e32b7baf373",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5f8283f1-c404-499c-9847-b475b298fed0"
        },
        "item": {
          "id": "74feb2a3-37f4-43bf-9e15-4946e004a2ed",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2ae5178-c9ae-4100-b053-573c0838ec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f02c7-b2d5-4ce2-b5cf-6ec3eb270b55",
        "cursor": {
          "ref": "f0cb40d9-3d5c-4328-9897-493732f18ba4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8bf2b420-da10-40d4-b63f-f6930ef13b14"
        },
        "item": {
          "id": "050f02c7-b2d5-4ce2-b5cf-6ec3eb270b55",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a37cea7f-a3bf-4972-a446-18589d552b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4509fefb-fc4a-4209-a0c0-4f9a8252ab4b",
        "cursor": {
          "ref": "30bdd169-6efe-4910-b946-c9cab609b7d3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "34d536fd-f369-4d40-8293-4e40646b1cc8"
        },
        "item": {
          "id": "4509fefb-fc4a-4209-a0c0-4f9a8252ab4b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "26efcda9-d8cf-41f4-9b99-53008799358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806c6e92-c6d3-420e-b3d6-4f0abb12f7fd",
        "cursor": {
          "ref": "e9378215-13d4-4068-a853-33510a7c4dae",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "82f1711f-ef50-4022-9998-df3fc1caa729"
        },
        "item": {
          "id": "806c6e92-c6d3-420e-b3d6-4f0abb12f7fd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6744b927-392d-4992-bb24-a23255cad20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc8fd1c-1335-44a0-8664-8958f74e442b",
        "cursor": {
          "ref": "92de6b05-e51e-4129-aad4-fbc65226084d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dae12025-e670-402e-8e0c-b7204400d08d"
        },
        "item": {
          "id": "9cc8fd1c-1335-44a0-8664-8958f74e442b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7742b056-758d-4df2-bbee-d3adf9cfd035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818543a6-4691-4cd4-bcd6-40661aa71617",
        "cursor": {
          "ref": "2a3cbd64-3195-443b-937b-e7bc631a03d3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f85ed56f-c915-49f4-b8f8-4c518e72c310"
        },
        "item": {
          "id": "818543a6-4691-4cd4-bcd6-40661aa71617",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "34e0ab58-b701-4044-a1d8-5b3325dd2b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b27b19-d234-4800-a8c4-5682820d237c",
        "cursor": {
          "ref": "49b74ef3-eebf-4d88-800d-62578d863701",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "42d19432-ff52-40af-82c4-b152bed8f74b"
        },
        "item": {
          "id": "42b27b19-d234-4800-a8c4-5682820d237c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d4dd643e-7e93-423b-82f9-5f66ca784325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff18eadd-471d-455c-a9fa-d6e0964b8ec6",
        "cursor": {
          "ref": "674abe80-8f77-4f55-a734-3c2bfe527414",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8f89cf32-797e-40f4-b84c-397fd59c9459"
        },
        "item": {
          "id": "ff18eadd-471d-455c-a9fa-d6e0964b8ec6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "97883a25-20c7-4c31-801c-869858ff1597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ceb50f-8d0e-410d-b0ab-2c1a27682b5e",
        "cursor": {
          "ref": "ca3faf84-79a0-47ee-a8af-74b6ecf4158c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0d42adb4-48cf-4e46-a0fe-dbd78aa23579"
        },
        "item": {
          "id": "85ceb50f-8d0e-410d-b0ab-2c1a27682b5e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a7bbd9b1-25e5-416a-81c8-30250dde61eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a8dafa-804b-4f42-92ca-791fc2061480",
        "cursor": {
          "ref": "0ed37b55-d892-4b85-a29d-134661e86ee1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "edaa00ae-9063-4cf2-a6b1-72d9ac12b155"
        },
        "item": {
          "id": "49a8dafa-804b-4f42-92ca-791fc2061480",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c4615117-9b41-42aa-a3de-88b703fff993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b23084-c433-4631-a882-45f09b6a0d5d",
        "cursor": {
          "ref": "e975b4f8-c434-443e-81e3-edb4083db624",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9669cf38-ef63-428a-a7b4-40e302b7b840"
        },
        "item": {
          "id": "a6b23084-c433-4631-a882-45f09b6a0d5d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5a4aa289-cafe-428f-863d-dc3e77173c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39190bbe-8f0a-4c81-aa95-4f11319846e2",
        "cursor": {
          "ref": "2428ce09-1742-4a53-b660-d6304ba92e50",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a738785c-45e9-4699-9db2-55dd1220d857"
        },
        "item": {
          "id": "39190bbe-8f0a-4c81-aa95-4f11319846e2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e0a31b7f-7770-4409-bd59-bd1e733b2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78829f57-a0c4-49bf-b29b-e27de6500adc",
        "cursor": {
          "ref": "cd1080b3-8dc0-4f10-81b1-6ebd029b7f4a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0d52584b-633a-47f8-a198-cdcb13d59cc9"
        },
        "item": {
          "id": "78829f57-a0c4-49bf-b29b-e27de6500adc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9418be25-fc49-479f-8599-a6d845a984cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f8a4b-0544-45a4-aad3-88f9a60f4914",
        "cursor": {
          "ref": "fcfa2577-073e-40d9-847f-71e34985226e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "88b5c19c-b257-4267-9b1c-b0aab5d33a80"
        },
        "item": {
          "id": "f41f8a4b-0544-45a4-aad3-88f9a60f4914",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8e1b16d2-3e9b-4bb3-9715-e0141a90f7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba65be1-0bf3-44c3-9966-c21c318d4de2",
        "cursor": {
          "ref": "81e022cf-b276-4f54-8475-6d7d5557beaa",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "71ed647c-58ae-4eb8-88bf-f4ea7f9b6e39"
        },
        "item": {
          "id": "aba65be1-0bf3-44c3-9966-c21c318d4de2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5cdb4901-b225-4466-aac8-0c3b61213362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c5c413-6002-46aa-9683-9c6841bf0860",
        "cursor": {
          "ref": "f03f5ae7-b1b0-4087-8ba2-6783e3976b73",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ab946e32-a0fd-44ea-93d9-6b703b9992ec"
        },
        "item": {
          "id": "e0c5c413-6002-46aa-9683-9c6841bf0860",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "282cf218-dce1-4295-8b30-0ec366c15095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362f252b-918d-4531-a6bf-f6cda09959e4",
        "cursor": {
          "ref": "906bc1cc-eacf-495a-b1b8-8896a2ed7b75",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "76175d8a-974d-473c-80e6-26b0ead899fc"
        },
        "item": {
          "id": "362f252b-918d-4531-a6bf-f6cda09959e4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ed49ca80-8cfd-4e1d-a42c-2409242f42fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f0395c-d995-4292-a823-8df665a4866b",
        "cursor": {
          "ref": "1c8d7e1d-1193-406c-a59d-aa95720c1888",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6e8a01b2-4a02-4d83-ba19-569b03db0d0b"
        },
        "item": {
          "id": "55f0395c-d995-4292-a823-8df665a4866b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "86dc1d7c-91a8-46c7-aff9-af152c5cbe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d889911e-df2c-4f8b-a149-a1613de23c6c",
        "cursor": {
          "ref": "3c4d5791-832d-4b8e-8b45-dcb72c122d7d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5d81656f-1979-4195-a180-7c0c3f90464a"
        },
        "item": {
          "id": "d889911e-df2c-4f8b-a149-a1613de23c6c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f31c8f8e-6899-45b6-b341-407b125503ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e08c20-d902-4626-ab32-d03648bb0b23",
        "cursor": {
          "ref": "62206d83-9dbf-4614-a7a5-a280404ffad8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ad60dd3-1c00-4bc3-b48c-87dfcaf0a909"
        },
        "item": {
          "id": "b0e08c20-d902-4626-ab32-d03648bb0b23",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9cd86ca0-aeec-4e4a-bbcc-0b0ba0a06155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a667ad-1ab5-4810-8c4f-ee7956bee392",
        "cursor": {
          "ref": "777a463a-aa76-4f91-8137-2b1e52739a3c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a5eff874-d88d-4bc0-8a06-1774bfdbde71"
        },
        "item": {
          "id": "69a667ad-1ab5-4810-8c4f-ee7956bee392",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9f4dc67f-4db1-49f1-a182-8f221f2f4b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd58ed92-6260-4844-a6a8-35138c4eb1fe",
        "cursor": {
          "ref": "2fef1f7f-f722-4d76-af28-5fb979b0ffa5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6be243ff-e3ea-4ca6-853a-692cfdcc7c16"
        },
        "item": {
          "id": "fd58ed92-6260-4844-a6a8-35138c4eb1fe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5e8fbda8-8e7b-4471-9fde-2dedb2511e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71ae44-7230-4d16-98fa-67dd08731e8b",
        "cursor": {
          "ref": "26255d15-1520-4c06-9a4b-6b04bfc84fd3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "caf05d1d-c04a-4ba3-90e3-3363eaaa3427"
        },
        "item": {
          "id": "4d71ae44-7230-4d16-98fa-67dd08731e8b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a6898d76-a397-4dab-b840-4a03bf00b984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5927a769-f6ff-4816-bca6-dad53c24d904",
        "cursor": {
          "ref": "cf87ff57-d8df-4683-902c-ceb4dba1d315",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4af62588-58e1-4515-b6c5-c7fb9567e00a"
        },
        "item": {
          "id": "5927a769-f6ff-4816-bca6-dad53c24d904",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "684d0c64-0a28-42b3-8616-19d4a68d93c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a37891-b6ec-4ed6-8e67-39a0e343eee5",
        "cursor": {
          "ref": "bd5b6c6e-f318-468a-aa2b-6a54aa8ffc98",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b4e265c4-ef60-4f8e-a5d3-7b1f7ff62175"
        },
        "item": {
          "id": "14a37891-b6ec-4ed6-8e67-39a0e343eee5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fcaca260-f0f4-4880-b367-908af17bbc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb772e4c-1e52-45f0-b658-f5d5d3f66ff2",
        "cursor": {
          "ref": "96623607-0cf2-49a7-b571-931399369bc1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "44e3a857-e33d-4364-abe7-e1a017276810"
        },
        "item": {
          "id": "cb772e4c-1e52-45f0-b658-f5d5d3f66ff2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ec61aacb-266a-428b-8066-0457a6fd21ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76e5488-8fd0-4b90-9547-abb48ca99952",
        "cursor": {
          "ref": "cf6193ff-c90b-4e28-912d-d63ebdf399bd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "daf20845-04d9-4a25-ac96-fa7a28e576f9"
        },
        "item": {
          "id": "b76e5488-8fd0-4b90-9547-abb48ca99952",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "78e21735-e6dc-4d2b-9558-b9107d06d631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9493d76-a468-4fbf-81cb-a850dd7a1050",
        "cursor": {
          "ref": "31df059c-8989-401e-963f-ba68e541ea12",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b694f670-ea16-494c-ba16-b0569fdca47b"
        },
        "item": {
          "id": "a9493d76-a468-4fbf-81cb-a850dd7a1050",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5ac59af1-7739-4aa0-8c5c-c5a62d52b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113f233-85fc-44de-b77b-8d93c9f82958",
        "cursor": {
          "ref": "7b2dbee4-21f7-49f3-8f35-2090ec6a1954",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3f62c99a-d184-45ec-8b9a-cc696447acb2"
        },
        "item": {
          "id": "8113f233-85fc-44de-b77b-8d93c9f82958",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6580ba0d-dd1b-440b-bfed-d9a922ba0e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d6b64-0bab-4b4f-888d-be17427f533e",
        "cursor": {
          "ref": "5857d701-cf12-4409-abfd-5cbf635b7634",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "159cbb39-7dde-4f40-9599-917937f63362"
        },
        "item": {
          "id": "001d6b64-0bab-4b4f-888d-be17427f533e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3b9c5c52-acea-41a9-9fd6-ada4f8d1668e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a7bcb-5859-4e4a-bb41-2aae6f59b80c",
        "cursor": {
          "ref": "83e2fd9b-96c3-47db-ae17-50cfc7e2420e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "663eb927-79f5-44f6-ae45-24d784bbb882"
        },
        "item": {
          "id": "852a7bcb-5859-4e4a-bb41-2aae6f59b80c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b131303f-4177-4ee4-a64c-f3b896bff95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7462b46b-550e-4583-aca4-55f5d29ed658",
        "cursor": {
          "ref": "6c5296c6-d10f-4f4c-b8ec-85d58aa16edd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4f0cbf79-2138-4c97-8570-a22e13937186"
        },
        "item": {
          "id": "7462b46b-550e-4583-aca4-55f5d29ed658",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f367281c-9077-445e-a118-e4ff560301b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0f3f42-8efb-4b4b-b678-e823a19332ab",
        "cursor": {
          "ref": "22aeead9-045d-4d12-af45-fd6e6fbd552d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "05a1b7db-e252-4b2a-9255-c792aed3c37b"
        },
        "item": {
          "id": "bb0f3f42-8efb-4b4b-b678-e823a19332ab",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "58ae8e98-4e80-4dda-bf2f-81619f157f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8282b3c7-d520-432b-bb87-451484fd80b5",
        "cursor": {
          "ref": "9c4ce99c-3797-4bad-a01b-948c4866eadd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "65b1b100-3a99-4450-9727-57ef32eaf70b"
        },
        "item": {
          "id": "8282b3c7-d520-432b-bb87-451484fd80b5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2670d0bf-7c54-4011-a181-094e5b99c79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db11bc2-8f65-4930-aa9c-d4216199cad9",
        "cursor": {
          "ref": "bb5a28b2-8e98-4a85-84ed-00820f4477ed",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3b8c46da-72d8-49b9-af65-639d8705d77a"
        },
        "item": {
          "id": "5db11bc2-8f65-4930-aa9c-d4216199cad9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5ff07a3f-af00-42d8-a0ae-0bf3461b9e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbd3960-f113-41d5-9e4b-314ccfc0de48",
        "cursor": {
          "ref": "fd8a9d3c-5c91-4bec-882e-b7816b02c414",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c19f11c0-d866-4a7a-81ff-e6c9b28090e2"
        },
        "item": {
          "id": "cfbd3960-f113-41d5-9e4b-314ccfc0de48",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "143c8749-30a7-4f65-bc3e-63c53b671542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d89bd84-eed6-4b0b-91bb-0123aaec2435",
        "cursor": {
          "ref": "1a35d73a-62a9-4252-a0af-4269b2dd075b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7ddee70a-cb23-4821-b7e2-01c79a9f63b6"
        },
        "item": {
          "id": "6d89bd84-eed6-4b0b-91bb-0123aaec2435",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a5caaa8d-9eb4-4a4f-a068-2930c72164cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcb8d82-a41c-456d-8460-2e7dbb19c660",
        "cursor": {
          "ref": "2d5ebfd7-6bdc-4124-a0d8-7cbde6b0f07b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ac0d72bb-d649-439f-b28c-d1909e4cf3b0"
        },
        "item": {
          "id": "bdcb8d82-a41c-456d-8460-2e7dbb19c660",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6039e893-4a1d-4f23-be96-7ae1a28a0495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d486f4-c5a7-4e2a-aa28-5c941e6161d9",
        "cursor": {
          "ref": "53de2dae-3e78-460a-8229-e421849b502c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c064d690-be41-467c-8e67-5ad94ee975c5"
        },
        "item": {
          "id": "b4d486f4-c5a7-4e2a-aa28-5c941e6161d9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b9c22f1a-049d-41b1-aabd-7172d893f9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1565fdbc-d84a-4bcd-a3cd-9c48250b70d2",
        "cursor": {
          "ref": "eb9f2fb6-c855-481d-bf99-d5c5679aa873",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9177b61d-db03-46c0-ae87-4ea8fab40f6e"
        },
        "item": {
          "id": "1565fdbc-d84a-4bcd-a3cd-9c48250b70d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f1dbf6c8-e525-4cfb-9786-3db79689a513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f53f9d1-4a35-42e1-a36d-edae25b4e9c5",
        "cursor": {
          "ref": "5608eec5-7bbe-4f76-bd32-5d8662a7f6db",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "617b1b97-dac6-4c64-9ba0-173128842a4e"
        },
        "item": {
          "id": "3f53f9d1-4a35-42e1-a36d-edae25b4e9c5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4dfb4ca3-c418-4bdd-80af-9631f92c9316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de9c17b-0b9b-4822-90bc-dfdd12121cb4",
        "cursor": {
          "ref": "a6e5bcc9-8dd0-4485-bdae-74f3c303619a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fe40db49-bd0c-4130-92b0-04b19b7e008e"
        },
        "item": {
          "id": "6de9c17b-0b9b-4822-90bc-dfdd12121cb4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "73866c82-b667-42a2-a69d-ae78e56aebf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d336435a-5b11-48a4-acc8-d14bfca21bb9",
        "cursor": {
          "ref": "7728c408-df98-4bdd-8f1f-a23b6f834ed6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bf566df0-ece2-47c1-84ea-640ef51d1f8f"
        },
        "item": {
          "id": "d336435a-5b11-48a4-acc8-d14bfca21bb9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "26bc1334-6c16-4be5-817e-fc4de08b1c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db09351-8f01-4e47-8dea-4324c36fd213",
        "cursor": {
          "ref": "fb88dc5e-507a-4086-aece-92ca5706bb30",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ff2087f-0314-46e8-9ae4-a88c71ce8886"
        },
        "item": {
          "id": "0db09351-8f01-4e47-8dea-4324c36fd213",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d0336950-1693-4e0d-9925-25ada05e246f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e234dd3-887b-40c1-83fc-186b87a284a9",
        "cursor": {
          "ref": "7d6275fd-b3f8-4cbf-a2bc-0588343948c1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "40a6e14f-10ed-4d24-96d7-90ce40844532"
        },
        "item": {
          "id": "7e234dd3-887b-40c1-83fc-186b87a284a9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8ca7a86f-e7e7-4fb3-b410-a0c173a2cdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd7a66a-3a83-45fb-aadc-af4c8d3b2051",
        "cursor": {
          "ref": "9b8ec207-743f-4fbd-ab16-3c50cd00fa88",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cbb9a39a-7319-492c-8f7b-54963787b5a0"
        },
        "item": {
          "id": "ebd7a66a-3a83-45fb-aadc-af4c8d3b2051",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ebf5d83c-abfb-4774-b3f3-e2c83fb4492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba6e48f-929d-40cd-923c-c6ef7bbb5923",
        "cursor": {
          "ref": "ae8bdc29-5bfd-4a59-bdfe-d176a6f89ff3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "29a8e5a9-7070-41ce-819e-b212f945b976"
        },
        "item": {
          "id": "bba6e48f-929d-40cd-923c-c6ef7bbb5923",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a82d476a-a8bc-465d-8412-8ed2aa885196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f591823-285f-4656-80f1-82579eaf9253",
        "cursor": {
          "ref": "1e544a77-c6a6-4176-bded-51dedf55d580",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "58233d60-de85-486b-9218-1109f40d0b1f"
        },
        "item": {
          "id": "5f591823-285f-4656-80f1-82579eaf9253",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5e004a3c-b067-486a-a2a5-1dadf2bb4d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3275ecfb-4471-48ea-a0ee-85782f31cacf",
        "cursor": {
          "ref": "4c6f3122-4955-4707-9ae6-be0c064c5edd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9661e32d-1005-4568-8370-61a787863ba3"
        },
        "item": {
          "id": "3275ecfb-4471-48ea-a0ee-85782f31cacf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8ec5204f-c97a-486e-8e17-fa04bed659f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5c0417-8f72-4837-a759-aba3202dc06c",
        "cursor": {
          "ref": "791fc378-4317-417d-9f02-4802c8655bb5",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cd338f79-124f-411c-9e91-1acafe1276c5"
        },
        "item": {
          "id": "ad5c0417-8f72-4837-a759-aba3202dc06c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d2f4bbff-2cd0-4331-8a27-d62bc3a6e92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ff471d-db3e-4494-ba86-54ad8022f913",
        "cursor": {
          "ref": "b31f650f-fa8f-48b2-ab3f-5e7d532544f5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "613e3886-ce09-4898-bcde-0c9ec83fe629"
        },
        "item": {
          "id": "83ff471d-db3e-4494-ba86-54ad8022f913",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "af062567-1a6b-4328-aebc-87f3dd9491ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571a956b-8562-42e3-ae0b-b48164d27321",
        "cursor": {
          "ref": "1743b54d-20a4-4931-823b-15a3110e4ffb",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "df721808-205a-43da-9d18-9a093d3c2b45"
        },
        "item": {
          "id": "571a956b-8562-42e3-ae0b-b48164d27321",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4c82afcc-a135-49c0-9fcb-7b658865c029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67941b9e-4792-4a99-a5e5-812503fa2880",
        "cursor": {
          "ref": "ae6b7acd-dea0-419e-a12f-bf3a5958c3b0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "243e3e4e-0827-42b7-ba08-a1b8b8208233"
        },
        "item": {
          "id": "67941b9e-4792-4a99-a5e5-812503fa2880",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c8523b1f-bc1a-43b2-a656-3deed863ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f2566-125f-4b41-aef5-fda883bd3832",
        "cursor": {
          "ref": "b9c12dfa-fb28-4b4a-9d60-8d67c7c907cd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1ee5adfc-4534-4d49-bf23-a2014aeceb22"
        },
        "item": {
          "id": "050f2566-125f-4b41-aef5-fda883bd3832",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6b27cf9c-5c19-4745-8c8c-1d6def20a05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716ced49-ad70-4de2-bd0c-c3b3ae2787ad",
        "cursor": {
          "ref": "455c6997-4024-484a-8d0e-81aea768a872",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6963c966-dc4f-49cb-9473-e66129c4e6ce"
        },
        "item": {
          "id": "716ced49-ad70-4de2-bd0c-c3b3ae2787ad",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d7877927-fd53-4c8a-99b3-1ceb4547f832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d356d3-f417-4231-8abe-31e5d5a33f40",
        "cursor": {
          "ref": "dce3d4e1-35c8-45ff-92fc-1d7468761f6b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9e360660-349f-4502-adb4-04583dc11244"
        },
        "item": {
          "id": "49d356d3-f417-4231-8abe-31e5d5a33f40",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9f701843-7ef5-4a84-9f58-2c8aa777262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ea5b24-bfd0-4805-89d3-b328b4a05b3a",
        "cursor": {
          "ref": "3da731ff-ebf0-41c8-aca7-80f19987c1bd",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f2b69456-d0e4-4f65-8470-0c9f3934da9f"
        },
        "item": {
          "id": "f0ea5b24-bfd0-4805-89d3-b328b4a05b3a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4e7b07f9-f650-4b7c-9722-725791812795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8154826-cc5e-4d5c-b64d-af57e447d971",
        "cursor": {
          "ref": "f86016ed-b8a8-41b5-86d0-ac12c84d70e8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "15bedfc6-2084-4140-b663-70f943a296ba"
        },
        "item": {
          "id": "f8154826-cc5e-4d5c-b64d-af57e447d971",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9e362376-cf17-4479-a2f9-eb1194e6ce5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a26222b-4f7f-4651-8a14-dd86e9c989aa",
        "cursor": {
          "ref": "02883aa0-e1e9-44a0-b975-609dff445a01",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "24d4e7b2-8f21-4846-ade4-18925a80d9af"
        },
        "item": {
          "id": "0a26222b-4f7f-4651-8a14-dd86e9c989aa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a20e6c53-dc31-4088-a7a0-4ac59d26c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0effba8e-3e79-4be3-8f43-6f2a489c53fd",
        "cursor": {
          "ref": "ecb89e05-d5e8-4be8-94ac-b73bd6b35de8",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2286011d-e967-468b-a559-f67d1d260af3"
        },
        "item": {
          "id": "0effba8e-3e79-4be3-8f43-6f2a489c53fd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a0f6d565-8049-4295-9280-b5ba4fb9546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e505aef-98d2-4d77-978b-efdc0b0dc59f",
        "cursor": {
          "ref": "eee7de0a-2958-4ce5-b90f-400c5d74c81b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ae005312-b3dc-4afe-a57d-5e0ff3bc543d"
        },
        "item": {
          "id": "7e505aef-98d2-4d77-978b-efdc0b0dc59f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d7e5289c-c91d-49f0-b726-f0eecd2dc9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ace9f6e-e801-442c-8b54-81ba7264c1c8",
        "cursor": {
          "ref": "147348be-4f88-41f6-819c-2d2a9481bc27",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "41778e15-6ab0-4a94-aada-1478a2b15413"
        },
        "item": {
          "id": "5ace9f6e-e801-442c-8b54-81ba7264c1c8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "45233758-4980-4da3-909f-c8ce62a568c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab6ce08-66d7-47b1-9f67-be8d05a6c883",
        "cursor": {
          "ref": "f2e745e4-3e83-48b8-af39-6e27d54a8403",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0307b5a1-8b35-4aa1-81a2-a5d3aad5f769"
        },
        "item": {
          "id": "1ab6ce08-66d7-47b1-9f67-be8d05a6c883",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b35c6af5-ea03-430e-9d87-484950531c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9eb0a7-109f-470e-b41a-a77c2d0a06cd",
        "cursor": {
          "ref": "6999fbb2-b116-4e08-a9fe-fff71d7ead2c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "aff8a8db-bb7d-4b24-a7b2-12e3e8cf056f"
        },
        "item": {
          "id": "8d9eb0a7-109f-470e-b41a-a77c2d0a06cd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5923278c-e4ca-4d42-82e9-c158e2cc5505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236bfde1-f0ad-4b7c-91a2-234685214247",
        "cursor": {
          "ref": "9aa6e2b4-3970-4e78-b421-aaf91d777e42",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ad603661-1a29-40fc-9bd0-9b1f049eb016"
        },
        "item": {
          "id": "236bfde1-f0ad-4b7c-91a2-234685214247",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "763919d1-48c5-4fbc-a8d5-fff7de4fc46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8ea05e-ca38-4fea-8e7d-33258ecd89ff",
        "cursor": {
          "ref": "dc8921d7-ccaf-47b4-98fb-da96e8f1847f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2ac5ecaf-a26c-484c-ba11-002ab8178a6d"
        },
        "item": {
          "id": "cf8ea05e-ca38-4fea-8e7d-33258ecd89ff",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "be0cf2a0-d01a-434d-885c-8b98db6da273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c516d9-b944-4b31-a1c9-12675953beb5",
        "cursor": {
          "ref": "86cffe53-8bcf-405c-a960-72729ec827b2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "093cecb7-530e-489d-b8de-8ec9b0d5603f"
        },
        "item": {
          "id": "b9c516d9-b944-4b31-a1c9-12675953beb5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7c99adb9-5f8f-4da4-8628-ad3d84e9938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66ebea5-76b2-4ae5-9793-fabb19431842",
        "cursor": {
          "ref": "8676a5f6-0d0f-4526-8268-226b7c52fbfe",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7e5ccef-05c3-4f01-b671-b266ced222a8"
        },
        "item": {
          "id": "a66ebea5-76b2-4ae5-9793-fabb19431842",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "41b370c4-2f8a-4e94-814b-4cf285b3facc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4891fc3-7b03-44cf-82f9-a81638995aec",
        "cursor": {
          "ref": "f3e4a28c-e3d3-43f6-863f-32570fd0e04e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "94006cf1-be65-4e0e-bb08-0d4ef063188d"
        },
        "item": {
          "id": "a4891fc3-7b03-44cf-82f9-a81638995aec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "611983b9-b3de-446a-b128-ec23c99abf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edf10c3-2dad-42cb-9975-316c1bd88b91",
        "cursor": {
          "ref": "d47316de-3c0f-4a4c-b69e-5ae28dd28505",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "596a91e3-af60-4df5-a10c-4763d656ec75"
        },
        "item": {
          "id": "8edf10c3-2dad-42cb-9975-316c1bd88b91",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7e80f8f6-5feb-4855-8fdb-3688c3f38af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660a728b-9d4e-4ce1-b0c3-b7fdc6147d88",
        "cursor": {
          "ref": "e7bd7ef2-a8b3-4a4c-8cab-0c13b506669c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6bfbc92-e772-465c-9c32-aed663654352"
        },
        "item": {
          "id": "660a728b-9d4e-4ce1-b0c3-b7fdc6147d88",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b43c4f91-9ed5-48ed-9f9d-3dcda4e1ea30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbae5d1f-b3ca-495f-967c-9a91f9d1b18d",
        "cursor": {
          "ref": "b87c4229-439d-4c28-afc9-2768ac6671e7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7e8ee674-9226-48cb-b4eb-ebe836e4a5f3"
        },
        "item": {
          "id": "fbae5d1f-b3ca-495f-967c-9a91f9d1b18d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e88d7e7b-02ff-4f84-99cb-a6e91d8714f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519fedb-108c-44b2-a3b0-1403b307f6dc",
        "cursor": {
          "ref": "df6f3d8c-9b5e-4b05-99ac-a33811299d60",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "56e412fe-95ac-450f-aa2b-df0050e6e82a"
        },
        "item": {
          "id": "c519fedb-108c-44b2-a3b0-1403b307f6dc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "06ea7276-9832-475c-a0c4-9dae5e64128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539b3a7-17d9-49d3-85c8-e480af92f523",
        "cursor": {
          "ref": "d52ac381-c302-406f-8eea-e46f281948f8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6260c0d6-8b45-470b-9b31-58e359110c30"
        },
        "item": {
          "id": "8539b3a7-17d9-49d3-85c8-e480af92f523",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "238d1061-d61b-4583-8c8b-55ec753edfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba30006-f12e-402b-9697-aafc3a201996",
        "cursor": {
          "ref": "948d3614-f42d-4665-9719-3b40fb765249",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6b858dc1-4cdc-4e15-81bd-9acb46f16c1d"
        },
        "item": {
          "id": "cba30006-f12e-402b-9697-aafc3a201996",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9507a5ef-77d7-4557-a1f6-2251f559ab83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453742ad-0865-40fa-9d4f-c39888648fd1",
        "cursor": {
          "ref": "9919912d-3f44-4d32-b1a6-01c1643cdd8d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b13aab99-332a-47ab-8d70-4ce8c570bdd3"
        },
        "item": {
          "id": "453742ad-0865-40fa-9d4f-c39888648fd1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "001c5c43-63bd-4ba8-bd2d-b402eae0f2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce00637-98f4-4af4-beea-1210de96f5be",
        "cursor": {
          "ref": "8afddb76-2b94-4061-8a46-d23ca261a1b1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "217eec6d-3719-43b6-9d6b-316aa02a6d83"
        },
        "item": {
          "id": "cce00637-98f4-4af4-beea-1210de96f5be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0fe26d00-a013-4be8-8f6b-b5f1e34c9812",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce6353-6498-451a-9099-dd4cecb9d822",
        "cursor": {
          "ref": "b0fb5006-d689-4280-a888-07e5cd6dda6c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c9b6799b-8c54-4f2b-b74f-010a28fcbfb5"
        },
        "item": {
          "id": "b2ce6353-6498-451a-9099-dd4cecb9d822",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "33b7fd2d-55ed-4fb0-af61-fcd1c182db0c",
          "status": "OK",
          "code": 200,
          "responseTime": 2614,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc73ef0-eaae-4403-822c-8107bfb4fefe",
        "cursor": {
          "ref": "30423f9e-1b58-4ae8-bd4e-abfe701eccc4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3a429d11-7671-43b6-9284-e5920c43ba50"
        },
        "item": {
          "id": "fcc73ef0-eaae-4403-822c-8107bfb4fefe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8ac8a3eb-b8d9-4655-9378-a63960f2f064",
          "status": "OK",
          "code": 200,
          "responseTime": 3884,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99137086-0355-485f-883d-4f82d7a56e0c",
        "cursor": {
          "ref": "3d571d55-edc4-41d2-bc6d-8ee83d6bbf51",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2138798a-4949-4477-bce6-fb4a9070185f"
        },
        "item": {
          "id": "99137086-0355-485f-883d-4f82d7a56e0c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e5361e96-cddb-4ca4-86f1-27c00862d23e",
          "status": "OK",
          "code": 200,
          "responseTime": 3480,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf1572-2b74-45f6-8ce4-b8c92b4bad44",
        "cursor": {
          "ref": "5d958252-6e25-43e1-9ac5-bd7e8f104d2e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c0242885-b943-4927-a8e1-3d495069ebe8"
        },
        "item": {
          "id": "3dbf1572-2b74-45f6-8ce4-b8c92b4bad44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e53e279d-545b-4cc9-b64f-2fb14446b516",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf1572-2b74-45f6-8ce4-b8c92b4bad44",
        "cursor": {
          "ref": "5d958252-6e25-43e1-9ac5-bd7e8f104d2e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c0242885-b943-4927-a8e1-3d495069ebe8"
        },
        "item": {
          "id": "3dbf1572-2b74-45f6-8ce4-b8c92b4bad44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e53e279d-545b-4cc9-b64f-2fb14446b516",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f3d500-e3ef-4170-98a2-738345de3e48",
        "cursor": {
          "ref": "339f095a-f7a7-4310-96ce-6bf4f4605392",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6731c327-52e6-4360-8ecb-c13ccb2cd49d"
        },
        "item": {
          "id": "15f3d500-e3ef-4170-98a2-738345de3e48",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fd7e2f6f-5d7c-4cfe-9e1a-a25c604f5c9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeb83ae-3b29-43ed-a9c1-e3ec9467ac1a",
        "cursor": {
          "ref": "a0bbb7d3-6a81-4425-a6e6-5b7167cfa0fe",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "77300561-9456-4b92-b487-62f0337c58bc"
        },
        "item": {
          "id": "9eeb83ae-3b29-43ed-a9c1-e3ec9467ac1a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3196cadb-aef6-4b2e-8b81-6f7ef262b43e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}