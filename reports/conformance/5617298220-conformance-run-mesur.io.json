{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "06ad84c6-30ba-4d13-8ca8-a0ba63b3b395",
        "name": "Clear Cache",
        "item": [
          {
            "id": "86cb0cf2-1456-4d30-a56a-6de36c72c8c3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b4c7169-567f-4376-b48a-32072db676c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ccbe9300-3326-4c86-bc78-fea4c9f5ee42"
                }
              }
            ]
          },
          {
            "id": "ee7ed2d7-8184-4d1e-9877-d8c68ba3a0bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a60f036b-974b-4d82-a136-e6d3f6f96f29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ef6c407b-aeda-4875-aae0-59308ec499d6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74470275-ab66-4edb-a502-9406925cb543",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9d30ae75-3dd6-46ca-92f6-20b6253aa6a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df1a459f-c127-44dd-bea1-122d1b6310b6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28100ed7-23e1-40d3-a397-71ed7a81f53d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b016496-a51b-4a71-a676-d97cc1ceeaee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88a7f742-6101-46c3-b3b0-56400b0868bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6d58c7e-0691-4141-9695-d527130aa301"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "939b3ddd-8800-470c-b3b6-882c3d80b930",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64373ba2-70b6-4296-a113-ca93758dbdea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7e2c8e3-1e79-40ee-9b74-a5eb42ecbef6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b5cded2d-3c2f-4999-bab9-e25f60a6c2ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7bc2fd1-222d-4c85-990d-9b5db1687c2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cbb622d-529a-4d58-8d6f-960ddc46e12c"
            }
          }
        ]
      },
      {
        "id": "572b3dbb-6872-4211-a27b-db9ed6c3ecf2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e2e06c7f-ace8-48bd-8e43-1da523b281e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b3f3602-dac2-4151-8a07-418a544511db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f98bdca4-45c7-4e64-8db0-2bf241a02fb9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750fe31a-4972-4ece-a8a3-a5c2c5fd37c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84e36fc9-e677-4b46-8eb7-e8ce87a5272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77818dd9-72d4-4a1a-9057-ffb9490353a3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c8007c-9c7c-4b49-8997-672af78bcdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93f83896-54c9-4a03-8856-1bb20180ca2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825b51a2-ac97-4f42-89a0-c89922925e45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa446771-2ee2-4f90-a4f3-4a455ee13666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d74ba30-3030-4c19-b2f0-9f116bec8564"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5e5a4e6-e872-46d6-aaab-53ce6c250b20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0ae7f9f-e415-43ac-96ad-79df4d3ab316",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579a8968-0e4a-4cb6-9d6e-e3c89f37d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c60f602e-b7c9-40d2-919d-fd2c060d818f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064cba9c-3314-40a2-8c35-a4646b72ee39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97798556-d33e-457f-a9d9-57431b414588"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c00f139e-7975-4c8b-a69a-8451f52cbee1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "927fc516-a26c-42f0-b754-b22a70f1142c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c577c601-fc16-4691-8e3d-75a404165073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c9db72fd-0987-4cca-b770-085c96f60e11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6236d9d5-d998-4128-8b63-c671ece421fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "38abc98a-ea93-485a-9407-0cd2be09e08f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2de0f671-5cf5-45f5-af11-108ae64a7ed6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5b2e2b1-9557-4dd8-b62a-519b689b435b"
            }
          }
        ]
      },
      {
        "id": "34ea4998-6643-4989-9a2e-7a56f78b78f3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f148f62e-42e2-411c-84ee-ad73637241ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b979f246-136d-493b-9b5c-50d5cdd1a465",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "052a8aa2-3230-4872-aecd-b35799efbe85",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8a8a7a-5f16-4a47-a2a6-a8c5c65f5a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa41875-6237-4b56-9073-9d3c67ec1ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d82a16-c443-4e1b-8496-c4ca318f5459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce102eb6-0faf-47f3-9d45-fa635c99d22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0327778-b4bb-4830-afae-902cfc5b8172",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28444bf-d7f6-41af-9722-e2278efc741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570820f1-f12f-44e5-a761-91c21be32e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe372d6-dc33-4ebc-8d0f-6a8fccbecf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ddc3ffc-78ae-4d47-a89d-4bf4288b791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1e21d9-2f86-45ad-afad-9305bae0949f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb5442e-a688-4f2d-8c6d-a76752aa2ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d321f66b-208f-4aa5-96bb-4be1d32e9dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacc7df1-2b4f-4820-a5ca-e992c74e511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca0f914d-a0f4-45d2-8545-c1ef52830df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b739a222-d770-49da-a155-188b419298ff",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b4232-be93-4edc-a2da-5f07c883e42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e9a8c9-2be2-4ea1-8bb2-593b7467a4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551bcb37-d75a-43ec-a2f6-c5dacc149325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0d66f24-094c-407a-9ae8-f810c7702914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fee9af-ccb0-44c3-8353-f1916db32f1c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e1c405-f436-4a4d-b87f-bf1461f65f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2198838e-8f31-48de-8a0a-97dc81645c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac5ede8-e97b-4f79-b862-3b583fe5f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b4dbfa-0871-4711-b572-32616a6c06c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeec481e-30d4-45a7-ba3f-38fdf3e263b6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d942111a-eccc-465c-a73c-7c60c2074598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6cf56e-dc07-4f61-9034-9967d5256d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885afb02-72df-4bc1-a0db-5d401eed2099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a94cdd7-e4aa-4dc2-8fe4-8c045ac0556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643728d6-020a-47ca-a9ec-7843ed8d5c00",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c82584-5dd0-467c-ae20-a15a0c4f5396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702c0011-6ae3-479a-95ed-48e06dc9de82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda60365-d742-4674-8301-02755b63e076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c199eae1-34b0-4815-a898-039a8990c1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2fceac-0fbd-45af-8489-53223e3973e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5245de-77db-4d9c-b7a6-f61d6426ef11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e193f2-f443-468b-9442-1c36ddbe41c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bc1ace-5554-40f9-957c-aafd51da4255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61088ca2-34be-4234-b9ff-b48f24e5026b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4214b3-b1ed-40ca-9e10-a139b12e2b8e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec62b6a-b0d9-4870-a804-80c6f3429a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4433c51-57dc-4732-a781-fbc3ba9c7831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c77ce3-7b10-49d2-9702-1ae10d743f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71a47230-37d3-4e19-97e0-89e84855f9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61102d7-c27e-4c51-a6a0-f7f76bbb081f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0ed2e7-4670-428f-8681-e5ebec46d993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3812f15f-fdae-48be-89a6-a435bf9b62d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf18a74e-c16b-4bb9-b813-40d8c3ba5ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89373490-51e1-41af-b67f-e12bd2894aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc955c6-a4c9-4fb0-930d-ad195c8c9379",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ba256-14df-4131-8bf2-3f1e40f48027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b3232d-ceca-4d04-aa83-6cce2a4e3c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ba2ea7-5e62-4d46-b7c0-1a0ddffbef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c97132-a626-469a-a12b-6d0d8dbb5235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bb9fb4-c99a-4e32-9c4b-5ca791b45ca9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbf84af-005d-4416-97f7-109fa80cdb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596cab83-257d-463e-9e41-ba1d958e4300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cedff8d-07d2-4142-a89b-e62d775f072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "624d0c64-83ee-4961-85e3-66b381821826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd5acfb-bb45-4dd4-a9d0-4ea39ff026a1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa4b56-e240-4ed3-a47d-2567e4466d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b590f340-dc50-430e-adf1-e7506331d2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531583de-8114-4d24-9e35-73ba1088cd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1787d76d-412e-42ed-8257-d139a8ceaaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33847644-b7c8-453d-9c6a-1737b2de2dd2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad28d83f-4d09-4bd4-aff3-0603ad6cf402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27190f1-7346-4303-b6fa-87395df8fae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a3c34e-9e20-49cb-bcbc-42807c64ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f145daa-54ab-4dfc-b878-98845405b03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd70d13-f505-4474-a86d-f503eb4abad0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b539c1-5e9b-4c5e-b725-64b068b2146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b2b64a-3a2a-460d-807f-6688f3d18634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f1b01e-929f-40ef-aed4-08a21f2c0940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691e7338-178e-4b39-950d-3621cf79eb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86221f4-203c-42a8-b8b8-1d3d4ed0e39a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a70d4a-1bdc-406b-8218-aeaf82b5ca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4782dbdb-c88d-461b-87f0-1911e877b6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4739c81-ffd2-42c8-bb6f-c714ce583e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b72a848-d38e-45cf-b134-7f708dbab5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf505a68-31b4-44f1-a50a-e392c63b328c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18404084-4348-4e39-8f29-1c3719d23dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4446245-19ea-4d3c-b932-5c1aedeb6a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141bb342-1a2d-4e99-b72f-c32318d5733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9227acd-19a2-432a-89b4-2214a8c1fac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60139d6c-76e6-4ff7-be1f-df587aaa73c9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f012d5-26ed-4594-a63a-1fcd75d30418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319c1d41-d898-4ceb-9608-dc9797e65d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5ef013-eb16-4c1b-a258-0585cb06108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a8628e-7840-4480-9b22-bdb80e117442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e5b542-80b0-4bd7-a6f2-f4490bc2f733",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617333ce-f8a5-4863-80de-28ed96590043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cc7ffc-d4b9-4a9d-b6e2-5148b088c51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0412c77-cdaa-4b96-9dde-21b3b32c92aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd31639-ea8d-43fe-bcda-aac0a2eda105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bcb956-c64f-4e0d-bfa2-2edcede86666",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a08280-16d1-4e07-885d-da4d50c2c374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae1d4f5-a286-4d0c-bed0-51190ea8b9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb012bf7-2992-43ba-ad51-5e6b1712ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fbc75c-a216-4cf9-9fbd-87de49e09596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b31839-761a-416f-ac08-8be84ee9716b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34bbed-2b06-45bb-8f90-3bd2dc584fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f05755-f6b0-49aa-bf90-5ee01a359ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ecfa6-590b-42c2-9840-1736513e13ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e328c26c-627c-4c18-909a-4845a239b702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f68304f-80bf-41ff-9403-0d499eceaef4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04422869-f5a6-43a4-8ea6-e262ae4f5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb91cad-e074-4c28-9460-d68c5973de12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe14ae6-7030-4728-a005-48729ba7ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4f45ac-5e8a-4950-a9cb-063af7ec47be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b63e0a-90da-4290-a3e3-44eab3035a7a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d0c2a-e835-4012-afc6-d7a9e59ed537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f808cc1-eb14-4ab3-8c41-591928048c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e272bcc-18df-49ec-8e98-6905e4753a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0593199-176b-4329-b89e-db631631df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eb4e81-06b7-4e65-983b-007191d33819",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76fd2df-ec82-4660-9e4e-e4d63c44b086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2980cac-2afe-469a-8445-f55a07e1e907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d61eef7-d9e1-47b2-9e6d-7791a84aaa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ceb834-edca-413a-9e53-9c0ef43efd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50b4af3-e7d7-4b76-80b5-00c99017edc5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270d0c6b-5002-49a0-9cea-e79a5eb9c211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61489c40-fdff-4da2-9ac0-1f0e83c07533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e889ab-6f4c-42d5-8c0c-60e895574b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dd93c5-215e-4353-b091-286856586e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e35827-68f9-4def-970d-de21ac40dec0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9e10e8-080a-46a5-9a94-6cd051b58a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3d75dd-e6d4-4032-8f18-2549dea1c195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b656702f-b91a-4317-adbe-2fa0e6afd7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "916d4dbf-5e4e-4bcd-83b9-362011e39e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20306f25-f6d4-4ffc-ac8a-b5a841eff401",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc30a42-5b2d-4616-be71-e75bb0f61610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a7a231-0f04-4a0a-805e-b0ffc8824b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc2d073-2a0f-4a9c-9549-464e3d6851ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b713ffd7-cb88-459a-a182-fd200cad83bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f1ab59-3271-4318-b609-1362b853dd1e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc7d9e6-8a39-44a2-9040-e73f07423282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a63954-7f32-49cf-a990-e2b6528de8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe438e2d-5c50-40d3-90f8-d629cb5759e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bb6e6f-8022-4932-80d2-867767198233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07589d6-3e24-4777-8a92-2c4aeac35f91",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71882c7c-8261-4198-bf5e-c0302bdb7697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4749999-e531-4c79-b2c7-10f560b27a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5350f8-dcd9-4fc7-b187-a76162f042f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa25a416-e055-4174-a53a-544f9b5d7dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1525e-fbc3-4919-b4b2-4fce339e8fa3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8469dcd6-cf69-4ad4-9c4c-0dd6fef96496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29bbe5f-b609-4989-96f7-218ff94afbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78ddf99-bdef-41c7-9a0e-74bda9c8a010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "49d884f7-3801-446b-8fb1-e365d9a9d02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cc7826-409f-402e-b483-be6a983c190f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eee104-1c97-4feb-b4b4-3c25aa83716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f136a784-0cf6-4fc8-ac7e-49fef940da48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d4f0c0-f7fe-4233-9c16-b7ee88250777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4779d6-9d3b-445e-899b-4a99cef5280c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e2b7fb-c941-4958-849a-d0033c343566",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7087ee-d321-4c92-9dd2-d614d3554f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48fcbab-8dd3-4102-a86e-bcc0d4fad430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919efb0-c619-4964-8044-be3f6e580acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f80ca0-88a4-457f-8180-243941fbb812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76166d90-f94b-48b4-b0e8-f968878e9802",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b7b8be-ef18-4ee8-94cc-913dc1fd1f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff8c38d-1856-4a7b-b532-8497d515f357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e08c207-b2f4-466d-a1cc-3ee88e7c2f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a4386f-08f0-4d24-8ccb-8e9850b62dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106ac407-d5d1-4842-bf2d-ca24693aa9b1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc7bf12-b2a1-40c3-921d-46ad93b206f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd17cef1-7276-4e2b-960f-2e1a43ba604a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e75a63-1012-48b4-85dd-03b7d49a7c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe980300-852c-4f7f-916c-e0390a2cf188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc4c45b-b1b9-4b35-b501-70e32b15a47e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceb2843-842d-470b-9a8c-1086493d815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60129ed-bae7-43e5-be45-d9826ea24900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5077db9-f697-421d-9515-d12fd7e0d1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "017dd254-80cd-44bd-af7e-07d6274bd619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fa336c-665f-499a-ab6d-33115811a9c1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7eea11-1745-4560-8c1a-7acd80ab5e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2b79e6c-e64a-4767-bd43-95dc26aea8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3fa56f-d75f-4330-98f8-f8dad2763283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bb15f5-609f-4312-8228-8b3aec9046a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5aa2be-fbf8-4fe8-a1c3-3523ab86eb76",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18de1e29-4ca0-4158-81a0-7e10bf50dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ff5b07-04d2-4594-8b37-6d4a39863ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c0daa1-4600-407e-9f2c-d87c6bfed750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b15ba3-960b-44b3-9872-71e967a9d987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c3b5d9-2516-48d3-849e-0233acc61b0f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe6c091-661c-4f0a-bbfc-4aaad0de8ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d2fe95-897a-485b-90f2-55580075baa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f13a43a-a8e5-435b-8f51-b33068a8af07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11335462-a45d-497d-a24b-fdf056840141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de6b7e0-44ca-4fd4-96e1-b30696184f30",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb5d563-86b1-442a-acb7-a42fdbb85a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ee0a6-2cae-4bf9-9978-1910bae20de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83a0746-d2f9-4486-83e4-f4beb3c5af56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c11bac0-7f61-4c86-b0a9-8f6dcf186dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8fc100-4c7a-43da-8c1a-7d97ece26053",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b99e0c3-b1da-4bbc-9028-5190a64404f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371071d2-9691-4765-bf11-be1866ffcd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1b0199-e264-460d-a9aa-a25ff9f99e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ff957f-2c57-4a0f-bcad-5c15937f35e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf24496d-ebe6-42cb-8e87-9340a1e7f6ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b356e067-4f45-4095-aeb0-5a05b1d7686f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f19be1-6b5f-41d6-910b-b79d5b5c19ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdb7b8f-5df1-4987-9e75-2f3b07ac7f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "062472dd-933e-4e88-8b4e-13dfe713a7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8435acca-dc7a-4d47-8c9f-06fa9baeb6e1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9780293f-83a1-4b08-b620-cfe881f7a645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9868259e-fae9-4f04-a2a7-efdfa81da52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31838c00-66cf-4831-b82a-cd8204d864b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "927c82dd-e1ed-464b-8e69-d03e05526f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccc032a-fd30-4854-8d43-ee43b3f31759",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54efea20-662c-4c0d-acfb-b72a043661b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7ff275-3d7d-421a-ba2c-40a163c9b779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc73b32-c217-4727-9ee4-27c15c214a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fa876e-2806-4419-9af5-8f3f878343c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc6642d-27e1-44c0-a51b-ae2b8bf211d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58ee7f8-5d63-475e-86dd-1e4810b9e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b289fa93-47e0-4e45-8699-fad6da3b9663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc487732-b3f9-438f-9549-923f85f35b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "110d1255-49f7-4d37-92d8-3db431969898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86953da-53ae-42ca-8927-4041f1ae0435",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06bd80b-1d26-47e5-863e-1f7121f30701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f515b5-e855-47f6-8e09-8e267bbf18b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446dd34e-0e3c-41f8-89bd-965c94fa64a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d146632-a6f3-44b1-b129-ce77f9b0752b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8ab785-d77b-4776-83c5-51a830005d02",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba2848-4e7f-400a-bc7c-7b33304e8257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ef4da4-7ca1-4faa-92bb-092897c9e541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a96ff3-d55e-4b49-9663-2165b8c8baf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22aec26-e0a3-4597-a92f-446b3bcf4693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd6c0c4-5a95-4250-be4a-8fffc66deddc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d49718-5f33-4a2d-8063-f1344df6df2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2296b02-5399-4e3f-8a38-a3d0fbac38c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e7f683-34ed-4a10-bd72-a7be5a8e7564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "116c432d-b2de-4ddb-9fbf-44a4b2f1d1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af7c37c-8834-4a99-b792-01b1aa86c690",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde6b8fe-11f8-4efc-a3da-929ac32aa1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e662c1a-e2f7-48a4-bc8c-34cf11974362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ce10d-a7f1-4436-b695-ba2eece7299d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cf8e24-4361-4867-8cd6-45fbee03888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7646f72-919e-4428-88cc-c1d52ae982a4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04879912-006e-4952-856f-ed21eaf9844f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f97533-4ade-47c7-a2df-05aab4f12291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e2982b-6890-4617-a94d-18fe09ecb9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d32035f7-79e6-43e0-85d7-33c4e6d14ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fb46f6-ecd2-4cab-84e6-1a4000bccec5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940aca98-977f-458b-9385-9b6dd841338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0358f18a-b783-4c06-a190-a80e4ee14572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcb23ac-a453-4951-8e98-b55502adba67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da5d8837-5408-454d-be85-8f48684c823c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb021af9-7d61-4d38-8661-2cf4dad33abd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3a1781-2e06-4d33-b0ad-f350443710d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8931fc-2c24-4eee-8d1d-ab55ca505671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4d342a-b612-4ec9-bdb1-3c3089c0796e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e748a92c-224c-49fc-8634-7e325a2a03c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2fbc29-2225-4be3-8cf3-829b25dfc318",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa8d940-7991-482b-8d67-277c7c04288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05207ca6-329f-4b62-9ad5-a4aaccc26fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d9601e-f8b8-40e7-97e0-9db7e74981ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd29c07-9f18-42c9-9d08-860dc63c758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b931c066-938a-4d19-a4d9-95cfe3cf1c12",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb9573-6518-498c-966a-0b4933517756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c338b477-18c1-4357-a0e7-229cfb455306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9857525f-df4f-4571-a22b-d301014c2324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55def3f-6647-4cb4-94aa-3f33770bafb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea4d204-1155-455d-951a-5aa0f194f2a8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddbc733-88cb-49ad-9e04-1a08507966a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562cd02c-c834-4404-999c-71f677dbb836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1832de42-7e0c-4585-a7fd-dbbded737bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21799d58-ab7f-4d29-a3a4-026d26474f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce8338f-29fe-46e9-b09c-49c1982b974b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd83a29-20ec-4903-92c9-8d5bc9cf683f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91df32dc-f402-4079-9518-2bdb14673b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1236daea-f923-4bb1-84a0-72871ecca931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8582f72-2d4f-47a9-81bd-cf277f949abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfaa6caa-2c5e-4d4f-8cd1-9db3e02d3a12",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83966928-52b9-4177-808c-85c75b53ce6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5ae49c-d0db-49fe-9172-fc853eb5386e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315aa631-0a0a-4d8c-9aec-d18edf54a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe46d47-4f78-46f3-9bf2-e1bffe0ad73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe956010-e98b-42fe-805e-afd922c8bcd0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7286f0c-c350-48ef-a906-063fc99193df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb62cb4d-8cd8-40c2-800b-dca0a34c0145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335a97d9-8576-4418-85cb-6c65f491680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e610f572-f6e1-4b3a-a8bd-02a596d441e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ac037-c948-42e8-a58e-3e0e2b5cc82f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffef320a-5585-4756-beb7-4e8f5f2c8de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2367b66b-2a45-4110-80bf-0523e278abbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480bf389-008a-4112-8e77-4cc0101a0c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d46e147-d190-491a-9fed-145ddda95d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2adc7b-2209-4cca-b6c6-83c9f3025504",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479e41b5-bd8b-4807-9cec-8a81daa614da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d274c16-12ca-4e92-8c26-3e5eafb98a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f40c8d4-4222-49e4-955a-7be86ce52893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dde89c9-5969-41d2-a993-6d17a6152fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c996d537-09dc-4984-9958-ed75a4e0801c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e65dc0-cffa-4778-8be9-49cd1a3f765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa961bc1-c0be-4fd6-af64-a7243e3013b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe260ee-b50f-44bc-a39b-59dea9c492af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad64945a-8119-459b-8346-bdd01a149441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb3ea63-e756-49fa-9af7-11cdf530649c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23008d2-7fc1-4f0f-ab7e-ff444e142938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ed78da-3cb9-49e4-b4d8-1e55ef1f39c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3bf395-6555-4107-92b0-ad1488b5e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55739d8f-3908-4c8e-b64c-3af0788d4655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f88047-ebd9-40a5-8692-1d51757779bb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef146f1c-69f6-4861-9b49-1a5f34b8cf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eac30ea-9bc4-4b3f-a411-84371140b157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f54279-6dbb-44c9-becc-e999a0b64795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b54734-0e06-4a51-b834-202d73357ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64baf0a-c048-4e83-b299-5da036030cf4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d7db77-5c6b-419c-8d85-8122697af735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ef106a-47a2-4a10-96c2-9a3b524c230b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed57c409-feac-49af-a759-329a176fba33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8de5669c-2b4c-4f4b-9745-4971cb977c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7837daa1-21e0-4bb4-8aad-794aa6cffa3d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6672fda-c8ef-446a-be2b-6b193ea5a067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8d9383-f6e3-4fc4-980a-57b211a16ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771468fe-6dd3-4f40-a4de-5e2b696dc76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0c4432-11f7-4727-98d8-a0ecc30d4248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc741a2f-a1f3-4b70-9d57-a6b8c4904944",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed61e87-ddca-4865-809f-7bccddd6129f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb5fea1-3df9-41f7-a9b8-d1782ba67772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397af166-3f9c-48f6-8d11-5f6605f3d6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "638a511b-d566-4e5e-b567-20736b9c9e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbff71a-facd-463a-950c-33c0ee1c9a4f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10bb64d-a319-47bc-856e-c072d048923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91c629f-8d29-4f24-bc38-869a8d7f02f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee27c6c-9b3c-401b-b7b3-522607a47d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f60507-ebdc-4774-bd76-b7ba811fc944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b832a542-b922-4d68-a566-d588b8cea0e7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed95caba-2c1b-4d53-932f-753ea1d93f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76053e9a-6a19-4f22-8137-d286c0ecf788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bfc12e-0cb8-42c7-8862-35dd316443d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88097677-a697-4111-b19f-6af5170db4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95737812-652d-4a5a-98af-245d7a31468d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a5357e-c116-42f3-a5f7-cea5742aae3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594e9a7c-2fb6-4db4-b5b8-956ae5e7e3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d701fa54-c351-41a6-9dfc-3284efca79ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "880da1f3-49c6-4b81-be04-635f6b25c75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55802313-76a2-42a7-b2c8-9220e454e21d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e91351-136e-4052-b16e-b21de0cebc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31315ac8-9f97-498d-9ff7-465ef38054a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa81578-b6e7-445d-a861-f280970a9b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2003ca91-59d1-4b9f-96cb-16e6cd299412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d47553d-40b3-4d1f-a3b7-2942848fdec8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c230f1-4118-426f-bcde-fedca7c0e796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d2d441-8cbd-45f6-a854-fccfb95ea41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1422652-3350-4a82-b8c6-86af391f387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5531b8b-216a-48fe-9944-c4d96ce46db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d62a32e-63a6-459c-badd-5597faee7aea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e0f415-2ed8-4f75-b060-aea300771648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348fa286-1dae-4a31-b755-06f9d2ea0546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f355a8-fccd-4704-afe1-3cbb5f2f10bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "055c2ce6-f841-494b-8ab5-a0ba76dc87d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35aee08-4246-4b48-9971-00078a22b43a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f1cfbb-b103-4501-822b-bc48e45fffaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca8c93d-ea14-405b-baa7-a503c729eb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60913f96-7ba3-455d-a401-4a4fe16190cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01c91e4-e14f-41e0-8319-d0a083a1b7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e485ee17-9463-4d8d-97ce-c583f7be6b85",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd54e06d-bed1-4027-8974-d10fbfbcb361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1441c0a-74ab-4839-9d8a-e56693d07746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cd2124-2891-43ae-aa39-420fb27eb3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff652423-01a7-4457-bf3a-e637ef855979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7b6ad1-901b-4c61-8271-55f49d762786",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0abb99b-fceb-4f30-93d6-627a01b8a05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e2ee5e-e921-403f-bef7-7756549c5366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45cc46e-b236-4093-ba1d-a525dca50b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b297743-ae29-41e6-9c05-2bd60310243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcaa880-3776-46ae-84a2-5a2c34d1f1a4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe994e-2b4b-4937-8e87-5740eadcc1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d026a360-7838-41d8-8b09-17e74514c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862591c1-251d-45ab-b26e-3873cf0a8388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7eb90fa-5707-49b4-b30c-637ea2d59c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828ff575-c018-4357-831e-ecc6fef027b1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f95e92-4fe7-491a-bfa8-160b9818ba97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9696e5a8-8129-4287-80c7-257374f36794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4287ba17-e505-41f3-a219-c05de28803a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b09b1a-c3b1-4ca7-aa19-d80970dfa501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70da7671-b30d-4379-9206-4a724f823fe8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a4eb1c-1ad2-4808-997d-db49bbe64af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f60fe84-47ce-427b-b1bb-1c234085f2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c377463-89ca-48d6-be1d-06f635bfafca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc86e85-576b-4cf3-8e43-869d93ba4a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0355d38-31ca-432a-b79a-07479e4500be",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15215eb-863b-4b9f-962e-a5b02296f2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34a24b3-b7ea-4401-8743-abe397ae7be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f61abd2-d4d5-428e-aae7-1ae29c79f8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0527034f-9175-4b25-9243-2ee8b9169bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ec315-054d-4c80-84e2-1c8ecef1b0d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c481dac4-a9ed-4e76-bacf-980fae0c7921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba84fa2-b1a7-48e1-91df-d69df7073be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6f6645-a34b-4a7c-94f4-5e7d73b6ddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6723a0e5-1cdf-4068-a616-1928964361d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1133c9a-1c7b-4996-ba70-ed34f397705e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2074586-ae53-426f-99ac-b0dff17e560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b47e29-39f0-4429-ad7c-c5ded4dbe638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdeb02b-abb2-4923-bb5c-1b8f63d243b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "501a3b24-f928-46a9-9b53-eefeae5a1d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a31ac02-4cf0-46e5-ae4e-88f463e4977c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9514a75d-336a-4775-a402-0f2c8eb5e04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb59e9e-032b-4e49-b2af-1e491a97ac9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae277cdf-f221-43e0-b8c5-d3e4d2b3a44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b400ee1f-f2f3-47d6-8329-32316cbc2bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cee0e66-974a-403c-91d5-49d5d05df42a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153b2b3f-3e47-4011-85c8-99a4e6c93d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af99cbf-1cc6-4acd-86e3-328d106d92ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab7a0fe-4943-4e7b-bedc-fc47f601cf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4929c6b7-3f05-4c8c-aa7c-8d884d0afeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a0d195-6f86-459a-afb2-043a5249ed59",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7928dd3d-451e-4520-99c8-2bbb8885a47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d247f51-5453-4afb-8a85-d8e8e76adea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47df3500-be27-4dc4-849c-6997bfd16d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d800d140-ba84-4cd0-9086-4b8a715c7e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad19592e-cd92-47da-be86-99daedc8286e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272ae54c-586b-480d-ae76-2eac2e080710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da64f891-97fa-4c75-bc7a-796694164744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd5a25d-1cd3-4676-a625-514bbe93ce15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0a0867-f16f-409e-b5f9-ee94e8f4f3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f39a4c6-3f8d-4ffe-94aa-a1c6bdb77c8b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eeae8a-f522-4339-ad5b-4782d601573b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d799d3-e125-4212-8411-fc2196585174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bd839f-8dd1-4d9e-b4c3-3c8e69668603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32821b8c-519d-434c-9d4d-e3d91c732329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10768fbe-fac2-4687-9ec0-19331f875d4b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8100e04f-8295-4636-9f6e-f9a7a05f2d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c689a421-d6b3-441d-a87c-4cef763ec906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932d8944-e969-4500-9712-dd8368eeab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32b83d36-990e-4f2d-b81f-034eb9e26616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9303845d-1a58-47eb-b08b-0a8c5473b999",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd809b2-79ff-42b4-a5f8-5431552d68aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ec04d6-3c9e-419e-8ded-993ec2fb36af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5923725-710d-4a0a-9fec-086e676471a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1f9dd5-4ece-4424-8fe9-591af7a7babd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfa9643-3363-4954-8a2f-2bacfeec40c7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21d417a-b5b2-4d68-bd00-d05924afeffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771a98ca-3a43-4390-8782-d18d9348c872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1c31b6-4e6f-4bac-9dd8-cd0da95ea423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f38cdba3-4bc6-4cbf-a93a-db47fa21854d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568c9a1d-28f4-42b5-bdd1-426118a8e246",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2b50e1-f225-45b1-a11e-83838f64ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86001cc2-4b07-45bb-b235-c89ae7f490a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afe0d75-6fa5-4dce-829f-7f9a40255c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ea5e3c-cc50-4baa-8eff-e10794cf955c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa74ba70-4e32-4a80-87a1-fd096cc466eb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9392329d-6c91-4b53-bea9-298320d9d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4e47f3-c499-4b39-9beb-5a12ea6b6c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ab02fc-544f-446d-b464-ce9c2810afb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dbb174-da79-4cd2-a5b3-617c35ad72a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2de3650-9869-4977-9630-eacaba543182",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af35f5c-a6cf-46b2-8866-4d733a04ded4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3ae3a2-3169-4899-9256-343f027b687c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8861a3d2-777b-4a99-8598-e39c6e459bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "040749ba-661b-45f2-ba3f-28f9f4cc4bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f31dd3-c4bf-4c04-847a-d93d20f7b0ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82668fa-71b2-4c40-9739-496807225959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7dc6acf4-2395-4048-988e-9a3e896305e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dc1ccb-1e58-4b1c-8b8e-bdcd01cf7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d69c8b4e-8df7-47b6-b7a9-aa18649cd974"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4179b2cb-4f29-4a08-82cd-357ee0697dc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4442e67-b9ec-4cf9-8d58-8ccf44634b6a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b92b67f-583c-406f-abb1-18c04668d550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d7ade67-a2f4-4429-b8b8-94dfcf6ed634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e7d13c-95e6-40c0-add3-5b4cf4ccd742",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ad35e3b-696a-46bd-8851-d2c15bdfb612"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddbdf958-adb3-49a9-a975-6dff36c71a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d77c6be-d70f-4320-9723-4b286d01cf2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d5d425f-af7e-4ba2-a94c-12486d724abe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a9cbfa9-cf18-4d37-925d-00d6f33586a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "baaa14df-7a6d-461d-b582-9984cc8c9d58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef0f8122-e8da-4696-a5cc-62e353347bca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0e9a285-3550-4606-8ff7-a31816c0ff56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5dab08af-c384-4705-a2dd-32f30560ffb8"
                }
              }
            ]
          },
          {
            "id": "8f22888d-227c-4041-98f0-61511b7b518e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8e8d942-4324-4bae-beba-e94422fb6a55",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aa61c41-a7cc-45a5-8160-dcb87586270d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02ddf13a-228b-4aeb-bea7-2d308dd36d5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba82177b-57d0-4f92-ab23-3a091948a0bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56396874-273e-4e7f-b7f5-11f25954c2ff"
                    }
                  }
                ]
              },
              {
                "id": "d2802755-94f3-4306-9138-817bb3a2c06c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1647bc8f-116a-4d05-a43f-7b5cbd818516",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6871b9f-12f0-454f-b5fd-ed35994ff247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a79baff6-b4c7-4619-b649-88e028dfbfbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47f1037f-1f6e-4914-872b-a85018662cea"
                    }
                  }
                ]
              },
              {
                "id": "450a6828-c569-415f-bbac-142a4244a7b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8453282-1635-49d8-8986-a557594ce33a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "931fdaab-19ef-4699-863a-3f6236ce901b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f0887d4-8c58-4435-bd7f-bc007f1bcceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04894647-3c5f-4196-b6ce-bb9df26f6a19"
                    }
                  }
                ]
              },
              {
                "id": "2eac6664-3c70-4be1-91e1-a641bbcf507b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fee654cf-8837-4312-be1f-9a1286e2ca6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b55085a-7322-45e5-a404-1447de5fa2cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f855d9f4-a25f-40ec-ba93-2961e31fbc95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "56f09d01-c255-42cb-955a-1dced9c78ac5"
                    }
                  }
                ]
              },
              {
                "id": "1e3a04af-fac2-4408-bbe2-f6a13af5c20f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56ea028-52cd-4167-8d5c-b81d1aca606c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1393ce2-bf4f-44b2-8079-18ef505057c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e123827-234e-463a-aeaa-d1a14a598474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "58b0d543-4531-44af-973c-9c3ebee37d1d"
                    }
                  }
                ]
              },
              {
                "id": "da780879-dd42-4a2d-87de-1fc9ac4ef468",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ada8c269-567f-4429-b327-de269f191892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b291edf-61e3-42ef-8f8b-e2f000888ce7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d74a34d-d8c2-4b07-b5d0-015b0c7e2237",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4b0b16f-78ba-4c58-b701-57b211567823"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23fb337c-3325-49a6-83fe-dcb824aedbd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef2ee948-cdac-4ab0-a833-1f4024d3fcee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "086129d1-ffd9-4094-bcc2-d291a73fac6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02becbae-ff6f-438b-8f79-cd771e1c7470"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8b69161-73d7-4495-9f23-33afc3d56366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a845281e-25e7-4c00-baac-3bb6c8848109"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cea095d-ca50-4c70-8be0-c37c7647ab93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11093b6a-ed42-4a03-9260-8c3ce650a908"
            }
          }
        ]
      },
      {
        "id": "cb2c7116-e058-4fea-af3e-cc3d140679a3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7bf5c45f-fc50-4c2a-a900-4b5e285d51af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f65cc242-dda0-439d-adaf-1acffb33b6d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87cb9ab7-c04b-4db9-bf60-81d2c87f7248",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1104e7a4-b625-4af5-a01b-0afdf1b82114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e9fbe9-bda5-4f0f-a562-85b3ede15810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a79acb-7d5f-41a9-a37a-819e24b1b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d48b14-c900-48bd-b711-7aa13f883c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a60c33-0a37-479c-8b44-09822493854a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d530970b-0b3c-466b-9370-415ec0e7c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f417feb0-eaf2-4056-8f09-5c89fa25930c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379e484d-8a25-4add-9f3d-608c99ac08e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23306df9-785f-4b30-bba5-4a3e34aa1849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7230af-62ff-4db1-8f6b-ae09fec8ec24",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5978f444-ed8e-4838-b45a-db0224118905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3170f37b-9689-4f5b-91a1-35f177c8cf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc888f71-c789-4c1c-a6ab-b8273bc120f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "543e35f9-6aa8-40d3-b83f-037386f4247f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b1e9c0-e03e-453e-99f7-120d50114d9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826d4f00-8669-4035-a800-9d80c195c792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42f6ae8-7f36-4056-8222-c3dbb020b734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de445e0-a2f3-4f59-8d5f-ade1f933b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b279bf-414d-433b-ab8c-caeb98feb493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffed3731-e211-4441-a5d7-b41ab0e59660",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91f2ee0-dc63-4b5d-a9f6-b97af70954bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f34f276-ffc4-46e8-a396-0f40c2c454e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb7613b-3a21-42d0-a08c-d9a93cab3495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be855c3b-f2d4-4a85-b466-9519afce3051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f02975c-2843-4f28-864d-e01e313881a6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0446960b-5bc1-45d2-81fb-ce4cb4f87034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fade52f5-2001-4660-ae75-c1703534bb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2455ca-b6e5-4c13-bf7e-af77e396410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "425cdd2d-5615-4584-8973-bd06968ad2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780f3d82-b526-40fb-a3eb-9edb1098a71e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416973ba-2d28-4e2f-94e0-dc5e87db4d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74990827-43d1-449b-a6df-f92505ba4bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90553aac-7064-41a5-bcc0-6472687575d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fa2a05-a7eb-4d3b-988a-20b03b6c9c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af57ba1b-6b8d-41c0-81fa-d1c100d75167",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea16206-9492-41c1-af6c-398015bf9a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dabd5f-1a2e-4542-8d98-75f67e7e7228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4535e41-a40b-4187-9369-bc1534adb671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b20fbbb-df70-4a53-971f-00295f0ebf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48f9ff1-4290-4a75-aa03-012dc550b3b2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e654bba-6870-4e5e-b27b-b0acccea55ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0dd3f6-8f28-48ec-a0eb-206bccbcb466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dd3f80-68cc-4b02-abf9-1ea524e677e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "305745f3-7d8d-4606-a94e-570e901bd6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f74a52-0f85-4cb8-b99a-0dda1584304c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb337f5-d3db-4297-99d8-91ebaca6baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b300d285-fc5e-488c-a71b-cab74533a1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0456080-400f-46ad-9ac7-9936077567b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeb2980-3dab-455c-887b-ecf069aff47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6367e83a-1588-491d-a983-af15f152c9dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f02c80-5752-4bff-83da-4846349de3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1f6dd4-ee13-48a4-94ba-16ee166035ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30947be-3a79-44e6-b533-037fe1356cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30ca075c-9ca5-49c3-b003-104c0fb21a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c470911d-2665-4798-aafe-828500e2a24e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5708660c-4e50-4aa8-9f8a-62c4cc8b6721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d424dc-b98c-4b46-aac0-c6157c5f3bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa98ac9b-28c0-485c-8061-2644e40a26d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "776660c6-d2b3-48a3-b363-11fa657505ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bf5467-024a-41ed-8db1-c89db149ce8e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cc1990-6d61-4164-a3a4-9caeeafc8f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c94d1c-24cb-41c9-bb93-5159d74ee244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a25035-f9af-4d6b-80eb-055a4c57ffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46fecb09-7f9b-49df-9e77-246beb2a6d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca2db54-d8d4-432f-9227-f4cf0b258934",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4e06a9-3a8d-4719-88fd-72fdde5e5bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c757d1a-f4c8-4764-9dbb-5f385eadfb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09d231c-8522-40e2-b6f4-e73784e030d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9e0fa5-c404-44b1-971f-f052b271f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d5e654-5b4f-4e7b-8b18-4b578a533e1c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6de8a0-75a3-4a61-947a-0f9f5d570deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee839b18-0337-4324-b3cc-75d1cd206f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dc8563-c016-4461-99c0-6027385b11c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddf0080-98d1-4a50-8ccc-fa4fc983b557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f778eea3-0910-46bc-816a-6bc629c69dcf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9043368f-8285-42f0-8bdc-406c7e7f3d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd638c1-d968-4e1b-a920-ca1981572e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b34439-b034-464a-a85c-cacbef995c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f877f165-4065-425a-85f3-684db8f1307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5f0e28-dcc2-4db6-b50c-56fd64be8376",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bdefca-e048-43b1-99df-dc6b787ad2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5909d0-d9bd-4c6a-a6db-56b81b5fc96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17307523-e816-428e-b568-5c61a276b87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "37907489-3f35-445a-9d2a-33ed4c1d4637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972da1ff-2ce9-47e8-a99e-5d9a2b110187",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86434fa-23d5-4972-8d67-7593a928b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff86b95-df46-4ebb-b92f-2b696d4e34da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4531ac2-56fa-426a-8adf-2dbf2a35439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6d12dd-d6c5-4474-8a67-f90b44c60917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c444176-f88c-48fa-b976-f3bef962549f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38047085-7523-4337-baed-49a3b8e437ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40855368-a022-4673-87bd-3199cc0276c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02b61d7-3f18-432e-8eec-da282d84b645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3961520f-7210-4c25-a132-fc273fc6252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747145ad-3e12-477e-9606-f05ab79203d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe1ff68-df8f-4fab-8ec2-0a726bf44dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e6b2b6-93f3-4bca-a589-4c5ee78683a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998a6774-2d4c-46d2-9d8c-1ab1f72cbab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4e618f-392b-4433-9cf6-ac12bb0f7cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a545e0de-3eb3-4c60-a730-96c9c31f52e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de8dc53-e739-4631-ae50-cf000a139dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd10e60-b43e-4be5-8f35-302eef404989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9829ae-db95-45dd-ae87-ef7d6e054919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa2f4ec-6cef-40e3-990f-6f68ccc48839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d1bb5-1758-445b-aa20-142a70ba9c9d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae3ad65-c9e5-4e8b-b096-3cff9d053516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db2dd1c-721b-4805-930b-e8d081290736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c382010-05cf-4985-ae14-93d87164dfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63ae831-0b32-4f12-bc57-9c5ef7a08db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b85ceeb-0629-42c6-b206-82e8b1e1f9be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ff825e-fce7-4ff2-9073-b29625c3cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e4f653-ac6e-466a-a11c-5d2dd6df1116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f3beda-174b-45f6-9328-862351b0c970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13c750d-cf0c-4941-992c-b567f052d95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f04095-ca33-4c07-918d-e34ebb0945ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a51456-b4c7-431f-808a-84a67f9f6772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d5ba2e-f884-4300-9685-eaaa843c42bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b152aeb-025c-44c2-98f2-80a5ddeb941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d893d99-43d6-40c8-ab21-5f8e6072a9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa82ec7a-6b3b-48ec-81b1-d28b50548bc7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0da2c3-c029-4046-95be-4345d7e709c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb07d10-f5eb-4fc7-b2f3-e04336abce54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3848fc5-f0c9-4419-8c52-02f7f91c76fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fecb1570-c025-4045-955f-987af982c880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67ae36d-e090-4a1f-adb0-055ea2e3ce35",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239e70e7-3f48-4f42-a8df-ccb21bac0fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72962bdb-f0b5-4433-a65d-bd983dc37123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d198dd3-fe00-4ccc-9fe6-63efdc2a0ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d0b1c9-42e1-4be1-a232-91b819474c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dad84e-7713-4109-afc9-1a5c21507e3e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f9d3b9-dfd0-4331-9ada-e7afb418a9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307e1240-0411-4be4-bf13-e98f71af5d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe46d9d-9552-4379-8451-8d75d7dd3e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeeb20ff-ea8a-431e-b074-be01d2f4c40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c1b5d-c110-46e6-9eb2-f871b1220d13",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dec6d54-50fe-471f-854b-697017dd3ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49470767-05ad-44eb-b634-62f3caa9e7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8703a76e-c47a-4dc8-81c1-ba59ef3dfb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d5b5bd-7a28-4062-a4a0-28dfbc8fb6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec2cd7c-5e2e-4ae9-a604-9479d48b821a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b8a8bb-f195-4352-8ac9-87d751fac57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbba1728-3506-46a4-bed7-400bb72d804b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104e3128-8fbd-405f-8192-ccfede368d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0bdf82-2598-42db-8a45-bab602b037a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17343731-84bd-4ed6-bbe2-137489e01eba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216874ee-90eb-441a-b153-c46f1f93ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150ed3fc-f36e-4a0e-8d6d-ac2701b8ad84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884fd949-01ca-4bb8-9ea2-fc8bd54482b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fbd8ea-041c-4e1c-a0ce-c553e5ededcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318f5643-0a1b-406c-a4bd-4965bfad7023",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9705414e-2156-4635-8b4d-07525d762b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9870a197-275a-4393-8358-b677706453c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162597eb-fe01-4c40-a23a-26b7b19e60d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a966333-7596-4822-bceb-cc98c5376a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd67b691-f4d4-47a3-9967-7f3270d65853",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0419eb8e-bdd8-4a2d-837b-823a3fbd7e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ef13c4-4a4f-44ee-a833-35b40c8453dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5524868e-8e75-4503-8371-f334bbf45f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f27e254-efa6-4d75-b480-18a18a7ff499"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94ed9a66-6e38-4fa4-ba1f-b9828f14a944",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac9e9114-1009-4d95-beeb-c3debb3233c5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3288ca-a7a9-4a5b-91b1-765487cb77b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb13a09-6413-43d9-b868-a3a44015f64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa25ba2-78db-4976-bb68-7847a0ea9e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10a268ec-d66d-4ce2-b3ea-7ffab9a60510"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a754c9bd-ccf8-4b7e-a06b-f2e130016497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a28bb486-4fb3-4b43-a2c0-4020a9eecf87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc8e21c4-2ef5-40b6-9173-3e68f8f22797",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73309290-e8b9-4aa1-84b7-048fa238ffb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4013077-f748-47f1-9c12-0b660aa8ad2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce7bebcf-4a94-41b5-bc04-88e63aa573be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1891b0d-5d53-4bf4-8469-a43ff7119b3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "887195ed-fdec-4048-bec3-9c27fc4a4c50"
            }
          }
        ]
      },
      {
        "id": "6e145297-0437-4c59-854e-53e902107eff",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "062a3ae9-d63b-4b00-9b2c-b74e378794c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35fe6c0f-1e2f-4507-8e51-3cb998979acc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5753190f-68c1-49d8-9ac2-bc2cbd620c94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d72695-1226-4b39-ace7-01eaa69fc4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46bec84-a665-4798-844f-6311ca608c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f59adb-4f41-4c56-b002-c71a899f64d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1cc7f5-0e84-435b-9f56-0d3b8b2a6bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eda83c-0d31-4a92-9268-819a04da0d79",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89919b99-e71a-4f19-94f1-37613145c508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f515bd-2ee6-429e-83a2-2f56e7359dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9202d923-ef93-4d39-901d-c9021a5b59a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05845ba-9dec-4122-9176-c04081433cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0563c378-acb0-4988-a2d5-b285cf8f5c5b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc9f3f4-ca86-41b5-a31b-caef99b5d38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d555b7-0532-4cbe-acee-0a10c49959ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a650dd7f-6a1b-4b36-b1da-a60f5d80f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8cabe3-e780-4df5-997d-b13ebfb7b4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b4ea1c-8eff-4737-848d-3e7d80ea10b5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e3b39-9b53-4e8f-94a2-3e8122a46267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92068ac-6072-4a14-b380-37b6faa1b0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afc1a9c-be44-43c4-84e7-952e6d1fe658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d7a2d5-1aa5-41e6-b098-4a73f4636920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a11d6b5-db4e-4e5c-9564-bafe908d77a2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d1379-ec96-46ab-adf5-f4d193255dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4befbbda-6687-4418-8ee5-ece6c01be304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f894a9-dabc-4c12-8054-ada3944d18c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db32542-3694-422c-bbb0-852c8f4a1de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813e393b-5ea8-46d8-9f74-76dfc3513384",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b047977-53d6-4f8b-91db-3e536d06c601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33193ade-f85b-4bff-a0e6-933bd1022844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6537d4c5-57cf-4dca-bf07-093e9e10e54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d795d8e8-4491-4f8e-a73f-9fc036d1047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41131006-c2fc-41cb-89b1-e226706ad171",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076a2276-4c07-4780-82f3-c4b9fb2c01cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec553ae-400d-4bb3-85c7-b9c2601ac562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f5ec61-1f72-4b70-8bce-ce1ea521f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "77d326b1-efb9-4c60-b4cf-15241e20a0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bea8b8-6a43-4ef2-9ec6-50f06bcc73f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d59c24a-ac8b-4be3-a796-1af5e4c9cf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18981177-b6a8-43c7-b762-28fa5dad5237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f300fe5-78cc-4aa2-80bd-48b752dcdaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1767ebb1-4d62-4259-af53-802f435f802a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02b31c4-7b99-4eab-ad79-ad65e9b8881f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6158b3ae-7f06-43bc-98e5-09a2901f1afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b5e5ce-d2f3-42d9-8a41-237815f02f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbcdb8b-80da-4b8e-ba3d-965f25826fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c45b27e-8d24-4586-9a0a-69d01206dcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a56874d-58d2-4aca-8299-cc40fd9b03dd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2763a-3463-45eb-88ab-174b2b1e393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd9a5ce-154f-4925-b4f7-9e5bbed153a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9dc6c9-906d-4f09-b295-5e21dbe76182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc608059-a237-4700-89e3-7c54ee431512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ed4a31-73f1-4f6a-9a55-a82a55ab739c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32356351-6e72-402b-a903-32b54d40396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c74386-ef4d-4fb8-a403-a3dc5f95d0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9afa619-53aa-4e5b-a30b-cf8a86ee76e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "afa82513-0e76-45bb-974e-8feac3aeb9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1645b4-65b1-4933-8f90-5d6c5ffec0bc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb7f9e2-d270-4fc3-9b37-1367be90332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea88537f-a77b-4b1c-ac24-544231217a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12491776-d9c9-459b-9661-f83b695f5525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81256fac-2efa-40aa-a729-c0c8b95c5880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b5ad00-8fad-40ec-aa2e-9f33dccf7c5a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caea253-60ba-42b3-a3c1-f657d1597412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc075bc9-29d6-4304-818c-f04add2b307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac6d1d8-65b3-4a19-9ebf-0433e0e8afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fcc8a2-bc94-4406-84f8-a3c7898918f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0653a55-3825-4970-941f-aaceb7d0a182",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f809ff-f70a-4ac4-bdae-8194df44824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df55e1a9-5ac8-495c-9d8f-935507c25380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6214a2-58b7-4376-b636-6d53d73067a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1394c284-0a73-4db0-8894-0f0d8b975dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04d8e47-b31f-4634-99c9-c983cc1b1cd9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a80b347-0703-4ee6-b0ff-58d3b6d51a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be45e6a5-76f4-400e-9814-72e09bbe080a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb14d8c-f8c8-4387-8723-d136011372aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2421ad-7a7f-4ac6-967f-f902aacc096b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bd9db1-b40f-4c5e-8b29-bc6b916c2bac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaddfec4-6256-4ebb-be89-4920a066d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95757e04-d841-44f3-a4d9-69e09b456ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9f9fdd-25bc-495f-b8ce-2922c4ddaec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b920186-48ff-43b1-99ec-c7d0739ef1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a7717f-55b3-4b21-9934-f583b4869bb7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb2dfc6-2cbb-442b-b260-acc023c7be28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c035c3-f05e-4db2-bb84-2b119ea11a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630bde88-2b4a-4e1c-93e0-c85bc9896b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4252479b-b58c-4a08-9c8a-f528453f48b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d5abc9-4ba7-45fb-88e3-e7b3a48166f2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dac899b-d403-47ad-b625-7d5bd52a9229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9520a1c-7cbe-429d-8174-0edc7a646aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5056999-d2b1-4e47-adb8-a304b47f4294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "415136a4-9477-49a0-9e5a-8ff111772119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bddca6-fe71-4bc6-848e-79edcfaf8c66",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85cd5da-4092-4ed8-87ee-f5141f061470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c900f581-a5fb-4424-806f-5fadf7606fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd87996-7b90-4434-88dd-faaa9fd787a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57177a0-1493-47b0-bf83-947eb291157d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751de31b-9d50-46c9-89ca-33a80e2e47ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d8521b-a9b1-48ed-9dae-148605fe7777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8618972c-54d0-47bc-8a60-5e63e942e897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c1e402-05c9-493b-a0c9-af0b2cc012e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff38589-10d0-4fdf-b9f3-40b7ed918f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60ff718-fec3-4e39-9abb-85c58bb39524",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b824c-c65b-42db-aee0-d368c67c397d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dee4d2-5a32-4e4a-bfe7-ee7decc01a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e1dad4-cb78-46ab-a04d-5b56e240a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a33c1a-1b52-45e2-8d74-ef6eb795559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5d5461-9757-4fa5-9a2c-413002dfb7d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80687e89-4356-431b-8f69-61fac153ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d60011c-51a3-4255-9e53-def26a2bc0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7e2a14-5df4-4333-aba0-b1f73bb5b79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a6082f-b452-41be-8e71-67637d3abfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af07ed8d-72f1-470d-b816-646f46afa493",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36566e7-6124-472a-9280-9ccdbc84241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786776f4-db68-4ede-884e-f497101f7606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d644454d-064d-491c-af72-804c16f8f296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb31c0f-4966-4b73-8276-74ba12f1a9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d801b055-1c4f-44a7-92f1-cf4d389a8352",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21375b36-d73a-4554-99c3-dc4433af7491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc36dfc6-b1c9-4914-bebb-e472865119fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc12c45d-09db-4eef-940e-44b1f0c70cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc33130-2991-4641-b887-f1a642779d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9650f176-3de6-4211-86aa-e3017e99b275",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b6c7e1-9d0d-4fad-b4bf-1a662eead462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7545d237-f3a5-428d-80b1-9960c18ed608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c9a96b-15da-40ac-9466-5f742ececdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5f3019-2d51-4b9e-ac06-cdee2254babe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3f1eb-2202-4de0-befb-abb1e48c7f16",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ecbfcc-571b-4289-92bf-fd118158a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2b511a-1265-473b-a8cb-085d2eaa9a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa84fe9-db16-4628-84c0-134abcc3d169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251dd67c-be61-41a9-9753-5a391baf94b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08870974-0f54-43c9-903e-34dae8e1cc59",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03597bf-2845-4987-8e31-1b61c436b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de99b2f9-26c0-411b-83ae-c63a85f05ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6236dc8-298f-4c06-88f1-dba1c41da2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb77978-e71b-4899-81fa-36d5030f0352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0285ca-c3f9-4974-af2c-c276ecce0285",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384d8e6c-8d09-4033-a236-46a1cf10b54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d7f1e8-b5c8-4569-baac-64fd3ca4c4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c6e54b-43b0-4fe3-b0fc-5838884df778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45cfb357-1483-4e9a-a69c-b006b5698d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b864a6-fd43-4aa7-8938-366912b72277",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686a2fb9-abb3-46bb-8c3f-396ad09536a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40879683-559f-48b0-a782-1ddb9f921c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfaf223-b33b-4dc4-a5b6-14dd76a85111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5af1af-9589-4734-b979-c3b834408162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9923064-775c-4914-8c88-576f7a7ee7a5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47c1c58-ee9b-489b-8a81-307ee31b115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14baaea4-4479-4a83-8774-1f8dafe14d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfef96e-c8f9-4648-b278-93f29ab28e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0ed853-fa63-4fe7-9feb-5984746836e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b121c-6bbf-4937-b4ff-aa90c39308fb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46beb70e-d6d6-4835-ac65-f7b34ba1ce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4294f940-613d-47d0-ba74-70ba90ca9eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfc0db1-cbc5-4407-93a6-8674cbff0eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "033265bf-ce91-40e9-85ae-c5b34017d31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793b556a-492d-4df7-9c99-1374a31996c5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88295a9c-40b0-4705-9d0d-e310cdc615ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47afaba0-e31a-45e2-a532-8257c67d4c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178b46d7-39be-4cdb-bf19-a8d2ff08a5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826281d7-22c3-4357-a5bf-f6e7fc6c29a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f85c2d5-a3c5-48bf-b545-3f00f662e41b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b26e095-7a12-4dac-99be-21ebad5103b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13580991-cf5c-462b-a714-5c3244535f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ca89dd-94f1-43dc-903a-de5c44a29e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aafbf2a6-f1b7-48ef-a5be-3c2dcf2c17a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fccb89-d7e8-417b-a79e-cfa0a09fb87c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffda4784-0d62-41e6-8bb7-8a6fa7fa0afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26a988d-08c1-4874-a4fe-cc0c93486702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4529af8a-179e-4d44-968f-9b9b1bf77ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "475ac155-be9d-417c-90e1-404b1247558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21344053-7a10-40fb-ad85-66129129b87e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2032341f-8060-4bbb-aba5-d83cbc7953cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547d8a14-c63c-4b92-bcf1-41b2512e1674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840f30d0-968a-479b-a010-5c683dbfe275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7935959a-fdd9-4e35-8565-3ac5e7d8e468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc59a99-b125-400e-a00f-06a3f2e13469",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e060bb03-6cf5-4ac2-88fa-965833e49322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70da8dec-71f8-4ee9-a53e-0e724dbcae12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a791a6-5441-4800-aaf5-d1121c4e6960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d041e5a-e632-42c2-9fe4-78ad8634db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12733b4b-de2f-4a15-851a-20a821dfac2e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bad5b9d-6609-4537-bc80-c56d74443dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a49a19-3435-45f1-873a-ce08303bbd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed690e3d-e61d-47a7-a544-27175c254b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350577d3-24c0-485f-b010-fe3b3bcdfa4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff9e48fa-b424-4dd7-8059-91eb5ec35b14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "058b2eeb-d4bb-44d2-95ab-598cbffb3822",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7868554-eb2d-4a8e-b862-9bb6fcf8241e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "52e526c5-699d-439d-98d1-e911ff83d5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b0f848-e933-48a7-9622-a5268458987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a4c0a18-531a-41db-9a95-1b5537372258"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b790b89-a227-438c-9d6a-723e1e83deee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "027750db-0212-4daf-bcf2-f225d6d90fc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eca7c75-f64c-40dc-a0ef-e64b44ce4499",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c329925d-5f1c-4406-938a-b3c845c91470"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66a3fd57-a697-4914-9159-34b754d26761",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb60090a-bf17-43f5-9330-efb36f2d7d24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2c9dce0-b7bb-45f0-84f6-7d15ac6c6109",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52f7c44b-a836-4a4d-9f1b-9a897e11d004"
            }
          }
        ]
      },
      {
        "id": "98fa0b5d-50a9-4394-b5ee-d6c3c718aa11",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "46cabf1b-5f57-4866-a543-8d6f10b88f93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "007d7f9a-6a4c-437d-a899-46196526da26",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9eef67e8-9d72-45c2-9265-88616154a8c6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897d531-e052-4f6e-a380-0faba0b417e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc465692-780c-4447-b0ef-e3591751fe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb0876-6adf-424a-8665-1cea7e1c08af",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc03ed19-f5f2-4a57-8d76-6dbf6df0acf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae8d84d-6c68-43fd-b797-0b904e2ee152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba37d2f-8202-456d-8f3e-815f143537fb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5063e2cc-d5a2-4fa8-a05e-e1a05ebe1556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdd03c3-5c9f-4e9b-9e54-60dbdba42619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b47826f-e88b-4ce6-b997-b945b81f3217",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc72ec3-eb42-4e42-b2c1-9f9f66073dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1206c384-77dc-4180-8e6e-ae520019e36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d19b53-7ebc-48ba-9cbc-511819d82141",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027628ab-5a1a-40be-bd4a-2a0cdec92d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c166857-920c-4637-890b-3ca18b73b5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835c29ff-f4bf-4921-8e5f-dea4988b2479",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eb6c33-c8fa-425a-bd56-67825771da13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c37759f-8288-4ab9-8aa3-0f2e6bc9a9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25dbf8a-a99a-401f-b0c9-9ff944eed8bc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a7b305-c072-4168-bcf5-e7357253c4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896f8bc2-8dbe-4f3d-b1a9-644767825be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a5ac9-e357-4ab9-848d-d73a7f01dbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4b6901-a48d-4878-bf41-3b61efa5ea65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05694d7b-67c5-4f1a-b5f6-7c50b6de5ad2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494afe31-67c3-4084-8556-7282622b1f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d6c581-c26f-46db-8801-027d272b4e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996ef68-f6b0-40fa-b748-0304d8c995fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe264594-1ef9-4299-a40e-0b231f18d6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e4aaee-f0b2-4b19-9ca0-8f65c717d709",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639ca601-756f-4575-a7fb-cba07bf644a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea6cd67-c0c9-44c7-92b9-d635d27fb074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1dd034-e714-4687-b4bb-f129dd2d4a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c61aca2-5d3b-4d67-8907-39d07a1074f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ca58c8-27e7-43f2-9eb5-f448e18ce432",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d40bc6-3ab2-4d29-8dcc-4d2b379a231c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4278f583-b6c9-4964-a5be-8a07a93611de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3b9b3b-9ee2-4874-bdbc-6ff82e6aebcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7073eef4-bd44-410e-8d70-899ff4333ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ddc92f-04d8-409b-85a8-77c7965d5d18",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da0df3d-ee2d-4239-ace9-48ac7cb76bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2760e1-4cb5-4aa6-88e4-cb1b6a433eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e1dd42-db19-4f9b-b988-8b7caf9340ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2331ed2-6ec5-4782-b648-67b8d6fd896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff87966d-cabf-4162-a297-88c7d2cfe081",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649185b-9999-437c-a964-838f1175e3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd0ec7d-ee6a-4305-9534-b761c37089c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2893f61-727d-4f53-aa5d-a00e4efd557c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273a99b6-bc54-4286-94d3-0e5985d75d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6517da1c-d839-4375-8c9e-6b46f26b188b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12e005e-dbdd-41cc-9e15-d78f54627c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4732e2e-4063-4e49-9b14-61c172a4163f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdaf716-f955-40a6-a52e-59a3426a4770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395a960c-4335-4b73-a645-c6ed46eaabc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca5838-326b-4e37-8b21-6447bcaf0987",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f49f6b-6f45-4df7-8f0f-11c876791bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35548c23-7c6a-4bbb-8d21-327129af72c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e553656-7c8d-4e31-8253-64f0f7be8afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf0b770-1b02-4714-b664-8d34d74209f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37261aff-f28f-422d-85ac-1261604d7754",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c31822-0f76-4ba4-9364-f0161d2d14c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea25a6c-e81c-4d42-a281-33e6fe9f1ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa42571c-e078-47a4-8d85-c769a0ae2a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c1aa31-4473-47f3-b06c-d3fcf50981fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f60d188-a88d-4b34-b709-a8ec52be33aa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa30034-865f-45b3-b26a-79b4bed2b681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3abb2a-f9cc-44e8-9521-378d55db055d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08539a05-9b9e-4a1a-9b4b-8dfab593b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109d1521-2f46-48f9-88d7-b68090ce710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ae3014-99c5-4829-af4e-91458592f511",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73709bb1-e9fa-4b70-86db-7c7d47a93bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280e522e-7e98-4888-9739-38d6de358882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e304acd0-45ae-48cd-9ee1-06d0dd643b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ace2b59-1fb6-4899-a0f1-6a61b3b48684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc8912-e4bd-4c8f-b3fb-0a7956b54637",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66c4241-8a99-4243-8e17-eee81797c6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2218a8-43b4-4566-b21c-083444f984a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903b9477-042b-421c-9276-28abebb6cbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bcdf19-8a45-4146-be57-a026ae44093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8048d196-dc62-4bd3-a306-93597f0d526b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1987cf96-66d3-4777-9b44-6c5c06b53de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de17391b-8e06-4b1d-9101-d7740ff7c23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f927cfc0-da36-4fc9-997e-368e2bac7a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e91b9c-0e8c-4b4a-9f95-5784c0126dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1644457-26b4-4f54-bad3-0dd5bbe50e86",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002d0149-72f4-48a2-90c9-094afd1920af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9048af8-8610-465f-89b5-fbb06ff78cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0fe183-15f1-48d7-a67c-72f0a03da7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4757acc6-bd37-4c17-bb96-25ea2e034476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eab61c-29f9-4950-8f13-6274e716f3f5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb7643d-3722-409d-880b-808f42d8f2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a101f7-924a-4b01-bccf-2be6dfafb01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e13c11-da28-4a19-a73f-e630457cc20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9277766-6788-45d5-a945-0d66650b84cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7737f35b-dec1-4a60-8a01-f0f8d9f00477",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e210271-e2f2-4967-a207-0001a84e1e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a7f470-a4fd-45ab-add1-ec5009946106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b122e5-74dc-47b1-ac8b-cccd165e47e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6182c1-8d71-47b8-a9fe-6c607ddf56bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c7cdc-3704-47ae-8ec3-05155d9f5546",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fda291b-295e-4f1b-b136-badd6d9648af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be89a7d1-3908-4e43-9cce-5164d9b7035b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba20e200-0ecc-49ca-9e71-9ddaf3f0ca4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b7fe9c-cd9b-4903-ab95-e95cf444172f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70108031-56c2-4cb6-a102-c048f939b8f5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8da6ef-d87c-4739-913b-d6fc4b0f81ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ffd5311-432a-46ce-9b98-2bc779068438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5bfe3b-2cca-4e19-b424-f5db6b97cd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3910f64-3bac-4b10-94c8-c77238fc9700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5167da-cf54-4278-af14-f1b5ead20880",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2745105-126f-4da9-9433-157ec434c7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4036d312-bc44-412f-a8e5-e0caab62fcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcc1a9a-4861-4b43-a427-58fa52f881e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf2f6e1-a2b4-467d-8f95-5581064750d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d878857-cbd3-4ca0-993a-999890bc0208",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893a85ed-6e15-4a01-9438-be3834b70d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe173f03-f282-441b-8942-b03b0c03f0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c03ddb-89d8-424d-958b-b6465559f249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2480f7a-e27a-4f14-a079-71c8bebf2fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76726bb-0bd1-4a1b-ad8a-e52eec52b07b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b989a280-a9dd-44a5-bc21-f12a0bcab8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1043fdde-8a69-47bc-9a31-5baeb71707b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1995da89-c4b1-4d2c-9c27-809018dbe15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f651cba6-95d4-4071-b45e-6883c09383ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6374126-0213-46d8-92d5-dc1e95d81b67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47187685-d8c7-4bbf-83d4-b5541176b3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc1d596-a2ca-42d5-8fa5-fdd2d942d663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29df24da-00e3-44fa-85e4-7e8487e569b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ded064-7928-42df-a90b-af4ea596ba1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d01b4e3-ab9a-4470-a230-5ae8501f0a1d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59debdb5-b343-495f-8b25-1107efdd6ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc2c18e-82f1-4f7d-9bf6-6f8be53effd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0e094f-0d52-46e5-b0d3-cea6d7b18630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfa0d46-277a-47b4-884c-7cd79c6a13d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cb3d06-ed7a-474c-90b7-310bc57f076e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ae712a-d1cc-4082-b7ee-da5e8994416e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9466f4-c137-4b9f-8df5-f6561899b890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1db5a33-de7e-40a1-9ac7-0ab82ac516ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7629e0-0688-41fd-aa3f-ee33be24aeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916bfbf0-3769-4102-ac71-f71659c5c94b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1512bb-dc60-4d75-b6be-a7281030a148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd085a6-7ee8-44db-b15b-7427597b8d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3879575a-fa4c-4303-9032-01cb8e034799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec54f358-e8c3-4f94-ae9c-24143887ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d380f732-c868-409b-abf2-d8cf405d20fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe2ebc5-3ce7-4c2b-a0ea-5cdcb667abf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a3dc59-626e-4152-8e29-c51dbef72a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a73f582-2d95-4aa0-98f6-fb18b45fbe38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d5a593-b794-45c9-b815-36a5c065a117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceac54b-18ed-4bcd-81c4-2b6ed074668d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83453702-bb6b-49d7-b42c-15e5682cfbb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d19e308-d22f-46e7-b1cf-6c9d3e8e6467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e5d8f-546e-4c96-b7fb-fc6112fece98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61b7fe1-b7db-435f-8075-b53afea08f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3441b14-7da3-4425-bd2b-65edc5533ac3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a943b326-17f8-461d-bbd7-5cbe6514e2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447f10c2-1256-43fb-a9a5-e532ff08bd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d05bc02-0af0-49c6-be88-eac387964071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af74a40c-b1af-47eb-b6ba-1c07b4abf4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef7ef0f-3c8b-4b6b-ab61-bcbd617b6e36",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf590fc7-076b-4b32-a1fe-611fd7d7395c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b581fd-9e97-400d-b117-00a072a5e5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcd2d7d-c49e-4060-b920-9c5aaa94648c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e1bac1-3da8-4277-b8e2-6006b5463ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96bc697-2b94-42d6-8576-dfc2142bf195",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774919d9-9b36-4e89-b5b6-6d6bcae7833c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e9ab66-1ca7-48b0-b72b-ef6ec15d70ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9628a72-58d9-40ad-b12a-92b6627974e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7948bf7-d0f1-4964-a485-4322b4921ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc671d0-a0a5-4b60-b47c-dd0d047b48e9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37333232-2931-4d4b-a888-314dc6899467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1893c48-d284-413f-a873-4b6b65c6da7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73f2fd6-49b9-4bb8-9f5a-103ba25c54c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74b6f9e-af63-46e5-9eb9-8831c51d72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf08526-8bf0-477f-bb91-d6e1390f9275",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a1d2a4-ccd3-4274-bd1a-ec813cef83c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f868a1-4b57-4fbc-a4fb-35c55cb31b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0db5a98-be53-44a7-976f-d45a74ddcf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d038afd-74e1-40b3-aed6-7478ff7b5851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b2fac2-5a8a-4c46-b7ae-bd9343f91ac1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f054cab6-b8a3-4785-aeb4-7d5c6eca205b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24257b01-04c5-4265-9a15-36327e7829f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d070f4f-38a5-4783-b94b-086e59b780b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb156fd-4853-4d57-bf40-93fda6abb377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c3c362-d2d9-4216-a180-0fe8305c4bf5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c647fc11-d05e-4497-89e6-1f208b3555cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304684cb-3538-43b8-8d3f-5b2fd5341e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a02d47e-0681-4448-9986-318a0aa46b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14af1a4e-d335-4ac9-b462-251793a3e8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253840a3-5836-4655-a532-e2ca10c148c8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1322bc3-f67b-4920-b6cc-030708744a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4594b76-0c02-4dd5-8ece-0b883306252c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f37850-4759-42b0-97bc-2ba731337379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2a2b7e-5262-4ea2-b933-d87f6436090f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4379d3-111f-43d6-a3c2-d56d047b0d8f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f588bc-a377-46e6-b904-07ed27b08a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7feb05c-ffdb-4894-91f9-32d559c6ab6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85752b8-e2b2-4f3e-a12b-d92bac72fd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6330dd-6c29-472d-a077-7298822f3874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47075d8-ee75-4a7a-b7f4-5ff26354a253",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb71395-0421-4ada-bac1-a24ba66e3c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7109a59-07fa-4a6b-9ca4-d816a411fa1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913b47d2-0f75-44ff-a7dd-9f8e6810bced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ceb408-ed49-427d-b34a-ad7f8d70e20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5736a2-ee98-4aa6-9f0c-9e45a6f94d5e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a50a650-787d-4e45-bb70-8fb496698908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040c155-1971-43a8-8f75-cf0401c4eb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0359eb58-ab47-4dd4-bc99-4dd51629ef43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f3e39a-af69-4797-87a8-2c6d84ccf4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f894ea-65fb-4338-a6a7-634729d8e6e2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2046d0bc-aed7-428c-b689-fb6fe7b06fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512d2048-ad51-43b4-acde-63d772b00793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b78b23-e89b-4235-9160-007045d1c727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5093d7-4137-40c1-9230-d99ce645c712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d657bfc-debf-4f98-bdb4-1ad25330ac3f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95e4f86-4500-42dc-87a6-5c495963b321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353759e9-da81-4ebe-8e2f-981629a385f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40c4ee1-c180-4e8c-81b5-c34dc0751c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ab4f93-7f4f-42e4-be1a-e7765af694d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2aa0a1-3e4f-4c67-9757-b512f77281da",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada51f4-59fd-4edb-b7ff-3542bfbe7864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c03034-1e94-4a0b-9591-92d2b6984ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46121806-b6a5-4b82-b930-dc98464e1a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16c38b3-98ff-4d47-9e9d-a223ccb50ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a944590e-ca75-4c17-a6a6-d7968a0eb2f8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34398cb-8d91-49a2-a206-5afc3734ec18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaba5a8-29c0-4fae-8b4e-49417fe056c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9923e6ee-bd64-42df-9fd9-a7149b8594f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae20f2b-e43c-4521-9f5d-cb1189adba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceb6d83-9b37-4ae2-904e-fc81e638b575",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46de98ed-f813-4586-903f-6876f300da39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f899262-f72f-45fe-9d00-c381d58f5c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ded084-d2dd-46a1-9790-db8ca0f8c7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2db10f-8352-4f84-accf-2243ff35a043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d60588-2a62-4823-ba6d-f32606bf993d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d8091c-5a30-4089-8acd-b537397edfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3cc395-4108-40f3-9f77-acd0d8ea879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004df52d-4883-4494-aeb8-ac44e10300c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b070d92-8deb-4e5e-a63a-80f18b676aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217d302a-4113-4372-9e55-bf3bed565048",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068b6e11-0499-4bc2-9024-b38f8a953b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704bf4bf-baf0-4d72-9bba-b564401000a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08f1dfb-8cdb-4930-95e5-2641fae9dabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939621b5-f092-42e7-896e-ab276df2bacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a954a65c-d8a9-4f66-a173-0bd6da6176e2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640de696-c1d1-4325-a816-0e02c03dfc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5ca7ea-409a-431e-a275-0bea051f1938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30854691-838f-4676-8717-8922ceb5c725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd464d64-a7bd-43c5-9b25-e7e16c21bb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2c851d-256a-40d4-9486-3c5b9b375c07",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814fc6ed-ce1e-424e-b590-db2e668ec39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa825e0-5c51-4951-808e-460df3fee184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba19415-f71e-4c4a-ace6-834917ec0cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2bff7c-fb04-4cad-b0bc-2ff37680a513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4348e45e-191f-493a-a7df-74ad3071cb56",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4a7ee4-a042-40a4-89fe-ed7e0664eadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1afbeef-fc8d-4ac8-b355-faf0fec09fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d070dc8-192c-415a-9117-bdfeff3f5489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f47ab5-ace6-4f46-b34b-63e1ddfc999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4b2ee3-2589-48f3-b1e0-2309c8e54ddf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145894a-8557-4773-a1ef-e45f62499632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f85e03-0726-47d0-b448-0135e35ef6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6a9af3-2402-43c0-ab3c-a00a1f2572e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed5694e-2d9a-4a83-a762-ef701c1a7970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c764fff6-e15c-46de-aebc-c786fa94b0e5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a22b06d-5a22-4981-98d6-3851a1cb4d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fc0f12-d631-49f8-9de3-830ef9d238c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277ac79-dd86-4ba7-b95f-c4dc89ba0b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da408bcf-3603-4aa5-9d07-dbe1218e5c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170dab01-4e24-4143-b695-72fbfff3adf8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364b9368-4b9c-40df-8e67-0c4b92866a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a81eb02-f2e6-40ab-8ec8-70400ca0760b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255fdbc3-3382-4a09-af18-8f452aae63d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a2fe11-b2cb-4cd9-a15b-0a7fa2a79bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5647957-fef8-47e7-afff-7f5383d47fae",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79695c28-4ed0-4366-9a3c-9f7eed2598b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4be42f6-9e86-42ef-9c79-3bc175bc2ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3871d9b7-6fe7-47bd-bd2b-78ea8e579784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f585a0-1ec7-44aa-a4ea-b825f2535bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d024c-f8bf-4c43-a213-86661ea32a22",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb57d70b-8d64-4e3a-8368-511132fdf986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d58636-aafc-462b-8d7c-278438c5dbd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d75f9-27bc-4170-9901-255c3fa48df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f3a73f-927c-4399-8ef6-5d06d4a99b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d1684b-a533-478d-8e05-e80d14b903d0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a544a0-51f4-4866-aeb6-71c72f33cf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9e3bd7-ee98-4611-8609-27bd380b9518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d33d3a1-728b-4b22-8d09-09c92185fb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20a5cda-2967-440e-a5ac-a547f0b718ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332dce54-3ac0-4afe-b2b6-051caf7831e2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6204afc3-fcd7-4919-8f94-cecc38935b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6e1d9f-4265-4520-9252-f45b520caabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55451b3-a341-40b7-a453-0461c90a821f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038ef92c-a292-4f95-b6d8-c518a21ee3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b45c5c-3b61-4e17-bb46-61b171791773",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b3df88-11ca-426e-9136-1e7930201e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02a5003-5fa7-4bc0-8b74-d3c36a20c5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87444acd-3c37-4304-8161-2dc590b0391d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d446f45f-0d3b-4e79-8b47-3caaa2d077a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefb12c8-14ed-4da2-a43c-82301cb64728",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f530d94-699f-4064-8150-833c447649e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c28e11a-408d-4682-8e1a-77f04e51bd5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0572ca3-eb64-4e2f-9708-ed3cb69cbad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2befca-d667-41f2-ae2f-ea16328af556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6b6dba-2e34-4716-a0e2-65a6e4823008",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2dac53-dbd5-4676-bd2a-b9bb1a24e45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81d44be7-17b8-4193-a559-b8430bfee323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e328a58-34ec-441a-a313-6a334f39318f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d7a370-c487-4497-acc8-c607a600ecd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fcea48-f4b1-4474-8793-e68a4693c3f0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c286fb2-3458-4088-a8cc-f1a4e5d8ec16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130b6976-b611-4210-a8d1-c069b35ec5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe101d0-a3e1-4b51-a338-c575ff87ec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f704c1-3079-4375-9ca9-afdc026df022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf9a4f0-0b0d-465c-b096-ebd66e7fd178",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94175af6-e80c-4331-acfd-d1642ebdd386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac967cef-126e-4ee8-9396-bf61c935fca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f04b54-52cc-4076-a06e-7d5036b80e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be925c71-0072-4503-974c-8cc7cd350098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06130eae-8f10-441c-97cb-81ec19579f75",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecf876c-b208-418d-a5e1-18a3eafc60e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2190b3-20b8-4f67-9ab5-20ef08265e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f333ae7-2bbc-4670-a8f4-bf5dbe3233dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4022912-7719-4187-bf6f-49b9445da58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9c70e-4663-4a22-8121-d28a057b5595",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eb3c14-0f3a-4569-85db-90c39aa6edaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4608cffe-6be5-4e6a-8608-fa32a218b048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa645501-90ad-4067-a3ad-895c97ebf758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7613ccd-05cd-4513-999d-899d4c7e91b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1f2b73-dd80-4c09-84c9-067c1e30b59a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c17a19-7679-4fc0-8fb8-3201a7ad3aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6709cbb8-acbc-4257-8cc8-088763f0630d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9d39f-d446-4d7c-8bc4-bfab93a71502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f12528-13a6-4193-8d04-417fd132269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f237c-37f3-4949-8896-7efaca652bd6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47a2fdd-c07d-49c1-8748-ed36007bcd2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b90685-26dc-491d-bcd3-457651d4ae64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d6f20e-311a-4726-b155-78946b90c5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8af31c-f43f-43bc-9e88-83a5fe4f1599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bed32c-bf67-42de-9584-d135594d659f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad74b5b-e64f-486e-b69e-1cb84d9f3f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa1f2ea-a11f-4601-8c44-c6a1208a4da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5ad995-363b-4f5d-9c55-ef3d39d00286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed38f1bb-7330-4941-84f1-3be06d326b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d914eb-a31a-4500-a309-7c5a55df0b3b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dfc2d0-76fe-4d4f-8b3a-a1a548defd93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc52bff-137b-4150-9928-57572fd101cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901b86a3-1560-4780-b274-73fa52520ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166e63e2-ff5f-48b7-9592-02cd40d3568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a8383b-f543-4da4-a922-176422d80413",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb7ff3e-b24b-482c-8cbb-1a84cc850928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb92c5d4-2acb-4938-8234-67047d6bfc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94146953-cd31-485f-a1a1-7b9b788d0d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe6dfea-03fe-43c1-8ccb-f39079a1cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a8374d-a73a-49e5-a077-1bd8b5d121d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca944197-fc5b-448f-8730-62f83f53bcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fcf84e6-d12b-4cac-b107-5b716557f086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ac5ebf-a2eb-4d97-bc73-f820f255a258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa336f4-519a-41a0-a6d6-b528655a3854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96b5a29-67fa-47e6-bb6a-0c6493ca2669",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca1fc00-c0fb-4d6a-a77e-b7675847c279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa68533f-eb04-4ae1-ba88-0d31cac3c975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7438a77-7240-4d31-83fb-d67229712c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c263c6d-bfa4-43ae-a36d-d852fc691767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f542504a-018f-4406-b5de-335bade5e8ef",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3378f852-ff61-4681-9f42-4917ffc74fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08bcfe7-098f-4be3-8bdd-c6fd8eb3ea8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f22cc6-d5a8-43c2-a460-6afae1d66ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76ecae1-9280-4f38-861d-3d7f0c069b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56f7d9e-eb3f-4de9-9024-daa786ca799c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ecb8a-daa5-42af-bf45-dd949348d2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70bbb71e-be80-4062-a736-c491c443815f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26d412-a534-40e9-9948-1dfd61cde4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a0fad9-47fe-4a62-9eae-72fea7bee648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472106ef-388f-4f21-88e5-2ff88f731de5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa668f7-830f-4c47-a8b3-4c5d03b772b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba8d7c5-52c0-429f-8663-7c1a8b0b10c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f05d770-4fa5-4afa-a848-48534ea97c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55eca6d-5e56-493e-bbc1-09ae58dbdede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf2ac24-d94c-4285-ac92-b711516206d2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9259b1-b931-488f-9462-9d7dcc979e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8467eee8-422f-4970-b0e2-b9472e481264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56bcfd-4f83-4571-9d85-3a363b30883b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04bd3de-99fa-4c6d-8198-cebf68ececef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301d6b43-00a5-4a22-908b-40d110fe452c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c678f9da-0d1a-411f-b891-2060be8a916f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b080d26-d3a9-4c07-b3b1-622594a94b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b8b8fc-50c8-4659-96b6-f297cea94cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bed02b-f9e9-4ac1-a11d-2058ca1a8180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cddfd8f-49ad-4ba8-b6b0-24754e2e9b85",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0875394-216a-43c5-8663-2b2d48bf51f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3566dadb-a5fd-4135-ad2b-17446d9e12bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e67fbd2-6d0f-41c0-b9c0-a5d46f7b8555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291cb80e-a51b-493a-8eaa-2b09feeccbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1d644d-247d-4332-b03b-ac48c55b10fc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e39f949-d5d7-4972-8a2f-ed32bde8a4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a382cec-dd17-4a2f-9849-89379c8f670e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcdbd3a-8de4-4b3b-b51e-6839ce545795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695c4eb1-b4d4-453d-9972-7fa10e3d715e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62694373-508e-4c0c-86a6-8a54be9b7229",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e55938d-2612-4c7a-a53d-1f41a7776ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ead111-b942-4c7a-9d26-9d5e17db52de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dae8a4-06e3-464e-8135-e8dff9fda559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f004cd75-011a-4d46-af73-a83140bf23ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066ae872-7f16-410f-afe3-95014a0ce3ae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb97b5-f6c0-4ee2-aeb0-9b0d19c2d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4b20fe-90c1-42ab-87cb-d090c68be663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d71f4a-2ee3-4969-9b33-74ca78d9ce15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d97a690-e5cd-4cad-bd8e-ee1f52190f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6e97bb-ba91-42cb-8d5c-129a4a7e3a0a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5ff4de-f81f-4d44-b491-8db1c31e2553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9895da0b-e255-4188-afed-4b497f8e613d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f0389f-a6a6-4147-b991-4f938ae16ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3100e1-204d-45c2-badf-e1c17b233b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1784f052-c593-417e-9466-249e0827083b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6513e4da-7224-40bf-9f7c-552ac35bb57c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef325a4-e169-4b0b-a264-831bd71ba83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11266d14-8c77-4048-888e-4149c777894f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f57673-002e-4217-b82b-d0afd4c55647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752ca543-4865-4495-9fda-dffce2fbea0b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7068f3d2-d1f8-4b57-a776-2c3f1c305eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0786b420-051b-4a16-82a1-ab0793c1d4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e3c4d5-3068-4677-a465-ad3b2ba19437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b1eb2a-18c6-411f-a1cc-f2da31e5c299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4990e956-b562-4d24-8862-abdf7f1ddf32",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb81654-d378-4376-8d9e-f576b0d70832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "742aee8a-6980-481f-82af-ce2de86e2135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668cec2-cb45-4b48-8f79-e7150108bc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec60a3ed-03ed-470a-9b47-2b12d01d49a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d93ed6-2dcd-4c23-b999-d5af963db06d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5a5d8f-3b9c-4c81-9de4-3610696f281c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edc73a3-7b10-4b41-9d38-6481ababfd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7a9434-ce57-419b-be6e-6eb9239663ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d325bb40-741a-4012-98da-bdf25500fbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14616ee-83e7-43f0-a280-a7213aeb9617",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a006637-80b7-47ec-8dda-74c4210ed0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1d3321-f8a4-4721-99ad-89038f7fd28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eec2969-89e6-4da0-b1ad-eb74087ae910",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4d2ef2-ce80-43ec-94eb-6d5582dd8e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09da60a7-6c3d-4ce2-92b1-0da39e714de1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71709971-53f4-46e1-9c65-d80fb96888a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9251efe8-5921-460d-9ab0-0f80a4fba502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81032493-2b63-4e96-b415-dc9e17626074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2ff041-f371-4708-adfd-57f07f4e446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21c38d8-62cf-402b-8c7e-840ca2b45350",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca58fd8-9b32-44d1-afa6-c3221e99148d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d06c60-a0c9-4621-9437-6ea8a39009e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300af112-acc1-4744-a311-3ea39307b42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db81feaa-23a5-461e-a4a3-464b4f00c08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe1c2ef-fe9b-484a-945c-82b56be45b58",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ef422c-ae60-4f66-a18b-8de5b042e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcaf3824-a2a1-4afb-b05a-00326b213550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f600cf8-0743-43db-8762-089406535981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fa9a73-4db3-4c4a-aa79-8f2b275d3bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2781961-9e40-4275-8da0-c046b4549a1e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05663272-5c7d-4be0-8e24-28c8bffc15c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c46306-55c9-4cc3-8e80-bc144212ce88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ca6d7e-056f-48bb-b6d5-b2ff4ba5ea84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d01682-f1d3-4149-ba23-831aaf573f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1278eb-d4b3-467a-9ad5-e372c6bbe9fc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2050ecc0-3dcf-47c0-9ecf-70e6fd8b56f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289b275b-5250-4120-9b70-d95008f20b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf76615-6106-4324-b330-6de64b5665e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e05e78-4084-4ad0-9195-2ebadd78cca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113b64f7-30d0-4c22-a68b-aff408df70a3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e06cf8-3dae-402b-b3e8-80b12893d14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d41eb3-7d22-4b3d-aa3c-e857025ab478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cef379-1c5a-40e8-baf5-f1a3f27df907",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c7bc9f-831a-48d2-a63a-17fe65ebda2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf928b26-634a-4c9e-9688-78244922d47b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add0b175-6003-4003-87d5-91dd71d2b500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473d04ff-4060-41e2-a5b4-ddcde18cdaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacb3b08-d5fe-4ba9-b3e5-2d4beef35848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d65eee-5da0-42eb-b7e3-ac85c16a421d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7ce6217-3355-4622-a224-45424f9c2196",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28174d77-35bf-44ef-a35b-0598efb8ffac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b5abe0-bede-460f-baaf-ca14b351f252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "615a79c4-a831-4d22-8486-d6ec10b3c647"
                    }
                  }
                ]
              },
              {
                "id": "0540da9d-709a-4062-9021-ecaee6ac2c99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eefab217-89a2-49ac-b036-3eead84d2900",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edc355d-0b5c-4abb-90e2-b26a859d07c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1efe9c4d-8c98-4f26-9d8f-bf18598d9697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeb6f57-5f10-4eba-be21-4b9a54095680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab32828f-3412-4fdf-86b4-90fe04460374"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db4dd0a9-0bdf-4c00-b205-e3fcb6f435c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fd3c9dc-7eb5-4199-af4c-c74e35c2620f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1da071fc-13f7-49b3-9a84-e246da1d7a7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fae3a51b-eb2c-4896-8d56-ac4374e8167d"
                    }
                  }
                ]
              },
              {
                "id": "763783e0-35c4-4fba-b3f6-e4ef61b58b7d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f3e11cc8-71f6-4663-8825-931987de64d5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142be6e8-7b00-43b3-8cd9-ebc799e40bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c371ec16-5f65-4eeb-968f-fadefdbc29bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16e8e6d-d094-4aae-af34-1d25490bca5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7eaac1-1715-4733-acca-feadba4b0e60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "acbbbb64-37e8-4275-a216-8ff42062fe11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4caa7b12-3660-4d23-bde6-329e63db63ee",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4be37a8-d362-492d-9a71-31f02909997d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e1a9f16-bd0e-41f4-9b7d-30eaa87f310a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "670b7c3a-b2b5-4ec5-aa98-474fa638084a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a84e8372-211d-4f4d-9405-503a100c9f0a"
                    }
                  }
                ]
              },
              {
                "id": "945fba91-318e-4b89-84d4-719d0ef3016a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8925996b-7ded-4174-8a17-ff11019006d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e82c9f2a-a9d0-4abd-86a3-6f210ecfb90a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ddf0bb8-600a-4bc6-b20c-a58ef80dd730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8719a03-86e2-4169-883b-cb45e9711713"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59d7423b-c0e4-470a-82ce-cc4977f61b6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7ff7dcc9-8bd7-447a-acfe-f0c8ae459495"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2cda0fa-e2f4-4d01-beba-b854d672c746",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01db5d75-313b-44f5-a6cf-683cbe1474a4"
            }
          }
        ]
      },
      {
        "id": "5a71c4f8-4520-44ef-8cdb-24741e195374",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e7410077-fb7c-4942-b1fb-ceb06fa12f41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bdff154-0811-4dd0-bf2a-4654760e1573",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c196397-8b73-4fe4-95c1-f69f1a34f346",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cecb50-b1c2-4053-a3a3-437f8c3a7ee1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35e35f49-5dcb-49ca-8fc0-93578db8a880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790fb7bd-96b3-460c-8e9b-0427ca6822d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d103b246-84d2-4282-a96b-716987083836"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b58c7867-f5ec-4e28-8220-2cfc26557b4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75e065a1-6918-4f3b-ab63-cf7b8e2a5d5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "637a00f6-3c33-43e0-9721-85c7d5d273e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c0b0e5f-0445-4844-b3ec-48ee21b933b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa873548-8842-4ecd-863d-263d97d68d20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c9f1340f-47d5-45dc-81ed-9c47d7140273"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea92f4c-84fa-427b-b704-ebe3d87e773b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6ae3f61-58d9-470f-8d80-9151d4c88718"
            }
          }
        ]
      },
      {
        "id": "21a2aef7-1b33-474b-9408-66e53bbc3628",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fe297f5d-06c5-4c3c-840a-ac82d9fa8ef5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a556362a-374e-4945-8cf1-1b9e705ac6f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bedde8f-6d6f-4069-adbf-ae268922dd3b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b2ebcd-8ae7-42cd-b351-f5896f312117",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da1b1941-d401-4156-af3a-465f4628ce4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b3703b-525e-46e5-a743-aa5fac545f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a9ff42b-29a1-4343-8b4d-14c364a7fec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39bd306-b90b-464c-915d-3b350d5069d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3df8568-c0e4-4d7c-abba-e78bcaed7185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adad0ef8-8536-4ae1-9c5f-ec1bea968434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90c30ab6-e839-4a7c-beb1-6f5aa3d495c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "400fcae5-4730-41d5-b1d0-30e0ed0e2ac3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0432321a-cb06-4420-bbf6-45b9dc4ac00b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cc972a6-7f82-4dd0-957b-14f416d015ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cce7365-4ba8-470e-b463-dfaf45e9719c"
            }
          }
        ]
      },
      {
        "id": "1cf1e202-27cc-4fee-8f8a-eb642d851b56",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8890b12e-2fe1-4f09-a50e-5726c13dd79e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ae095d8-b0a0-413e-bf30-f8a85bd568cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e670239-21f0-4e95-b612-e033337d715c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2559d030-34d2-4050-87b9-c90e3e4cfeb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c88ed86-7289-46de-88db-8b5ce51b10c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65fc3b4-709e-4720-b435-295e7dae0179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b52fe4f6-a7c0-4c05-b00e-6a15550163d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18fc8a44-517e-4035-9331-955c194a8d47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eaa5ce7-90de-4169-9e1b-9c68c65bad9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e05b5a1-9b53-40b1-a55d-bc75cff348e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfcb1bd1-3298-40c6-8845-05869ec01282"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0a40f25-3ffc-4934-a578-ba1a20734e41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06961592-8e19-4bf8-8257-46ecc6c4dd7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f4d7ae-a477-4bcb-88ff-fa4eee9d3d24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "312510d1-821b-47a5-a374-ab99f9baad1c"
            }
          }
        ]
      },
      {
        "id": "ec156440-6bfb-4171-8417-2b9ebf29c3b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55b6dfa3-51dc-4280-a565-be626cc56942",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "619fc3ec-df59-41d0-8902-1f852383b0c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5c7bab4f-02e0-486a-bb51-521daf7e903d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed00dcba-5534-4f29-bf9f-987767fc36a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09bc14c2-8b1b-4d9d-8ff3-a8f78a43c5fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.2711267605634,
      "responseMin": 15,
      "responseMax": 313,
      "responseSd": 25.84529564893992,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689900080039,
      "completed": 1689900104630
    },
    "executions": [
      {
        "id": "86cb0cf2-1456-4d30-a56a-6de36c72c8c3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "44a974a1-cc06-46df-8788-a869fe8cf222",
          "httpRequestId": "1657918e-219c-4c52-8618-4897ffbf957b"
        },
        "item": {
          "id": "86cb0cf2-1456-4d30-a56a-6de36c72c8c3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cbf54095-2d98-44c9-b1ef-56236c14fde1",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "ee7ed2d7-8184-4d1e-9877-d8c68ba3a0bc",
        "cursor": {
          "ref": "498e8b10-0d16-4a4e-a733-fe9033522bda",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ac8c7d1d-d542-413b-aa4d-754674761b5c"
        },
        "item": {
          "id": "ee7ed2d7-8184-4d1e-9877-d8c68ba3a0bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "234bc259-3da2-4dda-b3a9-012aad9345ab",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "df1a459f-c127-44dd-bea1-122d1b6310b6",
        "cursor": {
          "ref": "a39a7b58-58a5-4c89-9097-81c2525178b3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "728ddf1c-0e92-4246-9d1e-3408f2dadbd3"
        },
        "item": {
          "id": "df1a459f-c127-44dd-bea1-122d1b6310b6",
          "name": "did_json"
        },
        "response": {
          "id": "c6aefa9d-e9b1-43eb-ba64-7b2a963744e2",
          "status": "OK",
          "code": 200,
          "responseTime": 231,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98bdca4-45c7-4e64-8db0-2bf241a02fb9",
        "cursor": {
          "ref": "d7c4e904-854f-4dce-b048-3b3fd230d755",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6d199747-0ae2-4adc-862c-fd427c4c949c"
        },
        "item": {
          "id": "f98bdca4-45c7-4e64-8db0-2bf241a02fb9",
          "name": "did:invalid"
        },
        "response": {
          "id": "414b3526-5f8c-4153-9730-135a528c5898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98bdca4-45c7-4e64-8db0-2bf241a02fb9",
        "cursor": {
          "ref": "d7c4e904-854f-4dce-b048-3b3fd230d755",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6d199747-0ae2-4adc-862c-fd427c4c949c"
        },
        "item": {
          "id": "f98bdca4-45c7-4e64-8db0-2bf241a02fb9",
          "name": "did:invalid"
        },
        "response": {
          "id": "414b3526-5f8c-4153-9730-135a528c5898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77818dd9-72d4-4a1a-9057-ffb9490353a3",
        "cursor": {
          "ref": "99a21a52-f15e-4ccf-a642-42452f8f3184",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "22c0d27c-4936-45e9-b0c1-9c7efea16684"
        },
        "item": {
          "id": "77818dd9-72d4-4a1a-9057-ffb9490353a3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a00b9ace-b6d6-4dae-bde1-208a987e3394",
          "status": "Not Found",
          "code": 404,
          "responseTime": 147,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825b51a2-ac97-4f42-89a0-c89922925e45",
        "cursor": {
          "ref": "cec5e87e-5b48-450c-9637-0484321fb0c8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2e785f7a-d5cf-4eff-a33b-3d1f2ebda61d"
        },
        "item": {
          "id": "825b51a2-ac97-4f42-89a0-c89922925e45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b62a7e81-e197-46c1-872e-7e1fa84d9e90",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ae7f9f-e415-43ac-96ad-79df4d3ab316",
        "cursor": {
          "ref": "6b1f74f5-3dc1-40ba-a3d0-1b1fe5083342",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6928551b-c2cb-42b7-b7e2-1e31d6a68acc"
        },
        "item": {
          "id": "e0ae7f9f-e415-43ac-96ad-79df4d3ab316",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "55006cbc-ca16-43ff-8ab8-e43811f5c08f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927fc516-a26c-42f0-b754-b22a70f1142c",
        "cursor": {
          "ref": "7cca3e38-a5a0-4918-b9ea-0c3ec13b69e4",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0e5dd21-f5a6-4efc-9900-18d48dbcc428"
        },
        "item": {
          "id": "927fc516-a26c-42f0-b754-b22a70f1142c",
          "name": "identifiers"
        },
        "response": {
          "id": "f15c2fd0-6a8c-4280-9388-a07d0c1daa08",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052a8aa2-3230-4872-aecd-b35799efbe85",
        "cursor": {
          "ref": "733e23ca-d9ff-416a-aa2c-ab3faeebb906",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2b3d393e-4c45-4cd3-a931-f888a8f92043"
        },
        "item": {
          "id": "052a8aa2-3230-4872-aecd-b35799efbe85",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99351648-8287-4c92-9eab-9f6551d7e5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0327778-b4bb-4830-afae-902cfc5b8172",
        "cursor": {
          "ref": "bd4dd51f-8555-4894-94a8-d92dd5fd96ea",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35b07319-7fa3-43fd-ae39-3bcbc189216a"
        },
        "item": {
          "id": "c0327778-b4bb-4830-afae-902cfc5b8172",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "68d4fca2-5b6f-4a29-8095-f38d4cd83c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1e21d9-2f86-45ad-afad-9305bae0949f",
        "cursor": {
          "ref": "c116519c-32fa-4c54-8116-5de4d80f67f2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8ea34212-92a4-4457-b36c-a88d3a81a362"
        },
        "item": {
          "id": "3f1e21d9-2f86-45ad-afad-9305bae0949f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "64973fab-c3dd-4678-8eda-d6ee2428bc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b739a222-d770-49da-a155-188b419298ff",
        "cursor": {
          "ref": "22b58379-22a8-4be1-a877-2ebca659ac94",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c185b617-2bbe-4452-8801-eecc66649159"
        },
        "item": {
          "id": "b739a222-d770-49da-a155-188b419298ff",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "240c4c3c-5bc0-466f-bd31-bd9403a99b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fee9af-ccb0-44c3-8353-f1916db32f1c",
        "cursor": {
          "ref": "91c6ed6d-eee3-473f-b035-b0a709644c25",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "eccf7d20-b5cf-4a05-a0ad-1bd7408ea602"
        },
        "item": {
          "id": "92fee9af-ccb0-44c3-8353-f1916db32f1c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5d089b1f-c105-4ffe-bfd8-a784d411fbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeec481e-30d4-45a7-ba3f-38fdf3e263b6",
        "cursor": {
          "ref": "56960b5d-bcd2-4734-81d1-103a64794b27",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "020c201f-2529-4bcc-b4d1-363f6d851dd4"
        },
        "item": {
          "id": "aeec481e-30d4-45a7-ba3f-38fdf3e263b6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9462e82c-7aa8-47d3-a59c-62b878ee0ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643728d6-020a-47ca-a9ec-7843ed8d5c00",
        "cursor": {
          "ref": "52eb9ec0-c8a5-4788-8f0f-3bdae0bd37b7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "63b6c194-5fcc-4e6d-9250-b17daf48bd42"
        },
        "item": {
          "id": "643728d6-020a-47ca-a9ec-7843ed8d5c00",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "02867c16-a748-4f7f-a2a3-4f5c0aefeb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2fceac-0fbd-45af-8489-53223e3973e6",
        "cursor": {
          "ref": "548ad001-eca4-4389-9b77-7e8e02a042b7",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b1d73231-2aeb-4b3f-a5ed-9ff377a32cbb"
        },
        "item": {
          "id": "dd2fceac-0fbd-45af-8489-53223e3973e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f310a3dc-d2e7-49f4-ab35-d7aa3b520739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4214b3-b1ed-40ca-9e10-a139b12e2b8e",
        "cursor": {
          "ref": "1b54bf51-082b-44c7-9fe1-b96fc5216c58",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "92a1d692-e875-45b6-b449-9bb1f8053fa7"
        },
        "item": {
          "id": "1a4214b3-b1ed-40ca-9e10-a139b12e2b8e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bc31dc0b-4757-4fe2-9f33-4ee0c48b99b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61102d7-c27e-4c51-a6a0-f7f76bbb081f",
        "cursor": {
          "ref": "b54eaae1-e06b-4590-a9b5-e75135b30a0b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "302d7a80-3338-4131-9a69-1fab08008465"
        },
        "item": {
          "id": "e61102d7-c27e-4c51-a6a0-f7f76bbb081f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "084d75fa-d30d-4a44-a22c-02a1207b16dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc955c6-a4c9-4fb0-930d-ad195c8c9379",
        "cursor": {
          "ref": "a02ce676-0a8e-4a13-8105-207cfca5e69b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c903c523-9fed-42c8-9948-d3adba7f7320"
        },
        "item": {
          "id": "2fc955c6-a4c9-4fb0-930d-ad195c8c9379",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dd0c6504-cedc-4736-915a-b29fb1036cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bb9fb4-c99a-4e32-9c4b-5ca791b45ca9",
        "cursor": {
          "ref": "0fa40f34-8d85-4edf-991b-b2f54c2b3a0a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a60e54fa-af92-403c-87e7-582f6d1afc5c"
        },
        "item": {
          "id": "a9bb9fb4-c99a-4e32-9c4b-5ca791b45ca9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0b029b82-cd19-4b7d-9cb6-64ea7b932c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd5acfb-bb45-4dd4-a9d0-4ea39ff026a1",
        "cursor": {
          "ref": "ef736745-9a1c-4962-9bd5-eccb6d33e4e6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "88e891b2-d7ac-4814-9ac8-2ce3bbd6f903"
        },
        "item": {
          "id": "2dd5acfb-bb45-4dd4-a9d0-4ea39ff026a1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff640084-fe74-4184-a4a3-dc1fb1585855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33847644-b7c8-453d-9c6a-1737b2de2dd2",
        "cursor": {
          "ref": "7b4b7914-f06c-4ca3-9fc4-b8fd2e106c27",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55a102e4-2d65-415f-b449-96b8f03ce864"
        },
        "item": {
          "id": "33847644-b7c8-453d-9c6a-1737b2de2dd2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8ec6c32a-9bb8-4cbb-9852-014670338cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd70d13-f505-4474-a86d-f503eb4abad0",
        "cursor": {
          "ref": "11222795-d9b1-49e8-9bb9-1eecf7218bee",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "13072181-d5b9-44ed-aae0-ecd2bd2bdcad"
        },
        "item": {
          "id": "8bd70d13-f505-4474-a86d-f503eb4abad0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6e6e4559-64aa-4726-967f-091732fe6064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86221f4-203c-42a8-b8b8-1d3d4ed0e39a",
        "cursor": {
          "ref": "cc9f3cbd-7005-48a2-a8bf-2ea456d63b4c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "01121e99-a21a-4d6a-8e92-080615f4e5c9"
        },
        "item": {
          "id": "f86221f4-203c-42a8-b8b8-1d3d4ed0e39a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "77547db9-af56-4724-8df5-fac0d6febacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf505a68-31b4-44f1-a50a-e392c63b328c",
        "cursor": {
          "ref": "ee69457d-6842-4b00-b8ef-ca38aefaf85b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6bc075d4-f66c-4672-8dba-d449dc17f9d9"
        },
        "item": {
          "id": "bf505a68-31b4-44f1-a50a-e392c63b328c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a278f7bf-0840-4390-898c-04e7bd2891ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60139d6c-76e6-4ff7-be1f-df587aaa73c9",
        "cursor": {
          "ref": "8a8907bf-94ec-459a-8b39-5bb7daddb267",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b011e90a-d2f2-4514-975d-ef636055fdfd"
        },
        "item": {
          "id": "60139d6c-76e6-4ff7-be1f-df587aaa73c9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "92baf6f5-3f7a-47e8-a808-e4fe58c9db27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e5b542-80b0-4bd7-a6f2-f4490bc2f733",
        "cursor": {
          "ref": "d8c4955f-cfed-4cbf-a912-7f5924de6e5b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "746df7ab-8bc8-472d-86f5-96bb1fc2db66"
        },
        "item": {
          "id": "d3e5b542-80b0-4bd7-a6f2-f4490bc2f733",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ddb72cc1-803f-430d-bb27-188454e9efbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bcb956-c64f-4e0d-bfa2-2edcede86666",
        "cursor": {
          "ref": "2382e5c9-3ab2-47a3-870b-dba29608b971",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6e72aec2-da43-4879-a084-835ac3f4aa0e"
        },
        "item": {
          "id": "79bcb956-c64f-4e0d-bfa2-2edcede86666",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7c283627-490d-401f-b55e-4502a0a16187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b31839-761a-416f-ac08-8be84ee9716b",
        "cursor": {
          "ref": "ea3cdeb8-dc6c-4cff-82cd-7ce8fe650522",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "56e8d6f3-c34f-43f6-bd23-463be3f31ef9"
        },
        "item": {
          "id": "79b31839-761a-416f-ac08-8be84ee9716b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f0c51088-46ac-4b84-8ca9-8a18a14720ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f68304f-80bf-41ff-9403-0d499eceaef4",
        "cursor": {
          "ref": "08a88ea7-7c13-4972-be39-8e515a038b97",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4449bfbb-6026-4697-8ba7-d4f8234ac14d"
        },
        "item": {
          "id": "4f68304f-80bf-41ff-9403-0d499eceaef4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "040d4329-27c7-4b22-8bae-e18a7a24992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b63e0a-90da-4290-a3e3-44eab3035a7a",
        "cursor": {
          "ref": "53ba8d78-c645-4e59-a172-aa3d4e6e7ff9",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1a02bdd6-07c7-4d60-9b06-d0ceddc61b8a"
        },
        "item": {
          "id": "68b63e0a-90da-4290-a3e3-44eab3035a7a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3fa64a05-27dc-472f-b871-bf55d418a950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eb4e81-06b7-4e65-983b-007191d33819",
        "cursor": {
          "ref": "bb184a84-d736-4767-863d-9520087a80fb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9da7fb99-d2af-47c4-8b74-8a872b2276b9"
        },
        "item": {
          "id": "71eb4e81-06b7-4e65-983b-007191d33819",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d14681e2-304b-4ed3-8a03-37c112caace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50b4af3-e7d7-4b76-80b5-00c99017edc5",
        "cursor": {
          "ref": "b8aeba67-2b64-4c28-bec6-ee7e19e94bd0",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cf155fc2-aa49-4d5d-95a2-e74a3a4a979a"
        },
        "item": {
          "id": "d50b4af3-e7d7-4b76-80b5-00c99017edc5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2d31b1b0-b5c3-4275-a1bd-f21e12e68b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e35827-68f9-4def-970d-de21ac40dec0",
        "cursor": {
          "ref": "8660bcb5-6863-4a5b-b2ce-62dd993ae68e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bf4580e4-42c1-4896-a2f3-1b11366ea362"
        },
        "item": {
          "id": "06e35827-68f9-4def-970d-de21ac40dec0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3091b221-22c9-419e-a292-9884d5304276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20306f25-f6d4-4ffc-ac8a-b5a841eff401",
        "cursor": {
          "ref": "e681cf94-3012-48da-90e5-6140f0e4eba5",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "84ee2eaf-380a-4961-9403-29e58a2cc1b0"
        },
        "item": {
          "id": "20306f25-f6d4-4ffc-ac8a-b5a841eff401",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fd9c1167-7658-47bf-82df-1339991e02b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f1ab59-3271-4318-b609-1362b853dd1e",
        "cursor": {
          "ref": "e366422c-72d0-4e00-a796-e83169222ddc",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ac35b905-4127-4be2-9315-1cadebc89b73"
        },
        "item": {
          "id": "79f1ab59-3271-4318-b609-1362b853dd1e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "41f23072-6df7-4fa3-8a3d-24b0ebba262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07589d6-3e24-4777-8a92-2c4aeac35f91",
        "cursor": {
          "ref": "5d3778a0-dd7d-4443-a523-ef399cb8e9d4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fbc0d209-bd09-4a1b-b501-8a73d5a9b3e2"
        },
        "item": {
          "id": "b07589d6-3e24-4777-8a92-2c4aeac35f91",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57a6aa4f-5786-4a4e-a79c-f91bab8eb4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1525e-fbc3-4919-b4b2-4fce339e8fa3",
        "cursor": {
          "ref": "dcef1d68-2679-4b3b-837f-b023fec70dcb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ee4922df-945f-4a77-8caf-11d9df05da05"
        },
        "item": {
          "id": "5ca1525e-fbc3-4919-b4b2-4fce339e8fa3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9f13e719-6c8b-4887-a5df-20bb6bc571ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cc7826-409f-402e-b483-be6a983c190f",
        "cursor": {
          "ref": "864abc9b-f455-43c6-b66d-06102fb00638",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0aed7b4f-d8cb-4101-8000-d66e40309923"
        },
        "item": {
          "id": "61cc7826-409f-402e-b483-be6a983c190f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d8d0b1f2-1e0a-44e6-8d47-3587b4f5a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e2b7fb-c941-4958-849a-d0033c343566",
        "cursor": {
          "ref": "406fa4a2-e214-4138-ad66-d3edcfebbea0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c7d4e75-3c21-400b-a794-cba7a2cb23d2"
        },
        "item": {
          "id": "05e2b7fb-c941-4958-849a-d0033c343566",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f66d1127-bfba-4bae-b02a-d3c574bafe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76166d90-f94b-48b4-b0e8-f968878e9802",
        "cursor": {
          "ref": "93a18e15-68b1-4851-8469-d0d5c38f54a6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5cb08921-735c-4153-895b-18f5d5202692"
        },
        "item": {
          "id": "76166d90-f94b-48b4-b0e8-f968878e9802",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8039a669-0b49-4f87-ade2-fa1499a299a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106ac407-d5d1-4842-bf2d-ca24693aa9b1",
        "cursor": {
          "ref": "8004083c-a780-4d6c-a7fc-272ec5a5bb73",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "58503089-ed5f-4ff7-a0b7-66177c19d74a"
        },
        "item": {
          "id": "106ac407-d5d1-4842-bf2d-ca24693aa9b1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "57414b0b-cceb-47f2-8154-847d79077038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc4c45b-b1b9-4b35-b501-70e32b15a47e",
        "cursor": {
          "ref": "8257f62f-543d-4ece-b20b-d849fac5a8ea",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "acc9fc6d-fa20-4663-8483-fe3242def544"
        },
        "item": {
          "id": "dbc4c45b-b1b9-4b35-b501-70e32b15a47e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0527068-49d4-4f31-9e9f-0230c82c00da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fa336c-665f-499a-ab6d-33115811a9c1",
        "cursor": {
          "ref": "7eab2cf7-5db7-4fd8-b7a8-5d043070faa1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e37e6ae1-91aa-45d2-b365-d298bf35aaf0"
        },
        "item": {
          "id": "25fa336c-665f-499a-ab6d-33115811a9c1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c36bbe26-7aa7-4f0c-81fa-f310c0bb976d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5aa2be-fbf8-4fe8-a1c3-3523ab86eb76",
        "cursor": {
          "ref": "1edfb9a9-eeef-4634-85e8-052aaa43c14e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "16be3235-8d6f-4c30-93b9-953d14f529f1"
        },
        "item": {
          "id": "da5aa2be-fbf8-4fe8-a1c3-3523ab86eb76",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3ce2750b-b88b-480f-b59b-3085fa3bcb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c3b5d9-2516-48d3-849e-0233acc61b0f",
        "cursor": {
          "ref": "952e1084-ef58-4fde-9f63-1cc9261c89ce",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a3df6da-6f15-4569-aeb0-39112b6061e2"
        },
        "item": {
          "id": "b9c3b5d9-2516-48d3-849e-0233acc61b0f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "12ef220f-14bc-4531-be65-7cb9d9029b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de6b7e0-44ca-4fd4-96e1-b30696184f30",
        "cursor": {
          "ref": "840594b3-639c-4615-853e-668431436d3e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8a80f398-b8d7-482a-8684-492a75f29bfe"
        },
        "item": {
          "id": "8de6b7e0-44ca-4fd4-96e1-b30696184f30",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7f3b6540-942f-4df7-9c60-e424832aa3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8fc100-4c7a-43da-8c1a-7d97ece26053",
        "cursor": {
          "ref": "ad74f921-7cd8-4baa-b7e7-f122808b4831",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7994ff83-cfaf-4654-8821-78b09ddccaad"
        },
        "item": {
          "id": "de8fc100-4c7a-43da-8c1a-7d97ece26053",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "494059b4-46f4-437e-b41b-0a23851437e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf24496d-ebe6-42cb-8e87-9340a1e7f6ce",
        "cursor": {
          "ref": "21ccd5a0-f36c-4aba-9068-865cc10a5006",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "979be1db-9379-46a7-bf9c-a75f2a2e17e5"
        },
        "item": {
          "id": "cf24496d-ebe6-42cb-8e87-9340a1e7f6ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64af6bf1-4061-486c-a09b-f4e063793ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8435acca-dc7a-4d47-8c9f-06fa9baeb6e1",
        "cursor": {
          "ref": "d4fb317c-5f8b-470e-85b1-e1d59b0acd2a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6077c548-a603-4568-b5f8-777964a82a51"
        },
        "item": {
          "id": "8435acca-dc7a-4d47-8c9f-06fa9baeb6e1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bd57866c-45eb-4210-8d90-df4c2d5560da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccc032a-fd30-4854-8d43-ee43b3f31759",
        "cursor": {
          "ref": "44b0dccb-fab7-4a89-8964-461fd9e3e81d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7af10f69-ad91-4d10-af39-ee37cad7250f"
        },
        "item": {
          "id": "0ccc032a-fd30-4854-8d43-ee43b3f31759",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8af9f0a3-8889-4d6a-aa6c-4bbfece0a171",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc6642d-27e1-44c0-a51b-ae2b8bf211d4",
        "cursor": {
          "ref": "b7ef0b4e-6ed6-4825-9999-69dc7175acaa",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a9bbac11-603a-4fa0-b10a-8ce1798c8475"
        },
        "item": {
          "id": "efc6642d-27e1-44c0-a51b-ae2b8bf211d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fa11046f-2cce-486f-93cd-b0a19636d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86953da-53ae-42ca-8927-4041f1ae0435",
        "cursor": {
          "ref": "af809df9-8386-4a3b-8111-aec8570532fa",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "17f9185a-f32c-4cf9-ad03-c495486c1feb"
        },
        "item": {
          "id": "b86953da-53ae-42ca-8927-4041f1ae0435",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fd3b3cf5-1baa-4edf-a232-6c40a7139b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8ab785-d77b-4776-83c5-51a830005d02",
        "cursor": {
          "ref": "4f4a9b8c-1613-46e0-8cdd-0bc8fd4cdfa1",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9b7a0422-3f5b-4294-93c7-ecdfb2f71f82"
        },
        "item": {
          "id": "3d8ab785-d77b-4776-83c5-51a830005d02",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d10c4e5c-56e3-413f-b15d-0b3bf4280c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd6c0c4-5a95-4250-be4a-8fffc66deddc",
        "cursor": {
          "ref": "0855058c-a1bc-44fa-94df-ef6c7b183afb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7c1c525f-4722-4eb3-9dbc-a4201da517c7"
        },
        "item": {
          "id": "ecd6c0c4-5a95-4250-be4a-8fffc66deddc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "07bb5490-dc77-4efc-9e30-263f1de0abb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af7c37c-8834-4a99-b792-01b1aa86c690",
        "cursor": {
          "ref": "9f1ee2c8-3ea9-4197-b45f-92621326bda0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "15651db9-0ef8-4b6c-bfd0-226e8379842d"
        },
        "item": {
          "id": "2af7c37c-8834-4a99-b792-01b1aa86c690",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7d054954-696e-4fc8-ad7a-4373855f2e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7646f72-919e-4428-88cc-c1d52ae982a4",
        "cursor": {
          "ref": "e34450de-0820-41f1-b66b-9dfce201b0e7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0c9bcb30-690a-48a6-a171-91a4e301ba04"
        },
        "item": {
          "id": "c7646f72-919e-4428-88cc-c1d52ae982a4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e3fcfa2a-2513-4b1b-ae11-91f575547334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fb46f6-ecd2-4cab-84e6-1a4000bccec5",
        "cursor": {
          "ref": "f6f03746-7a03-4712-9b64-38e4bec92313",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8225857b-617d-41ab-8cd9-e38b650ae39b"
        },
        "item": {
          "id": "85fb46f6-ecd2-4cab-84e6-1a4000bccec5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "adfe2a74-ef10-4e32-a67f-4040174e33e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb021af9-7d61-4d38-8661-2cf4dad33abd",
        "cursor": {
          "ref": "9f684655-4114-46ab-b267-2999b87c052f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "75e41929-5ab6-448d-a838-71a763734a84"
        },
        "item": {
          "id": "eb021af9-7d61-4d38-8661-2cf4dad33abd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "16d6ed7c-d70e-4642-afde-2556d96eac86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2fbc29-2225-4be3-8cf3-829b25dfc318",
        "cursor": {
          "ref": "527b3242-518b-4327-bc1e-93875d4b6c19",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c7b8b9f2-b84b-4bb5-9936-80a70984d0b0"
        },
        "item": {
          "id": "ca2fbc29-2225-4be3-8cf3-829b25dfc318",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3a16f288-dfc3-4fc8-b382-56f531c26e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b931c066-938a-4d19-a4d9-95cfe3cf1c12",
        "cursor": {
          "ref": "3aa8937d-9dd6-4904-8c04-f8765ef0eadd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4fee029b-1106-451b-af7d-f22407c97495"
        },
        "item": {
          "id": "b931c066-938a-4d19-a4d9-95cfe3cf1c12",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1feb5f66-1026-41a8-b457-975e8e513349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea4d204-1155-455d-951a-5aa0f194f2a8",
        "cursor": {
          "ref": "37b03b20-22d8-4e6e-9085-62c8c36a0b67",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fe50c064-f5ed-464b-86e0-5cc080e04e75"
        },
        "item": {
          "id": "4ea4d204-1155-455d-951a-5aa0f194f2a8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "914dfef7-e022-49ee-871b-6dcb32e3d4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce8338f-29fe-46e9-b09c-49c1982b974b",
        "cursor": {
          "ref": "93b25189-4253-4022-9e85-4dbabca70118",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ddd7c40e-a44c-4121-87fb-4e241fdb0579"
        },
        "item": {
          "id": "9ce8338f-29fe-46e9-b09c-49c1982b974b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "57bceef2-7e11-4997-b9b6-a0e174ef3091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaa6caa-2c5e-4d4f-8cd1-9db3e02d3a12",
        "cursor": {
          "ref": "31af68cc-108f-45d5-83c5-e5e6a4a9eeaf",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "44086a09-acf0-4ff1-bb8f-dda4dd3ad220"
        },
        "item": {
          "id": "cfaa6caa-2c5e-4d4f-8cd1-9db3e02d3a12",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8c22c14a-fc3a-48bc-b00b-e80fcd916420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe956010-e98b-42fe-805e-afd922c8bcd0",
        "cursor": {
          "ref": "c099c150-98e7-4bec-ba99-57da69190db1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "52716055-543c-4cc4-b32d-504caa509b44"
        },
        "item": {
          "id": "fe956010-e98b-42fe-805e-afd922c8bcd0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d0a3cb1c-7c55-4af9-ac15-c0546bd22951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ac037-c948-42e8-a58e-3e0e2b5cc82f",
        "cursor": {
          "ref": "57ed3c09-d7a9-466f-8dbd-26cdc64579dc",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5fd9da94-43df-4135-9108-b55078fa74fd"
        },
        "item": {
          "id": "572ac037-c948-42e8-a58e-3e0e2b5cc82f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "68ae8447-1063-4375-acc1-251f09eec9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2adc7b-2209-4cca-b6c6-83c9f3025504",
        "cursor": {
          "ref": "b340be2f-9183-4cf5-b183-f88e76fa951c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d70e72c3-7749-49de-81cb-7731f72764fe"
        },
        "item": {
          "id": "1e2adc7b-2209-4cca-b6c6-83c9f3025504",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "17445590-3a0b-4d49-ba63-abe97f9c7806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c996d537-09dc-4984-9958-ed75a4e0801c",
        "cursor": {
          "ref": "d81c7ee4-9d24-46e3-a086-7c782ad34151",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8a1af0a-02e9-4805-a559-f7d4ed545ae2"
        },
        "item": {
          "id": "c996d537-09dc-4984-9958-ed75a4e0801c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "95bba00a-8ec0-48d5-900a-5a4bcc976350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb3ea63-e756-49fa-9af7-11cdf530649c",
        "cursor": {
          "ref": "2eb97c71-499b-4882-89c3-d5c19df5271f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2cb87a02-5292-46af-b2f1-7f6150c7d233"
        },
        "item": {
          "id": "cdb3ea63-e756-49fa-9af7-11cdf530649c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e2e8b3e0-3442-406a-9158-3b2a031c03a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f88047-ebd9-40a5-8692-1d51757779bb",
        "cursor": {
          "ref": "af87e0a3-e44c-4701-b87a-a63e4cee5b34",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f715c7db-0586-4785-9a8d-362808887f64"
        },
        "item": {
          "id": "78f88047-ebd9-40a5-8692-1d51757779bb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c45dcda5-6e1e-405a-b10c-00a1459f79de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64baf0a-c048-4e83-b299-5da036030cf4",
        "cursor": {
          "ref": "3a9d4dfe-f132-441e-99ec-fc61d231d3c8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6729b3a7-26ce-4903-881c-6633b899cef0"
        },
        "item": {
          "id": "f64baf0a-c048-4e83-b299-5da036030cf4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a2aaf9a6-84fb-42af-94b5-1cb1c5bb2386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7837daa1-21e0-4bb4-8aad-794aa6cffa3d",
        "cursor": {
          "ref": "957e6fb0-8ff5-41b0-81ca-c46bb4f69e84",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aee53a8c-571e-4568-b7ef-d9afc1a833f8"
        },
        "item": {
          "id": "7837daa1-21e0-4bb4-8aad-794aa6cffa3d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a4c886ce-9be2-4c99-962a-08e3b5a53f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc741a2f-a1f3-4b70-9d57-a6b8c4904944",
        "cursor": {
          "ref": "b7b0a67d-efb2-43e1-881e-5a6e525dd71b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ef5d164d-6c75-4e13-a70a-e2798a12741c"
        },
        "item": {
          "id": "fc741a2f-a1f3-4b70-9d57-a6b8c4904944",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4c57f20f-43ed-40fd-9ddb-67c12a752814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbff71a-facd-463a-950c-33c0ee1c9a4f",
        "cursor": {
          "ref": "a68f8da4-1623-4dfc-ba2f-3de83df7d7a1",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2203d900-0175-4d8f-b0d7-f09afc7fdd99"
        },
        "item": {
          "id": "fdbff71a-facd-463a-950c-33c0ee1c9a4f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "54f73cf1-0f0f-4092-9734-92b53576a5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b832a542-b922-4d68-a566-d588b8cea0e7",
        "cursor": {
          "ref": "84d2d6e6-f14a-4022-95c3-d0b0bcf6c67d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2b611b8-5623-40a7-a906-f4b35c990620"
        },
        "item": {
          "id": "b832a542-b922-4d68-a566-d588b8cea0e7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a88a83ca-faa9-4226-bb34-aeae94917ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95737812-652d-4a5a-98af-245d7a31468d",
        "cursor": {
          "ref": "b5a67ac2-1dca-45ac-9f70-6dc08d06f5b5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0812d77b-2ae8-4fc8-99d8-f340a5ec1ad8"
        },
        "item": {
          "id": "95737812-652d-4a5a-98af-245d7a31468d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "536ddea8-603d-41ea-a48e-d7eeffcab197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55802313-76a2-42a7-b2c8-9220e454e21d",
        "cursor": {
          "ref": "67fd9629-10d1-4a32-b632-ac73dfff2df3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f15c4e7c-d532-41eb-a7fe-db32156569db"
        },
        "item": {
          "id": "55802313-76a2-42a7-b2c8-9220e454e21d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "76014f0e-700f-4c9e-b9c3-f4832f53c9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d47553d-40b3-4d1f-a3b7-2942848fdec8",
        "cursor": {
          "ref": "478ffec1-be8b-4c8a-b6c3-2f2abd3486b2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b839836a-0a0d-4e0c-893b-48d6cebbba1d"
        },
        "item": {
          "id": "9d47553d-40b3-4d1f-a3b7-2942848fdec8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f8daca5b-a3f0-4402-8d76-8c5574da6f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d62a32e-63a6-459c-badd-5597faee7aea",
        "cursor": {
          "ref": "9c39ad39-bc21-48ae-8cb5-119e0f17783c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9f1dac7d-8ed7-4852-8d73-3213269aab34"
        },
        "item": {
          "id": "7d62a32e-63a6-459c-badd-5597faee7aea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "03c6722b-8988-465b-ba3b-a27c0a4c4971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35aee08-4246-4b48-9971-00078a22b43a",
        "cursor": {
          "ref": "99ef166c-0286-411f-8e8f-58dbd5ab699f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b93285d1-ae34-42da-936c-280a7e9c5ed1"
        },
        "item": {
          "id": "b35aee08-4246-4b48-9971-00078a22b43a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a83d2851-62e0-4049-a637-03d8a8ab773e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e485ee17-9463-4d8d-97ce-c583f7be6b85",
        "cursor": {
          "ref": "eeb0f07a-5169-4850-b64b-e469602aaca3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee5c2b56-2fa0-4fa6-9aa8-2a1828f442a2"
        },
        "item": {
          "id": "e485ee17-9463-4d8d-97ce-c583f7be6b85",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "20a79bcc-7c38-493c-bc2e-cb873ada2023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b6ad1-901b-4c61-8271-55f49d762786",
        "cursor": {
          "ref": "3dd95829-ec5c-4b07-91f5-39a1660c1fdc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "894366e8-0d92-4949-b90e-ea06fb4fc4c2"
        },
        "item": {
          "id": "1e7b6ad1-901b-4c61-8271-55f49d762786",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c998e6bc-3071-46b3-971e-d292a103f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcaa880-3776-46ae-84a2-5a2c34d1f1a4",
        "cursor": {
          "ref": "6e43aa7f-dbe9-4d1f-99be-16f6ce6ccd78",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5e503a57-514f-47e6-8fe9-ebacce25c95d"
        },
        "item": {
          "id": "8bcaa880-3776-46ae-84a2-5a2c34d1f1a4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f71cabec-3feb-4821-8108-390f08c7682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828ff575-c018-4357-831e-ecc6fef027b1",
        "cursor": {
          "ref": "2852b0a3-6730-4ea4-9d1a-7d6457094461",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6a31adfa-e97f-4dab-91ef-13e2df629978"
        },
        "item": {
          "id": "828ff575-c018-4357-831e-ecc6fef027b1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f8b4e3b1-079d-48f1-b144-e157f70d5a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70da7671-b30d-4379-9206-4a724f823fe8",
        "cursor": {
          "ref": "d478a862-07d5-4bf3-ae8d-27af2d818cac",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4f66982e-1aab-421d-87df-e91a14d82759"
        },
        "item": {
          "id": "70da7671-b30d-4379-9206-4a724f823fe8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "703e451c-1280-4750-814f-3af9fd5c74b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0355d38-31ca-432a-b79a-07479e4500be",
        "cursor": {
          "ref": "f75611cd-ec9f-41fb-a9c7-ded8561759ca",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1bb7766e-614f-4284-a1c5-658c52fbf2f7"
        },
        "item": {
          "id": "e0355d38-31ca-432a-b79a-07479e4500be",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "49e5f891-21be-49ad-9021-111ba88aea96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ec315-054d-4c80-84e2-1c8ecef1b0d6",
        "cursor": {
          "ref": "d93c1522-545b-4a0c-a91d-ccc05a02bac3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a99457ab-b041-49ab-8d8a-926f6deedbab"
        },
        "item": {
          "id": "925ec315-054d-4c80-84e2-1c8ecef1b0d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a800359e-4d8d-4b89-bf1e-93b377cc8bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1133c9a-1c7b-4996-ba70-ed34f397705e",
        "cursor": {
          "ref": "cd0c26de-2f46-4471-984b-35da194bff13",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dd63950d-9f6e-4e33-a461-c020e0921fd1"
        },
        "item": {
          "id": "c1133c9a-1c7b-4996-ba70-ed34f397705e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2866e368-fc3b-461a-b8f3-bf86fa9fd110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a31ac02-4cf0-46e5-ae4e-88f463e4977c",
        "cursor": {
          "ref": "d23ca336-1cf6-4f28-bb8e-d2fb59bb49a9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ecc6689e-66f1-453b-a08d-cadc1a38dc28"
        },
        "item": {
          "id": "3a31ac02-4cf0-46e5-ae4e-88f463e4977c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "01f5cef4-7e25-437f-ac9f-32644bce433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cee0e66-974a-403c-91d5-49d5d05df42a",
        "cursor": {
          "ref": "c5c98519-0081-45e4-90a5-429846ffe1de",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c9da4535-bc52-4c4e-811f-92674bdb4ef0"
        },
        "item": {
          "id": "9cee0e66-974a-403c-91d5-49d5d05df42a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "88db205e-b099-4b08-be1a-b08c83df6c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a0d195-6f86-459a-afb2-043a5249ed59",
        "cursor": {
          "ref": "9ec5db99-b0ab-4cba-b208-a6416bc3bddb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4523f422-3a7f-481c-9c0f-a366e381d604"
        },
        "item": {
          "id": "44a0d195-6f86-459a-afb2-043a5249ed59",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c48ce00d-f37e-47ab-91f5-0f0da97eb52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad19592e-cd92-47da-be86-99daedc8286e",
        "cursor": {
          "ref": "43135b48-9ff8-4175-af71-53f6228e273b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5502c055-2bc6-4a00-9619-f17d8467363f"
        },
        "item": {
          "id": "ad19592e-cd92-47da-be86-99daedc8286e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ebac7fca-9969-4a9c-a9a0-1810e31f1c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f39a4c6-3f8d-4ffe-94aa-a1c6bdb77c8b",
        "cursor": {
          "ref": "2071c04d-aa17-4ddb-b7ca-0a227cdf7901",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c7b008c4-4c4a-400b-8897-7a9f8af3d07c"
        },
        "item": {
          "id": "4f39a4c6-3f8d-4ffe-94aa-a1c6bdb77c8b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6d850240-65c3-4cc7-addc-87da88afe0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10768fbe-fac2-4687-9ec0-19331f875d4b",
        "cursor": {
          "ref": "c409acc6-58de-4537-8563-bfe6658ca6a7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "672d5c6a-a33a-4b4d-b390-c2562c0da7fa"
        },
        "item": {
          "id": "10768fbe-fac2-4687-9ec0-19331f875d4b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "540ad541-b325-476f-a07a-6a0d1effb51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9303845d-1a58-47eb-b08b-0a8c5473b999",
        "cursor": {
          "ref": "d4c730fc-4d9d-4298-b18c-ab6c1702edf1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a17d8d78-a7b8-4b77-8e02-1aa1c432e63c"
        },
        "item": {
          "id": "9303845d-1a58-47eb-b08b-0a8c5473b999",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ef5cf2c1-53a5-4422-bbd3-1cf61d12c0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa9643-3363-4954-8a2f-2bacfeec40c7",
        "cursor": {
          "ref": "134b0f48-5f9e-4c23-97d8-57972c5fba7c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9bcb14a4-33be-415f-aa97-821310299304"
        },
        "item": {
          "id": "fbfa9643-3363-4954-8a2f-2bacfeec40c7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "393d7822-83a8-456b-a48e-31e2b364b40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568c9a1d-28f4-42b5-bdd1-426118a8e246",
        "cursor": {
          "ref": "5463d01c-4d44-4b29-a8ba-678ff02654a9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bf9a958c-71b5-4db1-b120-a5f738e21894"
        },
        "item": {
          "id": "568c9a1d-28f4-42b5-bdd1-426118a8e246",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5fba9b1c-b05c-4410-8b1b-848a5a10b2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa74ba70-4e32-4a80-87a1-fd096cc466eb",
        "cursor": {
          "ref": "2d74e49a-ea8a-4506-a0e1-5738dde6539a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "69ddc2f9-464d-4fc2-bcae-1f825a2056f0"
        },
        "item": {
          "id": "aa74ba70-4e32-4a80-87a1-fd096cc466eb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "46b4c7a1-1666-43bd-97b0-c0a385c62975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2de3650-9869-4977-9630-eacaba543182",
        "cursor": {
          "ref": "bbe12dc9-8dbb-4bf8-91e3-a8530a132158",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "759f9a46-942a-4b28-a6fc-93153378daed"
        },
        "item": {
          "id": "b2de3650-9869-4977-9630-eacaba543182",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b9c35c9d-a721-4d6c-bc77-46f78788f866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f31dd3-c4bf-4c04-847a-d93d20f7b0ae",
        "cursor": {
          "ref": "da3d4a3b-891d-4a71-8aaa-1bcd43d2cf22",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2c1ce8fb-0eda-4d86-be5a-b7c88bd02be9"
        },
        "item": {
          "id": "59f31dd3-c4bf-4c04-847a-d93d20f7b0ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fdf140b1-413d-4145-8f40-1e05ef67d2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4442e67-b9ec-4cf9-8d58-8ccf44634b6a",
        "cursor": {
          "ref": "335d6095-3e8d-492c-8097-abd84dc5348e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1fcc9868-7280-448d-8fe6-a3a4490d4147"
        },
        "item": {
          "id": "f4442e67-b9ec-4cf9-8d58-8ccf44634b6a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b75ffc97-ac12-43e7-981f-cc4029862aa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e8d942-4324-4bae-beba-e94422fb6a55",
        "cursor": {
          "ref": "a5c8433a-256e-45c2-af37-5e3e7a9f0f5c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c567c1bf-8c67-49b9-95e4-a890e557f045"
        },
        "item": {
          "id": "b8e8d942-4324-4bae-beba-e94422fb6a55",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f1407085-216c-417d-99c2-7239ec7a2a09",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2802755-94f3-4306-9138-817bb3a2c06c",
        "cursor": {
          "ref": "9f3c6447-61cb-4755-bdf5-c3e8e4fef687",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "71e6df79-c580-433b-ad8e-2965ecc0c538"
        },
        "item": {
          "id": "d2802755-94f3-4306-9138-817bb3a2c06c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "837b1726-a8ae-4c89-b6a5-21a4da95aeeb",
          "status": "Created",
          "code": 201,
          "responseTime": 169,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "450a6828-c569-415f-bbac-142a4244a7b7",
        "cursor": {
          "ref": "cb2aa8a8-11a8-48f9-82ff-26b34a1ea4cd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6bfc980d-c70d-4e6b-8f5c-4694fcc8dfcf"
        },
        "item": {
          "id": "450a6828-c569-415f-bbac-142a4244a7b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1e561dda-c1ff-4776-a118-6cc9ac05107c",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eac6664-3c70-4be1-91e1-a641bbcf507b",
        "cursor": {
          "ref": "57fc8fc1-b740-4950-886c-6f87fe53eaf9",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "786721d0-52c8-41a6-9b0d-d2ffe0347403"
        },
        "item": {
          "id": "2eac6664-3c70-4be1-91e1-a641bbcf507b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "64501936-acd7-42c2-b1ad-2b9606227e49",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3a04af-fac2-4408-bbe2-f6a13af5c20f",
        "cursor": {
          "ref": "99d30628-b403-4df1-913b-b2cab606f22d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1b45fb4a-4c7b-4efe-98f9-5cc07981460d"
        },
        "item": {
          "id": "1e3a04af-fac2-4408-bbe2-f6a13af5c20f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "798d7195-194c-4f83-bb34-21262ab2e3df",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "da780879-dd42-4a2d-87de-1fc9ac4ef468",
        "cursor": {
          "ref": "dba6ab4a-a500-4b04-b635-0842a007db18",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2888d69e-863c-4ca1-a041-17c62425060e"
        },
        "item": {
          "id": "da780879-dd42-4a2d-87de-1fc9ac4ef468",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f7705ca8-cb34-4369-82c1-7a6acf2278b4",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cb9ab7-c04b-4db9-bf60-81d2c87f7248",
        "cursor": {
          "ref": "e29ddeea-0c2d-4ccc-9184-717cdbbd51c1",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "33723c9f-3ef6-47a9-81b7-1e8b5c9c4ad6"
        },
        "item": {
          "id": "87cb9ab7-c04b-4db9-bf60-81d2c87f7248",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6c7edd3b-5181-4467-83e9-9177dff86836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a60c33-0a37-479c-8b44-09822493854a",
        "cursor": {
          "ref": "a5f5c751-1e96-4bb1-8b61-5a2a368b5eeb",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "80b55230-af3d-4297-afb4-278703819165"
        },
        "item": {
          "id": "f4a60c33-0a37-479c-8b44-09822493854a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "526f6ff9-0a84-44ce-a910-d8ee59b6f7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7230af-62ff-4db1-8f6b-ae09fec8ec24",
        "cursor": {
          "ref": "3d572d05-c8f8-488b-8061-0c7f2e38e236",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48028bc9-31e0-49c7-88b1-8a1c5995c2b1"
        },
        "item": {
          "id": "7c7230af-62ff-4db1-8f6b-ae09fec8ec24",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1adf97fb-78ce-4442-8056-dd7df8a00d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b1e9c0-e03e-453e-99f7-120d50114d9c",
        "cursor": {
          "ref": "210d215e-bc2b-480b-897b-13bc9533fdc5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7b62a1b8-aeae-4108-a929-19ef58a3e363"
        },
        "item": {
          "id": "00b1e9c0-e03e-453e-99f7-120d50114d9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eac4d63b-cee3-459f-9c18-21514779874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffed3731-e211-4441-a5d7-b41ab0e59660",
        "cursor": {
          "ref": "9b710fda-7a1e-4d6f-844b-fea50b468e80",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6564f6f5-70d3-4a69-a13b-f058ce8e0dc7"
        },
        "item": {
          "id": "ffed3731-e211-4441-a5d7-b41ab0e59660",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2d614c0c-d8e0-4b1a-bc02-bc54fc6d7e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f02975c-2843-4f28-864d-e01e313881a6",
        "cursor": {
          "ref": "f0b7e3b5-c31e-4328-a76b-c096f7254eb4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "443d32fd-3e26-416f-8a8e-e79a918f04f3"
        },
        "item": {
          "id": "1f02975c-2843-4f28-864d-e01e313881a6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b2c74290-fc8d-4f24-95bd-d5b1261c2523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f3d82-b526-40fb-a3eb-9edb1098a71e",
        "cursor": {
          "ref": "d8ecc7fd-5624-4fac-8cce-0340074a90bd",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7bb80f0d-c561-43ce-92e0-4280550f603a"
        },
        "item": {
          "id": "780f3d82-b526-40fb-a3eb-9edb1098a71e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2d370cd9-c1f4-4adc-a40f-e64f270407f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af57ba1b-6b8d-41c0-81fa-d1c100d75167",
        "cursor": {
          "ref": "37c829ac-11c2-4736-9af0-244bed84bd4d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "983ba5a8-edfe-4b12-8bae-77e08a588965"
        },
        "item": {
          "id": "af57ba1b-6b8d-41c0-81fa-d1c100d75167",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83565405-511b-49f3-9f64-c1b15b013436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48f9ff1-4290-4a75-aa03-012dc550b3b2",
        "cursor": {
          "ref": "32666c10-333b-4735-813c-acad6aa7cf70",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5479bc55-110b-450e-a729-6b3408241e0e"
        },
        "item": {
          "id": "b48f9ff1-4290-4a75-aa03-012dc550b3b2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "895b7c5b-4d75-4f2d-86d2-b9913bb0a711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f74a52-0f85-4cb8-b99a-0dda1584304c",
        "cursor": {
          "ref": "3fd94500-ea74-4bbc-8fb6-6d0acd568d17",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "be42a1ad-de5e-4f04-b63d-9a9f1c943563"
        },
        "item": {
          "id": "72f74a52-0f85-4cb8-b99a-0dda1584304c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ba3b30d-ee74-4ed2-a903-27664cb3b2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6367e83a-1588-491d-a983-af15f152c9dc",
        "cursor": {
          "ref": "adc4c1f7-f9dc-4ac4-8d9a-68d9dc52bc6b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cae23753-c5a1-4673-96ff-48af6d8bcfce"
        },
        "item": {
          "id": "6367e83a-1588-491d-a983-af15f152c9dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94067175-91be-4428-9b9a-c696cb2a17c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c470911d-2665-4798-aafe-828500e2a24e",
        "cursor": {
          "ref": "e4f6e681-adf4-496a-b6a4-bd15fffb57bb",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2a25e4d7-d780-4a04-939a-0ddcf5b08103"
        },
        "item": {
          "id": "c470911d-2665-4798-aafe-828500e2a24e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a29586ee-af5c-4ebd-b205-8b031faf4769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bf5467-024a-41ed-8db1-c89db149ce8e",
        "cursor": {
          "ref": "a6c3b5e1-63a8-4a2a-8816-97a948bcbc66",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fdeb6da8-94b2-4ae2-8f9d-009fb10eb019"
        },
        "item": {
          "id": "68bf5467-024a-41ed-8db1-c89db149ce8e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c49ee06a-5515-43a0-92ef-4feaa24ad27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca2db54-d8d4-432f-9227-f4cf0b258934",
        "cursor": {
          "ref": "a6659039-9ece-480d-90c5-1ec09ed5a48e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ac66e989-5588-43d2-8390-120a6122712f"
        },
        "item": {
          "id": "2ca2db54-d8d4-432f-9227-f4cf0b258934",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf343390-1ce7-4843-8be7-27d75b280b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d5e654-5b4f-4e7b-8b18-4b578a533e1c",
        "cursor": {
          "ref": "ef9863e7-d5d9-4da8-bef4-2a1e58bb1814",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aaec5d49-a8f3-4f03-bd5c-adf88a718ac1"
        },
        "item": {
          "id": "d9d5e654-5b4f-4e7b-8b18-4b578a533e1c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4740eb54-c5d9-4dfb-b284-2bb8f0407f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f778eea3-0910-46bc-816a-6bc629c69dcf",
        "cursor": {
          "ref": "af3754e5-06eb-4abb-a931-a5db184a9459",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2a56a242-fd7a-4275-adc5-b6e433dd2128"
        },
        "item": {
          "id": "f778eea3-0910-46bc-816a-6bc629c69dcf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0be5f8dc-06ef-4ad0-87ca-a9f1f769bac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5f0e28-dcc2-4db6-b50c-56fd64be8376",
        "cursor": {
          "ref": "7571596a-e9bd-4761-b51e-891d18c93a25",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "583d0a6b-3252-41a3-b5da-6d13df2dd85b"
        },
        "item": {
          "id": "7c5f0e28-dcc2-4db6-b50c-56fd64be8376",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "41292a6a-cc7c-433f-a67e-9e219bdfb9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972da1ff-2ce9-47e8-a99e-5d9a2b110187",
        "cursor": {
          "ref": "4b3f7807-1424-4672-859e-4d7b3223f8a9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1c69ca68-7fa6-46d6-85d5-4e8aa098ac9a"
        },
        "item": {
          "id": "972da1ff-2ce9-47e8-a99e-5d9a2b110187",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20afce40-47c3-4b5d-9024-5aff0e8df93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c444176-f88c-48fa-b976-f3bef962549f",
        "cursor": {
          "ref": "bc20cec7-a112-4f53-809e-a25a23b184a6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "adcf7d7f-642e-404c-8d91-d9667ff3833c"
        },
        "item": {
          "id": "1c444176-f88c-48fa-b976-f3bef962549f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "445bc2d2-f1a1-4225-a917-142a769f672c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747145ad-3e12-477e-9606-f05ab79203d1",
        "cursor": {
          "ref": "1fc7d7c9-d208-4aac-8796-ff07d75e85df",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "422472a8-39ff-4be9-8426-c69ead9c48ca"
        },
        "item": {
          "id": "747145ad-3e12-477e-9606-f05ab79203d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9494a570-e299-40aa-ae35-315d4ff880f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a545e0de-3eb3-4c60-a730-96c9c31f52e8",
        "cursor": {
          "ref": "30fa3915-c326-4bc5-87be-4e63094f456d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65c98ea5-c33e-488e-ae54-4f8919d1e47c"
        },
        "item": {
          "id": "a545e0de-3eb3-4c60-a730-96c9c31f52e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fcfb770b-f247-434d-be2f-fd56d17f4ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d1bb5-1758-445b-aa20-142a70ba9c9d",
        "cursor": {
          "ref": "4eab5074-fb69-4316-a570-16c9ddf46ef1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9b9efd29-4005-42db-b2b6-94e1d67b1e97"
        },
        "item": {
          "id": "db1d1bb5-1758-445b-aa20-142a70ba9c9d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df2bae2f-358e-4231-875f-44486368c473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b85ceeb-0629-42c6-b206-82e8b1e1f9be",
        "cursor": {
          "ref": "d945de04-a72a-4fd3-8a89-8f34a63f7db9",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f3f3b657-3d11-4234-ae79-59b7d84e0d11"
        },
        "item": {
          "id": "4b85ceeb-0629-42c6-b206-82e8b1e1f9be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4bee2e7c-ba27-4c91-b37d-16d3792e5b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f04095-ca33-4c07-918d-e34ebb0945ee",
        "cursor": {
          "ref": "16e205e1-2f79-44ea-9439-38c98d16d6ee",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1c2c39c3-0d49-4d81-aa9e-d3879a8b0001"
        },
        "item": {
          "id": "37f04095-ca33-4c07-918d-e34ebb0945ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c976cfb9-f498-4cfa-9fb2-e44720cc354d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa82ec7a-6b3b-48ec-81b1-d28b50548bc7",
        "cursor": {
          "ref": "86d96838-3ab4-4710-b444-e0e8df0fd55f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "749d3a98-ffac-4c86-a43c-4f44f912785e"
        },
        "item": {
          "id": "fa82ec7a-6b3b-48ec-81b1-d28b50548bc7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4d71aafa-a8a9-4383-8eaf-bd3c9cfcfb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67ae36d-e090-4a1f-adb0-055ea2e3ce35",
        "cursor": {
          "ref": "e0d3ff78-e4fe-4cff-8bd9-4c1c6610810d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b8c03f2f-7eaf-4415-8844-46409c08b434"
        },
        "item": {
          "id": "e67ae36d-e090-4a1f-adb0-055ea2e3ce35",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9eaa5746-1e18-4702-b419-dcdbe449b8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dad84e-7713-4109-afc9-1a5c21507e3e",
        "cursor": {
          "ref": "4f0d1bd5-092f-424e-b488-d38aa71f60ec",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4920e825-cfd0-45f4-972a-22b904833af4"
        },
        "item": {
          "id": "b3dad84e-7713-4109-afc9-1a5c21507e3e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f6091321-fd27-4822-bdf2-49abaaffc4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c1b5d-c110-46e6-9eb2-f871b1220d13",
        "cursor": {
          "ref": "e132b28a-bc40-452a-812d-d4ede5e08285",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "98f00fb7-2c8e-4f30-9285-551ddc4070b3"
        },
        "item": {
          "id": "1c9c1b5d-c110-46e6-9eb2-f871b1220d13",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f099933b-ebf9-49d9-8e38-428380959647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec2cd7c-5e2e-4ae9-a604-9479d48b821a",
        "cursor": {
          "ref": "e890a85c-5dd3-4c17-80de-3a0d06e1325a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e198a9ab-9eab-4c09-a114-36985a41ff26"
        },
        "item": {
          "id": "4ec2cd7c-5e2e-4ae9-a604-9479d48b821a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8861fd2f-b44e-4fe1-a6d4-ba089b8098eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17343731-84bd-4ed6-bbe2-137489e01eba",
        "cursor": {
          "ref": "56298785-e17b-4c82-aa4c-f8e773bb8de7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "892de47d-9fa5-4bef-9425-345f9eb0bb74"
        },
        "item": {
          "id": "17343731-84bd-4ed6-bbe2-137489e01eba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2aa3bb42-42da-44d4-ae5c-9f91bb849b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318f5643-0a1b-406c-a4bd-4965bfad7023",
        "cursor": {
          "ref": "87ed7146-75d8-4794-b717-998c21aff831",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0db68866-a797-42e8-94cb-79b39a5dafb6"
        },
        "item": {
          "id": "318f5643-0a1b-406c-a4bd-4965bfad7023",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fda607d7-ba3a-4870-97a7-4c009d99e16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd67b691-f4d4-47a3-9967-7f3270d65853",
        "cursor": {
          "ref": "c471cbcb-e94e-47a2-af67-57ccbdd5a862",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fa6ddff7-4f98-41da-9f0a-65d9e91d8eb6"
        },
        "item": {
          "id": "cd67b691-f4d4-47a3-9967-7f3270d65853",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "828a0bb5-9b7c-4959-8e05-26b65c448472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9e9114-1009-4d95-beeb-c3debb3233c5",
        "cursor": {
          "ref": "aee72736-1c22-45e2-b584-02030ccccf26",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b1a54c46-e571-4c00-94a6-1ccb41376dc1"
        },
        "item": {
          "id": "ac9e9114-1009-4d95-beeb-c3debb3233c5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5aa976e-584c-4993-bb70-5b6035f13a00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5753190f-68c1-49d8-9ac2-bc2cbd620c94",
        "cursor": {
          "ref": "984821af-f170-46eb-a2ad-85642fb18389",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "738fa969-e736-4a91-81b7-f94c485b012d"
        },
        "item": {
          "id": "5753190f-68c1-49d8-9ac2-bc2cbd620c94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e53af5e7-1850-43ff-aed7-5b191836c64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eda83c-0d31-4a92-9268-819a04da0d79",
        "cursor": {
          "ref": "09ac6c78-d82e-4a87-a93d-b5da704a3aeb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "da38707f-582c-4214-bae6-7fc269508134"
        },
        "item": {
          "id": "b0eda83c-0d31-4a92-9268-819a04da0d79",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0cfdee02-ee22-4c84-882a-8e9327e8a252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0563c378-acb0-4988-a2d5-b285cf8f5c5b",
        "cursor": {
          "ref": "82d46589-eb71-47ce-bc26-c80488d5643e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "10a0dfef-f718-4d3e-978c-50dff0b557dc"
        },
        "item": {
          "id": "0563c378-acb0-4988-a2d5-b285cf8f5c5b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "33e3829b-b54c-40f9-a336-2802718bda8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b4ea1c-8eff-4737-848d-3e7d80ea10b5",
        "cursor": {
          "ref": "437f113a-fc76-402a-95af-59734bf2b1bb",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c21dec0b-3dd0-4808-870d-e9f8ef7b24f3"
        },
        "item": {
          "id": "b7b4ea1c-8eff-4737-848d-3e7d80ea10b5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8f4092bd-d131-40c9-9b45-563fd7508b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a11d6b5-db4e-4e5c-9564-bafe908d77a2",
        "cursor": {
          "ref": "28e1685d-44ab-4b5d-984e-bbe6ef05957d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "93a1eb4f-b9ca-4baf-bfd6-1c027aaa9fb7"
        },
        "item": {
          "id": "0a11d6b5-db4e-4e5c-9564-bafe908d77a2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90335006-c2eb-4ba8-a2d8-2b7dc14ad8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813e393b-5ea8-46d8-9f74-76dfc3513384",
        "cursor": {
          "ref": "c14433b8-77da-4de5-907e-efd6428be227",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3dcd3478-f171-4486-857f-b6fb96abf53a"
        },
        "item": {
          "id": "813e393b-5ea8-46d8-9f74-76dfc3513384",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "de385846-55d6-4f04-83e1-d73da39919ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41131006-c2fc-41cb-89b1-e226706ad171",
        "cursor": {
          "ref": "3af5dd7e-339a-4fed-a692-7dbf16940599",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "52363500-ecc3-4046-b81a-3aeb06bbd816"
        },
        "item": {
          "id": "41131006-c2fc-41cb-89b1-e226706ad171",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2201cb71-a888-4d25-97c7-ad11f237f80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bea8b8-6a43-4ef2-9ec6-50f06bcc73f0",
        "cursor": {
          "ref": "e36f49f1-fea9-4f47-b495-d48665d5b2b0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f8a2d398-d7a1-4396-a79a-220070b26fa1"
        },
        "item": {
          "id": "d7bea8b8-6a43-4ef2-9ec6-50f06bcc73f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c841882-b40a-49ac-9d7c-0f33a474e44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02b31c4-7b99-4eab-ad79-ad65e9b8881f",
        "cursor": {
          "ref": "2b3daf56-1718-4c82-839d-e3e544a5dbbb",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5ac2cde8-5c20-4929-9769-6e2eb708a38c"
        },
        "item": {
          "id": "d02b31c4-7b99-4eab-ad79-ad65e9b8881f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca235a70-91f3-423a-bc21-894bcb351491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a56874d-58d2-4aca-8299-cc40fd9b03dd",
        "cursor": {
          "ref": "a7297918-760c-4c20-a923-04233cfc1281",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e5e0e7a7-a3e5-4914-b729-9b544f26ae60"
        },
        "item": {
          "id": "6a56874d-58d2-4aca-8299-cc40fd9b03dd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62cba87c-f3d7-47c4-ae58-96ac04b86967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ed4a31-73f1-4f6a-9a55-a82a55ab739c",
        "cursor": {
          "ref": "1a08c2e8-f568-42b3-bc02-10a058c9f482",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "04d6da3e-348d-4e52-af09-95c0f17ac481"
        },
        "item": {
          "id": "72ed4a31-73f1-4f6a-9a55-a82a55ab739c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "42470cc4-b6f6-4909-bdc5-0a41986b06b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1645b4-65b1-4933-8f90-5d6c5ffec0bc",
        "cursor": {
          "ref": "a6f23938-2e06-40ee-949b-6c676ad78192",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2c323fc0-d9f7-41e0-9067-bdab777a9f32"
        },
        "item": {
          "id": "2e1645b4-65b1-4933-8f90-5d6c5ffec0bc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "625b347c-13e9-4b86-a0cb-dce31d1ade9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b5ad00-8fad-40ec-aa2e-9f33dccf7c5a",
        "cursor": {
          "ref": "09a7d949-fbd5-4d1e-981a-2e07b39ad072",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fb169285-73e8-46e2-a302-37b5420a6220"
        },
        "item": {
          "id": "a8b5ad00-8fad-40ec-aa2e-9f33dccf7c5a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2850587b-e6bf-4f9d-82ab-55227c662c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0653a55-3825-4970-941f-aaceb7d0a182",
        "cursor": {
          "ref": "125defaa-1c64-4b2b-ae9c-a0e2a6428f76",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "90150a02-1aad-4165-b05f-7d96d6d54c51"
        },
        "item": {
          "id": "c0653a55-3825-4970-941f-aaceb7d0a182",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "310d3bc2-eed7-4bcf-b605-84a05b471b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04d8e47-b31f-4634-99c9-c983cc1b1cd9",
        "cursor": {
          "ref": "7d637fd8-5070-46fa-8d0a-749b4ba67337",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "438c87b9-9cac-40b1-a8d3-78953b6fa451"
        },
        "item": {
          "id": "a04d8e47-b31f-4634-99c9-c983cc1b1cd9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cd90eeac-8e94-416d-97ff-9ef227befe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bd9db1-b40f-4c5e-8b29-bc6b916c2bac",
        "cursor": {
          "ref": "9fc7fa5a-d790-4fc9-ae3e-9b793722dd2f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ded2d52-b3b6-43cb-bdf7-35578cdb16b1"
        },
        "item": {
          "id": "36bd9db1-b40f-4c5e-8b29-bc6b916c2bac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "910af339-77f2-4b8f-a0ea-a9e6948c54a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a7717f-55b3-4b21-9934-f583b4869bb7",
        "cursor": {
          "ref": "a8314ebc-f0a1-4257-bb5d-a533d8fa8db7",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "13a9849d-909d-4020-a1e4-db00512c01fd"
        },
        "item": {
          "id": "e7a7717f-55b3-4b21-9934-f583b4869bb7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7b51c019-d0fe-4dc3-9f4b-51b5a4af5a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d5abc9-4ba7-45fb-88e3-e7b3a48166f2",
        "cursor": {
          "ref": "bd290619-7af2-4889-8be3-8d6a1850992d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a20b25b-7afe-4fa4-9d3f-8101264b22ae"
        },
        "item": {
          "id": "e4d5abc9-4ba7-45fb-88e3-e7b3a48166f2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5133c29b-8b4f-4c2e-b5bd-a97818f99631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bddca6-fe71-4bc6-848e-79edcfaf8c66",
        "cursor": {
          "ref": "1c70c9fb-1cff-4eb3-a429-a6b73d3b913c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d31439d0-ad9f-46d6-8db8-b6d1107b3f7a"
        },
        "item": {
          "id": "81bddca6-fe71-4bc6-848e-79edcfaf8c66",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "272d31dc-461f-4742-9cd5-ec383c0e6ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751de31b-9d50-46c9-89ca-33a80e2e47ad",
        "cursor": {
          "ref": "27fcba5b-e0e9-46f5-9b4b-643f995bbbd3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c642784-5218-4be4-9de0-1fa2472d1e8c"
        },
        "item": {
          "id": "751de31b-9d50-46c9-89ca-33a80e2e47ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "761fcc1f-df76-489d-afaf-400d316cdf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60ff718-fec3-4e39-9abb-85c58bb39524",
        "cursor": {
          "ref": "6a7f4055-2f29-4e8a-8fbc-e6ade266ff55",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8447014a-dd55-4ca6-8626-40ca452b281f"
        },
        "item": {
          "id": "d60ff718-fec3-4e39-9abb-85c58bb39524",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00c571a0-4b85-46f9-a3b8-53fe01143e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5d5461-9757-4fa5-9a2c-413002dfb7d2",
        "cursor": {
          "ref": "50138170-9789-4859-a903-3cd2e22382e9",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4e9a218b-a0ff-4cdd-98ae-1ee6b2e9e818"
        },
        "item": {
          "id": "8c5d5461-9757-4fa5-9a2c-413002dfb7d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "83e535ea-a806-418d-95af-b888ee3ab35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af07ed8d-72f1-470d-b816-646f46afa493",
        "cursor": {
          "ref": "03c7f185-4287-4b05-828c-48a8b95e4fa0",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0dec31d-a013-4f31-9088-649e88b832d1"
        },
        "item": {
          "id": "af07ed8d-72f1-470d-b816-646f46afa493",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96885c11-a79a-4868-8376-3400f0476d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d801b055-1c4f-44a7-92f1-cf4d389a8352",
        "cursor": {
          "ref": "6a442ee5-1101-45d7-99d2-b048c01b7229",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d27e4ad9-2c2f-4c74-b5ad-93be499a997d"
        },
        "item": {
          "id": "d801b055-1c4f-44a7-92f1-cf4d389a8352",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "41ec546b-deaf-41ee-9764-7b1ec1827fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9650f176-3de6-4211-86aa-e3017e99b275",
        "cursor": {
          "ref": "6bf32875-9e9f-4504-96d9-23f15c3ff93b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5d5065e-3b08-4b81-bfb3-d3ac5acfc916"
        },
        "item": {
          "id": "9650f176-3de6-4211-86aa-e3017e99b275",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a53100bf-f5e0-45ad-a58d-733fc86de479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf3f1eb-2202-4de0-befb-abb1e48c7f16",
        "cursor": {
          "ref": "826d34f4-e7e6-4ac6-ae24-cca2a69d46cd",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b4481264-6d13-45f6-938e-6a715460a063"
        },
        "item": {
          "id": "bdf3f1eb-2202-4de0-befb-abb1e48c7f16",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9667727f-ee05-4c33-8411-8d7e07ac253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08870974-0f54-43c9-903e-34dae8e1cc59",
        "cursor": {
          "ref": "1ead4751-585b-4cec-9abd-baf087bdf8d8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0cc636e6-574d-4600-9f15-4704f77175d6"
        },
        "item": {
          "id": "08870974-0f54-43c9-903e-34dae8e1cc59",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c996998-a78b-46d6-9ea6-940d8d3b1667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0285ca-c3f9-4974-af2c-c276ecce0285",
        "cursor": {
          "ref": "3b3a7ddc-a8bc-406f-8ce7-7f87894386da",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "440dfaf2-88a4-4543-949e-823bf9e1b658"
        },
        "item": {
          "id": "ad0285ca-c3f9-4974-af2c-c276ecce0285",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "873947f1-4de1-44ce-a100-59752851b519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b864a6-fd43-4aa7-8938-366912b72277",
        "cursor": {
          "ref": "e0b34a24-7763-4d02-a407-50232056b78f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "14804a40-ed5e-436f-a9a3-9b7718dc2b6f"
        },
        "item": {
          "id": "b5b864a6-fd43-4aa7-8938-366912b72277",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17185394-c560-429a-b523-73a55a8dd501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9923064-775c-4914-8c88-576f7a7ee7a5",
        "cursor": {
          "ref": "a76157fb-d93a-497a-a8fa-a24a7d51bd68",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "19f3ab24-ea6d-4c7e-a190-87c206a051c6"
        },
        "item": {
          "id": "c9923064-775c-4914-8c88-576f7a7ee7a5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d7e914d-2c43-4d07-95b9-9d09deaa894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b121c-6bbf-4937-b4ff-aa90c39308fb",
        "cursor": {
          "ref": "f7729dfd-dd00-4083-a50a-650970d1f3f9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e620ffd1-7db6-483c-8302-1dc617d4ca44"
        },
        "item": {
          "id": "284b121c-6bbf-4937-b4ff-aa90c39308fb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c6569de-19b3-47c5-9696-5f0b033f5d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793b556a-492d-4df7-9c99-1374a31996c5",
        "cursor": {
          "ref": "95a88d34-2dea-4537-80e4-bb2e0008b96c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "efd057f3-a834-4edc-b5be-a6e92b05376c"
        },
        "item": {
          "id": "793b556a-492d-4df7-9c99-1374a31996c5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "716edad4-4302-4a2d-93a8-6660ff3ead14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f85c2d5-a3c5-48bf-b545-3f00f662e41b",
        "cursor": {
          "ref": "9855ecb0-ade9-4bb2-ba91-986e2f7b2319",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c3d62821-10d3-444b-a798-782b0ecedbee"
        },
        "item": {
          "id": "1f85c2d5-a3c5-48bf-b545-3f00f662e41b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4884d13c-13c1-4f1f-acf7-6438b9aed1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fccb89-d7e8-417b-a79e-cfa0a09fb87c",
        "cursor": {
          "ref": "537d3601-2ac8-40dc-92f5-faaa0de188ae",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2c74bcc9-75c0-4fd3-988a-083b7037a9a3"
        },
        "item": {
          "id": "88fccb89-d7e8-417b-a79e-cfa0a09fb87c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "594bade4-0630-478c-ac55-951011b035a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21344053-7a10-40fb-ad85-66129129b87e",
        "cursor": {
          "ref": "dbbde9d3-d44d-4d69-b4ee-b6ecb5fe00d6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "31069e00-6249-46a9-ba38-00c19c4cb866"
        },
        "item": {
          "id": "21344053-7a10-40fb-ad85-66129129b87e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1acdb305-8e6e-44e2-8332-1ccf8a2bea8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc59a99-b125-400e-a00f-06a3f2e13469",
        "cursor": {
          "ref": "abb2b17a-c5fa-4146-ac27-c927446013ae",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9fc46257-a05c-4ea2-bcad-76cc3927be28"
        },
        "item": {
          "id": "7dc59a99-b125-400e-a00f-06a3f2e13469",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "60967939-e2a3-4700-8ff3-223e63c3d70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12733b4b-de2f-4a15-851a-20a821dfac2e",
        "cursor": {
          "ref": "97181e5b-0eb7-492c-b93f-6cd293c14105",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "927cfcb1-edf6-42fb-91af-4be0076963bb"
        },
        "item": {
          "id": "12733b4b-de2f-4a15-851a-20a821dfac2e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "56550c10-0b05-4f2d-9e69-092a0d89b4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058b2eeb-d4bb-44d2-95ab-598cbffb3822",
        "cursor": {
          "ref": "881d4b40-9a65-4289-a7ea-af17af166a80",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6f044447-bf09-494a-9e75-bfa912e97d42"
        },
        "item": {
          "id": "058b2eeb-d4bb-44d2-95ab-598cbffb3822",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "120d41ca-a535-4831-95c6-865368611dac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eef67e8-9d72-45c2-9265-88616154a8c6",
        "cursor": {
          "ref": "5b830973-43d2-46d4-a11d-4f8bdabf52ab",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4bb2ae0d-e3e7-4982-a634-2a1cd640a143"
        },
        "item": {
          "id": "9eef67e8-9d72-45c2-9265-88616154a8c6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "54a2949d-20fb-454a-9cb3-2b8f7b1c438c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb0876-6adf-424a-8665-1cea7e1c08af",
        "cursor": {
          "ref": "fefce396-040b-4136-8a29-88dac92b94f6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fb793864-fa18-4331-b5e6-e95fc776e9ff"
        },
        "item": {
          "id": "61eb0876-6adf-424a-8665-1cea7e1c08af",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e575fd91-e2ad-489f-9fd6-e28a09031655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba37d2f-8202-456d-8f3e-815f143537fb",
        "cursor": {
          "ref": "51d33cae-8bc1-4a1e-82fc-c158314bc576",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9d994d56-8263-4641-be72-98910cabdd4d"
        },
        "item": {
          "id": "fba37d2f-8202-456d-8f3e-815f143537fb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "70ba5542-2939-4d93-ab34-2cb6383c1d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b47826f-e88b-4ce6-b997-b945b81f3217",
        "cursor": {
          "ref": "08db41db-8e9c-428a-8d70-85bebea16b40",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1148678a-d298-47b5-9b78-a61c30892542"
        },
        "item": {
          "id": "7b47826f-e88b-4ce6-b997-b945b81f3217",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "67204f88-95bc-458c-b422-0480179763e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d19b53-7ebc-48ba-9cbc-511819d82141",
        "cursor": {
          "ref": "167d5e19-903f-4fd6-b478-90d0d99bb826",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2a017fb9-a910-4bff-9f25-85ed20ffc298"
        },
        "item": {
          "id": "54d19b53-7ebc-48ba-9cbc-511819d82141",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "270b2cdb-9c33-4b3b-9d40-55debf28b4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835c29ff-f4bf-4921-8e5f-dea4988b2479",
        "cursor": {
          "ref": "6cb68a2d-cf2a-4c55-b813-9d4e1cefc3db",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4eba3631-85a9-4bfc-90ea-71da954ef065"
        },
        "item": {
          "id": "835c29ff-f4bf-4921-8e5f-dea4988b2479",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3e86c2e7-c1ea-4154-89ef-de96e1a16f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25dbf8a-a99a-401f-b0c9-9ff944eed8bc",
        "cursor": {
          "ref": "b9d0690f-18ef-4b07-b1d1-e4c410eae9a8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9c9bf66b-1832-4099-8ecb-89d75bfd2720"
        },
        "item": {
          "id": "b25dbf8a-a99a-401f-b0c9-9ff944eed8bc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "12052c85-8d0f-46da-b86e-33e59b721581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05694d7b-67c5-4f1a-b5f6-7c50b6de5ad2",
        "cursor": {
          "ref": "aaf13537-0ced-45f0-9e1b-77a54b47d5b2",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b76b9f1c-0598-4660-8ddb-a5b2ec16efad"
        },
        "item": {
          "id": "05694d7b-67c5-4f1a-b5f6-7c50b6de5ad2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "034d1ce9-3ac1-41da-a9a6-c5a6b0fafe00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e4aaee-f0b2-4b19-9ca0-8f65c717d709",
        "cursor": {
          "ref": "b6b0d733-6da9-417e-81fd-ec1fc01fae82",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1c30884c-440b-4d5f-a8d5-411d22a463dc"
        },
        "item": {
          "id": "67e4aaee-f0b2-4b19-9ca0-8f65c717d709",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f25c8e05-2000-46d2-9fed-093a92fcac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ca58c8-27e7-43f2-9eb5-f448e18ce432",
        "cursor": {
          "ref": "cd391254-f6ae-4c22-a1e9-e5b9dcde1c4d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5d3d444b-20bd-42cd-9578-5e543846ead6"
        },
        "item": {
          "id": "28ca58c8-27e7-43f2-9eb5-f448e18ce432",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "262eb3bc-ab30-4d88-bbeb-d6b28f984c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ddc92f-04d8-409b-85a8-77c7965d5d18",
        "cursor": {
          "ref": "aab7f1df-c6e8-4283-ad2c-7a6728046bc8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0b2ff039-eb4c-4b81-8723-18896bfe0be3"
        },
        "item": {
          "id": "a3ddc92f-04d8-409b-85a8-77c7965d5d18",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ce349ee3-29a3-4c2a-9a56-00835ac799b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff87966d-cabf-4162-a297-88c7d2cfe081",
        "cursor": {
          "ref": "7d7e22c3-afdd-4466-96cd-388676f4ce6b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "357aad6b-0c9c-42e2-a242-bb539dc505d3"
        },
        "item": {
          "id": "ff87966d-cabf-4162-a297-88c7d2cfe081",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5d6e400d-6dde-47aa-84d3-7e18df517198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6517da1c-d839-4375-8c9e-6b46f26b188b",
        "cursor": {
          "ref": "344a0e5d-d2c1-42f5-977c-173e60fe29e0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6cf05f90-7be1-4bf9-86f8-76bc09d5d9f1"
        },
        "item": {
          "id": "6517da1c-d839-4375-8c9e-6b46f26b188b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "faea952b-eba1-429c-b7af-f6ae90f1fd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca5838-326b-4e37-8b21-6447bcaf0987",
        "cursor": {
          "ref": "6553f178-550f-44eb-ae9e-a700121136fe",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eb76b558-5b22-41ea-95aa-d5959b003a7d"
        },
        "item": {
          "id": "faca5838-326b-4e37-8b21-6447bcaf0987",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "01c94569-9848-4e4e-bed9-0c77822b692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37261aff-f28f-422d-85ac-1261604d7754",
        "cursor": {
          "ref": "521e340d-8429-4260-8f2d-11cb88a7678f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "20b6e9ec-7343-4b9e-8e99-b7a6f6d513c3"
        },
        "item": {
          "id": "37261aff-f28f-422d-85ac-1261604d7754",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2f79d997-bf7b-41a0-b163-08027e9e3e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f60d188-a88d-4b34-b709-a8ec52be33aa",
        "cursor": {
          "ref": "169f8fb9-5f9f-47a4-ac30-d4a15fe1fb8d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b2720f87-8cba-441f-9072-459730b865cc"
        },
        "item": {
          "id": "4f60d188-a88d-4b34-b709-a8ec52be33aa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c736406-c10b-49ce-88d0-3ae2b9b84003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ae3014-99c5-4829-af4e-91458592f511",
        "cursor": {
          "ref": "108d8c82-7657-4941-a9d6-23210e4b6b77",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9860b2f9-33eb-4147-addb-22b0ab120978"
        },
        "item": {
          "id": "51ae3014-99c5-4829-af4e-91458592f511",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "50520693-d7fb-41ca-9174-ebb3ab0a9ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc8912-e4bd-4c8f-b3fb-0a7956b54637",
        "cursor": {
          "ref": "9e6401a8-7a86-4d92-8d60-7c4be5e3e435",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2188ff8b-f4de-4f7a-b7a0-63c23eeaa988"
        },
        "item": {
          "id": "c7bc8912-e4bd-4c8f-b3fb-0a7956b54637",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d3c60d6b-b999-497c-aa3b-a90fd584d040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8048d196-dc62-4bd3-a306-93597f0d526b",
        "cursor": {
          "ref": "47dc9405-acf9-420d-9a7e-8b1dd11d4109",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3b7d1d9b-1868-4b93-a0b3-8c0c26a09d1b"
        },
        "item": {
          "id": "8048d196-dc62-4bd3-a306-93597f0d526b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4bf3dd8-a87e-4982-92d7-56e09e3e39a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1644457-26b4-4f54-bad3-0dd5bbe50e86",
        "cursor": {
          "ref": "0c39c74b-06f7-42c0-beef-88507b76c49c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5bf05c45-2400-4118-8d00-e738665d2825"
        },
        "item": {
          "id": "a1644457-26b4-4f54-bad3-0dd5bbe50e86",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9b17477f-356c-402c-8bc5-cc5fbe63b2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eab61c-29f9-4950-8f13-6274e716f3f5",
        "cursor": {
          "ref": "34e7ba70-daee-44fd-be3c-7e3f48b6f6f7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "654823a5-9cc2-40d6-a768-35d11a67fbd2"
        },
        "item": {
          "id": "75eab61c-29f9-4950-8f13-6274e716f3f5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "484e822b-63ac-4c0b-ba8b-c01284103575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7737f35b-dec1-4a60-8a01-f0f8d9f00477",
        "cursor": {
          "ref": "5128f71a-1ee1-4c6e-867c-68df2aafc668",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b88c6337-12ec-41ad-ba6e-284b5f22575b"
        },
        "item": {
          "id": "7737f35b-dec1-4a60-8a01-f0f8d9f00477",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bfaff9e1-e229-4f37-bcad-dd02aafc5cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c7cdc-3704-47ae-8ec3-05155d9f5546",
        "cursor": {
          "ref": "e7e239fe-4675-489a-b0a7-e1c3a9b8d469",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e7e2cd9e-890d-4a2a-a7a2-4a6ccd9671ae"
        },
        "item": {
          "id": "269c7cdc-3704-47ae-8ec3-05155d9f5546",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b18bc8d6-b74b-4697-bf37-0e2a64783476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70108031-56c2-4cb6-a102-c048f939b8f5",
        "cursor": {
          "ref": "403ef7ee-d259-40f2-8aa3-65bd050d41af",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f1708ae2-5462-413c-afff-e34fcf61da6b"
        },
        "item": {
          "id": "70108031-56c2-4cb6-a102-c048f939b8f5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ef345333-5b0a-454c-8cf7-3a782331a239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5167da-cf54-4278-af14-f1b5ead20880",
        "cursor": {
          "ref": "8fd64e08-ec8e-44e1-b970-9b6b71c9b4dd",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b54539fa-6d8f-4106-8149-cc4e37566d89"
        },
        "item": {
          "id": "3b5167da-cf54-4278-af14-f1b5ead20880",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "507ae1c2-2470-466b-8e82-c01bf70ce18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d878857-cbd3-4ca0-993a-999890bc0208",
        "cursor": {
          "ref": "540c4b54-f62e-49c9-bfc4-944e57f55ea5",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2dcb6ee9-3f37-4cda-a315-37522b2b2ad9"
        },
        "item": {
          "id": "8d878857-cbd3-4ca0-993a-999890bc0208",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7864efc1-e105-4162-8ac9-1d45a7df49d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76726bb-0bd1-4a1b-ad8a-e52eec52b07b",
        "cursor": {
          "ref": "2cc55914-2ca2-43d7-93cf-3b7548149a68",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1273299c-0a3d-4375-9bff-775d61ccdc50"
        },
        "item": {
          "id": "d76726bb-0bd1-4a1b-ad8a-e52eec52b07b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "46d0873a-67ab-4118-bff0-3c16281e92e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6374126-0213-46d8-92d5-dc1e95d81b67",
        "cursor": {
          "ref": "a7a87ab0-25ff-406d-ac7c-48197a8527f3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4c16ee30-e0a0-4186-830d-ade4420b0300"
        },
        "item": {
          "id": "e6374126-0213-46d8-92d5-dc1e95d81b67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "968b3b84-6d0f-4e94-a436-1f54ef872970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d01b4e3-ab9a-4470-a230-5ae8501f0a1d",
        "cursor": {
          "ref": "52601f79-39a2-4924-8c42-92c539509b44",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "22d2714f-f9f1-4ded-969f-03116cdcbc70"
        },
        "item": {
          "id": "0d01b4e3-ab9a-4470-a230-5ae8501f0a1d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "78982f74-67cf-4492-a31c-3fb4e46f22a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cb3d06-ed7a-474c-90b7-310bc57f076e",
        "cursor": {
          "ref": "6bc4161d-fbb1-4d35-83b5-a7035281234a",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5ca4b09c-833c-436d-b0a6-404faa11e3c6"
        },
        "item": {
          "id": "18cb3d06-ed7a-474c-90b7-310bc57f076e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a4c9bfd8-b614-4970-a065-0de40f4c1a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916bfbf0-3769-4102-ac71-f71659c5c94b",
        "cursor": {
          "ref": "7879bbf9-0289-4b80-9168-475622d9c682",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cea7329e-c0ec-476e-8c38-322be977e5f9"
        },
        "item": {
          "id": "916bfbf0-3769-4102-ac71-f71659c5c94b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "70b2b7d3-ed07-4ad2-a7db-b14395c7c4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d380f732-c868-409b-abf2-d8cf405d20fd",
        "cursor": {
          "ref": "65b497b0-48c6-42a7-bd1d-bbf3d054a0c0",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9692976d-8edb-483d-8ac1-5034c844c80f"
        },
        "item": {
          "id": "d380f732-c868-409b-abf2-d8cf405d20fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c0dd0295-642d-4caa-b914-11b44cfb210c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceac54b-18ed-4bcd-81c4-2b6ed074668d",
        "cursor": {
          "ref": "258861d9-6e52-491b-9d2a-a4e823830bcc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4185c16e-0070-495a-91ce-1bee994d131b"
        },
        "item": {
          "id": "3ceac54b-18ed-4bcd-81c4-2b6ed074668d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "84316abf-4bed-41af-bbd7-d20905221bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3441b14-7da3-4425-bd2b-65edc5533ac3",
        "cursor": {
          "ref": "e4fa6735-fe1e-4edd-854c-d0c902adc01e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4cc18834-acdc-461f-b82c-641fa30c5978"
        },
        "item": {
          "id": "b3441b14-7da3-4425-bd2b-65edc5533ac3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f3a44caa-dc2b-46f0-8bb5-a1182b2c1683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef7ef0f-3c8b-4b6b-ab61-bcbd617b6e36",
        "cursor": {
          "ref": "0bd78962-006e-4460-ae62-649d1db6a8c3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0c9ac01d-89b5-46d5-b61a-2298e7cf8d96"
        },
        "item": {
          "id": "8ef7ef0f-3c8b-4b6b-ab61-bcbd617b6e36",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dad467bd-2df8-4df5-84fa-40940e08260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96bc697-2b94-42d6-8576-dfc2142bf195",
        "cursor": {
          "ref": "5369ee5d-ca2a-4137-a3b9-5d7ca00a6b45",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "583541f2-c7df-4bf1-bf3b-9f6cfb1acb18"
        },
        "item": {
          "id": "d96bc697-2b94-42d6-8576-dfc2142bf195",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "591e0f5e-2125-41f2-b4c4-bfabd7b6cb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc671d0-a0a5-4b60-b47c-dd0d047b48e9",
        "cursor": {
          "ref": "f834c0fe-fe8b-4158-bbaf-24b5708050b8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "17bdaf22-fca1-4b50-acd4-fc5b98bc7272"
        },
        "item": {
          "id": "6bc671d0-a0a5-4b60-b47c-dd0d047b48e9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d162765-28c6-49b2-bc23-d541bdddf569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf08526-8bf0-477f-bb91-d6e1390f9275",
        "cursor": {
          "ref": "3f2553b2-2d00-4b58-83c0-8ff62323e77e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "633c4de7-a31c-4cf1-a019-e8ec6bb4b88b"
        },
        "item": {
          "id": "1cf08526-8bf0-477f-bb91-d6e1390f9275",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9d761e4a-5cbc-4342-b4eb-f6e9c782cffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b2fac2-5a8a-4c46-b7ae-bd9343f91ac1",
        "cursor": {
          "ref": "5132b336-f8c3-4454-99cf-a610bd93d5f2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b866a73-e877-4e96-9a25-caf91c798427"
        },
        "item": {
          "id": "10b2fac2-5a8a-4c46-b7ae-bd9343f91ac1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6829050b-d5fc-4a20-a710-09591dfceb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c3c362-d2d9-4216-a180-0fe8305c4bf5",
        "cursor": {
          "ref": "4058990d-4370-475e-b0c3-16e959242428",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "257ac8ba-8dae-4ed4-b1c5-f737c7c5bf32"
        },
        "item": {
          "id": "02c3c362-d2d9-4216-a180-0fe8305c4bf5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e426b2d9-5a6f-4d57-98f8-75b82fd76e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253840a3-5836-4655-a532-e2ca10c148c8",
        "cursor": {
          "ref": "a4b4cea3-83ea-4bad-9a61-19d9c3dabee6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d768ad26-81ed-4fe1-825e-a1f3b84f45b7"
        },
        "item": {
          "id": "253840a3-5836-4655-a532-e2ca10c148c8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b38d171d-c497-4a8c-88e0-a75ab2a753f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4379d3-111f-43d6-a3c2-d56d047b0d8f",
        "cursor": {
          "ref": "a537765e-af31-4a49-81c3-d3cbbaca9504",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ec47594d-cb5f-4332-a380-55a1572c4624"
        },
        "item": {
          "id": "bc4379d3-111f-43d6-a3c2-d56d047b0d8f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90f9fc5b-d392-40da-80d1-5e7d3173d399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47075d8-ee75-4a7a-b7f4-5ff26354a253",
        "cursor": {
          "ref": "1b211315-0382-444e-ad39-20909c235595",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b8461d0a-edfa-4c8e-9ad4-b87988402081"
        },
        "item": {
          "id": "e47075d8-ee75-4a7a-b7f4-5ff26354a253",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d767eb0-b0a7-42d5-85d7-f5fb69a4b82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5736a2-ee98-4aa6-9f0c-9e45a6f94d5e",
        "cursor": {
          "ref": "778d8025-b93b-4bcd-8045-afd135054273",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "07989d96-582a-4fd7-9ac5-3ebcf433a33c"
        },
        "item": {
          "id": "1a5736a2-ee98-4aa6-9f0c-9e45a6f94d5e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5a6f6bd0-3bb8-4596-91a3-5007930a2057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f894ea-65fb-4338-a6a7-634729d8e6e2",
        "cursor": {
          "ref": "85831a37-4329-4c6a-92a6-0ffd9e1036cf",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0664cbd0-43de-4f8a-a866-cf45bf0a3c94"
        },
        "item": {
          "id": "86f894ea-65fb-4338-a6a7-634729d8e6e2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7142256a-5584-4806-9446-823b2f0df2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d657bfc-debf-4f98-bdb4-1ad25330ac3f",
        "cursor": {
          "ref": "3bc29d51-f5b1-4f53-b408-3fa0bc8fd274",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3b3662cb-0dea-4f21-bbc0-b7fbce123b4d"
        },
        "item": {
          "id": "5d657bfc-debf-4f98-bdb4-1ad25330ac3f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0523a62f-78a8-4213-bcb0-e5473697f784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2aa0a1-3e4f-4c67-9757-b512f77281da",
        "cursor": {
          "ref": "d2fe24cb-e11e-4f12-8aa5-1e2474a4cde7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "caaeb188-bc33-4124-9b31-32b4fb5f3ce9"
        },
        "item": {
          "id": "bb2aa0a1-3e4f-4c67-9757-b512f77281da",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1dbbff1a-aa2b-40b4-975f-f7c41ba4549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a944590e-ca75-4c17-a6a6-d7968a0eb2f8",
        "cursor": {
          "ref": "f79f4dc2-e9bb-4bd3-9117-5e91591da62a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "920e1813-fe94-4ab1-93b9-6247721933e0"
        },
        "item": {
          "id": "a944590e-ca75-4c17-a6a6-d7968a0eb2f8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c0737702-82b7-4792-bb6f-90862e5f76f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceb6d83-9b37-4ae2-904e-fc81e638b575",
        "cursor": {
          "ref": "5962bb1a-fd9c-427e-aebb-b62ecd39428e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "710932ec-b9da-4230-bc73-9af5ec429da0"
        },
        "item": {
          "id": "7ceb6d83-9b37-4ae2-904e-fc81e638b575",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f5dff99-58c1-492e-85ef-c688f5196a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d60588-2a62-4823-ba6d-f32606bf993d",
        "cursor": {
          "ref": "8e92a351-833a-4a90-8701-428c6f277814",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "181d40cd-1bfa-4bed-acdc-90d74f1296d0"
        },
        "item": {
          "id": "98d60588-2a62-4823-ba6d-f32606bf993d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "520f5dfc-af7f-4799-aa40-7ae0ce4be655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217d302a-4113-4372-9e55-bf3bed565048",
        "cursor": {
          "ref": "aa86fd2e-6ba1-49fe-8124-a56107a39ab2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ecd2e4d0-8954-4afc-90cc-b3ab0fe91495"
        },
        "item": {
          "id": "217d302a-4113-4372-9e55-bf3bed565048",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "834f0098-bcf2-4433-a9d0-a5edb5912e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a954a65c-d8a9-4f66-a173-0bd6da6176e2",
        "cursor": {
          "ref": "fb8e0684-2134-4ec9-a9d2-15944a65aa98",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4e514bb8-20e1-4f56-9bec-5854e8168dd0"
        },
        "item": {
          "id": "a954a65c-d8a9-4f66-a173-0bd6da6176e2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "64437816-faba-4656-8920-83051e0f67fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2c851d-256a-40d4-9486-3c5b9b375c07",
        "cursor": {
          "ref": "0f713aa9-747c-44df-9ae1-22c167b4c7a3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fd3bf01b-65bf-461e-8488-531f9e74520b"
        },
        "item": {
          "id": "cc2c851d-256a-40d4-9486-3c5b9b375c07",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "295d16c6-246e-4e77-929e-93888632ea5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4348e45e-191f-493a-a7df-74ad3071cb56",
        "cursor": {
          "ref": "c037a19f-ddcb-4d1b-a892-b6b80d4b1eb5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f08a815a-157e-4dfe-abe4-2119f28a0e82"
        },
        "item": {
          "id": "4348e45e-191f-493a-a7df-74ad3071cb56",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87b1ae58-68be-4063-b280-f149b9ed0314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4b2ee3-2589-48f3-b1e0-2309c8e54ddf",
        "cursor": {
          "ref": "71e8eb9a-ca08-458a-8423-02396474cf51",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "394aec7b-c4d4-4c93-bc86-fbd81e0259a8"
        },
        "item": {
          "id": "df4b2ee3-2589-48f3-b1e0-2309c8e54ddf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9963b332-0fe3-4252-b656-ff5d5960ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c764fff6-e15c-46de-aebc-c786fa94b0e5",
        "cursor": {
          "ref": "d3a4649e-24d6-44e6-a9d8-39fae229d994",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ff0086d4-c63f-475b-9872-ec680c7c6e64"
        },
        "item": {
          "id": "c764fff6-e15c-46de-aebc-c786fa94b0e5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c52f41dd-fbf5-4393-a995-df28c84766de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170dab01-4e24-4143-b695-72fbfff3adf8",
        "cursor": {
          "ref": "b3cd28fc-d420-4d7e-a602-c39a1299fa85",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "175e9370-5514-4310-8433-1601b1eb2459"
        },
        "item": {
          "id": "170dab01-4e24-4143-b695-72fbfff3adf8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "01f87608-0947-41ff-ba2c-1d62b51b0dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5647957-fef8-47e7-afff-7f5383d47fae",
        "cursor": {
          "ref": "8e18d03e-5575-436d-8f2b-139ae87aa341",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e87da6e5-68e7-4549-8af0-abe6a1833633"
        },
        "item": {
          "id": "a5647957-fef8-47e7-afff-7f5383d47fae",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "17c0d61c-da59-4fc8-8944-d59a7ab29ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d024c-f8bf-4c43-a213-86661ea32a22",
        "cursor": {
          "ref": "99bfe735-1917-436f-ad29-529bc397fd17",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71a567b5-b58d-419b-8880-be76977dca23"
        },
        "item": {
          "id": "646d024c-f8bf-4c43-a213-86661ea32a22",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b010ca2d-c44a-4699-afe4-76ca765990f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d1684b-a533-478d-8e05-e80d14b903d0",
        "cursor": {
          "ref": "a6014ee9-32c8-4429-9e99-288fb8ea5506",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "34f7c723-4228-4366-8b33-0a992d32a006"
        },
        "item": {
          "id": "72d1684b-a533-478d-8e05-e80d14b903d0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1fab77b9-3a7b-4304-b2f5-1d6aa05f4886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332dce54-3ac0-4afe-b2b6-051caf7831e2",
        "cursor": {
          "ref": "9a93168d-c9ad-42c7-bff8-7defb0901ebe",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c35c60f0-ecec-42d2-bd80-1325b98b135c"
        },
        "item": {
          "id": "332dce54-3ac0-4afe-b2b6-051caf7831e2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff9bb0f8-c685-4de2-8bbb-e8df523734e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b45c5c-3b61-4e17-bb46-61b171791773",
        "cursor": {
          "ref": "43299711-87dd-462e-908e-255f07381e0c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c03a1e1-6fc0-4f37-ba2b-dd4c3d485461"
        },
        "item": {
          "id": "b1b45c5c-3b61-4e17-bb46-61b171791773",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cec7e767-9696-4508-8d9d-013df97c0cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefb12c8-14ed-4da2-a43c-82301cb64728",
        "cursor": {
          "ref": "f8eee5a7-d7d1-4dcf-9f2a-86cfa01c1da4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "68b05814-5173-4bb7-8d0c-197aaef1dad7"
        },
        "item": {
          "id": "cefb12c8-14ed-4da2-a43c-82301cb64728",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3304b575-f16d-4df4-babb-7354d7fd496f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6b6dba-2e34-4716-a0e2-65a6e4823008",
        "cursor": {
          "ref": "7edc54f6-e823-4d51-85b2-c5b882e8722f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3e972980-581c-470c-9e3b-0e6d783f2b5a"
        },
        "item": {
          "id": "0b6b6dba-2e34-4716-a0e2-65a6e4823008",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c905e450-a94f-41e2-896e-4343a6e401cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fcea48-f4b1-4474-8793-e68a4693c3f0",
        "cursor": {
          "ref": "1831b421-029c-4157-82fb-bab9bec18ddd",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "04be0004-3d69-49de-86f7-8739e3ee0e8c"
        },
        "item": {
          "id": "01fcea48-f4b1-4474-8793-e68a4693c3f0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a18225f1-ee5c-4089-9368-0d97cb96ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf9a4f0-0b0d-465c-b096-ebd66e7fd178",
        "cursor": {
          "ref": "bab57b9b-d402-4e18-82be-9f5267a42de6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e5552390-dc74-4eac-951d-5d8e2e6b5554"
        },
        "item": {
          "id": "4cf9a4f0-0b0d-465c-b096-ebd66e7fd178",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba8c49c1-d23a-42d7-96ac-4bc2ba5e52bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06130eae-8f10-441c-97cb-81ec19579f75",
        "cursor": {
          "ref": "ca629158-5838-4e30-abec-5a1ff8668b81",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8716bcd5-3fb0-4167-8da5-59867f38acdd"
        },
        "item": {
          "id": "06130eae-8f10-441c-97cb-81ec19579f75",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6a499547-a1e4-415c-b717-9a6f29cd9c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9c70e-4663-4a22-8121-d28a057b5595",
        "cursor": {
          "ref": "4f6bc00c-b6f9-4cf5-a285-aa4cf7b19ffa",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4275c5f8-c2a0-420b-8345-3322d3421609"
        },
        "item": {
          "id": "d8e9c70e-4663-4a22-8121-d28a057b5595",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4d286e49-f44d-4949-995f-a252f0281d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f2b73-dd80-4c09-84c9-067c1e30b59a",
        "cursor": {
          "ref": "8ed82a3e-6466-4928-b494-a07137cd2331",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a7da035f-de63-4498-b054-32e9c63a698d"
        },
        "item": {
          "id": "0a1f2b73-dd80-4c09-84c9-067c1e30b59a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "35af942b-cb02-426b-907b-bf4e47aa130c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f237c-37f3-4949-8896-7efaca652bd6",
        "cursor": {
          "ref": "02b4e6cd-039b-4464-933d-5fa257a8ceb2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4f0e7317-077b-44c6-b623-86b0682dedbb"
        },
        "item": {
          "id": "382f237c-37f3-4949-8896-7efaca652bd6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "39bad1b6-8b7e-49ec-a5cc-d269318e6254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bed32c-bf67-42de-9584-d135594d659f",
        "cursor": {
          "ref": "3d4188dd-b035-4c75-bf84-e4a8263d0e87",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3df3a6ce-4f1d-4eed-8886-8f977416c64a"
        },
        "item": {
          "id": "e8bed32c-bf67-42de-9584-d135594d659f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b1356114-a8c3-4f2c-aac5-0f03333fe0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d914eb-a31a-4500-a309-7c5a55df0b3b",
        "cursor": {
          "ref": "61e59dc6-e7c9-4e57-8e6c-cd46215b0ec5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3609f47c-81cf-435c-b3ff-f066b865fd34"
        },
        "item": {
          "id": "a8d914eb-a31a-4500-a309-7c5a55df0b3b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9ba7ed6b-9f71-4950-8ec6-be9ba5d7a984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a8383b-f543-4da4-a922-176422d80413",
        "cursor": {
          "ref": "bcc4cd82-0c80-4e84-bae8-d8430bce52c7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bdc56247-65f8-496e-bb59-5d1dc4694f25"
        },
        "item": {
          "id": "00a8383b-f543-4da4-a922-176422d80413",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f1dbe236-1f96-4cbe-88fb-b7ec718cef8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a8374d-a73a-49e5-a077-1bd8b5d121d0",
        "cursor": {
          "ref": "977813c8-ba62-4b69-8997-3d30325e58a8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5b1865a9-6072-42aa-8618-3c97d1f15fc8"
        },
        "item": {
          "id": "f7a8374d-a73a-49e5-a077-1bd8b5d121d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dda86a72-c9bd-4be7-8b5c-b9dbfbaffca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96b5a29-67fa-47e6-bb6a-0c6493ca2669",
        "cursor": {
          "ref": "bdac1422-7a46-49f7-8e88-a63f90fa610b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0432353f-a111-4b0f-8d28-be56b35d2336"
        },
        "item": {
          "id": "f96b5a29-67fa-47e6-bb6a-0c6493ca2669",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9ba9fa5c-89d1-4a7f-b28a-b20cd4ec635a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f542504a-018f-4406-b5de-335bade5e8ef",
        "cursor": {
          "ref": "859dc43c-2e71-449e-b195-4ce86a3826da",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9b17ce4b-73bf-42f1-9177-83b52c46b4ee"
        },
        "item": {
          "id": "f542504a-018f-4406-b5de-335bade5e8ef",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "273f4d30-db46-4d36-a26b-2fa7d4a00ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56f7d9e-eb3f-4de9-9024-daa786ca799c",
        "cursor": {
          "ref": "7790b60b-eb30-42d0-8815-3aebf80d684f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9db8211b-4844-40fa-9cc8-5ce0cf9a63aa"
        },
        "item": {
          "id": "d56f7d9e-eb3f-4de9-9024-daa786ca799c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "97ef2200-2850-48cb-be6e-5803a37d7eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472106ef-388f-4f21-88e5-2ff88f731de5",
        "cursor": {
          "ref": "4483798f-10fb-4849-a876-84c36452b0b9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "55981dd3-a1e0-40d8-9d3b-44b1e1a237c5"
        },
        "item": {
          "id": "472106ef-388f-4f21-88e5-2ff88f731de5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "415a9ba9-3da0-4ee8-b246-cf3266b33471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf2ac24-d94c-4285-ac92-b711516206d2",
        "cursor": {
          "ref": "36a84f9f-d2d4-4849-b2e4-4ff9868746d0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "12186b78-6399-42d3-82f7-e6573038c137"
        },
        "item": {
          "id": "fbf2ac24-d94c-4285-ac92-b711516206d2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7ab82eb8-209f-49b0-a4d2-0195826e5a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301d6b43-00a5-4a22-908b-40d110fe452c",
        "cursor": {
          "ref": "6a513587-1982-4376-acdd-07f3555b198f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2a9bb18f-60bc-4143-af61-00f8caa8bad3"
        },
        "item": {
          "id": "301d6b43-00a5-4a22-908b-40d110fe452c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7460ebcb-3a2c-44ea-9cb7-fd6e0deb819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cddfd8f-49ad-4ba8-b6b0-24754e2e9b85",
        "cursor": {
          "ref": "39123b6f-7b87-460a-8a93-e40d3b96df4f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1a931ac4-5794-4d4d-8fa8-b28cc2cff839"
        },
        "item": {
          "id": "1cddfd8f-49ad-4ba8-b6b0-24754e2e9b85",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cbb6db2a-3638-4fe4-bd3e-9b0b59164b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1d644d-247d-4332-b03b-ac48c55b10fc",
        "cursor": {
          "ref": "25c994aa-e83c-4af7-ad8b-34660816689d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9847532a-a7f9-4a37-ab20-87328c27ef18"
        },
        "item": {
          "id": "4d1d644d-247d-4332-b03b-ac48c55b10fc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4a27e168-ee18-4ed0-88d5-f0f0c6cae6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62694373-508e-4c0c-86a6-8a54be9b7229",
        "cursor": {
          "ref": "d4ec77f6-08a9-4456-8725-0d6454291904",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e51eee3a-a1e3-4572-8b52-097d07433c92"
        },
        "item": {
          "id": "62694373-508e-4c0c-86a6-8a54be9b7229",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb11f0b9-171c-45a1-8ed5-b9a9abc9f77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066ae872-7f16-410f-afe3-95014a0ce3ae",
        "cursor": {
          "ref": "b88b7365-d0e4-44f3-9fe6-d0e14ef26080",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e2c09f3e-3656-43d2-a568-63ed2c9a5ff4"
        },
        "item": {
          "id": "066ae872-7f16-410f-afe3-95014a0ce3ae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f9837733-91cd-474a-bd94-1b06f0ab63b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6e97bb-ba91-42cb-8d5c-129a4a7e3a0a",
        "cursor": {
          "ref": "988542d6-8b26-4658-b4f1-8d099fc1c212",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "102a3b56-5e3c-4ea4-9169-8bc5bb7848ff"
        },
        "item": {
          "id": "db6e97bb-ba91-42cb-8d5c-129a4a7e3a0a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2f6effab-a828-4161-aae3-40307e95e265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1784f052-c593-417e-9466-249e0827083b",
        "cursor": {
          "ref": "a83ade63-b57f-4425-9927-a465c8fa7bd9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "427e6657-0d35-4abc-a194-c7ff0a077e86"
        },
        "item": {
          "id": "1784f052-c593-417e-9466-249e0827083b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "18d19eb2-6c14-4c95-910c-7d416bcf018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752ca543-4865-4495-9fda-dffce2fbea0b",
        "cursor": {
          "ref": "02b0a886-5e41-436e-9859-c57d60695daf",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "235659c5-d05a-4847-a69b-1a241b068bc2"
        },
        "item": {
          "id": "752ca543-4865-4495-9fda-dffce2fbea0b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3812c38d-04b0-4abc-8127-d24ee4de1af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4990e956-b562-4d24-8862-abdf7f1ddf32",
        "cursor": {
          "ref": "bdaf7d3b-c80e-42fa-a3a1-af989b7ba600",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f413ea38-1317-4e20-9c59-51d416e2c461"
        },
        "item": {
          "id": "4990e956-b562-4d24-8862-abdf7f1ddf32",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2be4c3a3-8319-468b-a496-8163520d41b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d93ed6-2dcd-4c23-b999-d5af963db06d",
        "cursor": {
          "ref": "8e23a058-21be-4809-8f8a-e34e6b555b1c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cce14e54-95d8-4e11-a326-baf6df0a6909"
        },
        "item": {
          "id": "01d93ed6-2dcd-4c23-b999-d5af963db06d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "87a8dc1a-d970-4640-9001-f3bd4f6aff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14616ee-83e7-43f0-a280-a7213aeb9617",
        "cursor": {
          "ref": "81b9e71a-7141-4f4d-ac1b-0ed01372e78f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f736eadf-5d07-46ef-9d61-9064b019793b"
        },
        "item": {
          "id": "e14616ee-83e7-43f0-a280-a7213aeb9617",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7a186bfc-8e18-43dd-af90-3368aa0f5cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09da60a7-6c3d-4ce2-92b1-0da39e714de1",
        "cursor": {
          "ref": "0d17de85-615a-4739-be6b-b7ae76f89724",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6191f54a-c084-44cd-9cbb-6f44e7e43594"
        },
        "item": {
          "id": "09da60a7-6c3d-4ce2-92b1-0da39e714de1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a8f75f9-8bd4-4cfb-b13d-346ec80e82c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21c38d8-62cf-402b-8c7e-840ca2b45350",
        "cursor": {
          "ref": "ce83113a-247f-4649-b18e-f8530a11350b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a11d943b-3b55-4df6-a0aa-1ef108e9ac89"
        },
        "item": {
          "id": "e21c38d8-62cf-402b-8c7e-840ca2b45350",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5f982b55-826e-45f9-8d42-3fd3667a58a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe1c2ef-fe9b-484a-945c-82b56be45b58",
        "cursor": {
          "ref": "7b0e2596-1d20-4812-9ddb-6c718aae42f1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f0eedcdc-aaf7-4247-91a2-5b3982f3d39e"
        },
        "item": {
          "id": "7fe1c2ef-fe9b-484a-945c-82b56be45b58",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9b4a1126-cc0f-4834-a65b-ceb7fd681831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2781961-9e40-4275-8da0-c046b4549a1e",
        "cursor": {
          "ref": "a29e5f17-9c6e-4e70-84c3-560f4f27de92",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fdfd1dfb-ecf0-4e06-bf6a-72434f441c53"
        },
        "item": {
          "id": "f2781961-9e40-4275-8da0-c046b4549a1e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0271063d-7c5c-40cc-a62b-6196b92deb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1278eb-d4b3-467a-9ad5-e372c6bbe9fc",
        "cursor": {
          "ref": "a7fcc00c-4590-41b2-92fd-07a99bb4f5b4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c533faed-85e2-44e6-adfd-d584517213f0"
        },
        "item": {
          "id": "ae1278eb-d4b3-467a-9ad5-e372c6bbe9fc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "802775f7-7e07-4fec-82d9-661d528e41cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113b64f7-30d0-4c22-a68b-aff408df70a3",
        "cursor": {
          "ref": "8521508d-12d0-4ec0-8ffc-1f73c7be4ea1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a0d85ba6-c552-44a1-be37-27653ea4943f"
        },
        "item": {
          "id": "113b64f7-30d0-4c22-a68b-aff408df70a3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6c57df5b-4436-41f5-8c98-f79d6f923ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf928b26-634a-4c9e-9688-78244922d47b",
        "cursor": {
          "ref": "80b0d867-4854-489a-bcc5-90369ab2075b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f5be1730-6ba2-4c3b-8898-5350c1531009"
        },
        "item": {
          "id": "cf928b26-634a-4c9e-9688-78244922d47b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d13ee90-e4ee-4b7e-a940-96d902a3880e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefab217-89a2-49ac-b036-3eead84d2900",
        "cursor": {
          "ref": "ec2b60b0-7346-41d8-922d-32e7aff668d1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2e896264-33be-4546-95e3-3f23486ef205"
        },
        "item": {
          "id": "eefab217-89a2-49ac-b036-3eead84d2900",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ac114004-16aa-4a98-83ba-62a9178516d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e11cc8-71f6-4663-8825-931987de64d5",
        "cursor": {
          "ref": "5d391cc3-580b-46ce-b242-31f593fffa43",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "64f57eb6-8ede-42ad-8f74-aafdc8033fd8"
        },
        "item": {
          "id": "f3e11cc8-71f6-4663-8825-931987de64d5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0fd961da-a036-46e1-a1e1-e97f4356d31c",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caa7b12-3660-4d23-bde6-329e63db63ee",
        "cursor": {
          "ref": "1bcef477-3a37-4ade-be3e-0b090b53a0bb",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "73b87ade-9989-4c65-a8ed-664eb68d44dc"
        },
        "item": {
          "id": "4caa7b12-3660-4d23-bde6-329e63db63ee",
          "name": "credentials_verify"
        },
        "response": {
          "id": "42953d34-a7c3-4c34-98e0-484ce1bde820",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "945fba91-318e-4b89-84d4-719d0ef3016a",
        "cursor": {
          "ref": "0b9840e8-7376-4eea-b5fa-c19dd5c32558",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "88061712-66cf-436a-82b9-ab6c9acad4e3"
        },
        "item": {
          "id": "945fba91-318e-4b89-84d4-719d0ef3016a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f586caec-50cd-46e4-882c-c5a4f2b15509",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c196397-8b73-4fe4-95c1-f69f1a34f346",
        "cursor": {
          "ref": "d0060e8b-198e-43f5-b398-1b95864ce832",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f55bc31-c49c-46bd-8a88-e4dfd045258c"
        },
        "item": {
          "id": "8c196397-8b73-4fe4-95c1-f69f1a34f346",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b6bc349-e5e1-4b0c-bde0-b48bda330f25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c196397-8b73-4fe4-95c1-f69f1a34f346",
        "cursor": {
          "ref": "d0060e8b-198e-43f5-b398-1b95864ce832",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f55bc31-c49c-46bd-8a88-e4dfd045258c"
        },
        "item": {
          "id": "8c196397-8b73-4fe4-95c1-f69f1a34f346",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b6bc349-e5e1-4b0c-bde0-b48bda330f25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bedde8f-6d6f-4069-adbf-ae268922dd3b",
        "cursor": {
          "ref": "db6cd113-ffb8-4a9a-8738-eb385a6459cc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b153498a-b4f2-477b-b2dc-500bec7c1b29"
        },
        "item": {
          "id": "2bedde8f-6d6f-4069-adbf-ae268922dd3b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b29f3f41-7ff0-4a72-b3a1-e6e401866b7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e670239-21f0-4e95-b612-e033337d715c",
        "cursor": {
          "ref": "79d81c08-62b1-438b-9fa5-4cc8f8818870",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3a94d5c6-4d10-4761-89e6-ae17908b7013"
        },
        "item": {
          "id": "3e670239-21f0-4e95-b612-e033337d715c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95a745f4-2cca-45bf-9ba3-6b7e6b1d11ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}