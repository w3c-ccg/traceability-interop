{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a271ad20-e6d6-47ea-8e4e-5684b7f6ac40",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3361449c-f552-4629-87ab-72e5b8b835c0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f82ee4f-41e0-43d4-89d5-bab4fe8db04a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58417863-205d-429a-8c45-74147be93c4e"
                }
              }
            ]
          },
          {
            "id": "172b0c1a-19c5-4625-89f7-427d6e4e2c01",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a3a3c00-9c95-46db-a266-78c55ee0ec28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "705c3b13-c900-45b7-97d9-1956d69a9bfb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bf569c3d-95a8-4012-8e8c-4abfbfa2be99",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "626d20a7-312b-4852-ad14-7c9a1769784a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bfffc309-0d37-4590-ad63-2b0e66680f4f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6736acbe-58a0-4adb-a51e-ec818e722e64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "447f853f-0694-486d-aa6a-13cb9d51ccdb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3159ed6-a25d-4e33-8687-9f2f0db98cc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f6f5f38-8578-49d6-8aff-128d0a81ef73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95e5c533-3949-4d08-856d-b201556d4118",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e6c7203-a1f9-4df3-bfc4-414aeb5891ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eea0363-eaec-4a04-95c0-96711940d1d2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86bf2fa9-af08-40fe-9989-9303284d4240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd58cae6-0d3b-4cf9-acf3-ab9755b0bd18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d46ebfbf-ce80-4bc3-b2f3-880028dc783e"
            }
          }
        ]
      },
      {
        "id": "0390c485-d207-491e-b5b9-a7faace24546",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b398a3bf-dcd7-42eb-994c-3f8ec3d43a7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae5aa82f-9f3d-4561-b7da-016b9f9125fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "637d228a-57bb-4433-b2f5-e121fb13657f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e4bf09-bdd5-42be-8f54-0556a0542c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "143ff664-dda2-4667-9ce2-bab3d23117bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d6c32-ff56-4a5a-8dbe-d61a770866cd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3831851e-86a9-4664-884d-4ae32ec2cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4733d3a-0f4a-4bbb-9efc-13722d4691da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926a4428-e211-4e45-a9be-3f33aa8c510f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735752d8-c45a-4efe-bb58-003077b00264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e6c22aa-bef9-49a7-a442-b726b342d1a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba471500-9fa0-41ce-9dd9-7e91d9b7edc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71b85ba8-69eb-4bb6-a4bc-668adf2148c3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79340384-3699-4e02-9a3f-09785f53aea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c772fc1-659f-4aa3-94db-f32b367551b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56620df-2446-4257-be94-eb890cbf7f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad845856-5e21-40a5-bb7e-f4516b55bf0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "18c3ee6e-41f4-47d3-bd2d-425949243d3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c3de0cb-8190-4509-83dd-424d989e78a9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "729cdc29-7cd5-463c-889e-1c2bd39ed915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b0fb781-e013-4cff-88be-79198a415def"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81506803-3ea0-4e1a-9aba-a516bfbeb900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "50f55d42-c67c-4b21-93e9-d3425f25ada6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bf74b32-c598-4851-a657-054c5fa1ad2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ef1b2d7-d21e-43c2-862e-95474349b14e"
            }
          }
        ]
      },
      {
        "id": "2f2e40a1-5e97-40a8-aec1-3c6b94ee9759",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "184c7d49-6a0c-447c-ad05-e8f29106eca2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b24602ce-7c9e-41ed-a064-b8e5f2c132bf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "79f559eb-65cd-4d95-bc78-bbe0aed86240",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6ca46f-e293-4a8f-8177-70aaea3372e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e8d309-e1fe-4c9a-bbd3-cc887b7a267f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee41c4b-53b6-483b-a60c-16a6617cddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67fc1e60-f8df-45e2-91a5-074374738617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102addb-64d2-49be-b403-99bb6151cb83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f984608e-d6b0-4b8c-9423-9bba9bde4f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7bc9cb-a0de-42c6-8321-d97d1dbab85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b2338c-1e94-49cb-89d9-c90599305a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de82e33c-79d2-46a2-a059-c6672ede5960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7628711-ea32-45f7-a807-fb253b5f7204",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cac552-7d9e-452d-84e3-cc0ed1c78eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed82eac-853a-403b-8020-a1cc28a3086c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fccc84d-01da-4670-8b7d-dd553d049a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bc46d8f-d54b-4e42-93e9-1843d5eb64e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fde8d0-83e7-446f-80a3-3f65487512f9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce7b01-5981-4023-9ec2-44e27a4a1dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dcd5e0-88c4-42ba-8f3f-a9e1c77bada0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a03017-fc5d-4350-ab34-154436a1ad27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d635f76-5ff1-4af5-ac52-c89036760528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2b1faa-842f-4bcc-bb43-cef78d262e72",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75444ef5-1f01-4620-85ae-c15bacada9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7093df25-c715-4c83-8ac9-bc220843a1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d94eb30-2dbe-406d-84a2-071469687b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d05aba1-5608-4d36-bcf8-5cfda4cbbb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfab4ea0-f6e3-4bbe-aaf4-149a01ea9348",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29758a37-a17a-422d-91e2-05aa515fa043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68642555-bde4-4939-b28c-e92000fc0d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1beba8-de64-4cb8-9479-3c5959331496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3708973-1a27-4c5a-bc76-ad82751e3b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febcba47-fcb2-47e2-b2e9-eda5986472c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac890dd-fca3-4a53-a8e6-f7c9e0afdb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129e60a1-2f6d-4dc9-9f4c-5d316675afb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cc8fd9-5b25-44b3-939d-05f712c785d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05b61d53-3d88-49e8-b9ad-00a5aac36341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a395ee72-93b0-4cb0-948c-f75037a9d80d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c2ee05-b384-460d-b51c-e81c579c434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3be899-68f7-4961-b677-833fe94c94c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaabae4e-7484-45fd-8c77-8bf325ff5ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d7008e0-2e1b-4de0-8ccc-3c9dd28c99c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d675595-65a7-49e1-9e10-a1cb84ba562f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df0376-ba21-47c5-822d-2e59c5ab4d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5029d770-ba38-436b-8245-c6e9e52da03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73076f-1ce8-4546-95b9-7fb01ddfcced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ae6b301-55ad-4854-b005-56c5913a2014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921bf24f-d183-4272-a784-d7bd273f7536",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af92a8eb-65ea-4b80-b133-c51a371e72b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fd0286-5dec-47b2-963c-13488ec755b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2cbd26-df30-4b7b-acd4-16adf0f6eb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b2fe4c-6cb3-475d-9b14-9005fce91956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ccc39-13a3-4311-9858-e02f43d86450",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9fc2cd-f0a7-4733-80a8-db87772363ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d49c62-6922-409b-9388-167518d16893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c240a580-8888-48e3-b89f-21fbf2dfabe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8df49bc5-1d43-4bd9-9a70-587f5bb95cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaed972-7119-4f35-a397-2af3da5afa59",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821280de-f474-4d3d-a256-94714d88a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb609db3-867e-42a8-adf4-f38e6bab0fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1568f340-03d6-43a7-aa83-48fbc8502648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4397f56f-42a4-4db5-b060-e6724c3af088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480a092d-bde6-40bf-b7c2-b37a7d809578",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2e84d9-a206-486c-96a0-da0bbb1098fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bf12d4-6103-44b8-ad6c-cedd7d951b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b6f429-d59e-40bf-b116-ce97b99f2645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "657ae239-6003-4095-9ca4-11f90fc8a840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b587ef39-3caf-45c9-a47c-71290f1cfc21",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b55da26-e565-440b-bea3-833b99a7f2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cdfce6-208b-4c6e-bf23-1918daa44517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe133a-592f-4819-8c6e-e4b763002b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e575458-0559-430b-b305-f2d03cd3b9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7669c49f-ff0b-4a2a-8057-12dce75340bb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3bec9f-3b6b-41b6-b4d8-2f088ee9b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc367b7f-dd08-4220-b3e0-b9c4d9c0eb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74a5efc-cf00-461f-8ce2-3e25ec0c8dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6ccf50f-1287-4268-aadd-8cb3abf1cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2264aa0-184f-406f-8b2e-e4bd2df5d172",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08870361-7809-4b11-a952-6176453f7edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d569e9c4-8b1c-4920-be90-7be05c98b9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a7bd12-8827-4b42-8144-f6b6ad459a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51ed26df-0a4e-4209-adee-be94426442df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f690c16f-999c-49fd-b4e5-025b7c3bbcbc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b824a234-9f87-48d8-be2d-4958d1a6c5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d645914-4238-442a-a530-a4c63956e0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed53f529-0ffe-437c-815a-8a5d3119bd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6825e04-8d29-43d1-928c-48c9564439bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2501ff52-05e2-42e2-b258-bccdb725ef0c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d172002d-aa54-42e0-925e-ccf2a1855910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9459029-6f96-4d1b-8dc9-eca4373a4de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20db7d12-125f-451a-a0b9-06aa7425f530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "804464c5-9155-43ad-9597-41e8d0a1503f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a51d6c-ccf4-4d16-9fb4-04077754ed72",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef6c7d1-2d3d-433c-b553-22f1b3d004b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f3142b-360f-4a98-b72d-d07e3fbeb2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da34380-18f0-4ed3-9bf7-91d97f23a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb76cb8-358c-4a6f-8619-64026856de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edcc9e0-dfcd-4c82-af6c-43d513ff66e5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df6af8b-a5ec-4e2a-92bd-bbd7f34dfb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78baffd-b395-4964-9098-ee47bbc25575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9e9051-989e-41db-adb3-17327936ae0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b96b07e-412a-4d52-b623-ec0ff75c2c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63f39ea-87c9-4d57-866d-04371d0ed281",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074a4606-6628-4b08-869c-0f1e0a5f160e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3860e2-8cb0-464e-a6cf-bdfee35a4a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e2fb4f-d727-4ccc-a1ec-8a7091e9ac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34494742-28df-4a80-972a-3dae5b53aaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c97659-5ffe-410c-a2a4-f97dd227f373",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c8a1eb-18fb-476e-a80b-2f5958b003b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7025704a-4e6b-4046-95a1-9c0ef183750b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a32d0f3-fa6b-4794-a3e8-f0117028617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59fc5b1e-0c1d-4537-b97f-150c5a0ff6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d09196-00f4-42c6-b403-464cdc9700d7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c126a994-5900-4064-a48b-d100abae5acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4f6254-20a4-416e-8f2c-531583772911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8dff8d-814d-441e-b4cd-181fbf8c3e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83f1804e-52d5-4ac4-bf64-e53abd5e9dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52ca003-9644-4dec-b5d8-ab81d48bc4b5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813d9e99-0d8e-42ae-b900-54e3ea8e05a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015a9c71-611d-4eac-9599-6da43dc95c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82b6fb0-1e17-4ba2-ab40-02e5971849b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2657a9-ddf0-4a16-86c4-9e50dc6efca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8224378-3886-4b14-b338-d89ae44a3782",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1b8df4-dd49-4638-9129-8119933c9f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5949f21-3453-4d93-8d69-1c3bf4095cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef28515-15e0-48f2-99e0-670ae14e43bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "521f6ebe-c210-4d45-b7f7-31965da91852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddbc322-9fd7-4c82-acca-39ca8225bf37",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c289cda-bb79-430a-9a73-5305623fc747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c830ac-879e-475c-a930-d14610b94a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e193220-a232-41b0-9959-c9cd444453ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c6ffd8-5840-4820-9425-82adab3a5aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48eb908-9939-417d-914c-9e183c099d14",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8211b582-8d30-47e0-8b30-a45ee76b9057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac26b53-c1f5-41e3-a181-bd6ab651fce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aae2a8d-aa38-423c-847e-ca9fdab61c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da89c0f-56ec-4f7a-8cb0-e9c4b4b4521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06bced-262a-48a1-ac39-a783ca4cf31f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f314451-7603-4e8a-abe6-c83ab2a03c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a57216-01c8-45d7-842f-f877508623fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebc9e71-8d0c-4aef-b46c-1848094a0e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "282b2282-5f05-4788-9e29-443284f9a7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8223fe4-f490-4c9f-a2b9-5718c88858f7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30162a97-70b1-469e-858d-0bbbea0af3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff3836-14c1-4a81-82e1-34184bcf847d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f3b15e-e08a-4df9-8ed8-394a3d67c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c0c9fb-e9b7-4a85-a147-a2ab2a3dc137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59420350-bab8-4aeb-a985-d061ef6f91b2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ddd4c-c96d-49e9-8892-a0c8e758113b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a80ebde-951d-4402-a3b5-e6422e3f78e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a95865-6426-4620-a048-1943b21591f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae5d77a-413e-40ef-9cbb-37a69f4401eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82653d94-1dad-4764-9eff-d6b9726553db",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f3d01a-850d-4c90-ad42-c00a75d5b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8949759-4c0e-499d-bdd6-c29078737ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42557bb-94f9-4b5d-b852-87785868390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "809bf3d1-6c64-476f-892d-f65eda3fb277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619300bd-81c7-4018-8d3b-3cb18500e7ab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d0f9e1-f5a2-4d2c-9bb8-aebeda4e34e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb46296a-4876-4d3e-bb42-c12bc564cb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd490076-1c3f-4cc9-824a-e2d2fe0eeb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4184d6-142a-4507-b71e-c85088c9becb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdefb12-ba08-4476-b635-91a56e2cccb4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d981beda-f312-486d-95c4-23f47b69b291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ecda51-ef09-46dc-8208-87cccacc9618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474a3c63-7304-4fdc-9721-17226f525ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad731be7-2607-45ee-b6fa-30eecb3733bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b656da70-9e7f-42a7-99e0-f83a05ca5acb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb6e2c-9bc5-45aa-ad8b-827bbf604da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4791256d-da7d-474c-8654-8e95dc105414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2322067a-f366-43fc-bd95-173b728bfc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8860c5b-c4cc-434e-9a97-d348737017d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066911fb-751b-4378-8ca7-9fd321be2bfd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92e04db-5472-4d54-ac34-74fd4f8c7d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51de599-ea72-4b24-a288-b3ce40925703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590c25a7-de34-4b52-bb11-d53216cfbf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68f0fa91-18fc-4916-9709-306856709867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42338bbf-b736-4d50-a4b5-c5b718bd6178",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b465db-a052-429c-9122-97b686462215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5be9633e-b860-49d7-a8bd-e06c1be29c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661ed888-468f-4b13-aab8-2f6dc0db5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf1ae58-f99b-4532-9a59-0736aa2977ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9324b685-2321-4866-9b17-490fa2f4905d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026c798a-ac1c-4c3a-8232-ede2475da396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d615f94-45de-4f65-988d-3928ed99e615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c90e686-404c-4a52-b243-978b403ebd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "589f4781-4912-40f8-a0b2-1eccd9b169bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df01599-38d7-4147-9dd1-479fe2328eba",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37172f5b-f071-4332-b002-22f9fccefdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d86771-11de-4ded-a49f-19b04b0fd626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe7a599-08bd-4073-a704-ed4d29718db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2860fcdc-9b24-41e3-8141-b7b8fa55af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3fbcde-631e-46fb-90a5-3e2f8d56d866",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bbc889-4a25-45f5-9684-39baf0d8dd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ee6341-77e5-4387-98d3-d0201c13d191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed2f3d0-6497-4ca5-8679-77cbca20a91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51a1745-db30-485a-b3a9-e8d5f17dbbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3839b024-6103-472d-8a9a-8a66c6784685",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2946eece-894b-4ada-90b2-acb768f3c4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cf13af-1836-4af4-ba7d-3ebe47e098ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac77c684-c53c-4859-988e-433693924206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46a6f7e3-3a8c-403c-a1a5-ca9835876cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c277e08a-b0e7-4cf3-abbd-fa76302297e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a98acb-30be-4ddc-b093-a7378085c681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea75e5d-e6b4-4a03-a674-0663180b693c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eb9f6a-a8d7-4c4e-af03-ab5d444bd1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da294c90-e536-4add-b263-95e8f9c84c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd027791-787e-4740-b8a0-1b936c4df87f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ff6e2-db50-46c9-ae3b-de0ff8d5fd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2aebdc-18f0-408b-b48b-5c73c6cd8324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7238e02-0078-4505-b162-333521327415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "41d9a8a0-c5f9-4aa9-87e5-2597c7fb326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d32952-4ae1-404a-857a-cde6545b8733",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eab53bd-6f77-4ab3-9b45-2eeca576d696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cd7805-68b0-406c-92cc-178dbeb095ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d35d776-41e0-4c90-ad3a-c641cf488ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4a867b-6b5b-4acf-ba27-558153c056b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea8487-f3c2-4231-8976-c4b11c21d466",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bdc4bc-ca9c-458e-845a-9e664e1a3afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65367f3-02f0-4190-b864-82734ba9161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a3e765-60bf-4105-920e-29808f06508d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc10e33-2e57-4bb4-8880-0ef04e5f689d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c8da13-5f86-41a1-8632-05005a30fa7c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfedfb3-18d8-43ec-9ff5-999906636c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5033e64e-6aff-47b3-81f6-4e136f88ff06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecddffc6-e2e5-420a-a8f4-4db0fb2adf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6b71c8-ed06-4796-b034-fdbfd18276d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b372250d-3edb-4429-aa56-003657625229",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9a05ff-e0f3-4037-bc04-d1e8b078f37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8250a703-d343-46bf-afef-dfe80fe30eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d451daf-d498-4fae-8e2d-c649bcf9f291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48bb669-6210-4b57-8ab8-8b12cf0cd56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b53bf0-2643-412b-bbd1-9026e382d45e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fe679c-edee-4cf5-bd2a-86d05532a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7c2f51-2b5a-4d42-8e84-66958cd5f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d652cc6a-ff35-443a-b5b1-00757c25fe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb234b2f-0539-4710-8ab5-175837665f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb1a268-1433-4c1f-9e68-985fa1cee83f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b29bac1-f046-46af-ab0a-9ad82dc350fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44643ef4-b664-4421-a89f-33dcac453587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c88d6a-2861-4e3c-b771-c6cb79e8dcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5ce9b3-1cb1-4e54-b03d-5cc6a7da94d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a6e0b0-e4d0-449e-92a7-d397ce309510",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee498ae9-108a-4587-b7d5-2c03905cb3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1665241-559f-41ee-af13-afc80abd8cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fc2bc0-243c-46bc-9a33-58c756bcf623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb09bef-d8fd-48d3-a892-f615f8d3cfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d9066-5c65-42c7-b1a6-d2df1f70e288",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb14e12a-6093-483f-98b2-12757738adb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755fa89b-0af4-4644-a4c9-5598d88eadbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bbcbaf-4ca7-4609-a454-1bef3e2101da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d26c0e4-7fd2-4cad-931c-da0603d86968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c62578-cb79-416f-b0ec-7139e45df89a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d636d5-23f0-42a7-b39d-ef235ba9e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd769f0-f173-404d-901b-c743c74ffadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81514e33-2aca-4e81-984f-7276a6eef58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e876eff-f2ed-4868-8b13-dcbbc20ae266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd0eb4c-b6c4-4c8a-b254-33b9f0c318d1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802c1d47-948c-4699-8e68-84fd7ff8c8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b866099d-488b-4e63-a272-3cab922b1768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cb80c1-f677-458f-9e2d-4ac73de489a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04fa4b22-a779-44ae-89d6-9b7e8b89b94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a587a2c4-fe8d-4df7-a4ba-465bb70cfc55",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e545ec-2f44-4dae-8709-1818880a0459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b6ff5b-ac4d-4e13-97a2-58abd0e078c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27204f59-b5fd-4f8e-8e57-8c982fe3f05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6799a9-6911-4d4e-b636-b3cba4007d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684ac70b-5f77-4b64-9263-441ec3239c92",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0636ae-6a6e-48f4-af3b-f2ca90fd71c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246b644c-afe9-48c2-965b-3b1b0a909c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced06e9e-1e96-41d6-94bb-d60311527074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7774099-e3d3-4cf8-b6a1-fd0148ae0109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e260ad-5cb3-498d-b01e-3e46dc5bc77b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a2b8c2-e9a5-4a0c-a16a-60c591682585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4c4aab-6ed5-420b-8ccd-392d0522fa05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd25f4b-af12-40c9-a446-4ccaecfadd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e74e8b-b0a3-4502-8838-6c5e5675bf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95044d8d-1e57-406a-8adb-7ecef17df444",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f060a7e5-5023-48ff-8b23-38c4ba1b3d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad4a1c2-c8bf-422e-9e42-10851c4f6193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8965d29b-26db-4f68-9b06-fb2763e46ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b893fe81-02aa-40f4-9cde-d62fbe911335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1286e8ff-3df5-4d76-a6de-f75e078a37c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce34055-5f20-4adf-b3fc-6955430016b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e59b03-da0f-45b0-82c8-8f5648d622d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fc977c-d4ef-4508-ba34-81a6d0b1ae48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a5dfa0-7b26-4648-923d-b66b58f9900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31ef06c-24b4-419c-8926-419a4d8d31aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03363682-4196-479c-a956-361f9d04a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4dd0c0-b8c2-42cc-ba5c-b8e0d30a52a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748c64e5-51d5-46a1-a766-7894f878ab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5900bc4-2b07-48ac-9149-5ad5842ec3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebce252-1060-4cd6-a89f-9bf31eb3992e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c3b3f5-e56d-470e-ab95-464c74680461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9506677a-71cf-44fc-ac73-888268424694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd126bd-1a9a-4189-a50d-12e45e0aa5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a15b0f4-31fd-4604-ac5f-e45ce254a34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7594a4-bc6b-493c-87fc-d80ef180f780",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f4b7f-be9d-4a91-86c0-21ed22007364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a247283-d84c-4a1c-b122-aca51265df39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1990f81-1379-42ca-9454-29e2fc6385b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42b92f72-99f6-457d-8af2-e37c2083e707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cfc5bc-68b4-4fa6-8b74-595e737be4fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66512ce-cee4-47a3-b6b9-ed4161e88277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670fd52a-0611-47a4-8038-b463d69f54c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23576e38-2c5f-4a71-9517-0e8ae5bca156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f18468-decf-4d37-8078-0b3fceccf173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a57b4a-7c72-4964-9a01-064754fdf4ea",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f98162-12e8-49f5-ab21-030d3c2fa70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adbfbc1-e3b7-48c1-a3f8-014a3af9d160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c261af0c-7a49-451e-9eee-4325f20d13e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "320ee44e-ad0b-49de-8aff-619eacbc73fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b520194-8303-4be5-b92a-56faf7c6463b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fd81fa-f3d5-4252-80ab-c299de02110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912bf236-7386-4481-9b54-aba194cea1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e326d55a-00f6-45a6-9797-ef6577c1d36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9b314d-0360-40b0-8e02-9e84113d651d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f7f8d2-4c85-4382-a545-b60dd81d537e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7f8f0b-3897-4e24-a9f5-3abc3ef77537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef96b27-4e14-463c-a66c-81e181545c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd10998e-b332-4db8-8f9c-d707431e3468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdced3f2-ac08-48a4-bc03-d72277a0696c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605eea7d-c79a-46b1-a1db-b17abc89b488",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d7484e-ad4d-4872-b18e-820a0e5e8749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b971386-4279-4dee-b0c2-7827ceab662e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af129208-1524-47f2-926e-a07deaf0781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a54c5f7-6362-4ef4-b7ea-bfca7c9ab22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dd8bf1-ffdb-4201-9d14-2887cb07cdff",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6294327-e349-4c5a-a928-b9a2e4760de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1936c2a3-78df-40e9-adb0-ca990783d113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e04cb4f-a6ae-40b9-bf4b-5d14155dcd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ce1773-e223-41ca-b9c0-7f34affe00b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d61ba4-fd94-40cd-9b26-e1637f8ffeb2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a0fa46-e037-4cb2-a91b-d63e564cf1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44728684-8e05-4592-8281-3426d81d7a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61a8637-f721-4cd2-a9a4-6aa7b5d56cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c860667-371d-4fae-8606-28f19bf0ebcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66881335-3821-44d8-b4b9-24fc5d6f06d0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60e7e66-ee0c-40ff-8dae-6b6bfe4eca72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb824ff-d36f-4e12-8ae5-998bc13bb406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e595e9f-3088-4e7e-a256-e105ff2718cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a790723-ef53-4a75-9e85-e73d89b21762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0dfce2-1003-4b93-a98a-9609e0a4674f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d953ea-de1b-4ad5-bd9c-228f088698fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b2d617-a793-4212-bc7c-06ce56c4c9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404c09c6-b5d8-4fd4-8a13-a85264e07290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44efb6a4-2af0-4f14-8478-4c790dcbf6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2efae3c-9bdb-4940-a036-7d50059cb502",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad488c3-6e66-4d53-998b-10b7776f9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897025eb-56ae-4808-a0bb-3287c58b2f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61323029-ed25-4bff-97d9-22e4ee20daa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33bcef6-6e57-4c91-af4d-3b7ebb9c9df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78cbef2-107e-47f4-94c7-17b472499471",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6445f632-f764-444c-bb5a-55b56538d54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91489b93-de49-4c17-9676-884fd7a28bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d826a1-2e8d-439c-bcef-5f40e8ecbf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91225f4-1b4a-4350-b2b8-c3bd8e031f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5937f96-dd75-4d3a-9c73-b0eff89cfe92",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b2c330-c839-4997-934d-2eda4511ec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2e3bda-eca3-4533-b137-bc82beb19bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d4dbe7-848c-4b3d-b5ee-d119f2274bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ace1bc5-bd8b-473e-af7c-af3c47e4ef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06937bc0-a5f9-4030-9c17-11b332c8f8b2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77418a73-5f85-41d7-957b-1cc8c0cfd6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddd2fd4-cb25-4ac1-a419-98ba496ee562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f235eac4-3ba4-42cd-8ee4-53a7867180d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7dac82-2c48-4ddb-a0d3-864d01e7ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7ffbca-fed8-4a61-9f4f-35f2c90f456d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8ed575-fa9c-43e5-8887-78c656c292f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9adf068-9357-4c6a-8a7b-45864e32fbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82808828-61a7-48b3-985d-7134318b48f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "584fe669-d9c3-45d3-8cba-4b35cdca20b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890402fc-ecbf-472f-b7c6-d4b25744d774",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3248c5d-0e25-496e-9f99-0409732e9559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91281ced-9ec3-4d4a-8862-d2709f515a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc8c78-0697-4709-b428-6b036f526e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32561fe-5540-45b9-a12a-0eb4014da2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5821dc-686c-4ae9-a285-95ec05465284",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c8d1b0-1478-45bc-9a71-564ad851b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab14c4ef-74f1-4696-93c6-23ca131c360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8126904f-fb75-4a31-8f93-b9e027ef1332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cff655-be90-4a0d-8265-eb311af57fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33771d77-d091-4a30-93f4-9d88b9dd19d8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a552758-0ab0-46f6-9984-9dc8db48c5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9fce43-23f8-40ec-a21f-4eaed08df4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cda31d6-3b95-454b-97bf-6c3fd3d4f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a621551-7e7c-4cab-8da6-f6490287936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695320c2-e46c-463a-a96e-722b406bca76",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66af850-f9f9-44c6-8a5f-21e2e1f63f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc49583e-82bb-4c0d-979a-12ff3d1ecf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73541c7-34cc-42ae-b3eb-58c9fb442702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6e722f-63e9-4305-b076-16a84972bff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13514c4-3067-4241-bba7-c1925d2345db",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fe8eef-a93c-44f0-8d3d-05ca4bed0aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f2f558-9e09-4850-9341-155b0c2d9533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86be5af2-9f3d-4efa-a594-875210f9d7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e03c7202-8164-4835-bafd-9b6599f87a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210f38ad-b1e0-4977-9397-fc565b313770",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a89d804-4f4d-4bbf-96af-628b9f909116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dffb4e-bf04-49af-b836-ed3eeea37183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89256a7f-b7f6-437d-bda1-ab6d50a877a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30541a2f-3edf-4807-bd31-1568dda6afc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bc68c4-2c28-4188-821c-2fea9655b400",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec387ebd-e3c3-46aa-a486-cde40631aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d23728f-47e2-43ea-ad8c-5b1208f54326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53297944-62e9-4d3c-baa7-a5199587a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "567e782f-3f6c-46f6-ba68-18d670c46996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ccf020-5a6d-45b2-98d7-550619fc75fb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5dec7f-aaa7-4c05-b96d-a97fd46c6011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c45425d-4d6c-4220-baa6-a4a354e48ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61636da0-70be-41b9-90b7-cd6ae133297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbe59ce-713a-46aa-b700-a95fb9381347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977c85a6-1f6f-4f99-8e4a-53e3594374de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8337051-fe17-4d69-b392-1937231a2058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2332c2e-930c-4448-985f-f9a127f150df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f9fdbb-40f0-4f9c-9c20-88fe069da28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd886803-227d-46f2-b126-c9188831a0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e2aa77-16fe-4b9a-a96f-a9ec9e4db0f4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f788bc76-94ef-49f5-be62-6e24ffdf940a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9c03d1-84cf-4fa3-b819-1f54c9c13fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6999a59e-08b2-4142-8f05-a5c30fec9fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d9649f-8b43-4dd4-aad4-106154031b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd296ecb-67c0-4d74-9647-2d31b93cb89f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad0dff-3a22-4f4c-a83f-2c9b3e756d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66caeea7-59ea-42d6-b75f-f959df31081d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c926a-b162-45d7-8269-01601ff47dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5c9861-705a-4b3c-b113-0e5d55c15b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bdb2e5-76e7-4f10-9456-1eace2b66b98",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b486c4c6-fbc6-44a3-9bb7-b1d624ec1153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce6972a-4df8-47a4-9fc8-ea18fbd811dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66568636-16df-4e0c-acd5-97d7cf6d5b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f55ee74-13bc-47d9-853c-5251fbee5c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72636351-7f40-469d-9bd5-8ccf783c4249",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4ac4f9-04bd-48aa-91dd-4af2611dfc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04d4e64-4a02-4411-925f-ad3c3096e514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394f3be0-de0f-4989-b57a-67ed4fe27d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d998aac-326e-4987-b098-0d7af034be79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d83218-2017-4e70-91f9-c55a58f9fb1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98496f56-0455-45fa-9a09-faee1ea31c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0190b3e2-1388-4069-aeaf-1535f413d7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070c9613-25e6-464f-8b4a-472ec0d717c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef179d0-f5cf-4d10-9cce-713f1248f7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d33550e-3327-4717-979e-ced83afc12b1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb4387a-63dd-40ba-aa95-f36e04b1bd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f613e788-86e9-4d63-9d55-3c2af47b70eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b119ecd-925a-4476-9434-d1047be3c83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7293cf66-9f93-4f67-939b-5cc24f28900f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51600383-2eb8-42f3-bc9f-955ac7ffa98e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c91293d-bb5c-402c-9926-f523fb3b93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eacbc2-bf2a-4636-8158-46b82bc08534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1c515-b1a0-4bb9-8153-a330a13862b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da71be57-b4a5-4048-933c-6540c2d045c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218e0f19-ad75-4ae7-9cb5-85f5f71db236",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dafd32-61f6-4b00-84f1-73adcbba8b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3da847-11d1-4bcb-afba-8af440cd2aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2514308f-d8e9-467d-8582-0131caec6334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a73c5a-8537-43ca-aaa8-fac12ae965bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6573dd01-6391-461d-aa09-ce7095948d5c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271d57d5-fb1b-4b3c-80ae-2c931b744101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f60c65b6-48c4-4522-acac-0b7cd97dfff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df26df4-5f2e-45bd-a7ca-1b4e63c2134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "209b7d56-8714-43c6-8e75-033708053473"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b10f501b-2c40-4e1f-b90a-54e2648d9049",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0af18496-0472-4599-a91b-f50f8fe79bba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e722fefd-3dde-40a8-9455-4ccdc393b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "972fd3f9-c770-4f68-b206-78351070db5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e0c51d-81b1-4616-a92d-422af280da7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db1dc9de-e561-4dd4-ac75-9615c9a77132"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38142022-3ea3-413b-90c7-06d281ee481d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f19ec0dd-7534-4c1f-b54e-db0ab4ab1a09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba4ab62-b304-4510-bad1-ae2fa35678b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f637347-75d6-41c4-93d6-eca5a57bd1c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d83b6ef8-c4a1-4dd6-b985-4355068218cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f371eae5-8a55-4205-9b9a-f9ac7f254163"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e8707fb-87e2-40cc-b069-6fa428931b23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72ecf71e-ee69-4957-a68c-c700fe3ba8e0"
                }
              }
            ]
          },
          {
            "id": "7e0341bc-b87e-431a-83fb-ef2d882a9ed5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b75e29f-5234-4369-a148-c3547d7332be",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8394f85-a20f-42ab-bc48-d3bab0b2306d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dafa349-5274-4114-8fed-e63e99ca6ca8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d1b45be-f01f-4521-a180-9668bf02759f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "928b66e3-675e-4bbf-952a-1f5c535e419e"
                    }
                  }
                ]
              },
              {
                "id": "8e3b0a7c-66d9-480e-b47a-4510bb5b88ab",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3993057-35bf-4cf8-ab9d-9b488ff26fa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b83f318-c37a-4f0d-9024-2650d01ae4c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40abbfa7-426c-483e-a150-6e26be010160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e50756a3-0f33-4daa-b195-39e212725200"
                    }
                  }
                ]
              },
              {
                "id": "1343ec00-55e5-4ba1-ab95-86a65f28d0ff",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d67cff8-7fc5-41e3-a480-449edbbf874d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d8211c1-b3b1-4bdf-af8b-3bbf1ca134e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a54cd88d-8d8f-4389-aca4-a8716f8948fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42dfe7d6-a582-45a6-8798-3423b832c386"
                    }
                  }
                ]
              },
              {
                "id": "bd85ce82-f681-4bac-9259-c2b0c3d4f965",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0535524d-456d-48c8-9e6b-558e314404dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48828cfc-ecb5-4437-a83f-bd4f84f9dc41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d9c421c-cf43-4486-ac3f-577fffd52ecd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e81c2a60-d711-4588-a006-aee40da3c92b"
                    }
                  }
                ]
              },
              {
                "id": "f2378a8d-74ef-4d71-b08d-65bb6a88d3d4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a667f2-d16b-45cc-b241-d082596936fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0443b405-fe06-4165-a4ca-1c71e733bb49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b78d456e-1d88-4c84-865c-c3953c1495d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "87ead2e0-dc05-4040-96d9-d1df4b802cac"
                    }
                  }
                ]
              },
              {
                "id": "87a6b846-0d57-4068-b628-6c3d29d10e5f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f08aec8-e84b-4ce4-9e55-ccaefff56dd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbf04c54-cab6-47d8-8905-d981028da81d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c40929a-8487-4ad9-a89e-e2e23aaf20d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33de658e-537b-4774-a032-312f750c3246"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3db5e2cb-8f9a-47ec-8915-0ce21ba91a0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2df6604-00b8-4eff-9123-20667accc296"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e67d756e-5dea-4a0d-8c2c-fb413267b3d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c41ba43-2855-41c1-9494-06dd9f914cec"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac8712e9-935e-4220-8e29-6ed717a56abf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fceb6193-7705-44a5-b4eb-c65b07435302"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2313bef4-454e-45eb-8617-1662220b9a77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "161838cc-ef09-4b55-8f58-ade3da8d35a0"
            }
          }
        ]
      },
      {
        "id": "66a78fb3-78e3-4aef-8ab3-227fd0e77189",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0fc37188-8a05-4e31-b6d5-0c2d521816c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f70ed903-0b4a-4ba0-9d5e-87e02351bc3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87fd4aa6-a9c5-4ae4-8d24-260b26b1529d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf8f1c9-44a3-460e-b0db-b324baaf3a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aa3eef-1db6-4131-839c-de92b25c6b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da33cf3-45b8-4723-a12b-8641a70068a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb873e63-d4df-4940-90f7-3f6948f63ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f6513b-523a-47dd-80c1-9909267fc946",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d569d-5f3d-4a6e-ac0c-ef29b0a1fed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e95e6b-8561-4b95-a7d1-a7def1a56eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e158b15-a424-4621-bc7d-3284da9caba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70b3526-1d09-4edc-8893-e5b51c177b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34262f04-8afc-40c0-a9d3-c868dd442e46",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ade136-9f13-4cd0-83df-8d0b0e86b50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db5f740-2d7c-45f7-8c25-9305d30738a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad0d688-eee9-4f39-bce6-49f21ef591a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e12a8e4-ce4a-4360-a7e1-3209a0b6aaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c89653b-5d7f-48c3-8b2a-90c10bda9b45",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba85732d-2df7-4276-9c55-bab26c671864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebf5618-1cc1-456e-9390-aad3f44c281d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c47bcd7-3cd8-4cf8-928d-3c9424908ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c072d0-7c3c-4ae5-95f8-b5cb3e9154d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ba9d20-02a3-4ec6-b32b-05699b5b0a3c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b7e32c-004c-46ed-aed7-70856ee6adb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70522450-77d0-48b9-a547-3d3f1c19a746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d938104d-53c4-432a-ab4c-5bf9434af4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "006c18aa-55bc-4c9e-92f6-d10c611aebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f71c57e-84a7-4a48-9e37-dc29fdc8b466",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221cfaee-a7b3-4e37-8985-895ae2a48a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45819c5d-e0c3-4244-8511-354842cd258d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daa169c-8d85-437e-b16f-e84578dd1246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb798db-7e54-4228-b226-f7f041cc8bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e066f8-3fdd-4456-9626-b3e8191176aa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec400d4-7056-4d1a-84b6-d7b65d44eda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6231ee21-3a1c-4d3b-83b9-697a6de25e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d0c741-86bb-42e1-8267-4ee29a3fa754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3e1d09-230c-49b0-ad5d-f62ddc83fecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f086a0-48f6-4486-aa61-7bfc245c9f32",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ba478e-353a-445d-a9b4-d85279517bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd9bc54-beb6-43b0-a914-eef469cfb65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c95c01-b929-48ff-886e-da63172fa896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "705cf717-4f40-424d-a0fb-1c1890aae0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237f877e-3538-489f-923d-23a954ee236c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afda137-ce72-4a66-a98a-5e972c2f7016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9e93c6-96f9-4c73-88b3-f99b97d9a149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9580d7-f90c-471d-a2bd-289af9053de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5955baca-40ce-4c03-a785-14c05931669c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaa1766-37d3-490c-9d73-f76e0ba91a8e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbb7b12-d836-4457-8d70-7c74d7653175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02afb41-8e34-4a51-9187-aa3e75a57f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb44d91-9c7f-4b4e-ab1c-071773dc7017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "593672e9-2e02-4b7e-a284-fdf17fa5b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54039e6f-9c3f-4d21-a385-8c34f486c0fc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4d968c-4ef3-4332-9d65-3f71d597bf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7c64dc-4d2a-40cf-bb15-5ecac72e3905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d69f4ad-e9b1-4cc6-b5b6-380e32438039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aebc5b7e-a4bb-4af0-a746-aa3fb3875051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44de84-a035-4697-baa4-d1f5702428d1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03d2fad-37e7-40fa-bc24-5520b855b71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5601c746-93e9-4ab7-9f02-df71bd18c1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c089e2-334b-4086-8ed8-1096f42b9dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d254f4ef-f749-45aa-900c-5a91f92cc1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0230dc34-d19f-4829-bc2d-fc32b62719c4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb6b53a-0c12-4938-a201-897585bf7cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a014aab-3fb5-4327-bfb4-d5a41823143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbc7677-5a5d-48a6-b5b2-909e3f2cc8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22215853-0759-4e03-9827-cdc271544fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129da7d3-be3e-478c-b4f1-9dee1377f4e5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9082947-45e6-4b91-81e0-b14d65f101ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a717f701-eab9-4c00-beae-4ebcf7dad5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcaae2c-74fa-4bbe-9d0a-ab54ee6ebdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cebedd6-bc7c-442b-b892-903550ef252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a2414f-052f-4790-bec0-39560cad0936",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6536600d-d903-4cba-aab4-c71fdf5f2075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75854fa6-3afe-4b51-a990-e8733d46f0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c27c20-63c4-48f7-985a-f50ba0cd9a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca6759a-8067-4072-8d16-438da2272bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c25aaba-8372-4490-b322-dd97268747e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8806ab-4c9b-4453-b35a-df7f0f76952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846ede0d-d458-4c60-8e19-97551f44d399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04038297-ffa1-430a-9b3a-ac5ac0873026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c26114fa-56bd-4040-9605-6ca0003a14de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911b164d-2a9a-4bc3-a0d3-7c2d022e3906",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dde04c-d7f7-4725-b2b8-fb1a1f690cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213bb4ee-51c7-42f4-81ec-2f386274dad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66fd269-8b63-4b81-9318-10e65968b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bd8969-fbaa-4e89-9a8e-59541e319d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cc4ea8-11d2-42c4-9cbd-5fa7a1eff6e2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b487c350-41d7-47f8-8c7a-beefb5c9acaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11661b0-064a-42f2-a6ae-56548f0e9dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9133bc-890b-437e-a7a7-c419216a0912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d376d7dc-9cc8-4ed8-adca-55b48a34fdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6006eef-8e7c-4e50-a792-0ecbc29b0924",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49752195-f81d-4980-a9a6-27023f1915fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb1aecc-375f-4a51-9183-a99974b08c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a51a50-4ec9-4e0c-8705-e81b198759ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4681d77e-288e-4b6a-8518-ac1626ee127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d854aaf-d440-4dc1-aad3-94862fb1aa0c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c71d6f-dcf4-4e4c-b713-0f86906e7de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42afcdc-f781-4dcc-830f-9d6e4bdeb73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca0b162-c397-46b4-bfe8-40cce5d71da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac162a6-f809-45dd-82ce-8f7196c1f568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0036620-e2a9-4f48-b7df-00907677700d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45c9fe4-042e-467a-9163-fb602be67cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad13860f-6568-4616-8fed-e2ef9062f173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b78bd56-8ea9-42b4-b637-ba0cc420bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86cdec1-9140-43e5-ba0d-3e010f41fcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679ace25-ffce-48be-a93d-bc30040f2e11",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad66d056-a66f-4f93-8158-385c85193f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c9f18d-73b0-4ccd-8d1a-c89f3762a4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c4e499-877f-4a89-aa81-44151c9587b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5557c5ce-47f8-4760-b478-8b4eb5870807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96151b7-5dec-457e-9442-e73f3d91ea72",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6b43b5-d476-4ec8-84b0-dd77171ab454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8017c3bd-5ce3-48f6-b622-343b46ad9cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3515b2b4-52ca-4dd1-800b-06c9eaf63799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2784654-3812-4d7b-9bdb-c18c48f23f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654a279b-94cd-4d16-a306-08effae423a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15220578-859c-4389-9a3b-08fa125935fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bccf58-a5c3-46ca-8657-e1103b4b0226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5805d2cf-46d8-4f41-a572-e07bbdcdb8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250230cf-c1f6-499f-8010-d9be1df26c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b1769a-4e80-405c-93fa-948f56fd32f6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e7f57e-753d-4879-8971-d4d2d7f77cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c417a8b-7005-4ef8-ae06-de46b23724e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb65438-9973-4b1f-8e87-e8ad66a7f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f134862a-e4a5-45dd-bc9b-83c7bf2c6f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1138e9f-a753-4295-adc2-ccfaf6b30aae",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe44c9c-39ca-4704-bfef-fb72dede80d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67907aff-d54b-43af-9259-d54071652768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca6744-6adf-4474-b3b9-8b4bbed4dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcaa59ce-cb95-49b8-b910-83851605f459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d141a-0465-4dac-ab94-aac361b2e33e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430018f3-030c-4b99-bce2-58ae4b69a6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4501c4ff-b943-4ee8-be1e-daa4c508c761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e6dadc-f21e-4876-b9d7-32a67fbbffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90dd2ca3-653c-434d-ae05-f0550892aca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ae6308-4dcd-4a98-b45f-db1e1924e2e3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90368e4-76b5-4f44-a643-3bb2170ef8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc53a3ad-e55c-4594-b933-f7a8437b1bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de864dff-4cea-4576-9b24-c1138c4f7c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382196d3-cbc4-4f16-ab02-0883d0768618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4774d16b-e427-4a8e-8ae6-1df4ed78f428",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b6501-dd16-4781-bb02-8feed26b77c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53713f94-0659-430c-bf19-78db38eab0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fdd05a-ec53-4bf2-9f68-74eee5d08ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0525ebc8-7b46-49ee-8236-e618ded2b73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc1c39c-d0cf-4022-881e-c20eddce0847",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cc6478-d709-4ec7-94df-15be8cd278bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597b7f10-5266-43d8-b0a7-903f5f515990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12eba8f-77b0-4058-9d7a-4bdb63428e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00347a49-fb77-4fc7-9c1b-d0d467122d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a50565-b594-4cb5-a1b5-e3c85d641ba0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae1f511-b6c6-47c3-b644-152eaec51c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29005821-e7d3-405b-aa32-1a574b20742e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d222e-4cab-4c1e-98d2-9c0ede466ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7d96dd-879a-43c3-ad9c-58402c422938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07875d13-1186-4415-8b15-3055576dafa9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d6eda-de6b-457e-8579-a9788bb91820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c728c365-1ba6-48cf-9bdb-1437b4627b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8676ffd-9cde-498b-b019-4ccd12f4a7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4029c0-c178-4af4-87e3-0de74ca92847"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e174423-2e23-40ab-ba20-b8aba835b962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a78b0519-dc35-4d2a-b285-0ca0bfdac3cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a710827-c0fb-433f-8abd-52e7b721c1cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "432bcf68-911f-4655-bec1-8b9f77840e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0994b6-d585-477f-aa98-a3c2bf7df333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95014a9c-5baf-4045-97d6-a632035084cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9079fc04-39a6-46f5-a5b0-e3dc5552ed04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0c3ee8d-d7a3-490f-be40-98c116369080"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dbd1afa-c1ef-4175-8b63-c9d09cb20dbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c4bfa2b-d5c0-4697-9f47-53d530af8e98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afe80443-27bf-45ba-96f3-db401f4e87f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f5cb707-9abc-4474-a70a-9410801a0387"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e83f595-a101-443a-a4db-c87a802955de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22c45fab-c9c1-4a25-a03b-f439139041b4"
            }
          }
        ]
      },
      {
        "id": "85294241-4db3-456b-b3b5-53ceaf639316",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4bcb1344-1435-4b74-b02f-fb0e74a1b4b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "036d28f9-606a-4f8d-8604-372d41af9dfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "003881e2-d86f-4c37-ac4f-b302adc30e8b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720cd367-3997-47ae-98bb-ccab52c2b16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf78f35-8fe5-4d0d-9265-ab66222c20b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba67caf-d418-4979-bbee-3ead9efd20ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2f5595-5078-45d1-ab73-01a8f3cdcefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4e22a3-2169-480a-a330-6c95080a1b4a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89912400-308e-46b3-9133-1e2e9cf51edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1613fb-6702-4af5-ad8d-b5091fc8fc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a621806e-b752-4b64-bb2d-03ec1104998b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f65f80c-2963-45e7-b542-d21969352e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9b4d12-1948-4afb-9b06-b5f5bfcd5c35",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56119f13-2eea-4a07-b046-0ce796397a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d6965e-793b-44da-b6b2-fff7cf126893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e96a3c-88f7-4bf9-8d3c-d75a2b88f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b1be9d-f058-4164-bd44-23fc44ee7dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171c2cc7-acd4-458f-ad7e-8be0ed5c30d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d600dba-195e-4f12-8b88-193c67983161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5b750c-3dcd-4f6a-9804-2a874979c637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005851e2-a190-4f52-9a04-0eea32021223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5f7fc6-ed3e-4172-a75b-3641c048bd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf607296-25ed-4b80-8131-3454c351eb9c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9085af29-7514-42a3-8e21-59c98f515953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6671d5f1-1d86-48a9-a52e-4a46eae07d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40446bb9-b330-46f1-b57e-d9dbbad562cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3441bc-ed0c-429f-a0f8-f46abd5d3410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c57ba1-4ee9-4563-b0a3-c3c9f4724f0e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f359e6-931e-41d1-b399-603d777c8f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d680c4ca-4134-4470-9642-0576a89a1fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b732c-8c44-44f5-ab81-d21cacde9a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3d2578-87d9-4c70-ac15-7cd554ecdcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2246266a-5eaf-447c-b5e1-ef496f8fd65d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af1546c-d740-4a26-b408-c25a30ba6ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61610208-7c4a-404d-b275-c0eb16059e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991b9674-16d1-434b-86ba-daf4d714d321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b51c40-c019-4ccb-83ca-93246d01be10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f679ad0-4786-4c44-b7eb-f4712d0bb5b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a625eb4c-9dba-48fd-8379-1243709042e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5259a82-d406-4114-9272-01ace9b97ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08948f0d-8357-446a-9bf2-6657d1c72f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8608ad-824c-4f74-9e95-bc682c8e2747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0885cd4-dfbc-4949-a44e-35dbad6b890e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b8699-9710-47dd-89a6-961f14671334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4861b7a5-26b4-49a0-92da-1178aa1b0e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc612db-7ef2-48c3-9651-897f1a75e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f8fa4e-1bd8-4b58-8787-39d4dfa333f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8bd386-4bc2-4fd7-be8c-5e2d6e462afd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea2d3b0-5526-4067-875a-8da3bed6dbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e45531-e5ad-429f-9503-79d3feffe651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213e05ce-cf68-48b6-a3f3-dbd04950fe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ca177f-a3b3-479e-92c4-6cde69f31dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b286d3ff-914d-418e-b017-0f0287886bb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e9875-2994-4cc6-bf4a-91cd9e5fe735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6e0cf7-47e2-4d0f-a9ef-bc2dd054787d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87f91b1-f4bc-45a6-a779-64f6e390bc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5e738e-77df-4763-856d-38ff83842a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102ae6e7-2306-41ea-bb24-4c75fde981af",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635722d4-aefa-4cbe-b4ff-c8dcf9a24323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b8642d-adad-4662-846e-db9216e66158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde9ccd8-8909-403b-b464-facdc8835f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da3a06b0-d835-4cb5-953f-d7b574709969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc391d5-98e1-4036-bac0-b76caf08f2e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78ac5dc-df5a-44d0-a08e-3947f7654776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905b5ab8-edcc-41db-8e12-1dadc6452336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d41d6f-c0a4-4a8c-8287-bf264357694b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d681fc0d-308c-4dc2-b274-fb2e727805ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dfe310-b422-42f0-b2af-61cfcfa51bf0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efee9ccb-c98a-4a98-8c8c-487975e88b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8d3ef3-7f8d-40d8-9d75-04c37567d417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd646fa-5cbb-4378-a25d-da066ee5ac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e53881-0809-4c28-8034-948602e23c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687278f8-6625-4821-a11e-0cea783a6938",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26bdc5a-e2ca-4ec1-a3f8-86dc7e1dda76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafbd045-5ed1-4c01-9ecb-8771bbcb1ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9027bb02-a9e0-4cff-8c0a-2a3515845830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "084337b8-9c32-4dfe-9403-0ae15b7ab70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156e1134-1240-40b3-9991-588db7cd829a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1cf456-e8d2-4475-ad06-8b9efebe3cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad346d3-7766-425a-8155-b62843784d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba20e02-8cde-4a07-9f84-a2a003a66d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ba866f-b2a7-4241-881b-41c01e87cc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5197fd53-c80b-4832-9b87-e60fbd426d75",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99e33cc-4782-4220-9741-7fce319e61f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bfa6ef-98ba-49bd-b467-86680d614ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3726b609-add4-4d6b-989f-7ceb77053619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "103d4074-a045-4028-ae7f-0a3df126f5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1ef503-ab31-42dc-b3c2-086d23f3ad49",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8afb12-9951-42b2-90cb-34bfa0aa0f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcc3fab-b566-4ae4-85bf-768d8e3884c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b904c725-ca4d-419a-b736-f52c0bab7399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c38f22-273a-4fb7-a5ad-7a9b915043b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976f8898-0bb1-4cff-904a-262388f32348",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af2ee14-9526-494b-b5af-c36552e3be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036295bf-35ae-45fa-ace0-2eda8bb6fa95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0742e42-7f42-4035-9c24-afe8b4876a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "909c22fa-8a03-4b17-995c-b7f066b9f1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a565a42-0831-46ba-ae18-f2973228fd6a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b060fb6-38c8-45ca-9b5a-96053ddef346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbced0e-6fdb-4dab-93fc-fdbeec45e152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d192bf-d962-48eb-97c5-cd8cf69f39e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65051703-bfc4-42e6-b96b-3c364ab3a190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfcf209-8759-4a32-8106-9419031080df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2530cf3b-056b-4be9-aa7b-8076ef060195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c00e7e7-623f-4a44-b95f-5caadff3b951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc67563-2216-4a27-8811-3d7b374072e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "620b991e-d2ef-4b05-8e63-97e24be3eb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f9975f-77fb-41fc-b0a5-6d78390c4565",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4249c0d0-4f44-41aa-9260-93663b7fa7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d72fbe3-4303-4084-8bf1-09e0f51ca593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bad874-c69d-4117-ab0a-39844f8d3146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab13a11-c7ca-48e6-b38d-278693e1ca10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be13332-b796-40b2-93a2-20ba22f025f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aae94ad-106b-4b3b-91d3-b19a009b6ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02796599-5918-4441-ab67-1887ad3268c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddd0f74-f1cc-41c7-93ce-4aff4c9f9240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e21e6f-2d1f-4ccf-bc40-3575dc7157a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9c8299-af7d-4fbb-82af-e433c1030502",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41627cff-2a74-4ce4-b99e-767698064eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbcc75f4-eeef-4269-a1fd-82083477ab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844124e2-05a4-41bb-b508-c7a88dda3625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0d6439-7970-4308-a2a5-70e982f6a3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0413743e-c64c-4ecd-a241-b3719c3bf457",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0666c28d-c643-4eb1-bca4-55e6eeef6984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197316e5-ba7e-4ad3-9c69-4fc505435dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e322dbb-897f-438a-b71b-903d0054be8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16482414-da0c-4c77-8dac-6be157ac7d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac6c083-fc34-4d4e-92dd-d866640f879f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae7bba7-7abe-4eff-a6fb-454594a6aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7527eba0-02f6-434e-a853-824f6a0a9c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72bdf6-ab92-4502-ad6b-c61c5b689f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f272e3e2-e481-4506-8d68-9e9573fb6ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1ef819-a7a8-4859-b2dc-7a27a9385ebe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36895e81-0493-483a-a62a-cdaa1746da10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1646592-2575-405b-853c-1c0d861d7f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319322ca-bafd-486d-9d14-697ab33978c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0955bf-8c2e-41e7-9974-782b14e49be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b41d41-8c79-4d1e-84c4-4e4cdc82016b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93027351-8ffd-4b4e-8439-2523657b22ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23471a90-eccb-4c94-82ff-788a693f26c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e9e64-0b14-4139-a980-b0db713ae433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2bbacb-36fa-43a4-9fd2-d86955db03d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c712a9dd-de3b-4f07-be3a-3a621360bb0a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445ea1bf-9a8a-4135-8de3-012e93be1cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852fd477-0028-48db-a494-fd1f51b3066d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a04039f-b326-49da-8ba8-b18e364ae3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "271a0a93-9b23-4238-bc84-74a434b0224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e658f0c-2f09-407d-b278-cc12c9a0c0e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b3eb4b-517f-496b-a1ff-c4eeffc6704f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349189cc-e01a-4066-8cd9-28707f91fe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e8a504-13ba-4a7f-ba8a-b3bccc620169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe0ad31-e59c-432c-8dd0-3bca897decd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53440783-f0ac-473d-903f-96ff5c7b44b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6954dc8d-74a6-4d63-85be-4edaf415185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a9b871-d2d8-41f1-9cb2-79b10852f963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b95f09-1b29-436e-a1ab-272fc7857114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf9dff1-ba08-417e-a6e8-08a9d88b84f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d8c32b-71ec-40aa-b02f-693e7e0d97b5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483b765a-a0c3-4cff-ae14-487ca523cf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fa789f-3d9e-4b4f-b608-2483e14c0cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c120ae32-8595-4e07-9268-d71b8b319f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44597e3-432d-408e-a4ee-6d8100168bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af47e3b-2185-4fff-90e1-7481158e5014",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757f8ff9-e2ff-472d-aece-267bacfd2412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d213cd29-6628-4afd-a0b9-ec0b61b75311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8064e03-d924-4671-9958-d2ae3efa0b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9a0940-b72e-4a5e-b75c-a64b5a053a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b79c7b-ae4f-44bf-a88f-0ae688075882",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de6d046-6a49-4133-bb96-9fc24e55c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c6a273-b2da-47dc-aef5-bf201ff2bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197efb9c-80b5-494e-8f77-742e13e318a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a97ba85d-9a88-4896-a1df-7bf9c57fa72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a43c85f-1216-4280-aef1-295f57cc517d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d51391-6b32-48e8-a11e-a984976eeb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2a42cc-2297-4f70-8ae3-42a2f36096f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e5bb8d-64a9-48c1-9fe7-d6bb903e14a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ce5996-45af-4335-8092-50e6f5f8ac22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac48a2-814d-41e2-8942-cc98a277dbb8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b060a69-571a-47d3-95b9-68c6092e16b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ddbbb8-410f-4787-9ff8-368333075b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59b47c-f8dd-42f9-ad56-1192b65f5601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e8d4d-0e94-4d79-b84a-f2a917e0f468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c36cdc9-ac7e-4c30-87e3-5688cc4fb48b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc28dc0-9e53-412e-8ee8-b348f0fe701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696fda7e-8313-472e-91a9-71becd607ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14bc4c9-8dc5-47d6-b111-1e0f18637c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc98e31-fa35-4443-9017-414160d1c91c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b775894-09b3-44cb-a7ce-84168aad7e82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "210d9b0a-8f42-4596-ae3d-3a6b6cd2d368",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9f7da3-a478-4535-90dd-dde866358f24",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "55d2075d-ea00-4d9f-bdc1-c918440795f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9961e6-c1d2-40ba-9148-a27552369dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "147abca1-44a9-4e5e-943a-e90989945e68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc41ff7-57c5-42d0-a873-16c0a72e5c9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7877489-8ef9-4f69-bad1-4d98ebe62990"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e3c9ffd-a0f4-4b0d-8b38-6022b75c44bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6d2d736-a2fb-4052-a43f-2cb04bca4bcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f294cbad-a956-489f-888b-48e74446ca92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1115e56-fe67-4b4a-aceb-7a1ddb65bf02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d0b6ab9-c42d-4e6d-87ac-2a183d146f71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d3d8d78-2221-4638-a691-0fbec4471dc1"
            }
          }
        ]
      },
      {
        "id": "11e58df2-9add-471a-9e42-56bc1a653629",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "269e2755-5b1f-4a1e-89ed-181763d610f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08cda1bd-7948-4142-87af-1a2fcc099933",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43080795-6974-4453-93a3-250354fce8ed",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9dadab-f309-48c1-9448-6e4f1b3dca23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f9cb8f-398f-4e56-b7e1-c97016c607a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db666cb-c2d5-4b7c-ad78-778ad0f6612e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4207944f-6a8b-49ce-b4b8-9f7f23a78756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec995c2-4245-4953-bd02-55444f4a5fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2837af-9d48-4611-bd17-6195eedbb936",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89cfb00-e7e7-4c7c-b0b4-5d413350ca37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bb1924-94bc-45d5-97c9-a042aef4c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79724077-5a76-49c9-838f-f38bfd294b3d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ca627c-30a3-48ec-a1d2-a1967b62d092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c49206-cf5e-45aa-8e0a-a9d4a38e880b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87573fb-cd87-4baf-b655-d02095e192ae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2427fb-3db6-4963-bffc-564e4b4f6cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c51b6e1-bee7-4389-b521-1c6b8fb6cc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd589cd-30ad-4d20-aed9-9123be88c733",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b7293e-3eae-4189-a8e8-e4ff2275b756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2abfdd-afc9-478b-9cd2-a896ce34c9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeb2fed-23c9-4b71-889c-42d26b301445",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb4f553-98cf-4009-a850-47ac374fedac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6427ce5-a6ce-4c7b-be6a-ef03c24f9319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16696f1-2992-4156-b220-500e907e5be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53976e15-8d62-4db4-ab24-10530a4cf140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c88602-ec5c-49fb-b1b2-44771e907fc9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f8b7e6-cd3f-4cf4-a10e-c10b33d20aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2afb17-48f0-49b0-81a2-c1d8860fd494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143b4e2b-b6f7-46e4-a0eb-7245f9983e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69edd69-86d8-45ed-8342-125b1f9939f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf837fb-3fd6-4028-b4aa-73153fe88af4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26c4f2f-4335-45c9-b4bd-fa7f47ad9930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c36c55ac-be5a-487a-a467-e2107359f7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53b9d94-6548-41b1-a223-7b0544c4cc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c965b144-6f33-44b2-a03f-7c39340d3db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97662b1d-0e19-4181-8b02-4a7858e5bcdd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7e397e-2013-43d3-a72d-03b0729fa1bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95fd565-d0f9-43c6-885b-f1dbebb546d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e19813-bae0-4509-bfe2-6f8b25b347c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6878b7d8-b983-42ad-9ef4-086ff5ad900c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271f8f7d-98ae-4128-9aeb-000cfc4c308b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2868cd82-698a-4bb4-a9e4-c70a76ad72fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a783f49d-aabd-4659-8f8b-2ac0d696a071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918552b6-de9e-45cb-a8ae-123c5f4eff56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605d7dfd-bbb1-4b1f-a9ea-e84b0d011de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee8523e-c502-4ece-85b5-556bb14f61d0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8e041-d987-4e35-96f1-b0e802f19b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae24f8e-7001-4702-bd33-f4fabcbecc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b9b321-971b-494e-a45c-23848ec2d421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463b94d5-f5c5-453b-9409-fc5f996db63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24391824-ec4f-4c82-a8f7-cd845995586a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e299d0a-d1fe-40fd-9c2a-13d6bbc5f32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae49df1-c178-4419-a516-d4301c7aa9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3185fd-4fac-44e2-a9e0-dc5f2ba03ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0852be-2d01-412f-a0dc-8face0a8aa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dc634d-265c-4d47-aebf-059fcb75880f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca68df1-8aca-46b0-8515-7ae2bdddfd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da968ca0-cc4e-4023-98e3-38c34608f1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4784051c-bc50-45b9-88b2-85c5b702c5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa3f60f-389a-49b3-8f44-61813bf554ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac2aca6-4b6a-40d5-bb34-342de2c6c959",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a051742-2eae-493d-a66b-83f8f5e9939d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9338d83-f032-44ec-befd-8b9d13bcdba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db75f9d7-c8c2-41f2-884b-c4929a0da231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc03401-5b77-4927-bbbc-e680748ac437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c8d31b-ac4d-46f6-a7e9-b80b1babaf7d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13ed162-64f7-4168-83f9-7706d2673647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e864b65-0258-4044-93a3-b876b74c9fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefcc17c-ca4d-4666-b1f5-04c7a6d757b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35221fb1-a505-4813-b5b3-94bd8f0e1f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf33989-9fcc-4ee8-819f-4bedb1f8f976",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4253819a-f5a9-4891-947c-fdef8ac9f0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aec7040-c258-45d8-aa23-8205ab8f4c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642affc8-bef2-4c21-b705-6b41a9156af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42dedab-f15d-4097-b98d-4437fe7e8743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a61567-a9f1-4a6d-b33f-44bbacc1f221",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c88f17-c6e6-4693-aee4-c4dd0c8f91e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3520c98-91af-4296-8964-d89e886ff3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41d6104-73e6-47a5-960b-bd685b8ec1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04c3391-9b4f-482b-8448-eb069b93e29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928ed595-5d1d-4908-a11c-2c80ac517d34",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89c3bd-b8e4-469e-b5f8-ea6304831ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbfb8d2-0671-4166-a5ca-4c38f13602cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b18d504-fff1-4109-91e1-3f43e9f4058c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbda7fb8-cbd8-4881-ad3c-3fc9942624c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489de5e9-f3bc-400a-a5d2-af366d5441f4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ca6095-6287-4dbe-affb-120608d6fece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9be0a0c-7d51-4c23-9065-e203202671a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d19d7-c7d6-4a7e-a225-de5ac8fbba57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21984217-6259-457b-afe7-257a5e9ded1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f866f3-dedb-413d-b921-04e1542b5e6d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b536d9-f429-4970-952d-26de9728ace8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb85624c-caa7-4345-912a-b68dd0828c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7165b4e-0986-4928-8ea3-a4ac54539838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b50c61b-92a3-422f-a35a-76158733b2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8cb448-ac2b-46dd-bdd6-d36c3d83a89e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fe74d3-cb09-4050-a134-46ba1e124941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf9fbe5-50d2-4f56-8a57-5a237029f25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b32c4b-c309-4e71-95fe-d0138285bace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bd3f48-a796-4ca7-be54-39aeacf827f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eeb2761-30a5-430e-b6bc-cff7f7166b50",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b08db80-25b8-4338-accd-992d6686f8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9eb73a-728e-4c16-a72a-963a908f73b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ba21e2-308b-4e5c-afd5-16bc5d80ca73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888366ca-33c7-4f81-9675-6688714f4ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795aab64-45de-4d2e-98a7-1c68086b34ba",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617fb625-2c23-4f9c-8219-8fe7f722c6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3908c4ab-2b17-4ea7-a7bf-fee2cdf22d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff848bf2-267c-44a8-93c5-bf4194a79d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f41f97d-b63b-4e9d-9040-56346c86c0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eef189-0fbe-4cbf-b52b-f1a618bbffd7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37694ca6-2a98-41ed-9f13-3844538e2329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6561e4a9-d7af-4f6b-908c-81749236ba8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5baf36-56d2-42d7-80ab-d2023b9edb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3005849d-afe4-4f8a-9936-064914612425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18df2045-e427-4230-af76-850195a88fec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051b42f1-649a-4467-bcde-645735daccbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4481de-ca45-4a85-8293-990f85d8d4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429f84cc-2c49-48d3-8218-c56100fe8420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954c7d52-cce9-40ae-ba84-b3b4d6f56e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5003e5-3c7c-45b6-99b9-eb55841ec513",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bb29fb-7cd3-4eb1-aff9-1287477dd2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cb8e17-1c9c-4e41-b458-cce822be6439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595ef104-0b8a-48f5-890e-fa976f0c26eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8d01a6-d10f-40e1-8fb8-862654d192df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f56979-d2c2-4022-bf70-d555e52e32c5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23a98f5-3cf1-416e-9e9d-dbb342782a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6448b0b-7f4a-432f-b9c3-661e1af213f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3548a68-5dc4-4b0f-97a1-e523746d6842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db78f55c-76fd-46ac-aa7a-672a8e4f0602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5bfb5a-2b7e-4637-9e88-97e4f94603bd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1bc608-43aa-47a7-8e3a-5efac044baa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6819da56-2f5d-451d-9b9f-293a57d240b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc7dfdd-a55b-4c02-959f-04eb46f126a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77ffba8-3956-4765-9ad8-47743bcb8fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7e5083-2bf4-425d-8159-5e0ff3141054",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebebef-8a89-4749-be76-d5e331f5b825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f80f4034-aa44-4259-bd5c-385ca0761487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7613872d-6ecf-4252-afac-d5ca4f67f856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9a408b-2991-4d85-a396-306669cc1ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ee9642-fd55-433c-86f6-7d8e3074a411",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067dcba1-a921-4bf9-8e9c-6c774f93ca7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea8e93f-c6f7-40f8-befb-8b3111dd898a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d89739-b062-4b7f-82eb-86413e1232b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39402922-b487-4429-a233-de8ef203eb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d669533-76c6-465d-98aa-fce5bffde9f4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e96607a-0276-48c7-8726-9737fd364268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848425bc-7872-4aa2-b5f2-4a2d6494f544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d86af74-b8bc-48f7-a6a2-7bfad53a7007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6bcc39-c58e-4a84-9b60-9c92b6c19147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0869f9c6-d840-4600-b370-bbf715a1b04d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df4e608-1d4d-4f72-a533-261ed35225e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44b568d-88fb-44fd-83b8-fec8a54f5c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78623a52-ab3f-40fd-8ac5-55f333cc95f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a4b489-36e6-4e07-9a62-4c32ae5e0385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6eb6df-a251-4e26-8624-a7503ea0d58b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be595776-d639-4e9c-896d-166dc8386072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb795fdc-05f1-40db-8467-f7c5b9572d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd74e548-7c1b-4a86-927a-f9be1fa3f4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce96237-525e-4c5d-81e5-18cf68a81b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836ef80b-7c49-4663-93c9-580db8d2644a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3334f800-f5f6-4cf8-a3ae-83e82a1e0bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bec53f8-57c2-46ef-9f04-464dd40cfde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2d2dee-9bce-4476-a54e-6c9643be0d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2ea1fc-5c8f-4fa7-97e8-b30986432faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d640c121-a5d5-460b-a6c8-7bcefcbca1c3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c7be58-ec1a-4096-badc-a801b076e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978f0c8c-cd81-48ff-9798-156bb4b341ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1891349a-f565-47c8-bace-69512b414f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9ed3e8-3b06-4d47-9b32-c4bc6549cf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fb6e4d-f24d-48e3-9db2-d1db03cca86f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31167074-5129-49cb-9e05-8cdeffd6793b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d35707a-2640-4a7c-b926-1cb9afb2e358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb07fb3c-b24c-4ff6-b825-82719b3b4819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d75d4dc-8cdc-457e-9634-45934cbe6cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf92a53-3f34-4d5c-a55e-62d8f36b06b0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4c709a-bcc2-4781-98f2-a53772b66ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f57d793-e721-4019-b9e3-632c23fbfd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37f7ec9-2607-430f-95af-43230b3d99bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fbdee1-eeb3-4d60-8961-2c1f4af966ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e16b18-1fab-4c88-897b-63312519c059",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099d805f-7442-495e-8df1-636d2b1a8285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da30392-03df-46a2-82b9-f3d53942c760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4aa2f1-c921-454f-b244-d8391728336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e4ad94-ff9f-4a40-a955-36923d6acd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ea9697-228f-4a28-a6db-d765204556a3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfa45a4-ee10-4ab4-af49-aa200a556e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce24b6a8-f80d-450a-a0e3-9009a0350cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f541cf-0f4f-48b9-bb54-a4e5295deced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c02ded2-ff6b-4998-9357-6a3d54019c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b88f13-cbd5-4d9c-8e8d-6a573885319c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f960cbed-54fb-4a04-8e00-2cabd06fbb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93327f58-6eda-4b35-83d3-cfb79b1bec86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60149db0-b655-45ba-89a2-84e9d7424b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdf203a-a52d-4f85-8ca1-cac53a5de20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddc9bd5-a945-4b8c-ae73-99e872f25f9f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ff56de-56e9-4e9e-896a-28b3d3320b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03608df-dc2d-4f3b-9a39-61ffe43c49ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203fc14d-5dc3-4179-8fb9-6eb342f3d45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9c8baa-3a4c-45ec-b27d-f686af274f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313ef8ae-c4c1-450c-a1b6-93c3c55e8d47",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632b6a58-5128-4171-b336-fdf5ba941187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9fc67f-3e20-4214-aaaf-6c041ce5c62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cb140f-0c43-4b3f-bb20-e8dcecd0789c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dede163-f62c-4f9a-a191-78ef923c696a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e29e91f-5944-4db0-a270-018cd9c78267",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ec824c-9994-43a1-8284-8482b1891679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b803bbd0-afc9-4c5b-96d3-62a50c31d5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536acaa0-391f-4d6d-8749-5457950ee6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0ee837-61df-4b4d-ba4f-9508c55ed78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81668544-553c-4708-83b1-35dcac099e4a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1e690d-79d6-45dd-b109-ee27a778c3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de66c28-ab06-428a-8bf4-1956f6d466ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a650d25c-c4a7-4987-9c55-d73f8b43355e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ff9c5a-bec5-4359-97f3-f6e598de65a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cecfa3-1cf1-4aca-90c7-03324e3d0e22",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb51d58-158f-4386-bd47-3a092cbeaf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cd44d3-08c9-4ee9-b004-e763d3c1f99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336fde2a-b691-407b-847d-04a1dbd2399a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11126188-645b-47c3-a3d8-6d89b6627045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e1ba36-5435-4ab6-9eb7-dfcef6c8202c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c090f32-1b7e-4cfd-8720-0ee6b8d02d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966ed212-1e4d-42b1-bbfa-d21944d3bdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9f018d-a6c0-4972-b93b-ca4ebe617bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e4f393-acc7-4bc5-9c14-96e4dd4979ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baeb3b0-4f20-4fcd-8924-a6166dbf9a2b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a948d944-43a7-4131-b62d-799af4bd13ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62d315d-4557-46a6-9cad-ad8e72027136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503044ce-8ee7-424f-8409-50be77752877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7466fb5d-1d77-40ae-92e6-e14fdadb3524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af491aae-9dac-4542-8b8c-6918574bc29e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be298b94-135e-4136-a9a1-1ef12e1e6d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97163b83-66b2-41ac-810a-11faa406fdb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155fa25e-6ff7-404f-bdac-ee8c4d671033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab83438f-c822-4d30-83b8-07d6a5f75ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cfea3e-59b5-4539-8f02-39dbb5bef981",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98fcf68-7b06-471c-b42d-72ceab6aa459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e708e6a6-18b1-411b-9fb7-c615d74c43f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fff7db-4f90-4133-87ff-ddd7c809ebd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8409ab-b676-4d00-a59b-dc69d475efe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3865f8f-0ff0-481e-bfdc-a27ef9555162",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12f474e-0843-4340-9771-7e475c5582b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bffea50-28d6-467e-a01a-015ec1276408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd72f79-3498-44c3-aefd-31f57fef76b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6ddbcf-78d8-4bc9-b4ba-e5035d4b28e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e150ce28-ce1e-4f03-bfc4-f08bfa57d75b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1eac9e-034a-45e0-8c7c-b604059f23d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe49fef1-d53a-475b-8d40-d1f5eb0a6514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90065707-6ede-49c1-991f-b2de05ea08cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e702e81-9370-4beb-8ecb-7bac1a2d9f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7701acc-bd2e-48c4-80bc-1b8f364cbd27",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b5ea74-a603-48dc-99ee-4ac3d46bc606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf5de77-16d7-4177-b4bc-7fea677df225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d6fc5a-b364-4e76-987a-62e80b847ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15214c06-3e2d-402d-837a-900b5d84bcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad414f8-5bc3-40f9-b5aa-61beb423c31f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92d64fb-d59d-4dbe-9e81-043f275dd68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbae90c-8789-4600-ab28-6406bda38363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0358e5-ccbd-49ac-b6fb-ae1423329200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f39b6f-5fc6-49c0-a7cb-5146f058dc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b52cd66-da91-4f41-a2e6-f7b0522350f8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bdccd6-667a-44d1-9767-10d0302d68b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b689767-b808-41af-8405-034bd9422f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61342535-43c9-427e-8d71-a28740902c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fde76b0-e21e-4eea-a6d3-5ca85352e675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20abd7c6-672e-4a79-a6b6-e8808bfa7efd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c585e023-9ab8-47f8-b3c7-5e9604767cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6a160c-7f9c-409b-a189-6d727807da83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ba9040-61bf-4396-8382-f34bdd0b3bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69927b28-32a6-48c7-9e8c-66ef6adb1ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c23f5cd-d4a9-4af1-ad61-1df7e2b70d1b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad68e03b-7885-47f4-974b-11f867052c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2c7b4e-1836-466f-83b2-eee2051cccbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffe8a10-a0b1-4c68-98ea-f81432781158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef59a9f-5fb4-4586-845f-aec475a14b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97509120-7128-4965-9f99-2a3e5dd9d503",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcb0d2d-8ec4-435d-8406-ec84a3f6f268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2219e687-1b42-4180-8690-216b44f3ada1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf457e4-e493-40d3-9442-f375cf5a6c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed0ab6c-4929-447b-9aad-716f263845c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7935165-c5f7-4819-b7a0-61fe157995ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5bd401-a2f1-4e60-960e-02489888c38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002c5b52-225b-4898-988b-8e5877d9db91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dad453-f932-489d-92a8-a4160de44307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abb217b-2d29-4269-bcfc-da1d40323ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6eef82-9369-4a03-8158-3b24cf187afa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f9e3bc-397b-4126-88e2-e47e5d784e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af6cddf-2b46-4e16-83b5-29fe0f7dc3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d8f19e-ec6b-4e44-9f85-6464978955b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8344c881-cd8b-42e7-a370-377d2d3d4627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9a1836-baa2-4f63-bcde-bf2fa2fed428",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ac13f3-a377-4e8c-bb27-674f1ffbabc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372f267c-135b-44e3-b76a-865d07b185a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff38a8f9-6614-4575-8735-b3c201f6e0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971a8eff-4e53-4e63-a328-47db7c02630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d5912b-7fab-4c58-9d9f-82218507621f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd90a76-3e7b-46e8-8dac-faf4c9652d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd38ca6-06ce-4076-943b-6dd92847a2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ef1ec2-5d59-4a89-8016-c8b43c1ac7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31872d49-67ef-4b78-981c-15da18dcb963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863e268a-cd1f-45bc-84d5-5d7723e1fe62",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b439e2-9308-4797-9dff-cf95b05e0caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b87c34-40bc-4384-9ed0-18d8c1593652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81909a9a-08df-43be-b924-c0974adef040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbb34b3-21f5-4749-8457-213730da719e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23bf643-83a4-4b22-98bb-e13f6e264f20",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a95a6b9-c4ab-4304-bbcf-5f85c9b87d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d879ca5-ea40-453d-a068-b097b376a0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142ccf49-01f7-4149-b83a-9a7f4ceab5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8246b2b5-db35-4929-8f9a-2654dd12f17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dee745-03b7-4e4c-902b-02f17147d5d8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8b66e7-c91a-4179-a699-f3bd4b73a597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5c33f4-3b04-40c8-8348-3c2e3b65737d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0595285-ab31-4cfc-b80c-5fba92c6c90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e234553c-fbe2-4a7f-8cf3-124c2c4b4391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969a30a6-70e7-4035-819f-2fc2340e8800",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fe6278-6da0-4c98-87eb-9d5ab030d618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed43b1c3-0999-4aac-a137-e09da16a6e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6429df-76d0-4cda-ab8c-fb8066575572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4000b0-97b9-4b05-b869-0cef8e48428e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d01e847-f964-4129-b017-d653814edb1a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e0cf9-2a8c-4e6c-9843-0045ee3047e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b14b9f-a220-467e-84e6-63677e57adfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8c8418-18a0-4f45-be32-dec7940143ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b0901c-21dc-4383-8812-7f02ef39eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0e5a21-2c00-444d-8985-66292e4439b3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd4614-181b-4747-8c33-0c3a4073b465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59caa429-aece-4d0b-8882-f2fdfa535d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff824a1-231c-474f-a064-01b901ff0b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fa6288-a737-429f-aa00-186aec39e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df511533-05df-4fdf-8bc5-f5e11d637cf5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819799e0-611a-4f57-be1c-d3c0da63d960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d337e886-0eb4-4232-9e80-457fae94b4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a160314-843c-412d-a780-9a679cf508d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7673f33b-259d-4475-9a4b-ddae53e5d1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73397903-913d-4721-904a-ac01f0870c31",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ca1e3f-f41c-46a1-b2ac-3cd4ab1cecc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f59dad-8623-4826-af6e-cc10a04fa3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f485ed-4210-4172-9ba7-1e791940cf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2675f57-9f22-4582-816b-e496b3f91f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c274509-fd14-4bd8-aea5-108c86a9aaea",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e116bc-5021-4ad4-915b-4da836af665b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f4223a-a683-495b-8a36-76786f36ed3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fc7c91-ad52-442b-8c71-bbe48430ec28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02edffc1-cdf9-453c-986f-9d3a1d753d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b474b5f-e147-471a-949a-e0f927bb3919",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2c056b-a364-4027-9997-fee282dd1fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a50f7b-0669-4edb-b4f1-6298e14d4668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5367e34-f5f7-42cb-a30d-fee6aa948ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22a4cd4-99a1-4a75-983e-b0585dc78f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2742bea4-1530-444c-a673-fb9a1acf0371",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0980b9a1-16af-4455-9adc-fcb92dfef310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d73550a-12ad-40e4-bdf9-6b69af309043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd7a790-0828-433d-8035-0ababbb112cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bedf5f-36a1-477c-a99e-a010a0aff226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33aa011-f8e2-4ace-a234-4e3e9f7e58c8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65569f23-4799-44ab-aee0-46b72fd0a84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd9184e3-be52-4ff4-b7cd-bf64a0c2fef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f87a31-478a-4f1e-aa5a-bc74ac918eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c8f875-79e0-4520-a4b1-c6dd30c9d8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7649cf9d-ff30-4ebc-8529-f5fe4b13cea1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd347d6-2d4c-48b5-b04b-7c766eaf1e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703430b7-4f70-41c8-9089-ed3a4175c5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857180a8-faf5-4241-a63f-42923a2ef154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e826627-fe4d-4348-ab0d-ddfc49914a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbcf510-f973-488c-bb66-fc04282bc856",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3badc313-f340-4318-a502-9be8a2f84076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac9b459-7e0a-4176-8fd1-c5741d8077f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd880a3-6d78-44cd-9e36-af86ec13b947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38043d2-f6f3-45e2-88ce-cf10c9561f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff505012-22a8-486f-95f7-f950c5ed141a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31407d47-7e7e-420f-a605-e5deb2ca37db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a5a6b3-8136-4e21-a463-3a4bef661bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f417bba7-3047-470f-9919-b7ca030b9a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1400b77-d6ee-4993-95dd-673318bc52a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646263c7-b787-4d0e-8ecc-4e0103796f18",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536f13cc-3d05-49de-9a7f-d6ae7cea1d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32b94ab-2f62-479c-b03b-83f22e27ffa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508530d2-c4a7-4f72-94b6-1e30f6667c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f7534b-1b49-4946-af94-fda6a41008ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de678522-fdea-44db-bafb-2ae8e073971c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d68c69e-516a-43c7-ae1b-c9b29e0bbf74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9edf7e3-1c13-42da-9a45-fe42f0cd577e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97952da4-57d7-42fc-8b12-93fcb24479ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7babd162-6584-47f5-91c5-5a630f4b69c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf9968a-55b1-46b3-b32b-85e3fc28ffe9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1092c71c-60de-494e-a501-809c2a40b19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d578a3-bd48-437f-a13a-c8043b81e4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb064e65-08e8-4c60-83a0-84501257036a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1e86e8-01c3-497f-aba1-f6bd9cb3b260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e576374-8880-450c-88bf-637bee76462c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0524183-1844-44a2-b29e-d823e7d1d46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbda5e3-1510-48b9-9889-0e3ae4b2baac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee16fb6-cbbf-4b65-b496-6c5dce1c5493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cc0380-b1b5-40f1-b07c-09004579abdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f0d19a-b7c8-45d2-969b-8f98d1668e4b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b6d43-a039-4b35-ae23-2b03fcd308b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578c39b8-d134-4286-a904-7858f6f15923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771c622b-c10d-4254-9eaf-2d7b7c676e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6847a8a2-1a5a-4b72-b254-3fc3d0a27a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d07e5f-44f1-4a68-aa5b-8385ad0d282b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d76ea0-6641-4566-adb0-39bd5e032d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdafdb59-bf2f-4e64-a0c8-1f7f0ae7bbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b224b-e8ea-4a51-915e-c04b2ab47e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a99b701-fba8-4d82-a0ca-f42063cb5b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d441e2-0738-47aa-9ec7-7fe80bb13ba1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbe3cad-c0ff-4a54-9849-057d7189fc30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda2bae8-9b66-4551-97c8-48e143475433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17162b8-b83b-49bd-a967-5eca25d77c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b3e628-d8b0-464e-9de6-3c17f9c24f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06af66bd-f593-4109-9681-5af300d28984",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895b274f-ecf5-4403-896e-340c05e54d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be837b42-9078-4abb-a154-ce8bbc6da6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855b5358-40ec-46e3-96db-8124318d3161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a253a8-02b5-4c3a-8897-6321a9469a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d40e62-6949-4db1-ad8e-b93908f07057",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe2628-f029-4ecf-b7d4-c3bc6d1589fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1674cff0-b388-46a9-ac9a-a4e85b22fdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a712aa-1c08-4b29-b42f-35280a78caf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e57938e-0bdc-4b8d-9709-1960edc80006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921effdc-bca9-4dde-b2f4-3fa583e7ba8c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28c6293-8e6c-440a-ab10-ac4412822818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cd6cbe-2af1-46e2-b7c2-1450330c5ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e818fe67-d00f-4dbf-826c-d5e537842fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ab4020-8507-419b-bf03-f83419d6b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e46077-87ab-4d5d-ae35-b1e6a0203ea8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69081c1-425d-4c61-a6ef-4838906bb7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c546ff-7e6b-45eb-bb36-7af7798c07e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee20635-59b7-40dc-8f3f-9895dd493ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf771c98-a008-479f-a224-2e5d57b1aae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc9ab01-9279-46d3-bce5-3f68c3e31440",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b17928-ea82-475c-b5af-d861c9526390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494e4493-c6fb-4c28-9609-32508ff51c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31de390-cea1-4f15-bed4-b02c0b5285bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456922c5-c6e0-4213-9cd7-6c85cba6c0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be85b9b-fb03-4daa-ab36-a36a6b434931",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd90fb6c-e05b-4dcd-bbb2-6ce28aa78e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9024981-d0af-42aa-9c05-ef1af088fec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a977ea2-496a-4f18-ab4d-0e049982b9a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2266c6-0437-42bc-a38c-bdb1d34c7b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e2dc2a-0ca5-43ee-88f5-4c5b51eb4d5c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027a7acb-10a1-48e6-8d85-a3eaae1fc724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff4b524-cf7d-43a2-baf3-fc725de2d71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e8c2bc-ad72-455c-b79d-188e0c20364c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc31adb-02ac-4f97-a72e-d92282f2aa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9e1293-73ae-4322-8455-1ae7a7ee49c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899f6a93-5d10-48c0-a01a-64059fa8c71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d45a87-23cd-4536-9e0a-3cbbc60068ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ff5a5-2307-4516-a070-a74ae119239d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c7a6e9-a16f-4592-8434-b79cc5b2426c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026a89ea-b0d2-41a5-ba44-89e28897dc33",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49529214-2805-4d02-a035-857bad5213ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf3f184-2cca-4ce2-8cfb-fb3e4192df82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155e060b-144c-4636-b890-80b822d780af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42623900-baa1-411b-a51f-86310a733c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70c45d6-503f-4ab4-afcb-722fc0eb0dbc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc978ce-5f75-4161-8f2a-1b09d5d00296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10925a42-dfb8-471c-b2d7-80cc87542173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c907d4a1-843d-43ac-bc25-d1175fc53f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25d1b47-9f1f-43a2-a95d-f0d8a957399e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6818d77e-c345-48cf-8555-7b2077e25168",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c83a39b-bd42-4a8d-96b4-11ab17e32c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b46efb-190e-4ebc-91e7-7d917ace1d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb9a227-d5b6-4904-92db-2a1f61f9e2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3d19e3-3476-4179-8683-8960ee445306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4040f18c-24f0-4f8f-a172-bfce3a6be0ed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed59b88-2d7b-4dfd-8f0a-c6d6b139de38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8219e5bc-51be-4bb3-ae50-1ca57587c6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318f01da-60a4-465a-978a-1fe66fb729a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c38ffaa-7f92-41ee-9f8e-86cadb258350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32f484e-1dd0-4409-8f70-27c04bc7030c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737ea341-fe46-4560-a35e-32103ced7e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c35b39-91cb-43f9-852e-769360ba86a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524cf961-caa6-4e44-9684-d6a0d0893e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ffb6b9-36be-48e6-a4f4-0cf33691feb9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ce5a193-5ab3-4412-81a2-927c58a73f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec4b63c4-ec94-40a5-be98-f951de057757"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc73f953-5373-454d-83a5-7c1bdb595aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ea5c1ee-c21d-4cb5-a67a-7c77b956746c"
                    }
                  }
                ]
              },
              {
                "id": "5d609603-118c-4ef1-a62e-5504f9f86c34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8b5ca0a-5585-4d02-b5e6-704d5290ee1d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5f562-743f-4d33-84bd-58336e1eebc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "838b6b20-2a56-4e12-859c-7288cce664d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0459811-2795-4a90-b7e2-4dd8200ed825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23abaa43-5175-4865-98d6-4c8403d2f3e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29906d73-6f45-4ecc-80be-ab69b06d5d27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad1b4531-68b4-49e9-ba5c-1bb74dacf5d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "582ccf85-8161-4bb7-8b4c-33a40de4bd2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68277858-3dc8-48b3-a8b8-9c9868b06101"
                    }
                  }
                ]
              },
              {
                "id": "544296a0-faff-4be4-9d25-8a1939dea843",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7fd85d51-c35b-404f-b3ee-e8dde2cb340d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6926b452-102e-4bbf-ac53-01c2b16f5bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "abf28061-6066-4329-8636-d98e5d18f6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0983f80-94f5-4657-82a1-17e57a3d43d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac5f4a5-ef69-4772-b2b4-ce040b738ad5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b43452ad-bed7-454f-ad2b-56c0ffa517b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8286c9e5-cf97-4acf-8df2-173ac68e7db3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f27738d6-eee5-4212-b1d4-34d7ead11600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd7328c6-6509-43b3-b106-747687081a41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fe82dc8-4f93-402d-8e3e-6aff6215e494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c2b0ffb-bcae-404f-b540-42f0a653603b"
                    }
                  }
                ]
              },
              {
                "id": "36bec6b7-8a12-40c8-a3b1-4a8e6537e540",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2937c20-e2b0-4f94-8414-661dc53c7ada",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fe33713b-a6ca-4af6-b93b-cfbb8369cf32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6038109-1093-42fc-8e20-6e76c19a99e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa868133-dd4a-49d1-bd45-0bc4810d6f3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80a9a093-ebdd-4b68-b386-389d7e0b9154",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ccd6e2ea-5714-41d3-85d8-f0698314c091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9afa48a3-9b84-41d1-80cf-3746489a9b37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f780895-86f8-4f93-8fcd-212937352c6d"
            }
          }
        ]
      },
      {
        "id": "3a653bb5-faad-4f30-83a2-6cc480bf0fb8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "84591b5d-c511-4e18-b275-139b44438ab7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6746ca4-9363-4a35-b34d-9748625e6b8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0e54828-05ac-41e3-8e2a-ac7e1b407650",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a9971a-f11e-4f26-bec9-8477a8b16956",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9d5fd5d6-bcbe-4f9a-83c0-1ff3240098b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787a2c58-c900-4c4c-8692-56b90c8e5a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04a1c3fa-cfb3-4dad-8a6a-dff6e510fd1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b80e08e-df0a-4567-a8de-03a512d9f947",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92aebd82-b9ad-41e0-8acb-c0ed3fdbcac5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "388a2610-f7d5-4c7e-b777-12dd7021cc52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a7546c-5fc4-48f5-9f0d-50233419276e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89a8a66-c476-43f5-ae21-f88ddcfcbd83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "06b5ea2a-68e8-42cc-8622-227c843426de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "398a78ad-b8b8-40fc-9dad-522e77fe0384",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c8406bd-75cf-4294-b84c-5bf3ab9808d3"
            }
          }
        ]
      },
      {
        "id": "f1476586-f902-4e8d-a81c-d5bf64d0511c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "083c1c2e-be47-4a70-ac80-89f0083405db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46f16508-a795-4a99-88eb-991bf86b56ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80932892-e33a-4faf-9fd1-94e1ff74357e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53be398b-4be9-406f-9fc2-8f1fadf78f03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd68b15b-1fd1-4839-ae2c-b15f76b5fdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92e1630-e051-44b9-94ca-778d1a6d8b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21c24322-1217-48d1-af1f-91237006aeba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e40c6a88-8f7a-4d6a-857d-a75815394f2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a888798d-87ec-4a44-a4db-76b7d497c503"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4030b4b-086a-4b25-9ac1-fbb00651af6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aff3c826-1e53-4e4c-93fb-119af6dcfb0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40b94792-14ca-4272-b3e7-cc203e0199d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80e18076-0a2e-4648-9548-c5fa6b989e67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d72275c0-aea3-4b3d-94cd-7b21426fce01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d40a361c-5b57-4b6a-89fe-9aadd2aac950"
            }
          }
        ]
      },
      {
        "id": "674973c6-ccaf-4622-902b-34ce05c35f88",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6bcb727f-46f4-448e-ac57-ba790ae5af83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1eb41dea-da2e-494a-8ed9-8554949fb5b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99c3d842-fee7-4220-9604-a362fcacf9b6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317995b4-97fe-4507-8b5c-7696aa066b94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eda6dc63-ca38-4839-b791-0a9b918c1022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5938a628-288c-4f9a-a487-c2c9e860443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f0642af-e678-40e0-9ae5-1c127634b14a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be000f9c-7a87-42ad-86ab-964b5680cc02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "083340bc-f57f-425f-8669-321ffc51898e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "972fa0a7-ab72-4a92-a68b-36d55490a1ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd391bb1-484c-460f-beb5-1fe1b2e15310"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3e6347e-e3cb-43e8-81ac-09c909e72901",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b75899ab-dcee-480e-baa1-d5d499567ca0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b28aad50-3acc-4a27-940d-c21385278565",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7c93ebe-0f06-4705-a236-70a752c8514c"
            }
          }
        ]
      },
      {
        "id": "aca30c8b-6db6-4d4e-86fe-f494e1437c60",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f231de4-c981-47b4-b0ff-ba40d50e2547",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "430694a5-1eb8-4188-8fba-3b8cd42e8fa6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a843c4d9-56c6-467b-8dfa-66733f720412",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "649a7989-abe1-4b84-a6dd-6ec3a9a96210",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3188b275-d653-4f9f-b429-ab52a6d1be2e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 123.21830985915493,
      "responseMin": 6,
      "responseMax": 5434,
      "responseSd": 507.78059773823315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695515720940,
      "completed": 1695515767957
    },
    "executions": [
      {
        "id": "3361449c-f552-4629-87ab-72e5b8b835c0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4b15295c-e569-4176-950b-ef3f72e79016",
          "httpRequestId": "69d3a723-166d-4bf8-b2c6-a519b2e5e327"
        },
        "item": {
          "id": "3361449c-f552-4629-87ab-72e5b8b835c0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "72b462b0-1aca-4845-bcd4-779c88e57495",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "172b0c1a-19c5-4625-89f7-427d6e4e2c01",
        "cursor": {
          "ref": "4babb2c0-efab-492e-82d1-2c8073c1be68",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5cc77a06-7040-4967-be55-38cb360539c0"
        },
        "item": {
          "id": "172b0c1a-19c5-4625-89f7-427d6e4e2c01",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27cedac3-a2e0-4224-9fda-cd5cc55c348e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "bfffc309-0d37-4590-ad63-2b0e66680f4f",
        "cursor": {
          "ref": "e4fad2f6-d6a4-4f31-8269-e1d45f98de67",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "423e2b0f-d8ad-4f9c-b60e-efb6cfcd4a85"
        },
        "item": {
          "id": "bfffc309-0d37-4590-ad63-2b0e66680f4f",
          "name": "did_json"
        },
        "response": {
          "id": "7998bcd2-579d-4f24-84fe-49c8e2d7d34b",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637d228a-57bb-4433-b2f5-e121fb13657f",
        "cursor": {
          "ref": "36992623-8664-452b-997c-6f8fb2624096",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80d18b11-f4b5-47c5-a2cd-2e9050ccdcdc"
        },
        "item": {
          "id": "637d228a-57bb-4433-b2f5-e121fb13657f",
          "name": "did:invalid"
        },
        "response": {
          "id": "f4db51ac-03f3-4a70-b549-4ab499df0bbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1869,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637d228a-57bb-4433-b2f5-e121fb13657f",
        "cursor": {
          "ref": "36992623-8664-452b-997c-6f8fb2624096",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80d18b11-f4b5-47c5-a2cd-2e9050ccdcdc"
        },
        "item": {
          "id": "637d228a-57bb-4433-b2f5-e121fb13657f",
          "name": "did:invalid"
        },
        "response": {
          "id": "f4db51ac-03f3-4a70-b549-4ab499df0bbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1869,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d6c32-ff56-4a5a-8dbe-d61a770866cd",
        "cursor": {
          "ref": "cd31441c-7d93-4d07-9d31-c5a69cb94807",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2f438e37-16d1-40eb-b038-74b25dd5bd8a"
        },
        "item": {
          "id": "557d6c32-ff56-4a5a-8dbe-d61a770866cd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2bf3a7a0-a8a5-4efe-aca6-817543555568",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926a4428-e211-4e45-a9be-3f33aa8c510f",
        "cursor": {
          "ref": "62665a14-7fe3-4669-9db9-3a0f5daac195",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b0ee74ad-500a-4fb5-9cd5-10772d501530"
        },
        "item": {
          "id": "926a4428-e211-4e45-a9be-3f33aa8c510f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0959b990-1fe2-476e-821b-f2ffe01a2057",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b85ba8-69eb-4bb6-a4bc-668adf2148c3",
        "cursor": {
          "ref": "2ffd67d1-b4be-4689-8979-73f3f1956e3b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "460d0ae1-f9ee-4227-b559-c3e0cd19e09c"
        },
        "item": {
          "id": "71b85ba8-69eb-4bb6-a4bc-668adf2148c3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "48d619a5-d09e-4680-bef6-40eba4287487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3de0cb-8190-4509-83dd-424d989e78a9",
        "cursor": {
          "ref": "3057fb02-dd25-4a09-a1da-5e7aafc01de5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d266294f-3b62-422b-ad3c-286d3dd63e0a"
        },
        "item": {
          "id": "3c3de0cb-8190-4509-83dd-424d989e78a9",
          "name": "identifiers"
        },
        "response": {
          "id": "4496c8f1-da91-4da4-a3e5-f531de995372",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f559eb-65cd-4d95-bc78-bbe0aed86240",
        "cursor": {
          "ref": "f6383566-0907-4900-8e30-ca2028baafcb",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c80d04aa-5403-4289-a829-34636cf903c5"
        },
        "item": {
          "id": "79f559eb-65cd-4d95-bc78-bbe0aed86240",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fba8bdac-7b7f-4623-bd49-4c446b6c3d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102addb-64d2-49be-b403-99bb6151cb83",
        "cursor": {
          "ref": "10032529-9cce-441e-9e80-4b2a5b441ab0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6f8a8859-f8a5-472b-b818-1ac2f6198d6c"
        },
        "item": {
          "id": "4102addb-64d2-49be-b403-99bb6151cb83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "858d1b66-db2e-4c99-bf74-cde529c9fe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7628711-ea32-45f7-a807-fb253b5f7204",
        "cursor": {
          "ref": "2b290c57-1b44-4a10-9dbb-d8bbfd19e345",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "983b0ca6-4e09-4c39-b6e8-d8ff6d002bd8"
        },
        "item": {
          "id": "d7628711-ea32-45f7-a807-fb253b5f7204",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "927c5695-d379-4069-a9a5-97f2bc7a08d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fde8d0-83e7-446f-80a3-3f65487512f9",
        "cursor": {
          "ref": "09377535-9558-413c-8bc0-af2f0fed6f74",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cc97a020-7c83-49cd-b856-38e1ee363010"
        },
        "item": {
          "id": "91fde8d0-83e7-446f-80a3-3f65487512f9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c8919a1d-7de1-494a-ba37-56363b38ac6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2b1faa-842f-4bcc-bb43-cef78d262e72",
        "cursor": {
          "ref": "1c7a524d-b27f-4d6d-99df-78620b923eef",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5d4c294d-a78c-4a70-b7ea-a567dccca23d"
        },
        "item": {
          "id": "3e2b1faa-842f-4bcc-bb43-cef78d262e72",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42399b86-7aeb-44ce-8aeb-bf6d5ea17932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfab4ea0-f6e3-4bbe-aaf4-149a01ea9348",
        "cursor": {
          "ref": "69e73150-3718-40ff-ae96-3fad1cfd5d3f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "efa55932-62d1-4475-921a-8131b852abb3"
        },
        "item": {
          "id": "bfab4ea0-f6e3-4bbe-aaf4-149a01ea9348",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24d1cb5a-f802-4fea-8ea9-965ef530e199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febcba47-fcb2-47e2-b2e9-eda5986472c0",
        "cursor": {
          "ref": "b70c5cc7-76f2-48e5-b300-265f0f3a478a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f353abdd-662f-4bd0-b56d-8d9327189332"
        },
        "item": {
          "id": "febcba47-fcb2-47e2-b2e9-eda5986472c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "47cab1d2-c7ea-4d4b-8a26-42765126fee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a395ee72-93b0-4cb0-948c-f75037a9d80d",
        "cursor": {
          "ref": "f939fffa-4570-487c-98bf-d9372d7f8b70",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1626fc1f-be08-4efe-8959-8caaae4e59c6"
        },
        "item": {
          "id": "a395ee72-93b0-4cb0-948c-f75037a9d80d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e707740e-3d63-42ab-8c4a-a1f0216b71da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d675595-65a7-49e1-9e10-a1cb84ba562f",
        "cursor": {
          "ref": "ab54c0db-6e86-4b0e-b203-f0b541751cb7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4ab74ae6-137a-4ece-9c1a-027f732fbdf8"
        },
        "item": {
          "id": "5d675595-65a7-49e1-9e10-a1cb84ba562f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "915c1dc7-1018-418b-bb44-a8dea58dbc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921bf24f-d183-4272-a784-d7bd273f7536",
        "cursor": {
          "ref": "3f9cd8c4-e9b2-473a-a9d9-210022edf14a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7bf2862e-68ab-49d6-be51-bbbcb2e66f7a"
        },
        "item": {
          "id": "921bf24f-d183-4272-a784-d7bd273f7536",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "19fff64a-2854-4b1d-b547-4948e4b9dd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ccc39-13a3-4311-9858-e02f43d86450",
        "cursor": {
          "ref": "3dbc3295-0b1b-41b6-bea9-a4d430c7665d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "90bd8902-73b2-43b7-84c4-698e83c14a53"
        },
        "item": {
          "id": "372ccc39-13a3-4311-9858-e02f43d86450",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "edf3055f-c18a-4a30-a3a1-07dc2724a4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaed972-7119-4f35-a397-2af3da5afa59",
        "cursor": {
          "ref": "f91c542c-046c-4fbd-b0fb-264cc891dee4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "feacb57c-b08d-4b21-8feb-a7d44c912b55"
        },
        "item": {
          "id": "fcaed972-7119-4f35-a397-2af3da5afa59",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "99f5cc8c-3da8-4b21-bd27-c9301304345c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480a092d-bde6-40bf-b7c2-b37a7d809578",
        "cursor": {
          "ref": "fe4de605-8e04-4706-8d5c-e9ef4dbf5c20",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3cd8ce5d-85c2-44bb-9cc6-95bd7fa7df33"
        },
        "item": {
          "id": "480a092d-bde6-40bf-b7c2-b37a7d809578",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "05b8921d-0b4a-4e74-b6dc-ef8f0b500c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b587ef39-3caf-45c9-a47c-71290f1cfc21",
        "cursor": {
          "ref": "1d003b4d-6654-44f6-9f98-2a4df70ef608",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "918916d6-59d4-44c4-817f-b195965a4ea2"
        },
        "item": {
          "id": "b587ef39-3caf-45c9-a47c-71290f1cfc21",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "705bc0e5-040f-49bc-9e06-a78554ec4127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7669c49f-ff0b-4a2a-8057-12dce75340bb",
        "cursor": {
          "ref": "93c88b71-ca0f-4841-a126-939299c1209e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d9ce7a4a-bfe2-4b80-9ae5-dbaa61231b71"
        },
        "item": {
          "id": "7669c49f-ff0b-4a2a-8057-12dce75340bb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e429d698-25c6-4705-9a3b-428c34b96bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2264aa0-184f-406f-8b2e-e4bd2df5d172",
        "cursor": {
          "ref": "bba06787-ae21-48a1-bf5c-fc1b0c24fade",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a5780288-31f3-441e-aecb-2e9b6e75b0fb"
        },
        "item": {
          "id": "d2264aa0-184f-406f-8b2e-e4bd2df5d172",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2f2cb752-3afe-4804-8551-4980b637ab5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f690c16f-999c-49fd-b4e5-025b7c3bbcbc",
        "cursor": {
          "ref": "be17b74d-7de7-4a97-9e83-1302f6e7cf46",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c69231d7-628f-4e34-aa0a-31e5240a2124"
        },
        "item": {
          "id": "f690c16f-999c-49fd-b4e5-025b7c3bbcbc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ec43d461-0a98-43b4-8dea-3efbf7eacbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2501ff52-05e2-42e2-b258-bccdb725ef0c",
        "cursor": {
          "ref": "294af179-9ca4-4036-a179-4b1c450f8e60",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b4edfa23-1753-4e9a-91e9-a62c885e4a0f"
        },
        "item": {
          "id": "2501ff52-05e2-42e2-b258-bccdb725ef0c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a7d56d31-2a08-4756-9fed-3504662189b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a51d6c-ccf4-4d16-9fb4-04077754ed72",
        "cursor": {
          "ref": "62ce3c12-1d6e-4df5-847b-e22506f05021",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ee340c37-c91b-494b-ab62-863edf3ef028"
        },
        "item": {
          "id": "88a51d6c-ccf4-4d16-9fb4-04077754ed72",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a2ff903a-8b8c-4806-ac95-afa49fc453f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edcc9e0-dfcd-4c82-af6c-43d513ff66e5",
        "cursor": {
          "ref": "51740a98-b2b4-4f73-a466-6cc705b888af",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "496eb3e1-cb3b-4ed0-afd2-11df58206d83"
        },
        "item": {
          "id": "4edcc9e0-dfcd-4c82-af6c-43d513ff66e5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "34c6b734-fe1b-4c1d-ab2f-d2cc7694201e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63f39ea-87c9-4d57-866d-04371d0ed281",
        "cursor": {
          "ref": "87d92f84-413f-4a8c-bf18-635c9d144278",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e2fd0b41-8873-4c23-ba65-4e7735caf4f7"
        },
        "item": {
          "id": "b63f39ea-87c9-4d57-866d-04371d0ed281",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f70236d9-23d5-41c1-b442-ee1df6be4128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c97659-5ffe-410c-a2a4-f97dd227f373",
        "cursor": {
          "ref": "803b985c-43a5-4693-aae2-19469ffc0446",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0f81c219-a914-4e76-ab23-b089eae8274d"
        },
        "item": {
          "id": "56c97659-5ffe-410c-a2a4-f97dd227f373",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "55f46c21-96e3-4720-853f-9c739550e406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d09196-00f4-42c6-b403-464cdc9700d7",
        "cursor": {
          "ref": "9454a8cb-7078-4d2f-999e-50a3f309dbcf",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b71b1c00-d62c-4abc-8008-cfd4721b235a"
        },
        "item": {
          "id": "b3d09196-00f4-42c6-b403-464cdc9700d7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "31197ace-c49b-4782-91f5-6e7a853c2cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52ca003-9644-4dec-b5d8-ab81d48bc4b5",
        "cursor": {
          "ref": "304737fb-ec13-45e1-b5d7-ac82a0ea2e7b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7a35bb78-4a06-4aa3-873f-f0332e4c1a01"
        },
        "item": {
          "id": "c52ca003-9644-4dec-b5d8-ab81d48bc4b5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ae055e8c-99ca-44dc-9dec-ffbaf819dd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8224378-3886-4b14-b338-d89ae44a3782",
        "cursor": {
          "ref": "eb2539a6-11ae-4ebc-9a3b-8b6a5d2fc110",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cb5c4234-e7b4-4ac6-aad2-9f594acd5c49"
        },
        "item": {
          "id": "f8224378-3886-4b14-b338-d89ae44a3782",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5de17b8b-1356-463e-bee6-0bfb99ef1745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddbc322-9fd7-4c82-acca-39ca8225bf37",
        "cursor": {
          "ref": "5999c9f1-22bf-450f-86cb-67fa161750d9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "be372201-c729-442f-98a7-2b834f6b8ec9"
        },
        "item": {
          "id": "dddbc322-9fd7-4c82-acca-39ca8225bf37",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5996c873-fab1-408a-b367-5bcce773f143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48eb908-9939-417d-914c-9e183c099d14",
        "cursor": {
          "ref": "8382a50d-d704-4f66-a9ca-c9493034552a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0cc0cea6-6325-404d-86f1-5d1704577bc8"
        },
        "item": {
          "id": "f48eb908-9939-417d-914c-9e183c099d14",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "25cbc077-d55a-4c22-8e5b-33c6e00eb902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06bced-262a-48a1-ac39-a783ca4cf31f",
        "cursor": {
          "ref": "fe882d17-d523-48de-a722-43e48f26da4c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "678af184-c9cc-4039-aea2-8602c300b5d7"
        },
        "item": {
          "id": "2f06bced-262a-48a1-ac39-a783ca4cf31f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8498b2f4-3fa8-4efa-ae01-ff1d403a14a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8223fe4-f490-4c9f-a2b9-5718c88858f7",
        "cursor": {
          "ref": "65169bec-028a-401f-afbe-f62971e70823",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eff6fc52-10c7-49b2-88ce-27e4f3708ca1"
        },
        "item": {
          "id": "c8223fe4-f490-4c9f-a2b9-5718c88858f7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6cc6df88-d84a-47ff-82e7-c28e3ba8a5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59420350-bab8-4aeb-a985-d061ef6f91b2",
        "cursor": {
          "ref": "2a865fab-8ce9-4be6-aa70-e94477ef4f11",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5a69705-21ad-49f1-bf20-956fac1936e3"
        },
        "item": {
          "id": "59420350-bab8-4aeb-a985-d061ef6f91b2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "48f180a3-0009-40ba-a2b6-a074a88c14ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82653d94-1dad-4764-9eff-d6b9726553db",
        "cursor": {
          "ref": "c9304e04-4c16-4b1c-98a1-19958f89eeaa",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1ccd37e6-eab3-42dd-83d5-dc6ebbc28e79"
        },
        "item": {
          "id": "82653d94-1dad-4764-9eff-d6b9726553db",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6bd73b71-db30-4c6c-a9ef-9689a2d235ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619300bd-81c7-4018-8d3b-3cb18500e7ab",
        "cursor": {
          "ref": "48b9fd94-60a8-4744-b0d9-d64289697930",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "482fe6bf-4294-4a0a-bb76-965236cc2d4f"
        },
        "item": {
          "id": "619300bd-81c7-4018-8d3b-3cb18500e7ab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5e240ef4-2f44-4a7d-ad4b-cc9a8167af3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdefb12-ba08-4476-b635-91a56e2cccb4",
        "cursor": {
          "ref": "172deb35-b6e7-417f-b89d-240aac36e36a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "85f4e85d-31a3-4bd9-ac5a-c7cef34553e3"
        },
        "item": {
          "id": "8bdefb12-ba08-4476-b635-91a56e2cccb4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "76da9b1c-f7b7-4fc7-98b8-57d09faab412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b656da70-9e7f-42a7-99e0-f83a05ca5acb",
        "cursor": {
          "ref": "15369caf-9e4e-48ba-a649-498b5e93c773",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6709f498-afd6-49aa-955d-1d57b747ea68"
        },
        "item": {
          "id": "b656da70-9e7f-42a7-99e0-f83a05ca5acb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d44d1953-0256-4afd-875f-db4655f277a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066911fb-751b-4378-8ca7-9fd321be2bfd",
        "cursor": {
          "ref": "4bb60d3a-8841-4aee-857a-98d7d8aeb8ca",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "88c78445-dc2f-4f69-ab4e-db2dddc8aa77"
        },
        "item": {
          "id": "066911fb-751b-4378-8ca7-9fd321be2bfd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4203f325-14ae-426d-bee6-eae7d5e0033c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42338bbf-b736-4d50-a4b5-c5b718bd6178",
        "cursor": {
          "ref": "533a5d8a-492d-4f65-9abe-0c2c2ffcf56b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bce97a06-84f9-413f-a854-4c79355032b3"
        },
        "item": {
          "id": "42338bbf-b736-4d50-a4b5-c5b718bd6178",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6cf0ad5b-1c6c-4b57-87d1-92aeea5b78ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9324b685-2321-4866-9b17-490fa2f4905d",
        "cursor": {
          "ref": "57aa25f2-1bdc-45fd-9d91-201ddb630d5a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa55e643-8066-4e13-8d41-2db0f5d7dccf"
        },
        "item": {
          "id": "9324b685-2321-4866-9b17-490fa2f4905d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2cb9f144-f190-4e03-afa2-2fcdc513bf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df01599-38d7-4147-9dd1-479fe2328eba",
        "cursor": {
          "ref": "a0688e22-004c-4620-bc9b-834c52b78ecb",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "74cf4d18-984e-4089-bef0-d463c18a28c6"
        },
        "item": {
          "id": "5df01599-38d7-4147-9dd1-479fe2328eba",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a54fab01-4e39-473c-a6ed-09ae0d7cf216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3fbcde-631e-46fb-90a5-3e2f8d56d866",
        "cursor": {
          "ref": "4c07a907-7034-4c39-b011-7dfa1dc75b9a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "287477d1-6659-4620-b3a7-06fa907b374b"
        },
        "item": {
          "id": "dd3fbcde-631e-46fb-90a5-3e2f8d56d866",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7b4f8e6f-90d9-43d8-a776-40a35f79a3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3839b024-6103-472d-8a9a-8a66c6784685",
        "cursor": {
          "ref": "8ee86e5a-b7ac-4830-8a85-dc525c9f0124",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "32adfa3d-941f-4f86-a465-1c8d584dc92f"
        },
        "item": {
          "id": "3839b024-6103-472d-8a9a-8a66c6784685",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f5fdf50b-ad1b-4dcc-b56d-9f75c5e71404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c277e08a-b0e7-4cf3-abbd-fa76302297e8",
        "cursor": {
          "ref": "f00ae534-c59e-4fab-be40-65eebf811772",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ac531cc8-d453-4ba3-8296-ae08be3bc089"
        },
        "item": {
          "id": "c277e08a-b0e7-4cf3-abbd-fa76302297e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49257a13-bf58-4bf5-a6d0-30e10e5de845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd027791-787e-4740-b8a0-1b936c4df87f",
        "cursor": {
          "ref": "c692eedd-bd62-4170-936a-f77cd068b7fa",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9594b355-4bf2-4708-af4a-2daa881a3b23"
        },
        "item": {
          "id": "fd027791-787e-4740-b8a0-1b936c4df87f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "20f8766b-5a4b-43d0-85ce-1b3d17ed16aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d32952-4ae1-404a-857a-cde6545b8733",
        "cursor": {
          "ref": "11b01617-b2a5-4489-8474-2283cc4ae00e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bc655a03-ceaf-4601-bb9b-10b53d25a94d"
        },
        "item": {
          "id": "84d32952-4ae1-404a-857a-cde6545b8733",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "270b057d-1fd2-4117-b151-99afd527a1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea8487-f3c2-4231-8976-c4b11c21d466",
        "cursor": {
          "ref": "e00f1eed-c38b-4cf0-8cd6-2357566de6dd",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "778e86dc-6242-4171-b25d-acb744762170"
        },
        "item": {
          "id": "eaea8487-f3c2-4231-8976-c4b11c21d466",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0d403f9a-c046-42aa-bb7f-9f55d38ad724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8da13-5f86-41a1-8632-05005a30fa7c",
        "cursor": {
          "ref": "e1655bd4-e3dd-47da-9190-06b520fc3573",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dfdad67a-61f2-402a-b530-39616e52347d"
        },
        "item": {
          "id": "48c8da13-5f86-41a1-8632-05005a30fa7c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7062fdaa-bce0-43f8-be0a-8649d8bc16a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b372250d-3edb-4429-aa56-003657625229",
        "cursor": {
          "ref": "978358ae-4e36-405b-ba66-bfee23804cc7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aa2dadbd-c6f9-4994-9025-e5e75f46b20c"
        },
        "item": {
          "id": "b372250d-3edb-4429-aa56-003657625229",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fedc3e84-852a-4132-9ed8-dd5867e10f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b53bf0-2643-412b-bbd1-9026e382d45e",
        "cursor": {
          "ref": "7bee505a-cec4-4e12-9281-f8d6b1e79492",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7b0d03f3-b707-4ebe-8d21-85d520912a79"
        },
        "item": {
          "id": "38b53bf0-2643-412b-bbd1-9026e382d45e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fb31c7e7-4a27-4755-84a4-1a5970fa0e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb1a268-1433-4c1f-9e68-985fa1cee83f",
        "cursor": {
          "ref": "2a9b99d2-a8dc-4b53-abde-09ebdb148c82",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b804f2d6-3b0f-4e4c-98ee-527b3e3da300"
        },
        "item": {
          "id": "adb1a268-1433-4c1f-9e68-985fa1cee83f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cf668d6c-dc36-484e-bbf5-545e43809d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a6e0b0-e4d0-449e-92a7-d397ce309510",
        "cursor": {
          "ref": "74d14bb3-331d-4b86-ad0c-90b566f6c888",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f3e9ebe8-c901-4272-a5fc-59a8d50ec522"
        },
        "item": {
          "id": "22a6e0b0-e4d0-449e-92a7-d397ce309510",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "09f21011-e520-4eef-bb36-529b20b75f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d9066-5c65-42c7-b1a6-d2df1f70e288",
        "cursor": {
          "ref": "7eb83467-37ee-4e0c-ac90-ee7c020bbb53",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "60786c8d-94ab-4723-b6e4-2b59d4cc11f1"
        },
        "item": {
          "id": "775d9066-5c65-42c7-b1a6-d2df1f70e288",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "971537ee-82fc-46bf-a968-e5eeb88f7089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c62578-cb79-416f-b0ec-7139e45df89a",
        "cursor": {
          "ref": "b7a87e5a-b67c-4919-bee0-2d03c9bb546c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e2310e59-697b-453a-a36f-0c19611783dc"
        },
        "item": {
          "id": "b7c62578-cb79-416f-b0ec-7139e45df89a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5ffa48ef-8f60-4339-9472-747d832ad91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd0eb4c-b6c4-4c8a-b254-33b9f0c318d1",
        "cursor": {
          "ref": "f8678cb4-3a45-4c50-8ae8-ec59bb5845d2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "42f08382-f815-4783-84a6-2e38a37ef741"
        },
        "item": {
          "id": "0cd0eb4c-b6c4-4c8a-b254-33b9f0c318d1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "896d85ed-ba1f-42e6-a1f0-f8a029579b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a587a2c4-fe8d-4df7-a4ba-465bb70cfc55",
        "cursor": {
          "ref": "c3f27920-18fd-481c-af99-6f9a3a29522a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53210c4c-3692-441d-8d56-6dc547748434"
        },
        "item": {
          "id": "a587a2c4-fe8d-4df7-a4ba-465bb70cfc55",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4ba6f045-6175-4daf-81af-510b2f6604c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684ac70b-5f77-4b64-9263-441ec3239c92",
        "cursor": {
          "ref": "c5f8223d-754b-41aa-bbde-64f947506fb8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ca354862-fd4b-4aa4-bf41-dd538985ea60"
        },
        "item": {
          "id": "684ac70b-5f77-4b64-9263-441ec3239c92",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dce21221-7095-4a74-893d-239b6abe56ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e260ad-5cb3-498d-b01e-3e46dc5bc77b",
        "cursor": {
          "ref": "fd1c315a-13fd-4c52-97b4-525ad854a1fb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "97ea763b-0644-4f39-988a-7b6df039ab02"
        },
        "item": {
          "id": "b5e260ad-5cb3-498d-b01e-3e46dc5bc77b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5b5a49b-4f87-48af-96c0-3c4b49386cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95044d8d-1e57-406a-8adb-7ecef17df444",
        "cursor": {
          "ref": "aac8a2f1-b59b-4e39-a825-59cfbc048ab2",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e33f6f0-7d3d-4d43-8d83-7693c2f4be3a"
        },
        "item": {
          "id": "95044d8d-1e57-406a-8adb-7ecef17df444",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "15055c5e-370d-4d22-b2e3-7c6e6c5fde3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1286e8ff-3df5-4d76-a6de-f75e078a37c4",
        "cursor": {
          "ref": "eb3d2b12-a5ba-479f-942f-d5752203d89f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cfaff808-08dd-4c27-a6f5-47fadc67386f"
        },
        "item": {
          "id": "1286e8ff-3df5-4d76-a6de-f75e078a37c4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "02775fd4-a025-4d73-a9b4-8defa0374358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31ef06c-24b4-419c-8926-419a4d8d31aa",
        "cursor": {
          "ref": "119b90d7-d131-4317-903e-c1cfc06746b1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3640e1ce-ce93-4653-b9e7-31df409ffbfd"
        },
        "item": {
          "id": "c31ef06c-24b4-419c-8926-419a4d8d31aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f8b9d723-2264-41ee-95d0-7ad6bb85ee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebce252-1060-4cd6-a89f-9bf31eb3992e",
        "cursor": {
          "ref": "5fd475fe-56ee-4451-9e2a-3001bd58d981",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d02889ca-a6e6-474a-81ab-ca4f9e02e443"
        },
        "item": {
          "id": "1ebce252-1060-4cd6-a89f-9bf31eb3992e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9c9a37d5-2df3-4547-bed3-2514f0d6067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7594a4-bc6b-493c-87fc-d80ef180f780",
        "cursor": {
          "ref": "70154a89-e0cf-4c48-a6d4-caca53c8c9ae",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8e80f421-63d6-4ab8-abee-0f97d5f2f21c"
        },
        "item": {
          "id": "ee7594a4-bc6b-493c-87fc-d80ef180f780",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c0d34414-4329-4858-89a2-ddb26ab1f9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cfc5bc-68b4-4fa6-8b74-595e737be4fc",
        "cursor": {
          "ref": "a5336d0e-a7d6-4499-9449-e4f621346b2e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b9e5761b-900b-4c5f-85cb-2fb6e38c2fef"
        },
        "item": {
          "id": "28cfc5bc-68b4-4fa6-8b74-595e737be4fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6328f6af-520a-4fec-bb60-e89510ab6fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a57b4a-7c72-4964-9a01-064754fdf4ea",
        "cursor": {
          "ref": "56feac7b-48da-462c-88d4-83125dfae286",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f2355c08-7ac3-499d-ba3c-322d431608ea"
        },
        "item": {
          "id": "37a57b4a-7c72-4964-9a01-064754fdf4ea",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ed68fd59-dbfd-44a5-9eb5-af9cf448d456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b520194-8303-4be5-b92a-56faf7c6463b",
        "cursor": {
          "ref": "feb6f6a3-2fd6-494b-8c0c-b9e60706696f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "320780a6-ef5c-4c15-b688-fb2061d9f35f"
        },
        "item": {
          "id": "3b520194-8303-4be5-b92a-56faf7c6463b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6e839c2c-a7db-4009-8e7b-b6ab7ef844bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f7f8d2-4c85-4382-a545-b60dd81d537e",
        "cursor": {
          "ref": "baabcedc-41b0-469f-99c7-471a42cbe94c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8f00e7c3-aede-4a61-80ed-e02ef0a09320"
        },
        "item": {
          "id": "87f7f8d2-4c85-4382-a545-b60dd81d537e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "30c2449e-18df-4c64-80a2-ae3c7364aedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605eea7d-c79a-46b1-a1db-b17abc89b488",
        "cursor": {
          "ref": "f83cc30e-ee64-4ec7-a56f-08eae699755f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "179a645f-44af-4ca6-be06-eea1d205a91a"
        },
        "item": {
          "id": "605eea7d-c79a-46b1-a1db-b17abc89b488",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d3b15abc-9f69-407a-b127-67b706b91449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dd8bf1-ffdb-4201-9d14-2887cb07cdff",
        "cursor": {
          "ref": "90aece31-dbc5-488b-8b2e-fd3c1ec55f0a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9e9af2d4-f14c-4afd-9354-bf899f76a6c5"
        },
        "item": {
          "id": "77dd8bf1-ffdb-4201-9d14-2887cb07cdff",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9ef43a1e-b823-4dff-b3a5-cc53620d1097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d61ba4-fd94-40cd-9b26-e1637f8ffeb2",
        "cursor": {
          "ref": "a271c1ee-6b47-4f81-b5d3-caa2cc12aebc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c130c272-1b9f-4514-b5a7-c59be59cdcd3"
        },
        "item": {
          "id": "f9d61ba4-fd94-40cd-9b26-e1637f8ffeb2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bebb4129-81bf-450f-909f-0d83b3390aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66881335-3821-44d8-b4b9-24fc5d6f06d0",
        "cursor": {
          "ref": "2844bd4f-0af5-44a4-b42b-426dd1f6dda7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5930da8a-6727-47e6-928b-28f7f981c8c8"
        },
        "item": {
          "id": "66881335-3821-44d8-b4b9-24fc5d6f06d0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a81837f2-adcf-4ba3-af20-190dab8dba1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0dfce2-1003-4b93-a98a-9609e0a4674f",
        "cursor": {
          "ref": "815d6637-d103-4c55-8b2e-d558e20ceeb0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "52f44fd0-f946-4b07-84a2-c7dbdf190c77"
        },
        "item": {
          "id": "5f0dfce2-1003-4b93-a98a-9609e0a4674f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "80c79124-ae76-43bf-b3d2-b2c3c56d499b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2efae3c-9bdb-4940-a036-7d50059cb502",
        "cursor": {
          "ref": "c259e178-22ab-4585-8a01-6c53e2e479bb",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4d2df5bf-0612-4747-9669-6ed44a24c726"
        },
        "item": {
          "id": "d2efae3c-9bdb-4940-a036-7d50059cb502",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "71577dc8-59be-4d0f-8237-6d974f4960d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78cbef2-107e-47f4-94c7-17b472499471",
        "cursor": {
          "ref": "cf77a408-5c0b-4d95-b60c-9ea1fd5a5404",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "90f86c5b-de52-4d34-99d8-da5a5dffa447"
        },
        "item": {
          "id": "b78cbef2-107e-47f4-94c7-17b472499471",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2d8ee498-13c4-40bb-a778-f42498df8727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5937f96-dd75-4d3a-9c73-b0eff89cfe92",
        "cursor": {
          "ref": "08396c8e-172d-4b54-bc1d-0b58ad8911b6",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "158c1ddd-d018-4aa0-b28a-fa87434a6cd3"
        },
        "item": {
          "id": "a5937f96-dd75-4d3a-9c73-b0eff89cfe92",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e3fc24a7-a399-4e14-965f-9cef798e7577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06937bc0-a5f9-4030-9c17-11b332c8f8b2",
        "cursor": {
          "ref": "d4523f8e-995f-4541-856a-4f4673ca559d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "71a696d0-71f8-4f90-9a31-d14e09510089"
        },
        "item": {
          "id": "06937bc0-a5f9-4030-9c17-11b332c8f8b2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9ce950ad-f02f-4a53-a610-c76f980500c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7ffbca-fed8-4a61-9f4f-35f2c90f456d",
        "cursor": {
          "ref": "99ade701-3959-460e-9088-553605a05802",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d48bdd46-f908-499d-bfb6-1548190122db"
        },
        "item": {
          "id": "2d7ffbca-fed8-4a61-9f4f-35f2c90f456d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e1935aa2-ee17-4826-af50-5b91b56adb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890402fc-ecbf-472f-b7c6-d4b25744d774",
        "cursor": {
          "ref": "4b5e1cb6-bbbe-4995-b926-c34232a80e33",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d99fb60d-40c0-4eae-9e91-a0fcbaa13198"
        },
        "item": {
          "id": "890402fc-ecbf-472f-b7c6-d4b25744d774",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6338366a-8060-4299-ae7c-30b48b00f241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5821dc-686c-4ae9-a285-95ec05465284",
        "cursor": {
          "ref": "a40ea440-ba22-4db3-bd33-416b784e3e1c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7d9d618d-8cff-41e4-84cd-4bb3b3f23f81"
        },
        "item": {
          "id": "4d5821dc-686c-4ae9-a285-95ec05465284",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "045f8f25-4115-4f75-b6a9-c623f072558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33771d77-d091-4a30-93f4-9d88b9dd19d8",
        "cursor": {
          "ref": "7c113865-14d0-40eb-91dd-7f7076fce361",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "97bd6c38-927b-4d7f-bd89-9175ec5665f4"
        },
        "item": {
          "id": "33771d77-d091-4a30-93f4-9d88b9dd19d8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bafcb80c-1f73-49dc-a18e-e64e8024c29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695320c2-e46c-463a-a96e-722b406bca76",
        "cursor": {
          "ref": "2ef15f0d-74ac-44b0-98b4-949036931192",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "db57f1b3-ed5b-4a4f-9a81-fe04180e574c"
        },
        "item": {
          "id": "695320c2-e46c-463a-a96e-722b406bca76",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5ea9096d-ed54-4107-bb47-0595407556c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13514c4-3067-4241-bba7-c1925d2345db",
        "cursor": {
          "ref": "1053c896-2d78-4d4e-9b59-9ebf2a57ba7a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "684f09d2-dcff-46d6-8d17-0f4ae2625f57"
        },
        "item": {
          "id": "e13514c4-3067-4241-bba7-c1925d2345db",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e7dc6eb5-53fa-4211-930e-4eb0e6aa9ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210f38ad-b1e0-4977-9397-fc565b313770",
        "cursor": {
          "ref": "cfc4b6b5-1742-472b-982c-04dcfc37a347",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "079f04ab-f941-4088-b305-9c9ecfebff0d"
        },
        "item": {
          "id": "210f38ad-b1e0-4977-9397-fc565b313770",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "549187b2-9355-4ae2-b602-4781d7beb5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bc68c4-2c28-4188-821c-2fea9655b400",
        "cursor": {
          "ref": "b04b590b-9f12-4598-a842-e8609d565446",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "124215a5-d31d-4ba4-b654-fdf501caf36c"
        },
        "item": {
          "id": "a9bc68c4-2c28-4188-821c-2fea9655b400",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bea44630-abf1-4b94-b0a5-13d5d2bebc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ccf020-5a6d-45b2-98d7-550619fc75fb",
        "cursor": {
          "ref": "98936657-5dcf-4748-980f-96a4d70349f6",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "35062f93-0ce2-4b4b-84a4-d833c67fa4b1"
        },
        "item": {
          "id": "42ccf020-5a6d-45b2-98d7-550619fc75fb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3690a2db-50a7-4fcf-84c6-149ff1e33d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977c85a6-1f6f-4f99-8e4a-53e3594374de",
        "cursor": {
          "ref": "f0473d1a-67ba-4c87-88f4-bee8b52c01f3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1386a764-827f-49b8-bd8b-49c66a9fa827"
        },
        "item": {
          "id": "977c85a6-1f6f-4f99-8e4a-53e3594374de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c429fd4-1c6c-473f-bd9c-daf8f5539f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e2aa77-16fe-4b9a-a96f-a9ec9e4db0f4",
        "cursor": {
          "ref": "3c6b9526-515c-4b1f-a5d3-8af13d74ff9f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e3e1816e-29a2-44bc-9872-a3da381bf761"
        },
        "item": {
          "id": "89e2aa77-16fe-4b9a-a96f-a9ec9e4db0f4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a45d3e9-f165-4bd7-8180-43787af55df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd296ecb-67c0-4d74-9647-2d31b93cb89f",
        "cursor": {
          "ref": "b17469e6-28d5-4b1f-8f3b-459dae00e58e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be890b50-c8e1-43d9-9a24-daae0685cee5"
        },
        "item": {
          "id": "fd296ecb-67c0-4d74-9647-2d31b93cb89f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f791282c-4cbe-4411-a296-fa5a36eb59e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bdb2e5-76e7-4f10-9456-1eace2b66b98",
        "cursor": {
          "ref": "b89a46d0-605f-4f54-af79-00ee8d7065c9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "13a64a5e-d50f-4ca1-906c-714cd0b2175a"
        },
        "item": {
          "id": "e6bdb2e5-76e7-4f10-9456-1eace2b66b98",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7c338373-62b2-4854-a2b9-cc2fd5963fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72636351-7f40-469d-9bd5-8ccf783c4249",
        "cursor": {
          "ref": "80804ea2-177d-4996-a7db-78843926f582",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cfd2b327-e5d3-42ec-b21c-58530c5c2f0a"
        },
        "item": {
          "id": "72636351-7f40-469d-9bd5-8ccf783c4249",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "399b9856-b453-48fd-85fd-2ec5cf41582d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d83218-2017-4e70-91f9-c55a58f9fb1a",
        "cursor": {
          "ref": "05845d85-c14e-4c5d-bc5a-c1c6c3f5635b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6dce0b52-e508-48b3-b262-cb2685bbd043"
        },
        "item": {
          "id": "92d83218-2017-4e70-91f9-c55a58f9fb1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a42c5b74-f038-4e37-a0b7-097e5a6a9eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d33550e-3327-4717-979e-ced83afc12b1",
        "cursor": {
          "ref": "cb4cd5c8-3107-49d1-8395-181b65f844b1",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dfc0209e-8ab5-40c8-b4d7-bc0397d1ab2d"
        },
        "item": {
          "id": "4d33550e-3327-4717-979e-ced83afc12b1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5adbdabe-50e6-4c6c-9ed7-2e7c5e834373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51600383-2eb8-42f3-bc9f-955ac7ffa98e",
        "cursor": {
          "ref": "e996d779-7059-42a1-8dd8-77dda2b7b73d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2b86b545-56f2-4e7f-a3e7-740075b7c1a4"
        },
        "item": {
          "id": "51600383-2eb8-42f3-bc9f-955ac7ffa98e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b4b3809b-98ed-4744-8b78-d2a2bf89c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218e0f19-ad75-4ae7-9cb5-85f5f71db236",
        "cursor": {
          "ref": "7b3e2635-0dd4-41b9-b5be-bdf2ab7a7ac4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c32bcdfa-20ed-4604-a1ab-17b3b2ea9427"
        },
        "item": {
          "id": "218e0f19-ad75-4ae7-9cb5-85f5f71db236",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0ac94fb4-5dfb-4b7e-b005-25a96068c954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6573dd01-6391-461d-aa09-ce7095948d5c",
        "cursor": {
          "ref": "5878bef5-45ef-4bf1-8c37-a5b4b1e1e703",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c6311b71-59f6-4ed8-a4a6-5a6bd335a3e5"
        },
        "item": {
          "id": "6573dd01-6391-461d-aa09-ce7095948d5c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5d9436dc-e8fa-4422-94a5-0a31d6aeecc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af18496-0472-4599-a91b-f50f8fe79bba",
        "cursor": {
          "ref": "73ba148f-675c-40dc-b55d-0d690ca7b43e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dafd2d75-3eda-4fa7-b238-93e0b45c37d0"
        },
        "item": {
          "id": "0af18496-0472-4599-a91b-f50f8fe79bba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e85880d0-8065-476e-b148-a1acb2409517",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75e29f-5234-4369-a148-c3547d7332be",
        "cursor": {
          "ref": "3819d8ba-a3db-4fad-96d6-e9daabe1727a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f3838a8b-3fca-4d8d-9120-716fe128e5aa"
        },
        "item": {
          "id": "9b75e29f-5234-4369-a148-c3547d7332be",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0e1af87b-3911-436d-8fa6-62062b7b54c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "8e3b0a7c-66d9-480e-b47a-4510bb5b88ab",
        "cursor": {
          "ref": "7ce88558-e185-4bbc-b210-252cbbfb047e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1f56e722-de46-4915-94b1-6d00001b6092"
        },
        "item": {
          "id": "8e3b0a7c-66d9-480e-b47a-4510bb5b88ab",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "11ff4de2-eb35-4408-9e65-cbef22d54d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "1343ec00-55e5-4ba1-ab95-86a65f28d0ff",
        "cursor": {
          "ref": "ec151368-6837-4835-a5fc-d56840eadb22",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e08b8d31-184a-4bad-b588-027850d61f16"
        },
        "item": {
          "id": "1343ec00-55e5-4ba1-ab95-86a65f28d0ff",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bfa2d554-9fae-45aa-8077-789a092dbc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bd85ce82-f681-4bac-9259-c2b0c3d4f965",
        "cursor": {
          "ref": "0424b482-87a7-4cbc-91a4-f99b3a508499",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3b5ccc8a-f073-4e44-b8c5-8ce2009090fa"
        },
        "item": {
          "id": "bd85ce82-f681-4bac-9259-c2b0c3d4f965",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b29b9f62-6ac0-4176-8870-1eddcfe6788c",
          "status": "Created",
          "code": 201,
          "responseTime": 5434,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2378a8d-74ef-4d71-b08d-65bb6a88d3d4",
        "cursor": {
          "ref": "33a01593-79cf-455a-834a-0f1be34bd212",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "74988bfb-0b5c-4f03-bd20-16b0f6b34582"
        },
        "item": {
          "id": "f2378a8d-74ef-4d71-b08d-65bb6a88d3d4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed46b0bc-8e2d-43bd-a815-30ffb8f79c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1895,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "87a6b846-0d57-4068-b628-6c3d29d10e5f",
        "cursor": {
          "ref": "cc3379a6-1e09-4d36-99e1-729b0b8e5d28",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e9d3d68f-01e9-4d05-aa8a-a957411c83ba"
        },
        "item": {
          "id": "87a6b846-0d57-4068-b628-6c3d29d10e5f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e10bc04b-66f8-4ac9-8da6-f363cc7b7303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "87fd4aa6-a9c5-4ae4-8d24-260b26b1529d",
        "cursor": {
          "ref": "f50ef2ff-e729-4378-889e-7ff38aed2480",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9aae9f3d-0cc1-42cd-8f28-54eae7261761"
        },
        "item": {
          "id": "87fd4aa6-a9c5-4ae4-8d24-260b26b1529d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "06fec860-1f0b-4aa3-b8cc-d994c69f118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f6513b-523a-47dd-80c1-9909267fc946",
        "cursor": {
          "ref": "69d65183-946a-476c-9d0a-4b858096e3da",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "559c38b4-9100-4a29-b0ec-9c02961a329f"
        },
        "item": {
          "id": "39f6513b-523a-47dd-80c1-9909267fc946",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3a276a75-8c3f-4f50-b311-d75740479012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34262f04-8afc-40c0-a9d3-c868dd442e46",
        "cursor": {
          "ref": "881924b7-a45b-4eb6-bc49-97a588880c9a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c5b0400-fc83-4165-9d2e-f634da7b1daa"
        },
        "item": {
          "id": "34262f04-8afc-40c0-a9d3-c868dd442e46",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5f29eba3-c69a-436c-b4d6-da1aa9909e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c89653b-5d7f-48c3-8b2a-90c10bda9b45",
        "cursor": {
          "ref": "01db0de8-20fc-4fbf-a14d-7743f7937c06",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d57dbc5d-a97c-45b5-b521-d0231ba0f32d"
        },
        "item": {
          "id": "2c89653b-5d7f-48c3-8b2a-90c10bda9b45",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e38eadf-225a-4a13-b845-289118017784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ba9d20-02a3-4ec6-b32b-05699b5b0a3c",
        "cursor": {
          "ref": "22fb2cae-d4c1-43a4-9651-ed60cf9719da",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5658277f-4f13-46a7-87af-84a887c888a1"
        },
        "item": {
          "id": "84ba9d20-02a3-4ec6-b32b-05699b5b0a3c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8fd031bb-99fb-4342-97c4-58ff5aefffd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f71c57e-84a7-4a48-9e37-dc29fdc8b466",
        "cursor": {
          "ref": "5089f399-8022-4b9e-9cdf-4fc9d1123828",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3f6964b6-4173-4749-bb82-fc54b3090cbc"
        },
        "item": {
          "id": "0f71c57e-84a7-4a48-9e37-dc29fdc8b466",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7fbaa03b-f8df-4fbb-8301-3a96a9d7e8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e066f8-3fdd-4456-9626-b3e8191176aa",
        "cursor": {
          "ref": "8dd5f570-558b-49e9-a5d4-a31618ed00de",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "83102584-6bf4-4364-97a7-4f6bd8b81027"
        },
        "item": {
          "id": "07e066f8-3fdd-4456-9626-b3e8191176aa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "12da09cf-87ca-465d-8056-0f03e678e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f086a0-48f6-4486-aa61-7bfc245c9f32",
        "cursor": {
          "ref": "6fa29564-3c43-4032-b87e-12a989b7ee19",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "07adbe0b-23d4-4ed3-aaaa-77ae6c17f9a4"
        },
        "item": {
          "id": "c4f086a0-48f6-4486-aa61-7bfc245c9f32",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ffc976b-913d-4a78-83be-e042a648aab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237f877e-3538-489f-923d-23a954ee236c",
        "cursor": {
          "ref": "f1c3ca00-0552-410f-8e12-840829cc4bcd",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3b7265af-64d2-4a14-bb29-24917dd495c1"
        },
        "item": {
          "id": "237f877e-3538-489f-923d-23a954ee236c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5117ab74-6711-4901-aba1-cad0f7b7a43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa1766-37d3-490c-9d73-f76e0ba91a8e",
        "cursor": {
          "ref": "8d1fed5b-cccf-4910-aff3-36006986580f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8d09758d-374f-4e28-a791-86ecd7b2baf8"
        },
        "item": {
          "id": "2eaa1766-37d3-490c-9d73-f76e0ba91a8e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e86cb391-ce87-4188-b415-2595c14a124b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54039e6f-9c3f-4d21-a385-8c34f486c0fc",
        "cursor": {
          "ref": "1720c05a-1fd1-46ea-bc22-fa7117101578",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ccf01c11-4f69-4dad-8f4b-48c4f632e2a1"
        },
        "item": {
          "id": "54039e6f-9c3f-4d21-a385-8c34f486c0fc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c0d07d62-8bc0-4a0a-8c3c-acaa43e301c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44de84-a035-4697-baa4-d1f5702428d1",
        "cursor": {
          "ref": "32f310b3-9e56-4e0c-8477-27b2306548d9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "102de1a3-11fb-439e-8726-8406357c51ce"
        },
        "item": {
          "id": "2a44de84-a035-4697-baa4-d1f5702428d1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b4bc3a5-3007-4bf3-9746-ac0d5f5883fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0230dc34-d19f-4829-bc2d-fc32b62719c4",
        "cursor": {
          "ref": "42c0200d-94cc-4734-80b5-897f42e93acf",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ce278ae2-5f05-4ca4-9ff6-0a67abdc9bff"
        },
        "item": {
          "id": "0230dc34-d19f-4829-bc2d-fc32b62719c4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62938347-81fe-4ace-9872-b1a989d36670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129da7d3-be3e-478c-b4f1-9dee1377f4e5",
        "cursor": {
          "ref": "79c0c920-51e5-42c1-994e-d688f8bf65dc",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b0df7483-f03a-4804-a668-60eddaefa7de"
        },
        "item": {
          "id": "129da7d3-be3e-478c-b4f1-9dee1377f4e5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1bc46393-ff52-4b90-bacf-2764e6007c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a2414f-052f-4790-bec0-39560cad0936",
        "cursor": {
          "ref": "c036fdcd-2cbf-42af-a923-232b87144028",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59728829-f3f4-4ad5-9d4c-a6dc2754ae1f"
        },
        "item": {
          "id": "f1a2414f-052f-4790-bec0-39560cad0936",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71e5cff7-00b1-4dca-b9c6-218a3f151adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c25aaba-8372-4490-b322-dd97268747e0",
        "cursor": {
          "ref": "201506b8-17e6-4bc2-b29f-2b49093b8341",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e4a961fc-3c33-42d4-9b69-d852380d4d27"
        },
        "item": {
          "id": "8c25aaba-8372-4490-b322-dd97268747e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b8ad7a97-afbf-4d80-a85f-832508c002cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911b164d-2a9a-4bc3-a0d3-7c2d022e3906",
        "cursor": {
          "ref": "64ab2347-f614-4e6e-82da-213dc762cd4e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "402b464e-8049-423e-87df-971a1763eb23"
        },
        "item": {
          "id": "911b164d-2a9a-4bc3-a0d3-7c2d022e3906",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "38d569f2-2ef3-446f-ab00-169ff7eeee42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cc4ea8-11d2-42c4-9cbd-5fa7a1eff6e2",
        "cursor": {
          "ref": "0c83ddef-8bb7-4021-a27a-402f79ca961e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cac0b7e5-5951-449c-9e39-2e8aa3d4fdac"
        },
        "item": {
          "id": "49cc4ea8-11d2-42c4-9cbd-5fa7a1eff6e2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "012ed5c4-1787-4948-8739-c7eb3e1bab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6006eef-8e7c-4e50-a792-0ecbc29b0924",
        "cursor": {
          "ref": "234d4181-de6f-41ef-bd57-06418653dc62",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9cbf919c-e94b-47d4-81a6-40615eb5daab"
        },
        "item": {
          "id": "b6006eef-8e7c-4e50-a792-0ecbc29b0924",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1f252950-68cb-4db3-8299-48c5de30561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d854aaf-d440-4dc1-aad3-94862fb1aa0c",
        "cursor": {
          "ref": "7dcdbb15-541d-4822-aba1-f3c7af6d8082",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "33251f80-76bf-402b-b01e-b8ccec9e21b0"
        },
        "item": {
          "id": "1d854aaf-d440-4dc1-aad3-94862fb1aa0c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7a03ca7e-bf6c-46ab-8ebc-e176f4204c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0036620-e2a9-4f48-b7df-00907677700d",
        "cursor": {
          "ref": "ed8665af-55b6-446f-a249-5d8a802c072d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a7935b72-7a99-4880-a27b-deeaf8b4fb57"
        },
        "item": {
          "id": "c0036620-e2a9-4f48-b7df-00907677700d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac4ba17c-c6dd-4a6a-bbe1-6e48f2921b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ace25-ffce-48be-a93d-bc30040f2e11",
        "cursor": {
          "ref": "76076bf6-fa30-48db-9f1b-051054214644",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "982e93cb-0cce-4f98-b37e-e26a0c0a6a43"
        },
        "item": {
          "id": "679ace25-ffce-48be-a93d-bc30040f2e11",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "35c10169-effb-412d-853d-26ab12d614cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96151b7-5dec-457e-9442-e73f3d91ea72",
        "cursor": {
          "ref": "1fb47a61-17ba-46a9-a1e8-bb5e3ccdf14f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "022920f4-5cb5-4448-b3a0-86a1962288f2"
        },
        "item": {
          "id": "e96151b7-5dec-457e-9442-e73f3d91ea72",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "468f4e5f-012f-47d9-b9c3-1c607abe9365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654a279b-94cd-4d16-a306-08effae423a9",
        "cursor": {
          "ref": "9e8e3b4e-5b82-445c-8de4-b9551283193e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "383987e8-ff9c-4d79-af6f-e268c4102f17"
        },
        "item": {
          "id": "654a279b-94cd-4d16-a306-08effae423a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a77ddae7-f651-404d-9d07-bcc9c47c6dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b1769a-4e80-405c-93fa-948f56fd32f6",
        "cursor": {
          "ref": "20385a5d-15b9-4f5f-814b-f7d49fa62c0b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c9a2eab0-31de-47a9-9bd9-ca45cbbb0487"
        },
        "item": {
          "id": "f8b1769a-4e80-405c-93fa-948f56fd32f6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fac0afac-5d6e-4b0c-9af1-d83c15116402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1138e9f-a753-4295-adc2-ccfaf6b30aae",
        "cursor": {
          "ref": "d2bc5ede-cd2d-4163-922f-da11cd65acb0",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b444714e-c8bc-4e1b-9a50-3569c87db011"
        },
        "item": {
          "id": "d1138e9f-a753-4295-adc2-ccfaf6b30aae",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b8d25d9-9a99-41e1-90ba-495e0a624eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d141a-0465-4dac-ab94-aac361b2e33e",
        "cursor": {
          "ref": "28e08c41-b023-4f75-af62-b24dc33eb536",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4e055b9c-7061-4c9a-ba70-51ddcb26a4f2"
        },
        "item": {
          "id": "c38d141a-0465-4dac-ab94-aac361b2e33e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0707650d-6af5-4bc3-a7a1-a5f13b78c230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ae6308-4dcd-4a98-b45f-db1e1924e2e3",
        "cursor": {
          "ref": "0e02616b-6ce0-4c79-ac7e-08f51541d07a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "efc749ea-589a-4dfb-8259-0876ebbda87b"
        },
        "item": {
          "id": "d1ae6308-4dcd-4a98-b45f-db1e1924e2e3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b5da0cb-6dd4-4ea5-9ad3-3485dd46b905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4774d16b-e427-4a8e-8ae6-1df4ed78f428",
        "cursor": {
          "ref": "6a1c7916-36ac-4966-aa66-3cb9ac7f58f7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a2bf8c9c-bb17-4b51-b593-c3faefb0322b"
        },
        "item": {
          "id": "4774d16b-e427-4a8e-8ae6-1df4ed78f428",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "92da9b9d-49a7-476f-bc82-767fdb3a1406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc1c39c-d0cf-4022-881e-c20eddce0847",
        "cursor": {
          "ref": "bf061cb6-6fb0-404f-b65b-3803bcbc57c4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "964e9eb0-43a4-41ad-bb9e-c45c5160fe80"
        },
        "item": {
          "id": "bdc1c39c-d0cf-4022-881e-c20eddce0847",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5a580c04-573d-4f46-89ad-ce6bb37538f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a50565-b594-4cb5-a1b5-e3c85d641ba0",
        "cursor": {
          "ref": "26c29799-27c9-48f7-a725-248f3afe0153",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f2c7d2be-ad2c-4c0c-8b4c-c8c1f45eeb6a"
        },
        "item": {
          "id": "97a50565-b594-4cb5-a1b5-e3c85d641ba0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4dccbf9-51d2-4376-94ce-573c7a6bf700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07875d13-1186-4415-8b15-3055576dafa9",
        "cursor": {
          "ref": "0900414c-03bc-4f56-88f1-54c9e380068a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6ead8765-b441-43f7-9177-cd38ac0f3625"
        },
        "item": {
          "id": "07875d13-1186-4415-8b15-3055576dafa9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b3246845-12f5-4cb7-b761-0f6929da0a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78b0519-dc35-4d2a-b285-0ca0bfdac3cd",
        "cursor": {
          "ref": "34d03955-393e-4490-9a76-9ab9cc1f9e57",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8bc93adc-e1be-400f-999f-ec20090cc228"
        },
        "item": {
          "id": "a78b0519-dc35-4d2a-b285-0ca0bfdac3cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5c1d148-4b43-44b7-86dd-1cfe135a44d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003881e2-d86f-4c37-ac4f-b302adc30e8b",
        "cursor": {
          "ref": "9e354e14-8c45-40b1-bcbc-c4b56bbc64d2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8569af9b-199c-4b53-adff-3fd7491f07a4"
        },
        "item": {
          "id": "003881e2-d86f-4c37-ac4f-b302adc30e8b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eae3ae7c-83c5-4a38-8c10-e15a6f94745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4e22a3-2169-480a-a330-6c95080a1b4a",
        "cursor": {
          "ref": "c2ed4871-f4f8-4a91-ae1e-2ba9e1406a08",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b21ac8d5-c2ba-4b08-b31d-5f89d08b6eb3"
        },
        "item": {
          "id": "2e4e22a3-2169-480a-a330-6c95080a1b4a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45a000da-19aa-4796-a964-418e67d6b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9b4d12-1948-4afb-9b06-b5f5bfcd5c35",
        "cursor": {
          "ref": "e2fa668c-411d-4d37-b6f2-f5f16e4ab801",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5a65e988-9a03-458b-b0e0-283ae905dfaf"
        },
        "item": {
          "id": "ce9b4d12-1948-4afb-9b06-b5f5bfcd5c35",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb8b2254-960d-4d10-b7cb-3ecc86aa5710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171c2cc7-acd4-458f-ad7e-8be0ed5c30d4",
        "cursor": {
          "ref": "056861c8-c82e-410d-8f6f-ea7c0b75da3d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "18434673-a135-4ca3-9651-bb950fe79dd0"
        },
        "item": {
          "id": "171c2cc7-acd4-458f-ad7e-8be0ed5c30d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e55bfbc6-cf8a-439e-868b-eb05c1ddbbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf607296-25ed-4b80-8131-3454c351eb9c",
        "cursor": {
          "ref": "3c9e3778-d3d7-468b-b0c2-dca12ab603c7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "476b1df2-cec6-4950-8bab-0ad355599705"
        },
        "item": {
          "id": "cf607296-25ed-4b80-8131-3454c351eb9c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "43459220-1f1f-401b-b556-2ea0968daf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c57ba1-4ee9-4563-b0a3-c3c9f4724f0e",
        "cursor": {
          "ref": "aa7082d5-bd49-48bd-be80-0e7248f110be",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "582cf48f-666e-487a-8391-d903a4b20ae3"
        },
        "item": {
          "id": "a6c57ba1-4ee9-4563-b0a3-c3c9f4724f0e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ada02697-b6c2-4b44-bd3a-8673c75e7986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2246266a-5eaf-447c-b5e1-ef496f8fd65d",
        "cursor": {
          "ref": "0cb59406-e846-4250-9d8e-ee6cf70a2cbe",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4c836725-934d-4ac3-aa2e-babbbda3d8c7"
        },
        "item": {
          "id": "2246266a-5eaf-447c-b5e1-ef496f8fd65d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a6fe273f-ba10-4b3a-9ba5-9096bdffe172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f679ad0-4786-4c44-b7eb-f4712d0bb5b4",
        "cursor": {
          "ref": "4b8fca45-563a-419e-acf8-92dbd24e111f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d4f09184-eb0a-46ed-b1d0-991a37cb4ec1"
        },
        "item": {
          "id": "1f679ad0-4786-4c44-b7eb-f4712d0bb5b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0529a96f-abd6-4665-b1ba-31d92fb7a429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0885cd4-dfbc-4949-a44e-35dbad6b890e",
        "cursor": {
          "ref": "dbb1d971-d920-4402-9580-542f51b5ab7e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "201c820d-6bd3-40d5-979f-79f67876ddbf"
        },
        "item": {
          "id": "c0885cd4-dfbc-4949-a44e-35dbad6b890e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7dec0b77-c50f-481e-b7fb-6681522f9eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8bd386-4bc2-4fd7-be8c-5e2d6e462afd",
        "cursor": {
          "ref": "d2a9d2fb-e291-4534-a92d-c5850120d1cf",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4d56dab9-ebbc-4f24-bfad-c1a86a2ac1a7"
        },
        "item": {
          "id": "ab8bd386-4bc2-4fd7-be8c-5e2d6e462afd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fcd50f9a-74a3-411c-b0a1-7d27185c2500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b286d3ff-914d-418e-b017-0f0287886bb4",
        "cursor": {
          "ref": "0b00e963-3655-4ac0-99b5-ebcb75573c60",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3ec152f9-ead6-40ae-8001-49c740ebf83a"
        },
        "item": {
          "id": "b286d3ff-914d-418e-b017-0f0287886bb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b0bd39ad-0a0c-44b2-8cbe-f13ff87043ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102ae6e7-2306-41ea-bb24-4c75fde981af",
        "cursor": {
          "ref": "b0cae439-135b-484b-b610-905ae910d657",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "308b172b-2f49-4340-a234-448d0fa8d9b0"
        },
        "item": {
          "id": "102ae6e7-2306-41ea-bb24-4c75fde981af",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0b84ec3f-cb8c-4abb-a571-44b1531c49f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc391d5-98e1-4036-bac0-b76caf08f2e6",
        "cursor": {
          "ref": "0c1abc28-5f8d-4382-89c5-8e1385cebb74",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b11a88ef-c871-4bf2-8e52-bc8cf31f1a78"
        },
        "item": {
          "id": "2dc391d5-98e1-4036-bac0-b76caf08f2e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ecf24233-49f8-4609-a795-c849b1e14cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dfe310-b422-42f0-b2af-61cfcfa51bf0",
        "cursor": {
          "ref": "ee4b7c92-4fef-494f-a68b-035dc93f9e9a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "59e9c66c-5887-46c1-8c34-d07254077dbd"
        },
        "item": {
          "id": "77dfe310-b422-42f0-b2af-61cfcfa51bf0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "81ae329f-26b0-4e17-a3eb-b854cb6b7b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687278f8-6625-4821-a11e-0cea783a6938",
        "cursor": {
          "ref": "51129970-21c8-4e73-adf2-ca403b7ffe5e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eaf8a82e-378d-4795-8089-e409d6e215f1"
        },
        "item": {
          "id": "687278f8-6625-4821-a11e-0cea783a6938",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "feb9b4b1-84c3-4882-9d4c-752048f68eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156e1134-1240-40b3-9991-588db7cd829a",
        "cursor": {
          "ref": "01d2dc88-ab07-41a3-9fd5-60b31344b55b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3717dc80-626b-4443-a6bf-541c0b44eeb2"
        },
        "item": {
          "id": "156e1134-1240-40b3-9991-588db7cd829a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "077d5103-1159-4cee-ba55-1e553a6a0729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5197fd53-c80b-4832-9b87-e60fbd426d75",
        "cursor": {
          "ref": "c6d3ae4c-a586-4fd8-890f-b5c0741c3877",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "70533bb9-e342-4b6a-9142-bd288dcf0ef1"
        },
        "item": {
          "id": "5197fd53-c80b-4832-9b87-e60fbd426d75",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d8c1d6f-8601-4463-8ff4-23f0c2ce5f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1ef503-ab31-42dc-b3c2-086d23f3ad49",
        "cursor": {
          "ref": "7a50cbd6-9233-4b42-aac9-277d2e61cfd3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "67e7a036-9e2b-4307-b234-10dcbf0722b7"
        },
        "item": {
          "id": "1a1ef503-ab31-42dc-b3c2-086d23f3ad49",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "69030a74-b223-4ead-a9d3-b730a2149676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976f8898-0bb1-4cff-904a-262388f32348",
        "cursor": {
          "ref": "151f5f2b-c793-4e39-9b0e-734dbcf1035a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7d37c03e-d5c6-4a2c-adef-a5a01a94fe24"
        },
        "item": {
          "id": "976f8898-0bb1-4cff-904a-262388f32348",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0734f479-4d83-4c4a-a985-03cef036d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a565a42-0831-46ba-ae18-f2973228fd6a",
        "cursor": {
          "ref": "674b703f-2338-48ee-bcf5-12daade3ec52",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "38a2b104-7dc9-46d5-ac71-04af25893f06"
        },
        "item": {
          "id": "8a565a42-0831-46ba-ae18-f2973228fd6a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60a46063-bbd5-4f95-9ede-cc5e15cc3a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfcf209-8759-4a32-8106-9419031080df",
        "cursor": {
          "ref": "0bd7a6b2-cf9b-4eae-8588-d817f668bb66",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "81908f62-4890-4110-b902-08b3f846a29c"
        },
        "item": {
          "id": "fdfcf209-8759-4a32-8106-9419031080df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "069ab40c-9419-4883-898d-1c9f7243dbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f9975f-77fb-41fc-b0a5-6d78390c4565",
        "cursor": {
          "ref": "4fd70ef9-a97e-4ed9-aedc-d5b802fc7c28",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4f7d6912-d1e8-4efd-a391-a5c0f3326184"
        },
        "item": {
          "id": "c5f9975f-77fb-41fc-b0a5-6d78390c4565",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e3ac940-f4fb-41d3-83b1-3687b1161e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be13332-b796-40b2-93a2-20ba22f025f0",
        "cursor": {
          "ref": "2938e284-b3b6-4bd6-90d3-63bc0eff675e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a29985a2-0d43-4f15-b844-17ba79e6dc8b"
        },
        "item": {
          "id": "5be13332-b796-40b2-93a2-20ba22f025f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4f7df8ad-b76b-4b80-90e7-2536ecb1a49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9c8299-af7d-4fbb-82af-e433c1030502",
        "cursor": {
          "ref": "75b8ede1-e866-4218-9a29-ae91bc86bf60",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "65faa3ea-448c-4496-9453-03ef0502e75f"
        },
        "item": {
          "id": "ad9c8299-af7d-4fbb-82af-e433c1030502",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a26e81f4-9118-4264-84f4-488f70822c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0413743e-c64c-4ecd-a241-b3719c3bf457",
        "cursor": {
          "ref": "7b1de4a5-dfda-45bc-a42f-a068f7178a2b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e31d854b-7781-4a4c-8332-16cf20525fbd"
        },
        "item": {
          "id": "0413743e-c64c-4ecd-a241-b3719c3bf457",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "30271694-2012-44e9-8c78-48e1c3b2f617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac6c083-fc34-4d4e-92dd-d866640f879f",
        "cursor": {
          "ref": "c89a71c5-0b05-4d36-b349-b8caf51f7e87",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d15ea357-8247-47c2-87c4-43ae0209f8ab"
        },
        "item": {
          "id": "fac6c083-fc34-4d4e-92dd-d866640f879f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f7c589b6-a296-4535-8498-443289662dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1ef819-a7a8-4859-b2dc-7a27a9385ebe",
        "cursor": {
          "ref": "ab1cc199-96b3-4ba6-b5e0-0f13969cd463",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "961dcead-1392-4367-a336-820694d89f59"
        },
        "item": {
          "id": "3f1ef819-a7a8-4859-b2dc-7a27a9385ebe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f1379e6-271b-42e9-8d29-70bddea18d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b41d41-8c79-4d1e-84c4-4e4cdc82016b",
        "cursor": {
          "ref": "f9befe93-e06d-449b-b580-3b5c83ae4d75",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "09b200d0-95b0-46e3-b3bc-fa66f3540e09"
        },
        "item": {
          "id": "61b41d41-8c79-4d1e-84c4-4e4cdc82016b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1c324cc8-c42d-4b2d-a246-4b819fe81342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c712a9dd-de3b-4f07-be3a-3a621360bb0a",
        "cursor": {
          "ref": "2c113404-f6b3-4c2d-a1ed-5f507ac2753a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "069152b9-ddc0-4900-849f-28e0e990982d"
        },
        "item": {
          "id": "c712a9dd-de3b-4f07-be3a-3a621360bb0a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a045c009-67a4-4aa6-9064-e27a17018c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e658f0c-2f09-407d-b278-cc12c9a0c0e6",
        "cursor": {
          "ref": "4d22df0d-71d5-4a92-8f9c-72a89bb66eda",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "674f20cb-e582-473e-ae1a-dd1feb18c80d"
        },
        "item": {
          "id": "0e658f0c-2f09-407d-b278-cc12c9a0c0e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5f1667fa-d093-40a0-9190-c75773df01cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53440783-f0ac-473d-903f-96ff5c7b44b8",
        "cursor": {
          "ref": "acd1394e-da18-4c6c-abc5-20ce0a90aff9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "32f02b40-91b8-484e-b9d1-b578d96d87df"
        },
        "item": {
          "id": "53440783-f0ac-473d-903f-96ff5c7b44b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eeccf2e8-422d-4bc4-8a46-98a7c0182532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d8c32b-71ec-40aa-b02f-693e7e0d97b5",
        "cursor": {
          "ref": "d4dce086-b81b-44f1-94ba-28b22cfb6711",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "200bcaba-c188-476b-b79c-2627052e687d"
        },
        "item": {
          "id": "77d8c32b-71ec-40aa-b02f-693e7e0d97b5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9c35793f-f54e-4cb9-95ce-771b27b28ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af47e3b-2185-4fff-90e1-7481158e5014",
        "cursor": {
          "ref": "fdb4bd34-c451-4cf1-aa20-9f53971b6f44",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d06678cd-5331-41fb-9a7d-fbe36e4ddc06"
        },
        "item": {
          "id": "3af47e3b-2185-4fff-90e1-7481158e5014",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "85230ccb-13ad-47d6-822e-cfec685979f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b79c7b-ae4f-44bf-a88f-0ae688075882",
        "cursor": {
          "ref": "d24f1fc0-570c-4524-936e-231a82d4754e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "818a0d4e-8495-473d-b70a-bf712a448828"
        },
        "item": {
          "id": "42b79c7b-ae4f-44bf-a88f-0ae688075882",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "10362cbe-912d-45f3-a93c-203c4d7171e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a43c85f-1216-4280-aef1-295f57cc517d",
        "cursor": {
          "ref": "19de8808-f4a9-4867-b011-600c1249454d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d2b8c97b-bd1d-4ac7-bdb1-887e3a46c253"
        },
        "item": {
          "id": "8a43c85f-1216-4280-aef1-295f57cc517d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c23bb483-d851-4a09-85ba-79cec62356e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac48a2-814d-41e2-8942-cc98a277dbb8",
        "cursor": {
          "ref": "8132852a-5a45-4cfd-a239-bb61281b14f2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b7e062c7-6c02-4ca9-beb8-26d99010d698"
        },
        "item": {
          "id": "2aac48a2-814d-41e2-8942-cc98a277dbb8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f180ebf7-cd80-4355-86bd-7dfac4b22d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c36cdc9-ac7e-4c30-87e3-5688cc4fb48b",
        "cursor": {
          "ref": "76319bf7-381c-49ac-bdd0-efbd0f52ea1a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eff5b920-c376-49b9-b7e9-05ec1d29d1c0"
        },
        "item": {
          "id": "2c36cdc9-ac7e-4c30-87e3-5688cc4fb48b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "74db78e0-98c6-4c77-b176-1e0dbf916a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210d9b0a-8f42-4596-ae3d-3a6b6cd2d368",
        "cursor": {
          "ref": "5ac3f342-caf8-49ba-84f2-e4beb460f69e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ed4e0ea3-7ffa-480b-97b4-7ced9112c671"
        },
        "item": {
          "id": "210d9b0a-8f42-4596-ae3d-3a6b6cd2d368",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0ee5591e-85ea-4683-a3bc-6230162a6b6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43080795-6974-4453-93a3-250354fce8ed",
        "cursor": {
          "ref": "86cc1a2d-294f-448e-aaf3-19139ecb47e2",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8cdd7fc3-55c1-4d55-9cba-fa139840b6f3"
        },
        "item": {
          "id": "43080795-6974-4453-93a3-250354fce8ed",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "40cdfa89-b05d-4572-a21b-baa042926d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db666cb-c2d5-4b7c-ad78-778ad0f6612e",
        "cursor": {
          "ref": "3bdbec60-9abf-4ac4-98bf-421e0155cc2a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ef333bec-c901-46fb-a714-9c333aabdd34"
        },
        "item": {
          "id": "8db666cb-c2d5-4b7c-ad78-778ad0f6612e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6af62eeb-6d34-4f7a-be06-9ada20d7aa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2837af-9d48-4611-bd17-6195eedbb936",
        "cursor": {
          "ref": "831f2681-2444-4178-aa2f-9f1e0ae0c63f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d7f44492-0963-452d-89dd-cce4452002a3"
        },
        "item": {
          "id": "ee2837af-9d48-4611-bd17-6195eedbb936",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fd804238-4b19-44f3-8f69-a306424dddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79724077-5a76-49c9-838f-f38bfd294b3d",
        "cursor": {
          "ref": "d7555401-5630-4551-9abc-ec58e3ea7675",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fac867a3-225d-4727-99b6-7d933dcb5f93"
        },
        "item": {
          "id": "79724077-5a76-49c9-838f-f38bfd294b3d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "84d9c597-e531-448a-b58f-2b00fdca945b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87573fb-cd87-4baf-b655-d02095e192ae",
        "cursor": {
          "ref": "1c0aa143-d348-484b-8eba-d672e4590baa",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "827b7d7d-f211-4ccf-83f7-df13a894d59d"
        },
        "item": {
          "id": "d87573fb-cd87-4baf-b655-d02095e192ae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ad8cdc9-8f1c-44c3-995d-749978ffd6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd589cd-30ad-4d20-aed9-9123be88c733",
        "cursor": {
          "ref": "c8754b92-9226-4eda-ba51-be0bca76f63f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8bbc0c95-2585-495e-8fdd-761cce59a0cb"
        },
        "item": {
          "id": "ecd589cd-30ad-4d20-aed9-9123be88c733",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a48e219a-196d-43a5-a59f-a26ac27eef0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeb2fed-23c9-4b71-889c-42d26b301445",
        "cursor": {
          "ref": "9e5e0616-7739-4103-83a8-247efb947446",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64d10ac6-1625-4146-92db-653f38887089"
        },
        "item": {
          "id": "cdeb2fed-23c9-4b71-889c-42d26b301445",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f1004406-3416-4f45-a880-4592ef72ce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c88602-ec5c-49fb-b1b2-44771e907fc9",
        "cursor": {
          "ref": "ce9cd452-0741-4738-83dc-a8f0fe35249d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc4dc237-62bc-4194-bc42-66cdf5476d10"
        },
        "item": {
          "id": "a4c88602-ec5c-49fb-b1b2-44771e907fc9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9607deb-f071-4fb4-89c0-8369249553b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf837fb-3fd6-4028-b4aa-73153fe88af4",
        "cursor": {
          "ref": "b6ac9601-d2b3-40a6-96c2-4968075f1017",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ef0e9e0e-43a4-4eb9-95ef-d58f408dfb88"
        },
        "item": {
          "id": "ecf837fb-3fd6-4028-b4aa-73153fe88af4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "169f8bab-d94b-403e-bea0-6b82173b5f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97662b1d-0e19-4181-8b02-4a7858e5bcdd",
        "cursor": {
          "ref": "fdf01857-dd28-4070-a478-57d38c5d8c48",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "17c28969-cef6-434e-99ad-485f6646b9c9"
        },
        "item": {
          "id": "97662b1d-0e19-4181-8b02-4a7858e5bcdd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "65dec489-69c8-4c5d-824a-16a9c84790c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271f8f7d-98ae-4128-9aeb-000cfc4c308b",
        "cursor": {
          "ref": "c8d7b542-a535-4cf6-8625-b4ffedf42c37",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0e09b10f-b71e-480c-ac99-3d98bf62e4c6"
        },
        "item": {
          "id": "271f8f7d-98ae-4128-9aeb-000cfc4c308b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "42f5ed03-0ccb-47ca-915b-caddc30676bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee8523e-c502-4ece-85b5-556bb14f61d0",
        "cursor": {
          "ref": "987b4461-6767-4f2f-81f6-d7d75e1e3e42",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c615b35f-724b-49eb-be0c-96463e59f4b3"
        },
        "item": {
          "id": "9ee8523e-c502-4ece-85b5-556bb14f61d0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3de70338-450c-438a-8761-9762633dd7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24391824-ec4f-4c82-a8f7-cd845995586a",
        "cursor": {
          "ref": "61b5d8b4-6d07-4d69-9022-5ea9af9232e6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "52c92142-4c3f-4ec6-913a-c6139b53f8ce"
        },
        "item": {
          "id": "24391824-ec4f-4c82-a8f7-cd845995586a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f9f759af-9373-4510-81fd-faf3b3d5773a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dc634d-265c-4d47-aebf-059fcb75880f",
        "cursor": {
          "ref": "704717bb-b453-4244-8fec-130d76fd07b5",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e3ee8b5d-a815-44c6-9b8e-267c5e3ec021"
        },
        "item": {
          "id": "62dc634d-265c-4d47-aebf-059fcb75880f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4063d4f8-4fdc-425c-9cdc-6cb560b7f587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac2aca6-4b6a-40d5-bb34-342de2c6c959",
        "cursor": {
          "ref": "fcc2d00c-0969-43e5-9997-33b075efe4ed",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "57660688-8c42-42a4-8618-a15430fdda8f"
        },
        "item": {
          "id": "1ac2aca6-4b6a-40d5-bb34-342de2c6c959",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f692d76-e06f-4293-983a-967e20b75083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c8d31b-ac4d-46f6-a7e9-b80b1babaf7d",
        "cursor": {
          "ref": "fa2e91d2-1f08-4dc9-9dd1-dd0469be5978",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "744c611b-22b6-4084-bb94-a78e22739634"
        },
        "item": {
          "id": "30c8d31b-ac4d-46f6-a7e9-b80b1babaf7d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c6a6594b-fb16-464e-a41c-4a5e31942f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf33989-9fcc-4ee8-819f-4bedb1f8f976",
        "cursor": {
          "ref": "f1fb0cc1-9407-4ae3-a91c-cc98f626169d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ced57f60-bf56-4895-9c53-3b321062478f"
        },
        "item": {
          "id": "eaf33989-9fcc-4ee8-819f-4bedb1f8f976",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "accad00a-3556-44cc-8b67-fe7d90573652",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "14a61567-a9f1-4a6d-b33f-44bbacc1f221",
        "cursor": {
          "ref": "b577b4f0-adcc-438c-8eff-1e5c9b7fc3fd",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "896ebcee-cc11-4c57-9c77-0f6a6be436de"
        },
        "item": {
          "id": "14a61567-a9f1-4a6d-b33f-44bbacc1f221",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6675fe52-e969-4681-bf6d-dd6ba9a3fee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928ed595-5d1d-4908-a11c-2c80ac517d34",
        "cursor": {
          "ref": "1a309ead-fdca-4377-903e-fb1bfac1db5f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b72d6d05-54c5-4ce8-a999-ac2911f4e1e9"
        },
        "item": {
          "id": "928ed595-5d1d-4908-a11c-2c80ac517d34",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f9b87dae-9489-4f11-a194-0794b874d4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489de5e9-f3bc-400a-a5d2-af366d5441f4",
        "cursor": {
          "ref": "7aa5c181-e519-465e-984a-7f3efcd3ccda",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c09ad01d-eb28-4f02-b80f-5c8b4ae29f58"
        },
        "item": {
          "id": "489de5e9-f3bc-400a-a5d2-af366d5441f4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ce964fe0-8bd7-40d0-b1c2-a0f145164789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f866f3-dedb-413d-b921-04e1542b5e6d",
        "cursor": {
          "ref": "59986ba8-32b5-41c1-b652-1c3fd9217562",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cf7c6b43-8092-4b45-8aa7-5aed7619a9b5"
        },
        "item": {
          "id": "f9f866f3-dedb-413d-b921-04e1542b5e6d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fb6e9816-6f62-4506-8eb5-b876c321bed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8cb448-ac2b-46dd-bdd6-d36c3d83a89e",
        "cursor": {
          "ref": "ba8d6ea2-640e-4159-b8de-8c119b83264f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6373f471-92e9-414c-949f-b66c9b846c05"
        },
        "item": {
          "id": "df8cb448-ac2b-46dd-bdd6-d36c3d83a89e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f2869286-2a62-43a1-b18b-d9d149861789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eeb2761-30a5-430e-b6bc-cff7f7166b50",
        "cursor": {
          "ref": "6cd4cbec-8bd0-42e1-92aa-275d48ed79f5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7e976a5a-c71f-49d2-b8a7-d9407ea666af"
        },
        "item": {
          "id": "1eeb2761-30a5-430e-b6bc-cff7f7166b50",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "60497881-8cbb-49f5-99fb-0577aa28f69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795aab64-45de-4d2e-98a7-1c68086b34ba",
        "cursor": {
          "ref": "79c7ac0f-39b6-43bf-8f2f-8b3a78a38a9b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aa29bfd3-bb69-42ee-b113-651b49b8e833"
        },
        "item": {
          "id": "795aab64-45de-4d2e-98a7-1c68086b34ba",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4c77ee32-e2ac-4950-a7e1-e527677f34a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eef189-0fbe-4cbf-b52b-f1a618bbffd7",
        "cursor": {
          "ref": "1929bb20-a7d8-4044-bb80-077a18a66f73",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b42d1ec7-d85f-43e6-b8a0-e56fe14a195b"
        },
        "item": {
          "id": "f7eef189-0fbe-4cbf-b52b-f1a618bbffd7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bf82ffe1-fdc9-4b1d-a29c-f63c7b45e911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18df2045-e427-4230-af76-850195a88fec",
        "cursor": {
          "ref": "e5eca801-c1d5-467b-b3fd-2d4076dd118f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e58dd66e-5d5a-47fc-ae28-e58a0511fe1d"
        },
        "item": {
          "id": "18df2045-e427-4230-af76-850195a88fec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bca1882c-ce91-43ea-a7e9-439858edbcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5003e5-3c7c-45b6-99b9-eb55841ec513",
        "cursor": {
          "ref": "1f77b4d0-d993-4912-a3a5-58c6eb794eca",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b08bc527-e9c8-43a1-89da-6ade53221965"
        },
        "item": {
          "id": "1c5003e5-3c7c-45b6-99b9-eb55841ec513",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7281b14e-177e-42a8-a0e6-e46f1b4451be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f56979-d2c2-4022-bf70-d555e52e32c5",
        "cursor": {
          "ref": "d91ff835-d59d-4b52-98ed-52fe12681cb2",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5e575f04-c461-48a0-97e5-79e3c81f608c"
        },
        "item": {
          "id": "90f56979-d2c2-4022-bf70-d555e52e32c5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "edd03e61-fd98-4bc9-83c1-2c6fa780eec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5bfb5a-2b7e-4637-9e88-97e4f94603bd",
        "cursor": {
          "ref": "0076788d-f109-45ad-8f5a-da1bbc24a96d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1c68aaf-e397-4142-be9b-4acae9eba215"
        },
        "item": {
          "id": "dc5bfb5a-2b7e-4637-9e88-97e4f94603bd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c7e49323-2632-44ab-b255-fbb2285afc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7e5083-2bf4-425d-8159-5e0ff3141054",
        "cursor": {
          "ref": "68f0a113-8335-4c79-9c4e-6d382c35fa81",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b62b63f7-0a46-4e7d-979b-cf58ecad95f4"
        },
        "item": {
          "id": "ca7e5083-2bf4-425d-8159-5e0ff3141054",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6d661284-7b4d-4242-b770-852a63a08a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ee9642-fd55-433c-86f6-7d8e3074a411",
        "cursor": {
          "ref": "0aee9642-7190-4f0e-aca1-5a3afea2cafb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0c82929d-c2be-4563-8986-57b475d58b54"
        },
        "item": {
          "id": "27ee9642-fd55-433c-86f6-7d8e3074a411",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ca952533-89bf-4a9a-903f-048013df9195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d669533-76c6-465d-98aa-fce5bffde9f4",
        "cursor": {
          "ref": "5b69fc84-962d-4069-902a-be1ae6cbf186",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "34480dcb-7ffd-4d1b-ad93-7d198849654a"
        },
        "item": {
          "id": "2d669533-76c6-465d-98aa-fce5bffde9f4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "df3d6e7d-f9e9-450c-b59b-7dbbd073bbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0869f9c6-d840-4600-b370-bbf715a1b04d",
        "cursor": {
          "ref": "08f83785-9ea4-4a37-9914-526deeab9eee",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9d47161e-a7dd-4297-94f3-7de6eb19cb05"
        },
        "item": {
          "id": "0869f9c6-d840-4600-b370-bbf715a1b04d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "56607c3e-3076-40fa-91c0-a335bfe77787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6eb6df-a251-4e26-8624-a7503ea0d58b",
        "cursor": {
          "ref": "a5a3ef17-7419-49b5-bb78-b85cbc5605fc",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "93d5d49d-e261-49cc-aecd-9895aa856b24"
        },
        "item": {
          "id": "5b6eb6df-a251-4e26-8624-a7503ea0d58b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5b446043-820c-4633-bc68-a3fb77366b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836ef80b-7c49-4663-93c9-580db8d2644a",
        "cursor": {
          "ref": "c2932967-5e53-4707-8077-c9bc5dd86877",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "64771fc8-fea3-4145-a05e-cd532691fe3d"
        },
        "item": {
          "id": "836ef80b-7c49-4663-93c9-580db8d2644a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2b62b79c-a3a2-46a3-a9ad-95cb75a5cb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d640c121-a5d5-460b-a6c8-7bcefcbca1c3",
        "cursor": {
          "ref": "2f7cf606-0f4e-42a8-ae01-e68ced533ab4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "557b6ec9-7b74-403c-b193-a34181c287df"
        },
        "item": {
          "id": "d640c121-a5d5-460b-a6c8-7bcefcbca1c3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d019547b-2365-4f8a-b457-a4f21456ae3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fb6e4d-f24d-48e3-9db2-d1db03cca86f",
        "cursor": {
          "ref": "16269636-27b4-43e5-aa36-7c90286ced3a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "16434fea-7b94-40d4-8ed1-1f97692f495b"
        },
        "item": {
          "id": "55fb6e4d-f24d-48e3-9db2-d1db03cca86f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6a3b8248-e130-47d3-af79-903abb7b1b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf92a53-3f34-4d5c-a55e-62d8f36b06b0",
        "cursor": {
          "ref": "863f6a14-75dd-4f0f-95c3-df9a805f09c9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d9af4305-77ac-4bb1-ae60-c565567c337d"
        },
        "item": {
          "id": "acf92a53-3f34-4d5c-a55e-62d8f36b06b0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "44f8cd1d-f0c9-488e-881c-46d359b6fd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e16b18-1fab-4c88-897b-63312519c059",
        "cursor": {
          "ref": "cd66de9d-e13a-4549-b458-acf210c43fde",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2a424122-c832-4493-aea3-2a5610672962"
        },
        "item": {
          "id": "14e16b18-1fab-4c88-897b-63312519c059",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e1cb6ed8-57df-4b2f-8914-3466bee18abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ea9697-228f-4a28-a6db-d765204556a3",
        "cursor": {
          "ref": "99d297ef-9974-4227-a45d-9846f5cc45c4",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ac822f1b-2b2e-4250-bc9a-f4cc042d6a94"
        },
        "item": {
          "id": "d3ea9697-228f-4a28-a6db-d765204556a3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "21063fca-e96f-401f-86e7-767a00f52697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b88f13-cbd5-4d9c-8e8d-6a573885319c",
        "cursor": {
          "ref": "c3c34577-9161-47c2-b593-881f6ec95099",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1a1f49d6-ba06-4ffe-8789-e300da886b14"
        },
        "item": {
          "id": "e7b88f13-cbd5-4d9c-8e8d-6a573885319c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f0449394-6ce8-4b4b-9c1e-d5e0c601ff8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddc9bd5-a945-4b8c-ae73-99e872f25f9f",
        "cursor": {
          "ref": "fcbc719e-8ddf-4651-bc89-c97989c60baa",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "43a4fa90-d2e7-4715-9d4f-c5fd1e8d076a"
        },
        "item": {
          "id": "fddc9bd5-a945-4b8c-ae73-99e872f25f9f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5ce15061-6446-4a5d-af42-6a0c38dc039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313ef8ae-c4c1-450c-a1b6-93c3c55e8d47",
        "cursor": {
          "ref": "6cd8226d-f2ab-4514-b790-1cef6ab5cdb0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "168b132c-b754-40e8-86fe-00920ae85ba1"
        },
        "item": {
          "id": "313ef8ae-c4c1-450c-a1b6-93c3c55e8d47",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2e251022-6de6-4287-a35e-b10a8d880c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e29e91f-5944-4db0-a270-018cd9c78267",
        "cursor": {
          "ref": "fc17e643-1d21-488a-88b5-0387f9b98576",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3a04dd2d-c8b4-4070-8367-ef2bbdc567c2"
        },
        "item": {
          "id": "3e29e91f-5944-4db0-a270-018cd9c78267",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "09bf965e-d5ac-47d4-8107-7cb3f688f6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81668544-553c-4708-83b1-35dcac099e4a",
        "cursor": {
          "ref": "eae5ab67-1111-4a74-86e6-4c28d862aa69",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a5af5e3a-3cdd-400e-8d93-aa7a7db5b89b"
        },
        "item": {
          "id": "81668544-553c-4708-83b1-35dcac099e4a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d413892b-90e5-44e5-8cdc-3f917e605216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cecfa3-1cf1-4aca-90c7-03324e3d0e22",
        "cursor": {
          "ref": "4ba14705-b6ac-4473-bff9-0380669f82e3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bb8b1138-f1e8-4c8c-8708-87d6f409e33f"
        },
        "item": {
          "id": "d8cecfa3-1cf1-4aca-90c7-03324e3d0e22",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "58245f0f-4291-460e-9196-a144f1bbddf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e1ba36-5435-4ab6-9eb7-dfcef6c8202c",
        "cursor": {
          "ref": "7362350d-4df9-4e8d-aaec-dd76e4124e87",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ef19cc99-9c4b-4d19-b345-aeb6cc1b2412"
        },
        "item": {
          "id": "50e1ba36-5435-4ab6-9eb7-dfcef6c8202c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "06c86053-0561-4f02-ac09-3d5d5b48bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baeb3b0-4f20-4fcd-8924-a6166dbf9a2b",
        "cursor": {
          "ref": "5133932c-9d66-4e03-a36a-6cf04d84c2e8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0b991af1-0fe5-4f2a-8f39-34442bf7f05a"
        },
        "item": {
          "id": "7baeb3b0-4f20-4fcd-8924-a6166dbf9a2b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a39d7102-1906-442f-bb48-30ec5fcd68b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af491aae-9dac-4542-8b8c-6918574bc29e",
        "cursor": {
          "ref": "62639cb5-8f82-41e8-9bd6-5ee9b25a2d70",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2e4580a8-bb69-41ec-8c8c-7f6e8506e3bd"
        },
        "item": {
          "id": "af491aae-9dac-4542-8b8c-6918574bc29e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7c09bc14-03ba-4658-8ad2-bca1f01425e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cfea3e-59b5-4539-8f02-39dbb5bef981",
        "cursor": {
          "ref": "4d2fdc3f-db85-4aac-b312-a9ca37d0b543",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2c9e384b-dea6-4a44-b5ec-5210ba94eb3f"
        },
        "item": {
          "id": "87cfea3e-59b5-4539-8f02-39dbb5bef981",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19be9680-3d34-4ade-ba43-ecc571a66716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3865f8f-0ff0-481e-bfdc-a27ef9555162",
        "cursor": {
          "ref": "663e5908-8e38-4742-b801-1864ed7c53fc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e59e71b1-82a7-4938-b387-720ecbfbcf2c"
        },
        "item": {
          "id": "d3865f8f-0ff0-481e-bfdc-a27ef9555162",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d6799642-f455-4694-8d17-64f576f190a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e150ce28-ce1e-4f03-bfc4-f08bfa57d75b",
        "cursor": {
          "ref": "c48c3614-67c2-4404-b475-813709e13c71",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ec098a2b-1214-491f-b11c-5bee7113bbcb"
        },
        "item": {
          "id": "e150ce28-ce1e-4f03-bfc4-f08bfa57d75b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6fbd3558-6b67-488d-985c-59307b1c0364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7701acc-bd2e-48c4-80bc-1b8f364cbd27",
        "cursor": {
          "ref": "78b98a46-1fb6-43db-b400-75ad6e3a5617",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e18c1f3a-293d-4589-ac1f-5cce97988cfb"
        },
        "item": {
          "id": "c7701acc-bd2e-48c4-80bc-1b8f364cbd27",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e42401b9-57ad-4f42-be7e-44c7306fc1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad414f8-5bc3-40f9-b5aa-61beb423c31f",
        "cursor": {
          "ref": "f87a4c1f-b61a-45f7-a498-6b7f43d28dd1",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "26f54fa8-79e2-4611-baeb-dcb46718ea0a"
        },
        "item": {
          "id": "5ad414f8-5bc3-40f9-b5aa-61beb423c31f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cdf3b101-6227-4783-82ec-8faaceff0f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b52cd66-da91-4f41-a2e6-f7b0522350f8",
        "cursor": {
          "ref": "ea20ef7b-47da-433a-a692-6a8c21143cbf",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9900ef95-d2fc-4204-bdfb-ebd4f94c70a1"
        },
        "item": {
          "id": "4b52cd66-da91-4f41-a2e6-f7b0522350f8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f1fd0c5e-06ed-4cb4-ab47-b5a8c2a392d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20abd7c6-672e-4a79-a6b6-e8808bfa7efd",
        "cursor": {
          "ref": "87221754-9cb0-4795-b9b7-110f13b6d652",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "41cd590a-f7d7-4346-a41c-7d7359c38a1f"
        },
        "item": {
          "id": "20abd7c6-672e-4a79-a6b6-e8808bfa7efd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a4786f9e-e90b-439e-92ed-f0a951cac7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c23f5cd-d4a9-4af1-ad61-1df7e2b70d1b",
        "cursor": {
          "ref": "15cbe75e-e958-4253-937e-558f278c3f7e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2680a284-1c11-4ddd-b762-bda7e6204ee7"
        },
        "item": {
          "id": "0c23f5cd-d4a9-4af1-ad61-1df7e2b70d1b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c7ebedf9-7823-43e4-89e5-4cfa467b426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97509120-7128-4965-9f99-2a3e5dd9d503",
        "cursor": {
          "ref": "c7f19a6a-cbcb-4eeb-a4f8-80678312da18",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3af4cf65-05fa-42ba-9412-e43c762b9914"
        },
        "item": {
          "id": "97509120-7128-4965-9f99-2a3e5dd9d503",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "40815e37-1071-455a-9522-d99327959172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7935165-c5f7-4819-b7a0-61fe157995ae",
        "cursor": {
          "ref": "cfaec9fb-0a21-45ef-b766-e4a84c8d241a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d5bed0d8-3a35-4068-a1e2-985760c204ef"
        },
        "item": {
          "id": "a7935165-c5f7-4819-b7a0-61fe157995ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b43e93e8-2617-4876-a78a-360d9fe2e9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6eef82-9369-4a03-8158-3b24cf187afa",
        "cursor": {
          "ref": "05840d16-5c62-41c7-9908-b0f786369bd1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6c85ec5-4cba-4e5c-9b52-2751642591dc"
        },
        "item": {
          "id": "7c6eef82-9369-4a03-8158-3b24cf187afa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c22a6088-bdd2-4e15-858b-ce882dc5c530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9a1836-baa2-4f63-bcde-bf2fa2fed428",
        "cursor": {
          "ref": "82cf6ed3-37c1-4f53-a2e8-e392e0a6e67d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "18dea06a-7208-4186-8b65-09e315d406f3"
        },
        "item": {
          "id": "bf9a1836-baa2-4f63-bcde-bf2fa2fed428",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "03b7cd3c-e8b3-4ef3-998e-e03848509ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d5912b-7fab-4c58-9d9f-82218507621f",
        "cursor": {
          "ref": "900749f0-afd6-48a4-9b67-1bed4499277b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c46816a1-3696-4d89-9bdc-ba43845b676c"
        },
        "item": {
          "id": "e3d5912b-7fab-4c58-9d9f-82218507621f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9aca1c91-f905-4ee2-be70-dc5a38b4958d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863e268a-cd1f-45bc-84d5-5d7723e1fe62",
        "cursor": {
          "ref": "2f425d16-fe11-4842-8e1e-f008c686ff69",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "28e2374a-3aa7-4eb4-b24b-c101bdb5e275"
        },
        "item": {
          "id": "863e268a-cd1f-45bc-84d5-5d7723e1fe62",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1c9bc040-a9e4-4d48-80e0-0fb62589be9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23bf643-83a4-4b22-98bb-e13f6e264f20",
        "cursor": {
          "ref": "7fa40a8e-1580-4859-ab6e-f6ca12ceca72",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e92b2d55-91df-4ee3-aa8c-890946ecb4dd"
        },
        "item": {
          "id": "e23bf643-83a4-4b22-98bb-e13f6e264f20",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e5ba2e2d-7e4e-4bb0-886e-c08297976828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dee745-03b7-4e4c-902b-02f17147d5d8",
        "cursor": {
          "ref": "5d6ad5fb-da1a-4358-90c7-5ba367229811",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2fbc02ed-cbf0-4d13-8662-ca7825be90b4"
        },
        "item": {
          "id": "82dee745-03b7-4e4c-902b-02f17147d5d8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "155262a6-6a79-4981-9006-4bfaa9726aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969a30a6-70e7-4035-819f-2fc2340e8800",
        "cursor": {
          "ref": "e2e0b637-51cb-4cc3-8547-bb6b0ca1f6bc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "23646313-5b0e-4054-bd3e-cf5a70b4ba7a"
        },
        "item": {
          "id": "969a30a6-70e7-4035-819f-2fc2340e8800",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0dc3a6b3-e220-4581-8453-7f19bdd19035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d01e847-f964-4129-b017-d653814edb1a",
        "cursor": {
          "ref": "8b4314ba-a9f9-496c-87ad-afe7131624cf",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cfb82d8b-2faf-4c9f-8f48-5f75dedf98a0"
        },
        "item": {
          "id": "9d01e847-f964-4129-b017-d653814edb1a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "51a56ad6-ff81-4b5c-bce1-ecd5a1984cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0e5a21-2c00-444d-8985-66292e4439b3",
        "cursor": {
          "ref": "d88ea041-16cd-4bc8-8ba7-679589378327",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "528e631c-98bf-43bd-9c18-5e6963351a5c"
        },
        "item": {
          "id": "9a0e5a21-2c00-444d-8985-66292e4439b3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d04ad7d1-4c25-45c7-96b4-bd98036aeea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df511533-05df-4fdf-8bc5-f5e11d637cf5",
        "cursor": {
          "ref": "459c6e4e-0ce2-4a5d-a195-48e68ceabd62",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "732ebf00-9a38-4e86-b0cc-b4534994dcd1"
        },
        "item": {
          "id": "df511533-05df-4fdf-8bc5-f5e11d637cf5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7b54b3ae-d82a-48e2-a29e-e4a1d1e5812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73397903-913d-4721-904a-ac01f0870c31",
        "cursor": {
          "ref": "19342000-d47d-4da1-9d2a-51c1edb2634f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24262241-6d5d-4ec7-9cae-6e266aac6a47"
        },
        "item": {
          "id": "73397903-913d-4721-904a-ac01f0870c31",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c10669ba-fa62-4616-bf35-6d63913fffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c274509-fd14-4bd8-aea5-108c86a9aaea",
        "cursor": {
          "ref": "04a8e6fd-2b35-4c51-a830-f2a27c1e90bd",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2f55882b-911e-454c-b9d9-3b8c7c17437a"
        },
        "item": {
          "id": "3c274509-fd14-4bd8-aea5-108c86a9aaea",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f904562b-cd63-42eb-a700-e829a47b6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b474b5f-e147-471a-949a-e0f927bb3919",
        "cursor": {
          "ref": "eb8f3029-0ab2-4d77-92d0-346b6512700f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6e5a085a-b30e-4100-9fbe-c5c60921a898"
        },
        "item": {
          "id": "7b474b5f-e147-471a-949a-e0f927bb3919",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "38e12c75-bc40-40d1-830c-4befde17bb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2742bea4-1530-444c-a673-fb9a1acf0371",
        "cursor": {
          "ref": "7840d954-204a-4c0f-aa25-1ca5dad978d4",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3fe0b624-294a-4229-803a-1dc605aa3efb"
        },
        "item": {
          "id": "2742bea4-1530-444c-a673-fb9a1acf0371",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6f0db3fd-497f-47d0-9630-e16188d3b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33aa011-f8e2-4ace-a234-4e3e9f7e58c8",
        "cursor": {
          "ref": "776de9be-715e-4cf5-83c0-a35f4b49ab36",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "62aeae33-15a6-42a8-907a-7644596fcac5"
        },
        "item": {
          "id": "e33aa011-f8e2-4ace-a234-4e3e9f7e58c8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cb29a7ca-9c03-42bb-9861-64d13cda9e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7649cf9d-ff30-4ebc-8529-f5fe4b13cea1",
        "cursor": {
          "ref": "664f3e8c-d897-400f-b5dc-638a59c7e988",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c49bffa1-2c6f-4cf2-980b-e9bc4ccf8b2f"
        },
        "item": {
          "id": "7649cf9d-ff30-4ebc-8529-f5fe4b13cea1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8d71b373-5377-4ece-b190-16eed635639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbcf510-f973-488c-bb66-fc04282bc856",
        "cursor": {
          "ref": "56a1f6ca-34ad-4936-9d52-0a1841cb0dc8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c334ee76-71bd-4962-a7b8-a559b7f1532f"
        },
        "item": {
          "id": "fcbcf510-f973-488c-bb66-fc04282bc856",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "aaad0480-e3e9-46ac-bf51-e1badda38987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff505012-22a8-486f-95f7-f950c5ed141a",
        "cursor": {
          "ref": "202c89b4-9298-4396-bd17-764fe4f516c5",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7be63151-3297-4ce8-9aa2-4790d9d774e9"
        },
        "item": {
          "id": "ff505012-22a8-486f-95f7-f950c5ed141a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c838e3ee-3cef-49a0-a4bb-4b33c34112da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646263c7-b787-4d0e-8ecc-4e0103796f18",
        "cursor": {
          "ref": "6a400fb1-4856-4119-83ee-cdc9d0f25370",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d455f9a6-00f2-4c2a-985a-7c04d2e61d55"
        },
        "item": {
          "id": "646263c7-b787-4d0e-8ecc-4e0103796f18",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "339ca999-8240-4b74-b264-f1247e9d51dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de678522-fdea-44db-bafb-2ae8e073971c",
        "cursor": {
          "ref": "df461899-74af-4b20-9dde-adc694689bfc",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b947481d-c213-4b73-b94a-bac6938af7ed"
        },
        "item": {
          "id": "de678522-fdea-44db-bafb-2ae8e073971c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bf3adf96-3306-43e0-8b6a-422f425dd3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf9968a-55b1-46b3-b32b-85e3fc28ffe9",
        "cursor": {
          "ref": "fbbc2dc2-1f6d-4b53-bfab-710d37e9c8ce",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e708c4ab-4eff-4008-a9ff-f4697c1c6807"
        },
        "item": {
          "id": "7cf9968a-55b1-46b3-b32b-85e3fc28ffe9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7a8482e7-d137-4b4c-b808-1e41926b7808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e576374-8880-450c-88bf-637bee76462c",
        "cursor": {
          "ref": "b8f80fd0-fdf6-450f-9f08-04ff8b4a4945",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c1f8238d-7470-49d7-97a0-54694ba945c6"
        },
        "item": {
          "id": "3e576374-8880-450c-88bf-637bee76462c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90212e0f-93ce-4954-b949-915a58459fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f0d19a-b7c8-45d2-969b-8f98d1668e4b",
        "cursor": {
          "ref": "688f9645-442e-481e-be96-5ab6df86424d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4390aa5a-01e6-4a69-b5ea-5429c4a5904e"
        },
        "item": {
          "id": "d0f0d19a-b7c8-45d2-969b-8f98d1668e4b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "433b16b9-46eb-4f0c-ba8b-71dbbd9bddca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d07e5f-44f1-4a68-aa5b-8385ad0d282b",
        "cursor": {
          "ref": "98f7fbc9-4cdc-4a32-9495-55703b5fd91b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3c47dfe5-f1eb-440d-996f-2b3541c6da7f"
        },
        "item": {
          "id": "68d07e5f-44f1-4a68-aa5b-8385ad0d282b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "232892f4-c03b-4c4e-b2b6-0f555d44e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d441e2-0738-47aa-9ec7-7fe80bb13ba1",
        "cursor": {
          "ref": "d58ec31d-17b4-4e36-bf2d-f6207b08373c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bc746cef-72f2-48db-89ca-ec6bc607552f"
        },
        "item": {
          "id": "49d441e2-0738-47aa-9ec7-7fe80bb13ba1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8058043f-02ce-4f39-a9f1-93916898d131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06af66bd-f593-4109-9681-5af300d28984",
        "cursor": {
          "ref": "4b5aae08-0b14-4153-8300-359894e4f3be",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b4e80a52-ea21-4a39-a468-45d2089184dc"
        },
        "item": {
          "id": "06af66bd-f593-4109-9681-5af300d28984",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "23d4c0f5-ebe0-4f32-bfab-d545d7d9c5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d40e62-6949-4db1-ad8e-b93908f07057",
        "cursor": {
          "ref": "024dd8d6-854b-46f0-9c11-ccded055c885",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "db3d7c3d-cdf6-43d9-902a-84cfd340e0a4"
        },
        "item": {
          "id": "b3d40e62-6949-4db1-ad8e-b93908f07057",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e8d81290-76bb-404c-bf82-30d741334f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921effdc-bca9-4dde-b2f4-3fa583e7ba8c",
        "cursor": {
          "ref": "43cb4d2a-0856-4631-a84d-bf1718bfb0ea",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1654d6cf-1c8c-4548-8096-dac3d21633a9"
        },
        "item": {
          "id": "921effdc-bca9-4dde-b2f4-3fa583e7ba8c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "473df0b7-7398-489b-9bc8-9247b9d22640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e46077-87ab-4d5d-ae35-b1e6a0203ea8",
        "cursor": {
          "ref": "130bb16b-4fbf-42a6-8948-d863a659ba37",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "44920fd1-6bd0-4cfc-bf3d-90db0b5d614e"
        },
        "item": {
          "id": "45e46077-87ab-4d5d-ae35-b1e6a0203ea8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c898dcd7-40f5-48c5-ad45-891ced995f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc9ab01-9279-46d3-bce5-3f68c3e31440",
        "cursor": {
          "ref": "978779f8-cc43-47c9-89d6-b96939df7026",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a91f94ba-38ac-4b69-bcb7-8f3196085a69"
        },
        "item": {
          "id": "3fc9ab01-9279-46d3-bce5-3f68c3e31440",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a672b2eb-4a27-43e9-9d65-d55cb4d3fca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be85b9b-fb03-4daa-ab36-a36a6b434931",
        "cursor": {
          "ref": "146c5c1e-62d4-4532-b3ea-0d2de6a60e5b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0854f7bb-449c-448b-9495-e7dfe0b9c7c2"
        },
        "item": {
          "id": "8be85b9b-fb03-4daa-ab36-a36a6b434931",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2979bd3a-2fb6-44e2-ab33-69c86e267c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e2dc2a-0ca5-43ee-88f5-4c5b51eb4d5c",
        "cursor": {
          "ref": "7566119c-6639-4973-8c92-36475ef2c11d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2638fd36-857d-42fb-b8d9-74983d19d0ce"
        },
        "item": {
          "id": "e8e2dc2a-0ca5-43ee-88f5-4c5b51eb4d5c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ccf91cf5-f08f-4d09-b564-3e284f2aa624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e1293-73ae-4322-8455-1ae7a7ee49c3",
        "cursor": {
          "ref": "d32d12a9-af15-4e47-801f-1ba508306b7d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "43cca976-8b30-4923-b331-9285e16fc64c"
        },
        "item": {
          "id": "2e9e1293-73ae-4322-8455-1ae7a7ee49c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4304c4cc-3ca0-4d51-b77a-2b70ccbacfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026a89ea-b0d2-41a5-ba44-89e28897dc33",
        "cursor": {
          "ref": "cdb8039e-6863-44e1-8d43-ccebdb8b8df2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "733ad138-3621-42f4-a819-a5a5dc45ff82"
        },
        "item": {
          "id": "026a89ea-b0d2-41a5-ba44-89e28897dc33",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7c70bc6d-8e44-46f9-8b91-ca69c1f6acd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70c45d6-503f-4ab4-afcb-722fc0eb0dbc",
        "cursor": {
          "ref": "9b50184a-fe7e-41cb-af1e-fa4c0df87cd2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7b3c0691-37e1-4610-9c03-f970eb822084"
        },
        "item": {
          "id": "e70c45d6-503f-4ab4-afcb-722fc0eb0dbc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "16e056c7-5b23-4ce5-b9b2-e374bb4e1604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6818d77e-c345-48cf-8555-7b2077e25168",
        "cursor": {
          "ref": "ae5a7a4d-6167-434c-a8b4-893a0d0904e1",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3a90aa5d-c46a-4e4a-b50c-3767c37f2c9c"
        },
        "item": {
          "id": "6818d77e-c345-48cf-8555-7b2077e25168",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "118bf642-dae0-43c2-8235-8bb1bf764749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4040f18c-24f0-4f8f-a172-bfce3a6be0ed",
        "cursor": {
          "ref": "9371d661-6a0e-4135-a5ba-8bd5cfb0afaa",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eafcbefa-bd8b-4e04-97bc-7d3132c47159"
        },
        "item": {
          "id": "4040f18c-24f0-4f8f-a172-bfce3a6be0ed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "18ed58a6-d35f-4bcc-a35d-e82c4e6cd316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32f484e-1dd0-4409-8f70-27c04bc7030c",
        "cursor": {
          "ref": "eedea6c2-6144-4a41-9107-10152f524640",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8b5ab61c-459f-454c-a59a-da02b726f239"
        },
        "item": {
          "id": "a32f484e-1dd0-4409-8f70-27c04bc7030c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1e4f0fc0-1c79-4a02-94c8-7dad2617b2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b5ca0a-5585-4d02-b5e6-704d5290ee1d",
        "cursor": {
          "ref": "17603087-3da5-4f87-83bc-455e27ca00ac",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "45a2b9bd-a7dc-4fc8-9888-77480452bd14"
        },
        "item": {
          "id": "a8b5ca0a-5585-4d02-b5e6-704d5290ee1d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "84ffb9a2-6448-4305-bf2b-7ff9be1a34c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd85d51-c35b-404f-b3ee-e8dde2cb340d",
        "cursor": {
          "ref": "8738a572-7cbf-4a5e-8ac8-ec97d8d53c3a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dfa13ddb-e391-466a-8616-c3e981068047"
        },
        "item": {
          "id": "7fd85d51-c35b-404f-b3ee-e8dde2cb340d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8f158501-d6df-4a18-8484-2f45f4547cdf",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8286c9e5-cf97-4acf-8df2-173ac68e7db3",
        "cursor": {
          "ref": "19c5b6a8-cfab-4e45-a0f2-53d3ee25cda0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0ddcdea9-ce72-4378-8e05-193eeaf22ab1"
        },
        "item": {
          "id": "8286c9e5-cf97-4acf-8df2-173ac68e7db3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "03686c73-c658-457d-830e-10bd5d8a7664",
          "status": "OK",
          "code": 200,
          "responseTime": 5287,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bec6b7-8a12-40c8-a3b1-4a8e6537e540",
        "cursor": {
          "ref": "b16d07a4-595b-4f74-8e4e-f75367d85619",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0a20a32d-dc2b-488a-a14e-e504f0ebeaf2"
        },
        "item": {
          "id": "36bec6b7-8a12-40c8-a3b1-4a8e6537e540",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d9dc14e6-e52f-456c-8498-5c7ad8933858",
          "status": "OK",
          "code": 200,
          "responseTime": 2648,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e54828-05ac-41e3-8e2a-ac7e1b407650",
        "cursor": {
          "ref": "2d27756b-f7cc-439f-9eef-80f33313b9b3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e077a833-eae3-4673-a2e3-456f2bd8b468"
        },
        "item": {
          "id": "a0e54828-05ac-41e3-8e2a-ac7e1b407650",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7eb40fc7-4f00-458e-a9c7-1a16090f243f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e54828-05ac-41e3-8e2a-ac7e1b407650",
        "cursor": {
          "ref": "2d27756b-f7cc-439f-9eef-80f33313b9b3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e077a833-eae3-4673-a2e3-456f2bd8b468"
        },
        "item": {
          "id": "a0e54828-05ac-41e3-8e2a-ac7e1b407650",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7eb40fc7-4f00-458e-a9c7-1a16090f243f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80932892-e33a-4faf-9fd1-94e1ff74357e",
        "cursor": {
          "ref": "453ce583-33c1-473b-b1d2-bf57d0111b92",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b875091e-01fc-48ca-8be8-d79362c5c31c"
        },
        "item": {
          "id": "80932892-e33a-4faf-9fd1-94e1ff74357e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1330a06e-714f-4219-86aa-109156db43e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c3d842-fee7-4220-9604-a362fcacf9b6",
        "cursor": {
          "ref": "b53c71d8-13c0-449b-befc-5698d237890d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a91af2aa-0f98-4572-9464-6926f0ea1daf"
        },
        "item": {
          "id": "99c3d842-fee7-4220-9604-a362fcacf9b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8abe5eb0-75c7-4f6a-ac03-d4829cbd346f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}