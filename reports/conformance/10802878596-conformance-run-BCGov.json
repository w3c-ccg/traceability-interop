{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7ccdaee-1f9d-4828-bdd0-4b9b131087a4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d275914e-0ec2-472f-8d21-6837ee0fa8f3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1d57173-0628-435e-8a6d-ce8c0a0c9e3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "986cf638-62f1-4e40-aef4-daa3933d70cc"
                }
              }
            ]
          },
          {
            "id": "b9e21cc0-2555-4174-85cb-80d175374404",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aff543cf-6f22-4149-af6b-62ba70aca71d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a484d3cd-d2de-43dd-97ec-d6a17a05d60b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "feb2d9c1-823a-4d7e-8238-9fced16d51a8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d4815756-0f84-4572-a9a9-52d286b4da8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c50142b6-a161-477c-8b18-212788bee6a4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f045ae-4568-4848-9e10-290d1746768e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7182740f-f873-4d4f-a835-02af9d31ceda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6a4cf9d-c9f7-4a81-8cec-c3855ea1eae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49e1c14b-b060-4bf9-9198-836dd2af0867"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f64ae032-e200-4794-bacb-72e3a710a3fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d088b53c-450a-4b7a-9602-44c62781c2ee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41fff9b5-1bcf-4528-b629-98f3be8f6ba6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "670561d7-69b3-408d-9c25-9cbe15aed485"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ca73500-f97c-4256-8b86-92713bcdef13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a9fbdc5-b449-46cb-8f61-3bc6b36e7466"
            }
          }
        ]
      },
      {
        "id": "cbec3feb-6fdd-43c8-89e5-5381f1fc88ed",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d6a73a8e-1cc9-4316-9b30-c899b0337717",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d77d2587-c4b8-4ec9-9e5e-f074a34bb641",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "707f4939-df76-47df-ac50-202bf0576eb5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df781d7-f858-4312-a213-5f46b4c83480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f10b9e16-1494-4f79-a7da-9a12bc30d8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d7cab-b575-49cf-bd87-b49ccad05ca7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eb2af5-cdab-4d2b-84bb-71bd65a33146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865aacf8-eb94-45ef-beab-142a383170f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7070e474-5b7b-499f-bb02-55c41acc8832",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d45f077-e244-4fd3-ac07-6de347fbd6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "047af13a-5fce-40d0-b63a-307a25ddad6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11d410fe-420d-4496-b63f-f0321cea68c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f09997b3-41f3-45b1-ad0a-46732e5280fa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bf6937-4d48-4abc-b96d-2a0dd0f24a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a31cf09-8b14-4ed8-8daa-5ae604e372b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023e2707-3fff-46ee-b1d3-b02aefa94c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a21309-eba2-4bdc-a669-00b7416a378b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e505a1f3-3aab-4eaa-bde9-1b5c591a5498",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5041e7f8-8c83-47f3-8bd0-8ef2d788d522",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1246c6aa-8441-4c73-8469-07d3241f8b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "27ce37d4-4a05-45c7-9ea5-54b1aec2412c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5848da61-53ec-4b8b-948e-5c4e78975919",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3c811526-482f-4a16-bf59-1c55df087465"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d9310ce-876d-423e-b69c-d329580c60a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e41ce1c-d502-411d-98e4-e46b2e55c078"
            }
          }
        ]
      },
      {
        "id": "18f6859f-5bc4-4f3d-8112-d7e4fa6c283e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "57b8ebbf-17a0-4804-89fc-b561019956a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb149a61-bd02-400b-ac5d-1de051639d4f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0cb2c7ed-b652-44b2-b552-da4c05262ab0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407321e5-758b-4b19-967c-4d79d9ab1298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066acac0-abc3-47cc-a426-7c558008edf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e489ce-1134-4668-9284-e084ce9b3bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e857e662-57aa-4992-af4d-456b3c486d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e81bcaa-782f-4645-b4b2-b03273a3e33f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f45e4c-15c3-436d-a979-fa331ed88091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0376ef93-aa94-4261-9ef5-1abf5c399012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770c5855-49b3-416b-a365-219c24cbcc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "555e9932-8ccb-4cdf-8bb5-5343e5186cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bca20c7-5c20-4407-8eac-9f61af31c279",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e7abf3-aa23-4710-95c0-4d08adb2b7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43f0e42-81e4-40d3-b49f-18d7e5cf7f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12e0bc9-8ddf-4c67-97f6-1db5703492b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eae99e4f-18c6-4339-bba2-7829785abf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7834d8-7480-4304-b28e-8401542faedf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd006b3a-eee0-478d-8276-a3c8f2b49bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3268d848-9bf6-45af-b7b2-11b3a4da90b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec06dda6-4d32-4fb8-b8cf-f2189c537aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9107fbe-fc63-437d-baf1-b493a567a74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f512ad4-76d1-4872-ad16-b270d24fd8e9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088021d7-848a-4b48-945f-e6f313a85c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9250612f-ac69-48c3-9a2e-86c000fdbe7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2182c9-f9d2-4ed4-8696-13b3ad6a1e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05ec3792-a411-4bb4-b506-0432b526f2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf1dd7-8a5d-4b53-9f53-0981d797313d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae1f5b5-bf6f-4610-b867-06d09b33bcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5cf5f4-da73-4841-b714-683cc1abe6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7d1c15-651b-49fb-bb13-2b190c956c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25f1a782-271f-465f-a0f8-217094c6be13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef6dcda-b843-4c07-b3d1-9be124a24b5e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697153b0-b173-488c-a3ee-5dc6b453bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d5ac2d-9b77-4558-a80a-415efacbbf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2720c1-c305-4393-8612-2c04fc3722bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5282709-2c75-4066-a48d-1dabd03abb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549c6815-e3b7-4c46-a5da-1e416ad75e1f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5b2ab8-974c-4528-b15b-45fd44664acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3047a6-a8f1-4bff-bcdc-d11ccd8d3b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333269a3-1878-4d01-9873-9bc84b6f1276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "394279df-98ea-4aa1-a16a-b67ffbe987db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8074e6fe-4740-4888-9500-c4adec1c8eb9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9648ed2c-9db7-4af7-b191-68fe7f1d4321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df94d205-7664-4deb-a539-8825c51aafbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974ac26f-66ba-4c5d-a8e9-392d1595a28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5ef81b4-d09a-41b7-96b3-bc15ceccbd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d509233c-c6cf-4006-b33a-113f61177453",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243201ed-49a0-496d-a642-2994978dbfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b60496-fd24-4b86-b8d1-f8d9ae22aeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a829e6b3-648a-4c54-ab87-526c97ba23c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c7c1af1-ce48-4de9-b3ab-74545f29cdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a3dee2-24b0-45a3-b834-ee239b2bc2e7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f71f71-82bb-4b26-b7b7-0d148cf3669a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a9130c-4f22-4db2-950a-9a5ae05f0644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fbe9b8-8812-4d7b-b15e-fd6de9689055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da21394d-6b1b-4c1e-882f-a4754f080906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9fe7e2-6eeb-4120-a752-6c55e49c9932",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095f1f2-eed5-41ab-a7a5-c66a9723cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583135ce-d14c-4d83-b73a-7e46c5ff8d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e3458f-87f3-4dee-833a-68c015958416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8a48898-b70e-41ec-a126-bdd16739fadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02718a47-926c-4b0e-bf36-6f622c8d4ed5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279d650c-a705-4234-9c6d-54a79f750093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cf565b-878e-4828-b242-c3fbd7c4af33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81d27ae-3a71-444d-87a6-4a784639cf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d63f728-9996-4fa1-acea-e45825a8a9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f13e5ac-2ee3-4149-a511-5d3dfb3b3a5b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d7b6b5-bf9c-4e0c-95da-7e79ff9f1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fe239b-295c-4503-b1ba-3fbe73ae1215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ba9ebe-9d88-4d39-90d0-9c47d68d4fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf96b13-73ad-4161-8703-4bd6108cef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f23c9d5-d50a-4163-9d5a-9dfde13eaa19",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28fa5ee-cb10-4452-ba9f-26270d231103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8a35f9-20c7-4015-97d8-f6d00bdfb5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19ff71b-884e-4f94-8c52-1525db8f73be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e88d1115-7e15-487e-93d7-8ea54dcb0425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ef1745-9703-4344-8367-cd7956d78e3f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b38e51-3d3b-4b22-ad0b-94eb2d005592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a632bd5-1aac-4190-940b-0806a41b7029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adca456e-862c-4364-9985-0290a6570de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59dd910d-c2e4-4f4d-8fe8-9182725fa60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba3c3da-d704-48af-a1e6-036618065d3f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140553b1-8f21-4470-81a8-09ce9c3a96c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477cf7cd-b3a7-4330-84b5-767dcce06140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455f42ea-bc57-4006-b763-0ab3556d69e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d816796-e434-47d7-aed6-0e7f2509734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2646efcd-c15a-491c-9b12-3a31b93feb9b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a3460f-e586-477f-88eb-f435d04ef37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4289ed3f-6c1a-4ca0-bc9c-8d5ea377a506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d0920-4cd3-434f-9788-39d3f1acc756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be9166ab-a732-4ba3-bb2b-d6bed20bd911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b3b1ad-4ee3-4c9f-ab90-fcf137af71e5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c8bae-5b30-41a0-90d8-d8a0c2fdf0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71194d4-3085-4d3e-ae0b-b146ca7f294e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06934a76-d3b3-4a0a-8688-65e7a8dde4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e8b3d7-8acc-4aa2-a932-fc4bd039077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b70316c-e0e6-45a7-b4f4-fd3ee4ebd6fc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4591ba-d4c4-45b3-9eba-0c7c50474bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbabf282-91f1-4183-9a51-521d8231ecb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c161c9-1070-4ff4-be79-23a97abb4971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2911573-5458-4bba-a838-72a94c974713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f988b9-919d-41d2-836c-88da6e0265fb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ddf428-ed49-4302-a841-767aa741a257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba26da90-0e96-4084-b927-01375555844c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7489f9a7-e075-42da-9ca5-ab177192cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd12194a-e4a9-4f6d-8af3-3c6afe2f1996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c286a82-c967-44d3-84fe-9192f0fc5bb1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3128ee3-7a5a-4ade-895b-e6fcb7fced18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227a0137-8946-4b84-a33d-3dfb827ebabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78715eff-15b9-43d2-884f-f7e9f3349e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "facd0a9f-8471-4cdb-9211-a4d34d8bc825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5353f6a4-327e-4e24-b664-ce67a8e9c6e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8f7db-91ec-481a-b4b2-ffcce18eb003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb41c63-396d-499a-900e-077e0d0ff9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870e077f-0d2e-4cb8-bbdb-b39a47eb4857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd47e17-95af-4cb2-a928-4a78a4033e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5808e38-474a-49bf-a6fa-b7efe1c76b83",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd1b8aa-bf57-4992-91a7-f2b5a10f8824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca5aae0-f5f9-465e-b53c-dd9e0b96237e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec08fc2-61da-4708-890a-c3741dcf8837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb72620-e4a9-4919-a6b1-1aa8cf9d92f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d581b8-bcb6-4d2e-8000-3c3719f4077a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fd0fe3-9634-42a3-a96f-8e3722f7b5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56441bc0-02b5-45bf-98de-5199b9074ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836259a6-d671-43d3-9a3b-85f1b98b4855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f33b642-3db9-4c92-918c-f95ac8e194f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505c67a6-c689-4a0a-a5bf-74d641563c67",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74588f4-9431-46de-b295-5c60a8b8aa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d96caeb-b92d-4cf0-9f7e-c18df86bb743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8407f09b-bd9b-426a-a49b-bd63f8d55426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f9c2d5-6ce6-488a-ac4a-4445d177770f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04f83f5-a708-4238-9dd7-e61aaeb580d3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a5a555-306a-43d9-9248-65c50cc817de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b53e43b-307f-42d7-9031-ab195f570c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21134d7c-38ac-4a2c-b5e8-ccc1e5a64d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87303d60-6203-4bb8-b452-4ab5e345a442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826d3a02-e8e0-4a6d-942c-7b8c0ec91519",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12555ee8-a70b-4488-8afd-11842eab4b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c61978-0416-46d4-a9db-a5e5633d1ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e4026d-f6f9-4cea-b47f-94a7b428c394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be7cd06-ea11-4203-b647-94944a13f82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd5bb4c-95cd-4611-a9c9-295064cd095d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d015b0-9ab0-4449-a4ad-22973e85f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01208c39-b395-43a2-9e5e-f916ddad35c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc9c5e-8314-4e08-a093-291797fcf719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65058cc1-66bf-4c08-a43e-cb848083e224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051477b7-f83d-4931-93f8-4ea89d10b1c3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fc706f-4dbe-4959-bf1b-a763781b615a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16d6ae7-40b9-440f-9710-79be58dab4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879c1843-d29e-4341-9b08-add7d772eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f0fa3a-18f4-4895-9a2b-86a649579a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d80848c-a7ad-4a8d-a25a-a490478d842a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986fb3d9-53b3-4666-ac34-d85d207551a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ea2aa9-a978-4e6c-8f9c-cc2c7cdbd07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e54eef-971f-42be-8049-d448001e87ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8039ccaf-a0e0-4e50-b48b-94f769d26ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15f6cf8-3585-48a1-b90c-0b9789aff899",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f40944-e51a-401a-93a8-d12fc88a0569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe42db5-38af-445a-9656-f431dc2c0f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd6648b-43b7-4291-8f29-c3a498617543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58c9cbf-79c7-47cf-b1b0-24a47f61a7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb3f9e8-08f9-47b8-b7e6-ead7763ede82",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b830b-66a7-4d86-a544-a9595c6d1dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb22ca04-b6b0-409c-8f02-d4556edd2a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1a36cd-7662-4fc5-af5c-f62b693f99a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbe05e5-427f-463a-9efd-d6c703ce1c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e904e108-9e87-47fe-bc67-8b70ec9d9def",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a019b97-d3a5-4d8e-9486-3148b896f032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8257370-8590-4850-a2f5-bf57343dda34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f88273d-e20c-42cb-9b92-894faa4e0a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6de637-07f5-4778-847f-dd91f1afb649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb128e3-ffb7-4d12-bbc6-74332432e8ce",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b9463-ee73-47da-ad92-949de2337a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007ae4dc-c4e0-4341-ba07-9c10ae6c8132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6ad0c4-a574-489b-a024-30c45d962b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "df54d2cb-d48e-4acd-98fa-62425292b5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13113ea2-5efd-4179-9cab-5c2aabc2a6cc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319f2b93-1e00-41f2-858b-4c76d8e3b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a851ca65-0963-48f6-bdb1-32679ad1aaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd01138-fadf-46e4-8d3f-3bc1cbe85881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be4f411c-e343-40bd-b878-7883f29a0ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24db275c-d3e8-40ca-933d-66fe4a0b86a9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2fa108-f32a-41b0-b2fa-e53238eb0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3490a4c6-08cf-4f50-9f4e-22571f96c9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d053ab-d747-46dd-a1d9-a6184eb8095a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b52864e-f9a8-412d-b6b5-9ba629679f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638e71d5-c244-43bf-9271-56bd4403bd02",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f35498-2470-4430-8aba-a657e3601c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c722e8ca-807b-450e-bf2c-13f8b1271ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476976da-e716-4b98-ac28-64fabb987e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "386d942f-7ac9-40ca-85ef-e3e3a6254ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe71b9d3-536b-4f54-8148-79071c661cef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f40025-79ed-4c54-b053-af745ab7631c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa84ed51-c8f5-4094-81e8-5b58515a112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a74e6c-2db8-4541-8f8c-045801736e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6236cce0-d4c9-47cd-b073-917ea0d13930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4865981-200f-40e6-85d5-c7cf27a88474",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421ef78f-465d-46fc-9441-8ea17c1cb3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c008bd0b-0081-494d-ad06-dcc7d221649e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c73b2e-e3e0-4100-8945-5723f8dfb42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1a44ce-e9b6-40e4-8333-9e820670d096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e2b61e-68e2-46f7-8a8e-2e8732d70a17",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422fd3df-604e-41cb-83cb-0ac44ad0a015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e940aa51-7809-4ade-a857-1e552f412694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb19eeed-49f9-4092-b166-9c7fe69a0b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c75a020-18c4-417d-9fee-204113a8e934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf182190-40e2-423e-b2ba-089c79a5bf96",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b60f47-14e6-44d7-a42d-36bc685dbf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3f342c-2207-4b43-898f-47d4a82b3b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94115f8b-802d-46cd-a453-c12eb83d39d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "89f47d01-6bfe-4fc3-acb0-d2e70400eb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee433a0d-244f-4377-bcca-f52461087dd7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a7ac4-a58d-49ca-8515-ff0a2fcaee22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5805ac35-b4b9-45b4-80c6-9221c00b6239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cac538-7a23-4ccb-8fa3-b81b5ab25d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8663d1-29ce-4b1c-a1c1-7b8305ea2fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41ec3dd-15d8-4388-9688-25335f7ef29b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6d5fe5-0035-49f3-8d42-443d760f6d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718e1871-4706-4a9e-bfc0-5517c93f6e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80352342-bf15-4823-b272-a86cb686bade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "de96ba6d-369b-4067-be66-f4fa70516de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6cae1c-7c9a-44cc-bd03-13355f9034aa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21286db4-13b0-43c2-8972-9e7011e73abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1732419-c083-46c7-9bc5-36fd7997746a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c751cc5-b2d5-404a-9d3d-b2e785a8d6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45776236-2053-4f46-9221-29f781e47adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a7ad85-aa9b-449a-ba25-8e3efa13595c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b448b1f-a536-4bf2-b5dd-9a57fedd3e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4f7575-803a-4c6a-afa1-4ae192e90f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16062d0f-1cf0-47bd-a3ba-a0b970401046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3806086b-2bbf-42cf-9526-26a61b0bbc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85285a8f-4c09-42c4-bd0b-5032f7f31c54",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a691a1-611a-48a8-afd5-8f1e3cc641ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9e2ea0-c3ed-4179-a95c-1f5eecfe32b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2897cdd0-2ca9-4e1c-adbc-98e64420e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43413c05-66f8-4df2-a98d-26fcc081be7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbe7505-d472-4976-ae68-3b5c42cf2ebb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003c917d-4398-444d-99e9-ee24364b9099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8420d299-5b37-4daf-94e9-02eb8e217801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d3d05d-2ba4-406c-a2ec-f155d2b0f288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "743daaaa-e8df-4857-b0da-7b1fa72c5ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791e2396-6cfb-492a-b83b-2e9abc0facf9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763bfd4e-56ea-45dd-8d5d-f4959089af88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb3040f-21ef-4280-9a68-bd728b73d9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d80bd44-166f-4f75-8bac-6c3d712f5f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1cc2b9-ba02-4b17-8842-5d2cdce424e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aea888-bde0-484e-ae28-7d725f3ec9c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cc6a09-53d2-485c-b1fe-a6bdbd561a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ae91d9-2b6c-4691-a75d-28d68a03000f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758caf61-ac17-4339-86fd-cd2985dfc959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a503913a-0882-403c-997c-bb5b58de1982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eccc157-5a73-403f-b9f6-994542b01d4f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50db400b-92c3-49a3-8086-9cd08fd3ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2ddaa3-c458-45eb-b455-fe35b81ab434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ca7cdd-0c13-49c6-9fc9-8bfb1d48bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a7d6e0-58e9-42f2-b61d-fe7cfdc0ca40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d2a348-2415-4f19-b311-e776316be45c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fe430f-c75d-4bbd-8bb9-35b3fc57a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db41629-1d6a-45c3-b9f4-72cd75cdeeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d253de4-3c56-4d1f-a8c9-974f3a2f71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdba394-39ac-4432-a184-0eca7ea203d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7f5c08-82b8-4f2d-b121-15b3f036a880",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1fa039-be48-41bb-8d4b-c001dee3437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d097966d-be66-4940-ae27-e289c4486f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347f4327-3705-44ce-9336-0dc832418994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3cfcf8-3efa-45b2-a9a2-b39f686d1c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c97e06-a90f-4c82-9f57-8960e90e88f2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca48389-b977-4df7-b094-9d9a326dee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a71384-0ca0-4570-b608-ab90c8adf39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c44a0-1e38-4f30-b663-9d05da246e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8f797e-473d-4779-af79-3943a15f7f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7169ef2e-ab81-4ef0-b978-e27bda75ec1b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4da367-bd44-46f3-a885-87393623f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50520bd4-af9d-4dd4-a704-8b1e8d394ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44183be-c249-4901-9cb0-eda083dde9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea6d082-ed40-40f9-9e4b-8abdc16d47ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8104131e-db04-4bdf-911d-68019d63b300",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a0ca02-e778-4ddc-9654-6bebeb289e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2600466-78a7-4481-8dd7-325d4ab3570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f344b0b0-4787-4d25-939a-56eeb2a5856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5753d3-d525-4011-9fbf-87130d38e28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b450e6b5-546b-4be2-b16e-5a0f3fa87b58",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90bad24-c1ed-4201-8e65-531fc3c6a348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8564c597-5c06-4005-827c-8baa2b9a1f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c42963-981b-4ca3-8ee7-1d8ecb256471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7176a01b-ca3f-4c14-848f-05a26fc7c6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c4efdd-386d-4b04-9134-6e0fe5e915f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f693e-4ece-40ff-bedc-0cf3eeaeda18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e72cfe-b7e7-450f-8cd6-d8d7619fa939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec17f90d-c8d5-40cc-bd6c-38102b1db65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a85c27e8-2ca5-407d-a1ab-3bb85675debe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ceb5ac-3da4-4f7a-b5ba-e0a836559490",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a628f132-14bf-4ea0-8872-edd9bbe98805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32179c57-30f1-401a-83f5-9223e6257f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbcd562-5433-4cad-8ee0-3d4ffebec4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ad7f10-ba9d-4b1a-8756-a7f1b83c1bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f39982f-dc6b-4e0f-b880-e02ce0ebfe35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3fe9d0-afa9-47d2-9435-2a87f1b4a1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfbad56-6375-4c71-9fb5-ea9130662f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed25344-44b7-41f0-a6da-05c7a8597c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d77df34-273d-4dc8-aaed-0b803bbeeb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a6b01c-f203-4186-b07f-a07c932de348",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388a2c59-8298-4653-8eda-5724aff6e1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b9ecbc-fcd9-4945-b477-01d36f920279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac678d-95ad-411a-9585-90f267ab2ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c9e2d2-ea2b-4102-a683-959bf5d79906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad944fb-08a3-49cf-9fb1-dcfc1ec7a75c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1b785b-795d-4fd7-b9d7-cebfcc4e1e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23627189-aeed-493d-b7fa-f4a6aa509dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d809cc03-a058-4475-a040-e8fdc29f0ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ca956a-4803-4f48-8865-f0d9cffcdcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe0a848-c0c0-4730-b266-12717b4af0bf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837ebae6-3ab6-4b16-b3d5-a2c77aec70c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98a1cfa-e146-4d34-bdd1-c7c1c02a14d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81b015f-e555-424e-a8d2-945639149e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9710e99c-a13d-4955-a01d-8edd86c3a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f949e1-44cc-4946-b200-59fbd4033950",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672fd38c-c7a1-4dff-9d9e-05fd360f5ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cb88a9-d1d3-453a-9823-9172419e5e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c12461-0414-4bd7-90f9-2e82986d14d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c8008c-7516-4a7d-ad08-153ff97d8ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c7881-ccdf-44f0-96bb-be53d55fe2de",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b420316d-2e75-4039-9fa4-65d54f22f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5459aac-9db6-45fd-8c6e-bd4b638e00ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26861be9-5d63-4ccf-b8b9-76f6efafac5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d26a00-621e-41f4-be2c-ff3a4d2f4381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b3cbc9-9705-41a3-bbfa-d9ecf14e674d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7209ed-df1c-4bce-9f76-c11bdf00731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a66bc6-6d82-405d-9f6b-480caf711bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7c0b85-2b82-40bc-af0f-b2f4057465fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87f4582-0a1f-4eac-b56f-5cb34922df49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b9cc4a-3d51-4fb1-8737-b56635a044b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2080f9d-7e90-42ef-a6f0-8826f4d53dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1f84b6-f95e-4e74-a1b0-712a1b09a5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1648b58-53e3-40bc-905b-0d46762dab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a205a52f-320e-4668-a844-d72c49bf545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1891bd3-431f-4644-95ac-22f4cc75c28f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26a181f-a323-4b08-8809-91d778a0ad56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba2c0e2-dfb0-445b-8ff2-a255ae284122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba564352-6f1f-4ccd-8ba5-4e2a01d783dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4eb76eb-1df9-4d38-8747-2d2ce546cd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3790aa-0cec-47e3-a6b7-faf9ebb48895",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07b2a86-2bf3-455d-81e2-b84dc3b123c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283557aa-5b21-4e49-9822-57a7eee02560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334256c9-9381-43a5-b863-1806934667ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a666a392-8142-4ad9-82d9-c80080206637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b6394e-7ae1-4227-be21-9764e0a383a2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ececba1b-7d37-49e9-94ef-56c295ce9120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d706243-96f0-499d-8d5d-0b354adbfc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e9fce-b7e7-40e9-9538-7d9b3ecf5c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5d396-e231-4293-bedc-6d2d7c1f466a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39e2921-242a-47b9-875f-6ccb2d7c746c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ec2801-1901-4651-905a-f8ca8fa7995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd029d7-6ac8-4315-95fd-1387ec02f090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb612c0-41e0-4556-9581-f434738d18e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4958607f-8ef4-428f-99a0-9f846d1698a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0109a529-d795-4058-9e90-eae8b68fd7ad",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17437676-94c5-4dc4-941a-0a40129a6c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586c2462-f137-4705-acd6-32f1ca37eb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe66d74-e5c3-49b0-af41-468fb2f2cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "222642b7-bf82-4e3d-9c92-01e1b7f1f041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6543cf7e-f50c-4b9e-b5c6-0e946bbe5ae1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8ace9c-975f-4d88-91fa-55fd6eb776f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e953d692-c9a0-4678-9b81-b23e93254084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9e75fb-0c2e-4333-9dfa-d640e8e19868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d90aa8a0-90b6-4f07-ba6e-3aee358bb2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d3358c-3a3e-438c-91f3-07eca23e95c6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33aa693-b17c-460b-bbdf-e956ae142ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d61dba-5c85-41e8-89b4-ba3b0cf8dbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4388a2b2-7c43-4a75-af17-5ffbe91048a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47384eb4-5a53-47de-8dde-49680c058e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e93a2b-ea9f-4573-8336-12bf5de3ec10",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b419f9e5-c3f0-4a8d-b773-fde2f3e21377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfdc317-c638-4698-a2d9-c0d41603da1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54dffee-b0e7-4d75-8981-c2ac6e8d1417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed192a5d-d4cb-4796-9a7e-cc631d28aec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b26872-0718-4c64-96e1-fac7f12e8215",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fbfe67-9d60-401d-bb83-05ee47cc5f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad9213d-5d53-4be5-a57b-6d546116b295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ff0b37-8dab-45c9-b0d2-8707d6c88be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ba7d4c-e19e-4f8d-81d0-084111863d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062ab38e-f59c-46f9-bc48-262905aba868",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295a5d9-4f7d-41ac-b67a-377c6e35e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4278d62f-b5d0-4749-9d3e-9ae5f22c3094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26165b66-9fc6-4021-9d67-a19eba3b0556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "775679dd-5d47-4bf9-9719-23c53e3b1a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3b8e8e-1cd6-4141-a102-064060b3337a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e1a8f5-2fea-4ca0-8cb3-ab7953ec0b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6161bcc3-cb65-4c61-a4dc-ec13bda03c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879836a7-901c-4583-bb02-99aa6bbdc24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a886b2c0-6c8c-4704-b48e-a561ef1e8141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4a6e51-c50f-429d-996a-a9d9a2d6d4f3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a53f89-1619-4b63-b596-b2970056274c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563071e4-894b-4144-960c-7fdbadbf489f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a729115e-248a-48cc-b17e-04dabd73ef9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "690c45f4-43ec-451e-8d83-36ee71c85c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2ab8cb-4a33-4679-b1de-e0a558a77d0b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9301e8-d568-46b3-91b0-a547e57e8aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed460f1e-a189-460a-8a55-a231aeca2454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4b4cc7-2017-493b-b349-b5081936d11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed800d09-0d31-4e04-98a4-bef9268ce3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21383d0e-c316-440f-bff4-bd77a1d501da",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce16901-555b-438f-8f98-8778ac7b72eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cd4aac-c2f2-4568-b1b5-001d6e98fa3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d478c-23c4-4c39-9eb9-53fbcb1ece6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cee455-2f9d-4040-816e-0b77697cdd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aadf5be-8118-4b5e-98f7-64b0f70df9d3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042cc054-0364-4a12-ac29-bd7d4fcc1f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5342b777-0639-481d-82b4-7b6ba87037b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54d0e9c-fdc8-4a10-b93e-bb37c5cfbabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c50270-b973-480c-a0af-ab96c905569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f050bc-d717-4884-be85-f436d8a0d8fb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f17612a-194a-42da-a6b4-387fbbe533b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e62eac-7983-49dd-ad9a-c090d8f36d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57624ed-01de-49d9-b982-729c36de23d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4729180-a6b8-4542-8169-8f9a667554e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90f3e57-2c54-44d1-8ec6-ab2d6d1cd570",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6289e48d-9c00-459a-a94e-3526aba46bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16b2cb8-7d94-4457-9d4c-75367da6b2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ff0e73-ff3c-41ad-bdb6-9b650affddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9157c8ef-ee83-448a-a599-786f2d4d1e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d13ee7-be8b-4d7c-b384-5f6979762093",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f8217-0040-4025-9b27-7ea2c0d30581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7590ad48-3da4-4f84-be71-df549b05b731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246469d6-8b08-4558-87e4-666a7c18cab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a418e7d-c213-4c10-b3e2-909c6a8e9175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8133582-4eda-4124-8e5a-561ebe8be207",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ecbc3f-b720-4a8e-975f-9a53a13d8dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0458a65d-c5b9-41e6-9f13-98b6ddab2c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd35f7-2600-4a1a-987c-2086ebbde6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04055fbf-2f08-453d-a2a3-96f3833c9af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6bef61-6e62-4b43-9f92-bbf11de4ed96",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bd25d2-72f0-44ab-a1f5-ee038e9e1ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a173d6-6e56-44e7-a0fd-fb7f648a34af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d59adf-769e-4481-bf98-672c1715507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f363932-5c36-4471-886a-ff5df5659795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782df3bb-de03-4add-bb26-0c0991f33929",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b085ae95-0ec3-48f6-a647-4cb585e30385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be80674-5063-4fd0-9126-a0c692046e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b089d536-a4cb-41d3-9032-b98f4a32cc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "974faebf-2920-4c49-8b62-af7d7ae08875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b415d785-15e4-43d5-8ab0-418e089f98e9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a0b61b-85f5-4f3c-8d9a-d5f7c3834f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30481dd9-23b9-4287-8a20-852ccf0ff8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cd2ce0-254c-4dec-9ed1-c2e78fccf1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de8e4612-fe5b-4a50-aa94-b2cf6cbadeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966f8866-66ad-4d79-99c5-f1af29c4c828",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fdbcd6-90ed-4ef3-af0c-5ce1c48b883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166bcd23-d2ff-4f80-8de2-f3c406b3f8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98a4c47-7293-4461-b304-62ed8de68ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40b6316e-edb5-461d-a3f8-ac43d793d127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb2e54b-601c-4bca-8e02-b25d2742e59e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e15ae1-6638-4356-ab64-965a490250e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f240a286-2fb8-411d-be73-7364a889f4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225c36e2-80ab-4790-877e-6a014e31ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f462b46-b182-4c77-9b4b-84b1f31f160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea6ff61-2c1c-4325-a0d8-08260ab2904e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c0790-6365-4853-b02d-944297071c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "48d70296-d4ce-416d-a961-71355f75e471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c774d-9455-4688-a7cb-487f9edb0550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "227b3e2c-ca66-47c0-a0f0-051581f5e0e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd42ac5f-7d15-4201-9c63-e63aef303e97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e4afabd-2c48-4b70-846e-d35af93b29ce",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0f7bed-e463-404d-bc21-451c3576a98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31e091e5-58ab-4301-a2f8-fcec6e826e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418842dc-f686-4b8b-af9b-09403e66a179",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9be9798-2b05-4742-aac2-360c711be256"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffc36bd2-a78f-4ea6-95bb-41f4bbbab675",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7875000f-2e24-47e3-82d4-e6e65cefd341"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1da3bb7a-8cee-4869-9959-6c1046dd9c65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d99392b-2263-4918-8fe2-22525eea33e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93607c3c-40d9-4f82-9c63-581b2ff7fe03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea7a24a5-96d8-4b7f-850a-856c74938c4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd1271c4-95ae-4a7d-908b-c52657fe2d05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60709840-f16f-4347-a83d-4a4e7657f8ce"
                }
              }
            ]
          },
          {
            "id": "2a8bf9ba-50a8-4393-9cb1-a540496c6e13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "784b3dfc-1ea2-473f-8ba2-373f4d1a7628",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dcbd2965-fa9f-4c52-b0d4-6ad0e41d35b0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269d283a-81ea-41d5-973f-31f4693658d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a834384-e235-493e-a4cd-668b9dc5f86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f49bf9e-67f8-4eb6-89cf-b1ba18181b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cc9a9e-fc1e-4e9c-bb14-de1c6c1689f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20c0f1e8-7bb0-41aa-a950-24efe5858064",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e6f36d9-ab1e-4953-8e15-f6cdf3213592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b297b8af-6cda-40ef-84f3-bf14a80c2931"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2348f9e-cc83-4d35-9ad4-0a35b0f63009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "418c240e-b568-4daa-93b9-eb172108470f"
                    }
                  }
                ]
              },
              {
                "id": "b570eb78-a2a3-4042-9f4c-0546745f8cba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b145aeb7-dc74-4b75-9180-f3db8cb52c2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6031a57f-b8a1-4ba1-aae1-30674c24edbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "542a3c99-fd4b-4377-b8b7-3f92245ffe10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6a224c8-6856-4a60-8b44-511c407bec49"
                    }
                  }
                ]
              },
              {
                "id": "1b692047-f6c7-4b6e-89e1-e4a60d43c255",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9229b22f-0453-4f27-b172-37e6e21b63dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "045e7301-8681-468c-a342-d2f46d95a37e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6474984d-6cf6-4c68-a626-db72c1c817b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8d5c223-00ff-48cb-9d27-41d75a43a5bd"
                    }
                  }
                ]
              },
              {
                "id": "80f7e052-9465-48e4-a06a-0130bc1a0318",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "919f2b59-ec39-4486-b431-678f127bc180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5008377a-c8f0-4a56-9735-09bdc590aad4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef87a637-9916-4a84-b392-1e6069ca93f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4df4de2a-b9c7-4e6c-971c-a6ce2531c544"
                    }
                  }
                ]
              },
              {
                "id": "9048a8a5-097e-4b3a-ac85-38c7c0eb6557",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99e6a39d-88c5-4149-b544-c1b7c0eca9bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55670e6a-13b6-4757-ba7e-a32d514efa4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f0007cc-91e4-46fb-a14a-28b9117fce07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "980866df-d2b8-4e19-a8d4-3c079884dec1"
                    }
                  }
                ]
              },
              {
                "id": "1699ea09-431b-4bc0-a11f-aa612ad947c1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e4d9a4d-cc70-4857-85ce-cf680bebd41f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77da66ca-5477-4c1e-9157-1d6901df21b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace54180-cd98-4db9-b3bf-c0d31613f838",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a849a6b-38d7-4db6-b100-e0e49a9499bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc673338-0925-4c56-873c-1e693ca96fb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32204e9c-4514-4f9f-bd6b-d9862e990361"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56fe9cbd-46d7-471a-b959-c5566824f9a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2b2b9e5-f3e0-45b5-96d8-541cc3081e3d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95cfdb7e-88ff-4770-80dd-d0d864007b47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e54141ec-04ef-4eee-a726-890a36cff0fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5aa1a57-b7f5-415c-941d-148b909519bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8431b0c1-06c9-4603-a20f-173e7ed9ed76"
            }
          }
        ]
      },
      {
        "id": "465b0972-cbe3-489c-83de-8e47dc9b9c0b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f265bd72-6dfb-4063-a915-ed5c808b38d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f2c152c-044a-4f38-8c3e-8f83dee11507",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6473c8ea-93da-47a7-b73a-3c447d9c42f6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca05a850-b63e-4609-b0f0-4231e951fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98c8618-9d50-41a9-adec-427ae08fe8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bfb812-2096-4f04-af50-15bb98878485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b75b6d-dc8c-43f9-b8dc-00835b6a75e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce6ad9a-45c1-4ff0-895e-0d378df91844",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8e5c25-3628-416a-8985-e52f70a11247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501b0445-fe47-454c-8f68-6c392ff37b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc41b6a2-d746-4d9e-8b6e-8c464cf0a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94c4bb4-a85d-439a-b34a-6c6b7f183212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fb0022-6c16-4836-a866-4570df0e00ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7a6e20-c214-4f98-86de-1955202f891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d924fb-f55a-4f4f-8204-4ef952691f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6c8b5a-bc45-4a51-b7b6-d3200778c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6727c3a4-c115-4b88-ae76-f63dadfd67f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696d2d8e-d038-409c-aa14-ad5b655fc2d8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56845559-830c-4a53-a6a8-523c5db7caef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8e03c4-56b7-480c-aad9-7aa0871cfd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c3fe54-843c-4013-9106-6eb98118ee6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3615ad-4d59-42f3-a9fe-baaf631bb82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d0f29d-54c4-437b-89cd-19e79d221ddf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a198332-a849-440f-95d7-8b3dd9a23fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be89d225-6b66-4d18-b807-7a19722fa8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f41455-811b-4940-9ecd-6fd3fed4b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4000712b-259c-44af-860f-9f555af9556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09912382-3020-4bb8-a3e8-bb4873e32d86",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fdca0f-13fe-4375-b92c-e6a8cb0ade01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca40d62-385f-4b54-bde0-08be6693e9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaedf8f-8e38-46c6-b763-dac551035eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3df8680-438a-4811-b7a1-93d5b4b89431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc233e0-9f9e-4110-88a1-6a13d90ee81a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d986d3-8eab-4033-a44e-89b0c32bc835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1088e5-b376-45f3-ab1a-562ea79bdf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcb2d77-cb35-4706-989e-4fc93dcc77e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "273f8520-f03a-414a-a4ae-539c1d112447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef47973-be0a-438f-ab81-47c2d97434ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2044295-9498-4b50-af17-59250b3e12ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6755e1dc-a6a0-44ea-8df4-b7e145403d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b85f46-3fa8-4ddb-b589-2701fb4e590f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a8a13f-85db-4819-b228-b2001bbae481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc2913-f82e-46ff-854b-1e1a1cc31227",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfbcb01-19d7-4fe5-861a-b57ee12984a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d95006-6797-4207-8119-3e365d11e99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498a3242-b002-4cfb-9061-bcb126a0a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86346b10-34ae-491b-81bf-9aa73bac1421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e57447-dcd3-4900-ab75-bf439a48caac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97792d31-48e0-444a-8820-aa83607d2a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2ef572-8244-4d8b-87f8-3e5dd010aff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e52ded-f110-47f7-80e9-38375bdc5b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17666c11-b9e6-4654-9e39-07d5e2e2a437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bacbd6-098f-4be1-8155-c67fd7e8476e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68edd0ca-970f-4900-81a6-38599d593e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158029a2-5dde-489d-88f8-4b4df7d92a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021a7afc-fa91-449d-af99-3aca23e53232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf40b67-7789-47b3-889d-812db149d1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2a770b-caf7-4e90-9be1-36b29273d9e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a0ab41-dc0d-4f57-86d3-771fbba8b19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c7f8e3-68b5-48de-9914-d90f02dfe1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d971bcc2-4630-47b0-a829-1cca8da16f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f71b6067-5719-4ad2-b22f-72e01c0a7f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d570962-0b2d-44ec-972c-b4ea2bc0a505",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a35ee1-a1c4-4886-b6f5-2ee3a21bd417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9d1d30-c893-4f14-95e0-ca4c3256f453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5172e8b3-4f24-4717-b0b9-46997c863a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d1d228-9b98-43dc-ad11-421394cb1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f7e98-a3cf-4816-a0d4-f45fe208d7ca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9671242f-7733-40f5-88a1-04586a7b4ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfe2e6a-6d94-455a-89e5-15c19af06d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11102536-87e2-4f22-b302-1e093379747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7106fc71-c2ad-4faf-8554-ec02730fc6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa123ce6-466b-4bc8-b537-c957903033b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47d2d37-69e0-4471-90e4-13fc70c5ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fe750c-9bbf-468e-b44a-5746974ea156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489371f-78a2-4bcf-8e21-3249a333a65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3daf8325-316e-429a-b33e-12112f8c36b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46954cd4-5303-4c53-bd60-ff9492a06fb6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cf7dd6-ca64-4f8c-b271-6607bc6978a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4482a651-1cf7-4e91-b462-9e98a96bc2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c264cb-737f-4ca7-9e3b-ac952c6bd838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed68fdbf-dcb3-4990-90fc-67ff42390cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9430d4-5bce-4e2d-a934-952029d574c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b188e86f-2150-4f2d-bad2-476a22cb8699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c51c7be-017e-4ac7-a591-c9a03bd7186a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f820829-b2c2-47f7-8d04-04260c2d726a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9497b2db-9ad5-418b-ae04-b5fbacf0c13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dee43ec-f145-4e93-b561-5ab9c8ef0128",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f71198-e18a-4fe5-81da-772ba98becee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb33b08-36bb-4aeb-9795-738646308485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671ae737-190f-4a9e-b50b-4d11251a82f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b198663-c729-4edd-bf43-9d12e00b707b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18462cd9-58c5-4705-ae75-93849d7f612f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc3de9a-0684-4290-9ca1-b9add34f9dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054d0d3d-350d-4889-8c7b-a6da811cdb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd9d07b-59c2-44af-bd71-d1f73352c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7149c8-77e2-42f9-9794-e50623b85480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dbade8-116a-4d1a-bed6-58935b4ea87a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d955e5e-3fdb-4fdf-a5dd-ac1ae9536d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40d3a53-5dda-4e77-ab00-35691780f013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec75d14c-ac6c-4853-ae1d-6a0b538c7c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6f836e-a8dc-49b0-bc04-ddebde30222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc71ba0f-47c1-4f30-bbbc-3f702e9112a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5c515c-1a91-4618-8396-10072af69e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05d49e1-342d-4008-a6b5-9926167e1058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bed1aa-7c8b-45a1-a032-9e9fd06cd488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af32fe51-63f6-4135-95e6-2947c3fd49b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db37e5b5-7ea0-4de9-9c34-689a9866a042",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c55b4ac-8b18-4c64-b2d2-aad161747766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a786249a-67da-45fb-8540-ed3047b7bae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397d8ebc-df9c-447d-8b03-7533b06f7435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e03300-bb9c-4049-8174-955992511664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a228df-cf4e-4173-a56b-c336e24a3f1f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf674daf-3560-4a31-aee8-684f283831b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7053445-4563-452f-a1ac-6838a9329b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c464ca72-b928-4240-9b9b-bc3f2f28caf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c243c272-b1e3-48df-bb07-8b0966317e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e325899-9cc2-4f29-96bb-e507bcc0bfd9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9075da-2f21-4d9b-a3d8-8ed8b8aeea41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14349457-fbff-4c8d-b929-a00423201c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd253ed1-f8c9-44cc-8863-7f9f1f5ba86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebf42df-3205-4fb7-84bb-ac5c50976f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d894e33d-48e5-4808-a447-03a799f7f8c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f37f7-886f-420c-b7e7-784b2cdb4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68148caa-313f-4164-97a0-bd4511ea3ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b341b461-c6c8-45d2-8ff5-7a32b546b929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cccec625-4edf-4bb6-8b97-4b1301b818cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9395f970-45b5-4bed-ae8c-6fd42a5e7196",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a11bfd-5ad1-4ade-97e1-71f4ea15077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89d165d-505f-4fe9-8875-e3af5e22d04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923daba-764c-4f20-ba12-e6dabb73366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f906e0-31b9-49a1-bc60-c7732fa3f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98daed7-f783-4b25-b8f3-6ed696ddf6d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a33a4d-a722-452e-900c-602bce9d4887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f1497a-4ea8-4726-b9db-392c2658bcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185540af-8ca8-422c-833e-3bb8472923fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba11ecd8-c0d6-42f7-9dc5-4e2680f99445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ada1d4-2ddc-455e-88b1-6b9ed75301ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad122efe-b33c-4728-9c83-b85ceb09ec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f85b80b-116c-432f-8442-8b034b01bbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5290da-afac-495a-b3d0-0ddafa212f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff63553-583c-46fc-a44d-bb93f24fc6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c67e7e-9a60-4e47-87d1-89b7a8e5e7f1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8beb9e-f070-48cf-b4ad-a2281ab49596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5343f9e-4852-4bd0-95ea-ac824bb8c6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a890cc65-af2d-4ed2-a888-9563a59ec662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8d6531-97e1-422c-9b0c-1bb5c64bb32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae6168-69f7-4330-9c00-eda2741957bf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48121c-6c47-4119-b6e6-3f9c08915d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0aa551-77fa-44f4-b440-734089fdfbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a6c1de-f001-4c33-8958-f67319d7aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3b4cf3-29a4-434a-9456-7dac4839eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b2a11f-8984-4343-97c8-d997d7a09742",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16c8235-ad2b-4099-8fbe-8eafcebe4721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8772003-7fdd-4298-98c5-918e2acfa981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c799c83a-8116-4927-a2c9-8e577ace372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a99349c-376b-4fad-a733-20ea411e4ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1369c3-bfbf-4d50-993b-be8bbfbe193e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbba80a-8ca9-4eb0-b1c1-6c2258f03ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb1c537-273a-46f6-89dd-ecb8ff10a0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ec7f08-59a7-4136-b8ea-02239f789ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8fa15c-c06a-4847-8fa5-547b2211caa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f599c8bb-d292-4eae-974e-4c09ce68bc1c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa233c4-7db3-45fe-bd5e-9e7650217b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee812959-6d39-4212-bce9-a849064360ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b215b8-55cf-4edf-9cc5-90e61a25779d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa4c941-17d7-4897-8959-bd3bdda728ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc6a703-a1e7-482c-8954-550b4678b83e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee94aca-8bbb-49fc-a531-9058def48444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdebf87c-8dcb-4821-b4ac-929e346e6331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde3a9bc-1715-4a0c-bc42-055773f29f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56c806f-d984-4173-9835-4969d1345c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5fe7ab-897d-47c5-a16c-c310c1011559",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb7494a-5e69-4a92-9dc1-469fd1654356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e264556-e751-40eb-88d7-f79ef0520fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060dfd9b-73a8-42eb-be00-e116f654948a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcad87e7-719d-46a5-85e4-bfa39994f3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b061673-d5ef-4728-9e37-a6bdda877b03",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c175ec6b-4d40-4759-91a0-08356066688d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576ede75-f8cf-44b7-9cf7-581e34a035ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528b060c-98a9-49fb-b57e-58bf0a85c99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71ed58f-79f4-4278-86a9-9cf39e2e9db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b97717-4ad4-43c0-bcb7-f46da2a0e7cd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66feb02-183d-4124-b87e-bae45fc6589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d7ddd1-beff-40a2-bc54-e6307a252a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7655d9dc-ecd6-43d6-ac18-4868fdd97308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "628e8b56-3726-4cad-82ac-89dcca478dc4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22f52c97-a75d-45fe-acc3-b0c38d097d3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ecdb92c-d4cc-4379-91ac-24e183818d5f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ac011d-918f-438c-941a-4292d99c165a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "beefa9d2-cc9f-4905-b34b-488084993867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821a4543-2ca2-4167-86e7-32cfa7feca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31077e12-d2f0-4bdc-9664-467a0af319de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6a8f9be-66a4-4911-9c46-3c467b672c73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8daedd8-2036-4564-ae58-cfc93e30bbb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ddd2995-31f8-42e6-a3b8-ac7867607cff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d7c903e-6f35-467a-8eda-64d623887ebd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d73351c8-ccd0-4c06-9f6c-8608c2752e39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3fecd1e-baad-4a65-b5a0-7acc91590355"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4c6a3df-635e-4fac-82f7-b47fad5f4e76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20a23792-8066-4336-a7ae-e3f54ad2c614"
            }
          }
        ]
      },
      {
        "id": "b5eaa2d2-3e0e-47d4-b41f-1f0ef6297ee3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a9e0c772-afcb-4fa0-bf65-5a2d99696a16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9365cc7c-9e42-4f17-9f4a-00c759fa0f4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1497907a-9a5f-443d-8418-2d2cfe023e8d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c3d422-85fa-4502-a519-4b2c7d7f69b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c59deb-32ab-42f6-8dd3-c8c6ecbf864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6174908c-c4f1-48ea-b8ca-4c8ac70d2edd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06051652-67aa-4e7d-bd02-a87884b7f108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35e1bc9-1b76-470f-a466-014f7bf0d231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040cae33-27f0-4421-9318-6747f73387b3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ad0d96-6fcb-45a4-96b7-3dc4b5bb27f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83db11b-4158-4657-a5bf-8755f590bb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5244ec1-609d-4d60-894c-24120d0d6ca2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de33924-73f2-4cc8-9822-4e413e283851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d3075b-34bf-4fb2-81ff-cdfe0cba3f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585c7235-6791-4fed-81d8-a0e15f2583b9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645dea7e-f57f-4d86-ba02-a2b51221a62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6151ad-e294-4764-ba3d-cc0cca6e99cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32c40c8-9f6f-4fb2-9312-98f60a07b2ef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e7998f-3036-4cef-b7a1-f8630522d73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe893de-3e5c-4df2-b5fb-4a377362bbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4a6bc2-723d-485c-99d1-75c31889b848",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cc6fa4-dc05-444d-8d54-921813c0fb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e88287e-2d55-4ddf-9e96-93a5224e07dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6e32d1-7df7-4774-acbf-fb95c406b842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049d6c89-5db4-40fa-a091-0e97643ebf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ca6929-6d42-47b2-ba59-c6fb1622f1cf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431c15b-79e7-49f6-84b5-82047696be9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753a1997-fe9d-449d-a2ad-3eee18fd0318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66efd5-89b3-4d83-9204-760af80c0bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c6fe19-7ff9-4b45-8ff5-3c4788013817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b9c421-b847-4a78-9129-ea4523f265c5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04df669d-e67f-4c23-b7ae-501a9cf5d8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abafa53b-b851-4ee1-8b00-20d509b9ace6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71913d2b-9ab4-4c79-a332-4c937dd850e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a281825-0195-4013-8b29-3ce942f1e184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f7e9a3-c6d6-4a54-a830-78ffea06f0a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3eee39-32af-4de9-b744-a39aa2db19b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd635909-1fd6-4f66-81ff-301d5c9756df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a006bc-7464-44d2-b3e8-ac61eddfd4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0914f6b-3ef8-4c39-8cac-b2e767d4f14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dcfa16-1b27-4816-b0a2-8c04aab5a7d7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cbce11-e504-459d-b067-bb72744026ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a18c77-1229-4de4-83a7-b5c09a9bec51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a0b075-f0c8-4442-afd8-b3b4a600665f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fee9718-8f17-4a6d-95e3-9601150ff44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de533bf8-514a-43bc-af6c-e83c2c03ea53",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e7fd77-b16d-406d-9cc1-5eee1da16835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aca4bba-3a95-4adc-a18b-e5949380cc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d4f49e-e0ea-4e5a-9ec9-14dbd1615a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f16d5b-af42-4326-85ef-c534c87954b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eed7e9-a34e-4a29-8b4f-f00b3b27f955",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ab9284-b87d-433d-a66d-e3838bcfd7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b046c588-8bc9-4979-a402-3775d89953d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5eed6f-ffcb-40d8-8929-cce4571ec563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11ca550-d865-4f59-a5cf-211ab7506b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d5ca08-9ad2-493e-a24c-11d791887896",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1087e896-be70-4667-b174-e65e2392a8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adcfa197-e4d8-4b34-b003-63fb4462ced0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b1d8eb-88c5-43c6-a516-062241b1571e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ccbc01-52ad-44e8-ac42-82ccf8935afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af928c13-eb8a-4ea7-8490-27800e51365b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5faa743-ded1-458d-9f1c-471d1c94d020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a8b63a-f2cd-4051-ac94-cd5224ed6ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e79725-b6fb-496b-904a-1e313b5295cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24740b0-52fb-4c54-9bba-63d677e28469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a450f0c1-f33d-4e94-a64f-aa7566b5b667",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f912cdf-0053-470e-bd31-ae1dc5a7a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d8a568-2d27-4534-956f-fc7c02d3ba67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584a45bc-ab42-41f0-9b91-09c7b7e33456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868e49eb-17af-41bd-b716-13cd2999aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf2822f-7793-4e23-92ab-422fe3ee438a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d12a00-4d3f-4f66-a3ed-ac6930eb940a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac879c1e-d196-4b56-81e0-593638f969ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ccbfc-99a1-44e3-a4cd-cf0967625158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccebcfa-b095-4b1c-ae48-ca8b58abd8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7456350-484d-4fe6-94a7-ae995823d09e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479ed89e-bfc2-4979-8ed1-efe881b106ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471b7c4e-360f-4abf-9682-042af9a3b23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342e7833-77ab-4715-b343-2c37c748b9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc285e3-dbd3-4cb7-b190-c03f946ab9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ce17e4-98f6-457d-86fa-0ea13e4975c2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad4de90-095f-4ca9-829a-0a1d5b374880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc571324-a6d6-4f8f-b58d-53f4eb8866af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02206c8c-df78-4fdf-9116-d3f60b09ce5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b24e0c-f8d0-4561-af58-18d3e0b2b38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546debc0-c2ad-4d74-b36e-2b7ef38c369a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4693f12-e17e-4d98-8e12-1ec9226d9fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdcefe6-5683-4d1c-b558-40bca3842a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bca63e7-033c-4f0b-a4b0-d5a820a4870b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4d9fcc-0dd9-498b-b3e6-40040dc9cdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec56cd52-3091-44ca-b6de-3becd8d22552",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc0e7a7-b0de-471f-ad99-c19df99f4fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdda918-2da5-4bf7-b931-25ce820c1b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74419e14-5f86-488d-9cf1-813d88a073bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c2e92d-a748-4be8-befc-d88ae9455469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b69104b-fdc0-4fbe-8c1d-12b8f5ba472d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c05e92-4c77-41b6-a71f-d63c63a1e79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8507050b-eec5-4d3a-810e-216fc83e6fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbe6c86-d9c3-47fc-b81e-0312bd2fe560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1841e6-0046-4e2d-b7d9-643a45960df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677808ca-a870-4fd6-86f9-77c34cf3db33",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f1433c-670b-43c8-92c4-9084797b968c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f16a3a-9f8f-42b1-80b1-a209a9af7df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724d2e2a-e396-4e4f-89b7-d3ef6c2a402e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceee8fa6-c2eb-4523-8e28-70ca62185498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4213a41-2303-48b3-8b33-95ceb131bd69",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498aa0dd-7bb9-480a-a819-488ac34f7f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66900875-1be5-4a69-8644-3c79d7596446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafe7651-e824-4532-8a7a-0771aaf5c2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188af71c-f01f-4da7-a3fb-0bb30c722052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5462fc-8b7a-4a08-a5b7-c4fdad09395f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f6164e-503b-4e1e-832c-ff20aed37e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae40c4a3-efcd-4452-a144-d266ad83ef6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78acce88-26c4-45ce-9c7b-594826a1c8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f693271a-4812-4a2f-bddb-68e411860bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d267061-6edc-425a-a2ca-6eb9024f3a6e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d28bc8-1578-4c25-81c0-18c1177986bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78cb6d1-304a-44be-a927-923050539e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942c0f15-0ebf-4db1-b1f3-08196ccb0e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90037616-ea7f-43ad-87d4-acc98b17ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af4fee7-2873-4e35-a20e-89e110ba5aa7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a78b93-eb78-43db-911f-767d44e4d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b27928b-a1eb-4c54-83fb-93d3b4d73a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6704194-f2fb-4bac-99a1-cb76946c38b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a270d3-5316-4035-80ca-df297db0a032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7927292c-4bbf-45d5-b3fb-f57e94c2a0ee",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8027b33c-6d20-4ffa-8123-cc0ca1ac1fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2f3f1b-22c0-468c-9856-573a58c6f9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a47ef4-d0a2-4df5-8922-95bf22c824be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b06f53-e749-4009-ae0d-3134d37c339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999c9560-c994-4ec5-b155-06990a9d7b3d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee61b29-dd0e-4fa5-b215-b13c0e95b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28184d07-caaf-4a05-bfd2-17ad3b99226b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d510d4b-ede7-4e82-af78-c35c89b9e68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d1f5b1-e014-48b5-a6a9-ac41150090a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80a05c8-9200-4a5e-83ad-55cf24d81fcb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d482e88f-fb02-4119-848d-dec2bb5877af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5917720-f5b7-453c-b783-4c5cab46b7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0335a20-cf10-4abb-9721-4150b1e33209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bf0f09-7d00-4855-acec-bfac0c30f3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aac17a3-ca2c-486f-8a1c-f5a6d0e1b8d0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ded9ec-3947-4ad9-a7bd-763b394fdaab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99a8318-1850-4e5c-a83c-50a3ec9aacf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c85fb2-10a0-4210-94b4-8752d8bda98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e789602c-4bab-494e-8959-79736788689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a9f05d-b633-4f6d-be37-a6dd7d0866e7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d9d194-05a2-4cac-9734-cb0299b977b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d22ac30-ae70-483f-b7d9-4786e7cd6b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aeb3e8-a0cf-4000-b0bc-5f5f39dfea01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed826610-16c3-47da-90a8-da8dce833674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe64b5f-8eaf-4850-82c8-d7a01b3f06e0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16c0b76-9817-4e8a-8701-b4b231862689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c12e636-b20f-4807-89ca-4807d7c03e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ccac5a-0b9d-4568-a25c-03435b1a37dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8404bd4c-3648-474c-8432-510fe8d30bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a9a800-ebe3-448e-b8b1-0d0e6680e0f8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45706a9-dfc6-46dd-85ca-bdc14825199e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cdd0b6-67f0-4283-ba1d-a3c40f242913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41af894-2e5e-45c5-bf7f-b6a72a07becc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640c69d2-4ec6-4107-aeae-23c2e9d47f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d63bce-c5a8-486c-903f-6cc1d1dfe760",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7bcb01-a4c0-4dc5-a835-e7e79b267137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ff8d03-ac81-458f-b214-314270a8b73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebecc53-e2af-460f-976b-51c1a5a2dc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79772f7b-5716-4325-b339-7dcefad4207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e39b173-44c9-429d-81e2-1f116611de93",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e8a521-3f35-407f-91ec-ac03eb8d7927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbca808-5abb-4c46-b430-f12dc312a5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222ed032-df3f-4085-9ed4-df9c7cc6ba47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa9fd6a-b665-41f4-b66e-3b0c38cea191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28db444-e628-4256-9251-11e0603c9b2e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b22814-1d83-4e93-b050-b36409e0ad95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e604c3a-06f1-4153-bd9a-3c4bbad57248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867686f0-0b77-4026-bc14-50ace1b49542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2302daa2-6b06-4031-a131-ee2f947e8543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c4e2be-7c6f-4b66-b33e-fb658c8f017b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc901448-fd8a-4897-a5be-559b0c336bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fd9339-1bbc-4dfd-8810-0d5558df31ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5a776b-82c7-4539-b7b3-f22b30d1fa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e36794-ebfe-45d8-bf12-0906eddacc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ed415b-223b-4c1e-8074-12d2fede9ec1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f4cdac-cbf5-47f2-9cfe-08702f5f5fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c1e0c1-89b3-4c68-b15d-3e0db7c03113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4820c8c-066d-4814-9c74-8030dc9c758d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5dcc26-3c00-4c7e-ba5c-deb9d31ef124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a4b668-f393-4cc7-8103-23457acabc14",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e205c3-3908-4609-89f2-1115d31f433c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c32596-1cc4-44c1-92d4-b06a79876538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2078b6f9-106f-40cf-82e1-3e0447377215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28c75c4-5362-4088-88d9-e2b81abc0494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d93677-deef-4994-9559-aed768bd8447",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2c1f7-c3f0-4f06-90d4-9a9d9662d4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2022d2f-d3ba-4781-8b0d-0c6321e02315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29093db-6615-4cb9-9810-36866029240f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447009cc-29a0-4804-bc7c-05963625d0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779690cd-8529-4e2a-9012-11346b0003b8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed9a78a-d725-4756-8647-8f37a08a7902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac09f697-9185-4988-b25e-4547ef96dc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123854cb-d7f1-4112-98ab-c0cf172012de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9faa6e-4ffc-4efc-8cf8-ce86c78835c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c743f-8dc1-4977-9f2b-7fe5fc59e535",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5472b032-4ca0-451e-9ad4-37455ee27578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2d2629-88bc-43ec-a093-eec0ab15f40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff09acd-a537-47ac-818f-66188ab6e5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc467e3-b199-470d-a14a-53936e08dc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b56287-5389-4ac9-94cd-d85a83ca7388",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51040f6f-e4de-4f0c-b02d-a2eca5976e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947159b4-ef5c-4dd1-ba6b-e209c3159e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ea531b-6914-453d-ad9f-1d98ce6d2aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ecc844-0927-4f46-b140-363f1974b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98694c65-93eb-4210-9ae5-8f5e18706c74",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5156e60f-bc23-43f1-b6d3-0a33e09ca8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8cc62f-c1d2-4062-93b2-574fb6d10606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4781c4-4900-4baf-8714-a8f92fdbafab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f2f9c3-3f2e-4a73-b3f4-c9805cfe9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0158db4-0620-4192-bd9b-5c5b83785d6b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d9719b-39f9-4d73-911d-519aa79a304d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e081c4a-3799-4eb1-897e-5017e32a7264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d455bf2-afc6-474a-b04f-a049ebb9d1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46f9a4e-3ee0-4706-9419-0e7ee5c714bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2965ff-9c2c-42de-84b7-e41623410285",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdadae34-38e0-4db2-8f94-166b9db0cab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ccb1b1-9cf6-4654-83e9-931916b09f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bacefa-cd20-41df-82c2-3bf6e196848c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665aa93c-0dba-41b6-a943-873e541fc3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c571e-c641-44da-ac65-e8c05f53d5e7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc297af-0637-4121-99d1-466da177ad19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfc3822-a3cd-417b-992f-c664708d8c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a9a2f5-bb52-4d31-9a0d-33698a4b907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d160ff-b4ee-4683-a785-0871f09d4fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb90741-680f-4d7f-a175-d9faad040c45",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3638b67f-786c-4883-afc5-7e9633fa60f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142c9842-26c6-45f4-9a4e-bab6094d4169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627df3c3-9a98-4bae-b16b-13dc1a947ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a5f8aa-20d4-4570-ad0b-e1b9d51efe74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504b1c5e-d0b3-475a-82c0-91f2861472eb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02446e0c-7d3e-4bb8-8328-b709e386aec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040d5a35-7207-4ee9-9bb6-00e36835c9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85403f93-9a72-4d0e-bd9b-b8fb69c0d566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18283554-f327-4e3d-a026-6160b5cc0021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c370413f-33ed-4ba0-9151-a12b07ee7edf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f47e96a-87db-4081-b3f7-298dfe70c85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15678229-5404-446a-b1fe-bfff20f67732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d405e417-af77-418a-8706-e3431cb37352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9765aa98-6fce-4ff3-a177-f458cf949a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b67a8ca-e68a-4546-9672-dda5d3e9a57d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5531a701-c3be-4354-a4c8-886f432c5b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfb2a0a-db82-4f3e-96c8-90868eaee477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f04306-7361-4fe2-89c8-20ba11fba494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438e1593-3b9b-4d4a-af74-ec32111edd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aa1c34-d44e-4ab4-be2c-16cdc2fc63f6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed063bbd-71e4-4133-a378-acba1394ea07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da34380b-6d0f-4db2-a691-36f30c504395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c29fe64-0026-4453-aef1-7fd96fc60f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb29fb3-00d5-4843-a9f1-18a1a5ce11bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9c6019-c67e-4076-837a-0ff1498f0cc4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a97bc55-9eae-4d45-8a7a-01f5112083b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91d4c36-9f45-487e-bf9f-5774ec373644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8061d7-5cb3-4e8e-849b-4638332b4ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2682f43-1c5e-4ff1-9eb2-bacb345da1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4ea4c9-6b77-48b3-ace7-9fb757c41ae6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f99bc1c-65ff-45fe-bed3-2e389d677d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b579a417-e0c6-49a1-af2a-955160466da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a224cc2-7ebb-46b7-9faa-7296c91eadab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb2859e-0b5d-49d0-aba9-c43dd720f4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d86af3-e750-4414-aeda-3e20aa452697",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbe136c-fd0a-4362-a174-e79e285c5d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603cc0eb-28c0-4d18-ab48-9f45fe97b0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab96fb7-5de0-4b82-b58f-be28fefc940f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d508f7-ad36-4a27-8832-d1dd87b4c4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327b282-8f2d-457c-b9c4-f4c68da18fcb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398ebb95-3fa0-48c0-9ca5-e139da19ba86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05100295-c1d9-4e02-9d19-faa916090990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ca75b7-7d30-4127-b801-23fb4c43458c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ff4198-5784-4d49-917a-196b4fe77e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeea9516-8fcc-4fac-8500-2a41d38dcf67",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a9bcfd-ebec-4db2-96a1-f790c772595c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a284aec-47a3-4d76-9c78-faceecec421e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2757eaee-b03f-4e52-a7b0-e86886a3dd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9198db-a05a-449f-8287-abe4933fb835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd808de5-4a8c-4f28-b673-e101c3ddfd06",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e91149-5d76-4cc9-854e-d76d4b0931e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca07e30-79db-4790-b18e-9ae5e9b7d41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f678938b-43ca-43a2-a91d-40f8ffab672d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b28e321-9e28-4aa0-8a98-8a859dc4733f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8643a7-0426-4cd8-89bd-ac48df819ac0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8a802-9832-4880-ade5-3cc56de4012d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066c6624-dbd0-4969-9c38-26966e870159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56116359-aca7-4060-ae10-d587df272e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2d50af-6b23-4413-8fda-9cdbbf42134f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c2fd2d-ea7f-4282-836a-70dcd999186a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbc5018-2028-43ec-99f7-cac5f064abef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d9bfba-cc09-4b4f-9532-51ba3c72176e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193893c1-cf45-43ee-87ef-5af5193d5d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140d8d48-30e5-4b6e-bff1-3c350972aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadee90f-23cf-4c0c-bac6-6b407134fe1f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745d74ec-387f-4059-b90b-0184efa2b1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84429640-2f82-4e6c-a085-df729d37a53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f04346-c522-470b-9b7b-d5f39b35395d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6973fd-a241-48fa-a478-ef79ca5e2e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6701554a-9a5e-4a35-a8d9-6ae4bc3f626d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2a0be6-470c-4b10-9400-a825f2125857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f62efd-0b46-4914-b4c7-0f45088d3240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b752d2-e3d4-4ba8-b68f-54ae9716dd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d72c7b-00f8-4ed2-a42b-f6970a53a45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88491f10-3804-4500-87e4-33f88969bf1d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5176ee86-2c75-4c77-b06b-e0b29e80f52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29748ca7-51a9-4fee-933f-f9762580b8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7923257d-8ea5-49be-9056-006971782921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543833d8-ec3a-4a4a-91c5-75e8377594b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f493fb9-04bc-47ef-85f0-21b217bd0792",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dbb942-3d51-4e8b-af30-b71d6249ca15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37616de-4faa-401c-8601-df9c97333bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d237fae6-d945-4b3c-abb4-2ac0904644b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d97ba32-5243-4757-8dd9-fab0de2cca40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a53482-15c3-4420-9b8e-dd8b2ea97c7d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d167c3c-e198-4aad-aa4e-8897359b7b34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f8645a-b509-46cd-b68b-faf1434d7ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d6d3d1-5e52-4cba-bafd-d07a422b7783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdf1092-ddf1-4a6e-89e3-ea0adcdea69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e3f585-0d2f-4f49-a297-7e463e2c0ff7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d46748-3427-445f-b6f9-909c74a76942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d6ffd1-c591-4354-9afa-59e40ca0b249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d15bd34-dfbc-46da-9324-8fa66fa2eba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07659227-8dfa-4139-b4f8-abc14d200345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6a95df-7681-44f4-bdb3-2e9ae333ad05",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a77487c-a336-4e89-9820-6ec3481a32c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75e92ef-fc43-4e23-bc3b-096f2b217195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2625634-10a1-45b4-aaeb-f4aaf602978e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378429be-7e64-4850-95a2-3e82dca7d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acfdfdd-3a1e-49e9-b633-0de86dc01180",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5683ff-2c75-41f2-90cb-d8d428b88c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a89bad8d-d8ca-40dd-b880-ef78340ba874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6fb070-0ca3-472a-8f28-4023a7fa0d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4401529-8e44-432a-9a36-fa3418146dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46223248-9f66-4f29-b687-7ef4ad8702ae",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb0a6fe-f26b-4f35-9b94-032d4d97fa9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e162b0a4-3e89-46ea-b4ce-7f086cd6a0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab045984-f0d8-49e0-a68c-1dbbf957de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8209db53-bc81-4e03-8550-332121186134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26e7d22-31a0-45e9-b3a4-e6806c5f1109",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844557d5-2eb5-436a-9233-d689666713b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79ba8358-2bf0-4313-8a03-d442c2eb6a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d916b96a-15fd-4f8c-bae4-71b63a3868cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc590162-923b-4360-8631-16a7592c1d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad765a44-c2e1-4308-a50a-37741b86475e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4373452e-7edf-49a1-9d70-9f9426bf4358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7377edc4-8d5b-4b5a-b45a-57474f6919b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f4febd-1229-4101-95a7-fd40c8902a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19dc69e-150d-4611-9344-45bff7f0917a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d62286-d40d-4e0b-a9f4-59361a9a4b16",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d81468-1521-49a6-9861-dcba2ab741b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd83e4ad-4a4d-451b-835d-210246e975c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cffb88-ea5a-4784-b348-f61e44a08c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd4a059-897c-4386-8130-92c6afc813f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b73b83-f205-49f3-9a75-6ab3968f5b00",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be836bb5-7725-4bbe-91b6-b1a0d1deb382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6cdb10-e9a2-4d63-bc86-859742656c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2616a3e2-a768-4632-b8cf-a5db72d3f7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d82682f-5437-4a24-a4c3-cb4bdd282add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6223916-9f17-4273-ae05-f5260c7f10c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c5b871-dde0-48ac-a2db-3e39529f20ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e6ea3c-0d89-4ccd-9b5b-323ddc8b6f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92790d11-291e-4c30-92cc-f3261949d723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdb3591-75d7-49df-9aa6-70f81a476396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ea0c9c-ed66-48d5-9997-cd020b6bc90b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3ca1ce-58e2-4444-b7c7-4b4caa34c971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d26f9f-72ff-4913-b13f-4e4081a2d9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff93b6b3-cdb5-44d6-b216-9da046f1d7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b24f67-abe0-4287-af2e-04d24650de30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590c7b07-4a1f-4a31-9e04-df817488c7ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aedf9c-7345-4df6-a191-ff407defce44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9037f442-a43d-4eed-8ac7-1e8a361a4d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4062d2d-2a42-48ae-8b0b-14fd1203f916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9d98e1-1aac-44cc-a74f-ba83151cad50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79b479c-10b4-4131-8d85-912f463bd98a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361e3162-2788-4608-9ea4-ec58470d7a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc337b4-bde5-444f-a8a3-949506ea6cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2ba873-737a-4a93-b282-2ccf16751f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318c6789-abd0-44c1-bc76-3f20403a0a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073f1b64-5965-4bb6-8c40-226cbcbc0692",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76043a6a-5777-40f5-a038-338f7ff5b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5440a9-0b3b-4276-bccb-32e735a784da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03587967-ceb3-48f1-95ce-6a113d016429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55d3971-bab9-4a02-aa79-5ebdbf0e1c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98286512-83a5-432b-bfaf-b89f4b43e475",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc93392-29d0-4b38-92f2-3186bd845ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9475f56a-5481-49b1-91c1-a9110c3f1609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3564338-b74c-4c9c-aec2-c66bd6c44227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc6c779-6ce7-457d-87a3-4a1d3cc54f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3624caa-2b96-4d2b-b89f-2487441f8765",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5884ef3-485a-4e86-9c02-2d5e2756f6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4d472b-fd49-484c-b44d-9c4d8e904866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc97634-19ef-4470-ad2b-79e040d7f8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54970f92-d0b1-4102-82f1-671d25a7549a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d718fbae-978a-4053-9309-11bf66121d1d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9723d55-ba0e-45a6-af2d-6623d0b5841c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b3103ac-713e-46b8-89fb-3a0c51363581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edb0e94-68b4-4645-a951-5e573842b8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f95635b-151f-4ef4-b0dc-ae956d715ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6619eb6-315b-453c-aabe-903ded4ff8cd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c4f1f-022c-41cb-b9f8-e1446d2e0031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05924686-b96c-4e5b-bf61-a611678bdd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3688b2-054c-4209-aca4-2bb04d713e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff29dd4-9ce3-4a11-aee1-a0dc5dba91da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c214e4b-d6f0-4e1b-9849-5e93c810baf9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d8e9ed-8abf-4262-98cc-86478b3d457b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e0ce9a-3e4d-49b8-a203-ba6ba5459dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4683bf8a-04f5-45d6-9a4a-8cb528a664d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2499e81d-ec35-4b7a-bad9-371b4740af94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cc4155-a37f-4a06-8c39-d80cb0e4e571",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4c278f-1ae5-43d7-b4ed-bddc0e72fa7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e1db92-2a83-43f6-b6e9-4cec2f94b6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf29831-cd8a-4ab8-8682-639f2635355c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0309ef04-8561-4c8e-be59-92bf36f1c476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79632138-e663-4de8-8aee-33de01b82109",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dfac3d-fe23-4426-870c-e0aedb427219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83053441-a886-47e2-b3ec-05389c196de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef4d0f0-c50d-41fd-a761-078c4a4b218f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77aa809-1d1c-4bad-a5b7-24a2f131c40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb8ccdc-5d6b-4b46-ae5c-d56df5636098",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198872b2-b765-4fbc-b156-9a5b9c9c1702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c55d1b1-816b-44cf-89a0-4c1dbdc7ecf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8283a6f9-9c92-479a-9a1a-81153b1eb96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84832528-17d4-40b6-a770-a989160a7513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cd5b4e-bf24-4dc0-af18-86529aa4915a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30716a63-bcaa-4deb-a8ef-f68c87c3281b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04488647-4038-4ec2-8279-291cd08de22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec281984-1d67-4c02-b5ee-267c8ccb1289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf89166-0c27-4b90-a123-d8fe4695928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea633bd0-5a81-4e45-b69c-d41ab138f3bf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75123bf0-e29b-4501-81ab-d0041d4a47aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65e7302-3fc4-4313-af7b-e1abde16683b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6323c0c7-1908-465a-a975-13d5e1448301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b421b76-d871-4d2e-9982-7be4a99f33bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9beab6-8261-45fd-b3e0-8f542f296a4d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79cec8d-dca6-4e89-ad92-0964f43409b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc241c2-853d-44b0-bc60-e2a5ecd09cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53774717-d80e-4a8d-bfe1-51569ad6232e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61871e07-731c-42d1-8d4c-22a0c1e0d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73500600-82af-40d5-b7e4-bde6834d91b1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb74371-4d20-4740-af7d-f6dfe981d39b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a7d7bb-11cf-448e-a95d-446b442d45aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eed269a-7215-4e44-a6d6-7c92f6edfcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8d642f-1a18-47e2-a4ae-a1fd349cd602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d199492f-838c-4162-a537-0c6e62dbe014",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75376b94-2559-4e01-8e7f-7e27618e44ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc08c5d1-3618-424e-a070-7bb66a19ae2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040b091a-fd41-4e33-af08-dfea19e709e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e6cc93-fc96-4642-a0e0-0ca41645d442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9f881e-7fc9-46c8-8868-9c98b88916fe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e630479-c536-4ab9-be3f-255f43762156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0abd2c1-2631-44a7-a768-6aab71e0ddaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10072f0-7ee3-4fae-afdb-1262d0f3cf8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed016e02-a3e1-4678-b621-193300e16a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c7cf2-6010-4214-82d3-fe9eb53aa755",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e702c-8c96-46be-852d-b68ee42d158a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2092eaf3-e547-4f75-8bac-2d72fe1d8a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a4741d-1baf-4396-a9ea-a23d82188fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca22e773-bd4d-43b0-bb35-02947f0689f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c427e1db-1b8e-4e3b-b697-ad65c8a101d7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec83f0e6-3134-42cf-b49b-c91f973770fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a90809-0d25-400d-b54d-b78d23279e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb37608-5bbf-4b33-8cd6-39276c81d440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b90984-bbba-456f-a684-9f89806d0858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2659c34-d9f9-4b2b-86c5-7d9e25bc951a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa678075-8db4-4bbe-a2a4-15088b2d9085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2caae6b9-15e9-46c9-bd00-4309ac43347a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62b176d-9604-4eec-8490-35e2999d82dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2f2702-aa03-46a6-b772-c5ea6331bb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f7c493-a45f-48de-9c36-7004f05ccab8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceafb0f4-8f25-48a5-b844-ba298d6e523c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cca3f6-c3aa-43c4-9164-20b0e7677c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91bd017-4915-4835-81c0-d8189b708af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0234cb10-7256-4f42-aa15-2e9e9ce2f824"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a4ac297-7faa-49e2-bbb0-548e6b3b18b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1793d52-a97f-410b-8975-a043ca956375"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c819b756-f5c4-44a9-9848-fd6f0a99026b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f490de35-7fd5-4c23-bd21-3ab1aedc4c0d"
                    }
                  }
                ]
              },
              {
                "id": "a0c0f899-f2ea-4855-8e1c-97e3ba1f5c8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f31634e-a42f-4428-a49c-c5d9e229d470",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3463bb62-9e5a-4e99-a0d2-fbcbbef75179",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c93a23d-9356-4cbf-a909-8d4ef69fa13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8204675-6a51-48e3-8652-8bfaf6881cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ce37555-fe79-43d8-80bf-b7bb7a063bc2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02acd8ee-cdf6-4319-a56c-2c78b880e3ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0fc3ed8-4b36-4bf6-9f31-bdd71a54a1a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14006ffa-b8ef-40c7-82f2-a9f1a8b10615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7892037-4d61-4653-9bdd-b44599b7a75b"
                    }
                  }
                ]
              },
              {
                "id": "830f764b-43e1-4e8b-9ccc-f07126617261",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bd3bb141-a320-41e9-9d49-08607d85a3f1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add7f08d-98b0-4d31-bf42-b67ff9bfaa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7a3ccc4b-541c-4033-a8b9-4fb905b9b99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bc8a88-cf70-4b4b-8007-49c202f24d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912fea2b-436b-4a32-9cbb-765739c25100"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72824909-5389-4adf-b479-f2015df4753c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "573faf2f-8be7-456e-8055-960ae1255900",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d97a1f80-5153-489d-b643-b087c1034ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b78090e7-d2dd-45e0-ab91-45015ffc00c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c95497cd-a0c2-4e2f-a3e0-bef9d589551f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "724848d6-f65d-4269-b57d-da02844c6176"
                    }
                  }
                ]
              },
              {
                "id": "81e1d529-59ec-4bb3-b514-4d89a13ecc45",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d16c671-9ecf-4a78-8aac-3f47fe7d6af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c0a9617-54d9-4aad-b581-e5b2c026343b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa9d510f-77c5-43a7-a2fa-5ff2a63259c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "170366cc-d1e0-41c5-8985-b01ee61fc2ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c0d79f6-1a07-45e9-bf58-86b0c9e941c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c0098eaa-2aab-44ae-8003-dc8a06c2dbb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66fc5f2a-5334-4eb3-8de2-15d6be1b50e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f9a67e1-b056-4920-b2cf-fcaecdf42f64"
            }
          }
        ]
      },
      {
        "id": "eca77c51-eff6-4848-b008-98f9a67b6538",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c59395a0-d83a-4e4a-b64f-69941034b38e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7b8bc24-e419-4300-ac03-6c52c46c7b56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "190ddb64-db3b-4161-abf7-1d1c9fb16f01",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18dbd8-ad6a-4797-809b-6ea56d6f3e15",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32cbc9a0-6dab-4bed-812a-f8510aa1b422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e966e78b-da00-4f96-899b-520be59c719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cd7b2f2-8a9c-45b5-ace3-674049dd4272"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d181e46-157b-47eb-a0e6-47a0ca441454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d4ed275-c7a6-4941-a591-f313012678d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65e6ac6b-ad96-47d1-ad00-0da9c49f3084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a692756e-3a43-4510-afbe-2f8fc8d8b866"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db1331b5-a8fc-4be8-9c3e-7525383f6713",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7373a1c1-4ad0-4740-bc94-d805d565dc89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "008bbb99-dbba-4e04-87fe-5d81b54857a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26ac3f65-6ba5-4e1b-8c23-1be1d6c4f3a4"
            }
          }
        ]
      },
      {
        "id": "4abcf001-092e-407b-aed4-36b69e649483",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f32f5961-7ea2-4dd5-9b81-c1e865c96f15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "730128bc-3006-4bdd-99a2-3dbed92dd392",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d646d4f0-f042-4a3a-a297-36b24fba1119",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f93e278-3fcd-420b-b170-346311d71abf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "750bcd38-3e86-4c06-933e-4d4829ab8d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7296b9bc-6efe-4bf5-847c-60e21b300773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "091e553c-28b2-4fa6-bd6b-a44c27bbd3ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f89207b6-1090-4344-b90d-ff975e88d62f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14421725-e291-4bed-a988-363eef68b04a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80fd581c-f445-4fe0-bd51-855211a96a3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a763fd6-2bab-4b1f-9636-8f8500afaa7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9f26a9e-5089-4a7c-be59-23a7fa1d758c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8d240df-81d5-4dbb-a7d4-625d7e9f0571"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c075cf5e-126a-4039-abd5-25c326e3315d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4c41e5d-78d3-4ada-934e-ac843832d376"
            }
          }
        ]
      },
      {
        "id": "b4ca9661-d077-462f-a880-61936e5fc289",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46a74b37-1390-44a0-99cf-506e7741c44d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "407c506a-7530-44d4-bdd8-cc418e7af2d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa93b5f0-0f5c-49d4-9e0f-7cdcec621cd8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae98e927-8363-4f29-a54d-67563d462cdf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13c4c8c2-8c5c-4b57-93fe-f39b8a48fde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d59f654-a505-4593-9e6d-ce36b80f1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71f8134c-9481-454b-bfe7-764f9db2217a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3899a2f1-7664-4c83-bc14-586ea950d89d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6140bbc5-2258-4937-98d1-24ca10f813dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b80af06-0c2d-4197-b5f2-eb1c2c44f92a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fcadf6e-aa91-4d82-8dfb-776bb0fa65a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78ea83e4-5992-4b12-9f82-c33b5bffceca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "edb13660-7d8b-40b8-a017-2f6db984e318"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9905cebc-7854-471b-bb5f-8d38a16690b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6213b835-04e0-449c-9ed3-f4c7dec410be"
            }
          }
        ]
      },
      {
        "id": "6a3bb0b6-ce68-459f-9906-3c4df562b808",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a219e1ab-e0fc-4562-9324-621dddc53284",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4cac452-27c0-43a6-8dc5-b445c3586569",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "432820ed-ba28-4a4c-8fcd-d75acb415c07",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4677ec1e-4398-458e-b430-78e53cb35a07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16ef407f-612f-4929-98ed-dd5ef2714872",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 505.9682539682535,
      "responseMin": 11,
      "responseMax": 15088,
      "responseSd": 2252.356638626225,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726015366196,
      "completed": 1726015502072
    },
    "executions": [
      {
        "id": "d275914e-0ec2-472f-8d21-6837ee0fa8f3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "12a17af4-298b-466b-a747-7a388b4af368",
          "httpRequestId": "1d321ca4-aa63-4c18-8540-33e2edc1ad50"
        },
        "item": {
          "id": "d275914e-0ec2-472f-8d21-6837ee0fa8f3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2b2fa20-9c2d-4af9-8b36-f0e0e06ee60c",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "b9e21cc0-2555-4174-85cb-80d175374404",
        "cursor": {
          "ref": "6076fa2d-0a24-42c4-a6f2-e73c528bfa3b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "164e8b2d-a5d4-47b4-9173-17732d936091"
        },
        "item": {
          "id": "b9e21cc0-2555-4174-85cb-80d175374404",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "12a4bbdd-4af8-4dc4-9a54-5ee6580874bb",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "c50142b6-a161-477c-8b18-212788bee6a4",
        "cursor": {
          "ref": "d8142cc4-b7e8-48b3-a680-a3c779258776",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "45d14678-c446-4519-baa7-035a3679bc9c"
        },
        "item": {
          "id": "c50142b6-a161-477c-8b18-212788bee6a4",
          "name": "did_json"
        },
        "response": {
          "id": "ddce4223-015c-42e5-b1c4-9ae571beb695",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f4939-df76-47df-ac50-202bf0576eb5",
        "cursor": {
          "ref": "a9b0914b-b6be-4784-ba69-a67224b7255a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2e686c62-3763-417b-975f-9543ffe13b1a"
        },
        "item": {
          "id": "707f4939-df76-47df-ac50-202bf0576eb5",
          "name": "did:invalid"
        },
        "response": {
          "id": "90dc1f82-1c39-483a-b72d-ac43457a0c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1967,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f4939-df76-47df-ac50-202bf0576eb5",
        "cursor": {
          "ref": "a9b0914b-b6be-4784-ba69-a67224b7255a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2e686c62-3763-417b-975f-9543ffe13b1a"
        },
        "item": {
          "id": "707f4939-df76-47df-ac50-202bf0576eb5",
          "name": "did:invalid"
        },
        "response": {
          "id": "90dc1f82-1c39-483a-b72d-ac43457a0c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1967,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d7cab-b575-49cf-bd87-b49ccad05ca7",
        "cursor": {
          "ref": "f5ce337d-afb0-428e-bb5f-964d30968522",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "32a410af-0579-404e-aae4-d39eccf348c1"
        },
        "item": {
          "id": "358d7cab-b575-49cf-bd87-b49ccad05ca7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9deb0cd0-e14b-4946-b527-6b7e29ae9758",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2928,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7070e474-5b7b-499f-bb02-55c41acc8832",
        "cursor": {
          "ref": "cf3d6244-d922-413a-913b-ece93b94f773",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cda89960-9a8c-4101-9d1d-4b8438cd4374"
        },
        "item": {
          "id": "7070e474-5b7b-499f-bb02-55c41acc8832",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d05a6922-4bae-49e9-9f6d-a842b01938f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2361,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09997b3-41f3-45b1-ad0a-46732e5280fa",
        "cursor": {
          "ref": "67d0f357-c13b-41f8-a4c7-ebe575ebe3fb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "93c4f36c-00df-4908-a1b1-6adda31990e3"
        },
        "item": {
          "id": "f09997b3-41f3-45b1-ad0a-46732e5280fa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "48732a6b-7d03-4b63-ad09-1b54bc1fc19f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5041e7f8-8c83-47f3-8bd0-8ef2d788d522",
        "cursor": {
          "ref": "078bc676-7326-4b24-9e66-98a84cb462e9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d147795a-8f65-410a-90a6-da0984f7ee22"
        },
        "item": {
          "id": "5041e7f8-8c83-47f3-8bd0-8ef2d788d522",
          "name": "identifiers"
        },
        "response": {
          "id": "df25bea8-afe4-4f54-ae76-9581c66a58f3",
          "status": "OK",
          "code": 200,
          "responseTime": 2396,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb2c7ed-b652-44b2-b552-da4c05262ab0",
        "cursor": {
          "ref": "5f0da15a-dced-46ec-8b4d-1749d7d12d98",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28f3d754-089a-4860-8186-84c426c05936"
        },
        "item": {
          "id": "0cb2c7ed-b652-44b2-b552-da4c05262ab0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e5707b09-e2ff-4dc7-9885-046ccac6530f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e81bcaa-782f-4645-b4b2-b03273a3e33f",
        "cursor": {
          "ref": "3887e5e5-7fd6-40c6-abd9-ee83235eab25",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "186500f1-2e15-443a-af37-8439f5e3147e"
        },
        "item": {
          "id": "1e81bcaa-782f-4645-b4b2-b03273a3e33f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "14c9854a-b05a-4325-a0a0-f2041239930a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bca20c7-5c20-4407-8eac-9f61af31c279",
        "cursor": {
          "ref": "be55a280-ff89-42ca-a04c-0dd164ba7a50",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "63e0d67e-5950-4ba4-b6e8-b0f32173286f"
        },
        "item": {
          "id": "2bca20c7-5c20-4407-8eac-9f61af31c279",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7b0525d4-0db1-48f6-9994-2bba62ff7f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7834d8-7480-4304-b28e-8401542faedf",
        "cursor": {
          "ref": "e780dfbe-b272-4420-949a-3785af55d72e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d53b77dc-e88c-4afd-8635-ca42235020f9"
        },
        "item": {
          "id": "fc7834d8-7480-4304-b28e-8401542faedf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "83c9edac-f9f2-4d14-ad41-9c05ab6bafca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f512ad4-76d1-4872-ad16-b270d24fd8e9",
        "cursor": {
          "ref": "250fe1ec-96cb-49eb-920b-0762dad35dcb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ae635d67-9b91-4e54-82aa-033eac5ec3f2"
        },
        "item": {
          "id": "3f512ad4-76d1-4872-ad16-b270d24fd8e9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d5860fc7-5ec6-4821-9623-639313c4f141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf1dd7-8a5d-4b53-9f53-0981d797313d",
        "cursor": {
          "ref": "10d2b0f2-ed1b-4713-88a3-24ad0567359b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "00783aa3-8600-4f68-86b3-2db756f0149d"
        },
        "item": {
          "id": "acdf1dd7-8a5d-4b53-9f53-0981d797313d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "25e900e7-9cb5-4fd6-9955-e1a8fdea5836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef6dcda-b843-4c07-b3d1-9be124a24b5e",
        "cursor": {
          "ref": "a30899d2-af67-4929-85f4-6a3bdc37384f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0cc58589-cb98-47fe-84f1-6ad6898a5090"
        },
        "item": {
          "id": "8ef6dcda-b843-4c07-b3d1-9be124a24b5e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0fd69c46-a60c-46dc-9af2-5542cc434abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549c6815-e3b7-4c46-a5da-1e416ad75e1f",
        "cursor": {
          "ref": "7b158afd-9c14-49b8-a0e3-40655d434cd0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2bb5f55d-f4cb-43aa-9554-6ffbc6718afa"
        },
        "item": {
          "id": "549c6815-e3b7-4c46-a5da-1e416ad75e1f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3f2c0560-3afc-42a9-9c87-72fd592f8f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8074e6fe-4740-4888-9500-c4adec1c8eb9",
        "cursor": {
          "ref": "c5e70d97-9fae-4668-8169-ecce5625de89",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "079446ac-b474-4f8a-bf7b-d82e821fd8ef"
        },
        "item": {
          "id": "8074e6fe-4740-4888-9500-c4adec1c8eb9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "28fa517f-5e7b-49d6-95f3-8c2d0f3881aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d509233c-c6cf-4006-b33a-113f61177453",
        "cursor": {
          "ref": "40559d83-f1ec-4d90-b8ab-4607310a527e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8155a601-dd86-473c-a6da-ea367da97681"
        },
        "item": {
          "id": "d509233c-c6cf-4006-b33a-113f61177453",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5abaa7b1-acb0-4914-aaf5-4935faf59bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a3dee2-24b0-45a3-b834-ee239b2bc2e7",
        "cursor": {
          "ref": "66d539ce-0f78-447c-b88d-efa5006ee7f6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0e1e6241-534c-413f-b346-bb30e1ee1276"
        },
        "item": {
          "id": "c1a3dee2-24b0-45a3-b834-ee239b2bc2e7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5660283a-2e66-4149-b1a8-50df8ec3ceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9fe7e2-6eeb-4120-a752-6c55e49c9932",
        "cursor": {
          "ref": "01cb5782-7359-4f11-9e55-b5b91cc8374b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "37c32256-6fd6-4366-bcc1-3c8e79a39193"
        },
        "item": {
          "id": "fc9fe7e2-6eeb-4120-a752-6c55e49c9932",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0999c2e7-9471-40d1-88ad-206e0709ab47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02718a47-926c-4b0e-bf36-6f622c8d4ed5",
        "cursor": {
          "ref": "e52cc60b-baca-454f-aad5-9c469be91dfd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f020a3d8-06a5-4140-926d-07c84abc4ea5"
        },
        "item": {
          "id": "02718a47-926c-4b0e-bf36-6f622c8d4ed5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5630c8e3-2a9b-421b-afad-5d3c561c94f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f13e5ac-2ee3-4149-a511-5d3dfb3b3a5b",
        "cursor": {
          "ref": "8916dfb6-f099-46de-841a-d8e2f8ed818d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6f9e7c9d-7ab3-4cc1-97fb-7c5d8ed203c4"
        },
        "item": {
          "id": "3f13e5ac-2ee3-4149-a511-5d3dfb3b3a5b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ba128679-927c-4a83-874f-d311e1341d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f23c9d5-d50a-4163-9d5a-9dfde13eaa19",
        "cursor": {
          "ref": "00f8ca33-bc1d-464b-af7a-3a5879c838e0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6cb9bc76-4f32-4719-b506-2dcb24d70db4"
        },
        "item": {
          "id": "8f23c9d5-d50a-4163-9d5a-9dfde13eaa19",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "558458b4-2b2c-4a84-ba81-b2fe6cda1f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ef1745-9703-4344-8367-cd7956d78e3f",
        "cursor": {
          "ref": "d7d2957c-c32f-45a6-bd78-aa388a87fcc3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "62532820-e5b7-4af3-a5f9-59b0faf4053c"
        },
        "item": {
          "id": "71ef1745-9703-4344-8367-cd7956d78e3f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b471daa0-1b43-4880-ae7b-fb86e762c1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba3c3da-d704-48af-a1e6-036618065d3f",
        "cursor": {
          "ref": "2e5f1323-b291-467a-8a73-edf4023c7d89",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "211ff565-53c5-4deb-a6e8-96a7402dbb96"
        },
        "item": {
          "id": "8ba3c3da-d704-48af-a1e6-036618065d3f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b5174292-5523-4659-8d16-de2c2ab3ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2646efcd-c15a-491c-9b12-3a31b93feb9b",
        "cursor": {
          "ref": "293cee9a-ed05-4fe8-b2fd-1305a231c634",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f0592f2a-fbc1-42bb-9c84-26186d0706f3"
        },
        "item": {
          "id": "2646efcd-c15a-491c-9b12-3a31b93feb9b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2e944074-8977-46b8-aa9c-15941f9a66c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b3b1ad-4ee3-4c9f-ab90-fcf137af71e5",
        "cursor": {
          "ref": "fd09be0a-129a-4f42-b03e-5030e91409bd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7d9ba79e-29f6-48f8-b484-6df0bd1bc2ee"
        },
        "item": {
          "id": "90b3b1ad-4ee3-4c9f-ab90-fcf137af71e5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f46fa6ac-61d3-4293-ab7e-3a86b73e9502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b70316c-e0e6-45a7-b4f4-fd3ee4ebd6fc",
        "cursor": {
          "ref": "41dd41e3-772b-42fa-9813-b702affae3fb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4fed87c0-4cf5-45f7-9f3a-cdc483bdf4ae"
        },
        "item": {
          "id": "1b70316c-e0e6-45a7-b4f4-fd3ee4ebd6fc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "631cfe73-8c28-498f-a1ba-454db36b6598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f988b9-919d-41d2-836c-88da6e0265fb",
        "cursor": {
          "ref": "3b36afe3-ccb9-47e0-9aa1-4fe413bd76d6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dbb1db3c-8e93-4e5c-94ef-16f430c65b92"
        },
        "item": {
          "id": "a4f988b9-919d-41d2-836c-88da6e0265fb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ccb8b5b-1577-4cc9-a864-f09b28d46845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c286a82-c967-44d3-84fe-9192f0fc5bb1",
        "cursor": {
          "ref": "16f30669-fd8f-4bad-98c0-552d2fedbe8e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e1cbb509-00bf-4b0b-9090-6c41e9cc4df0"
        },
        "item": {
          "id": "2c286a82-c967-44d3-84fe-9192f0fc5bb1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c0fbbd31-9c2c-426a-a1e9-e8480dc6cbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5353f6a4-327e-4e24-b664-ce67a8e9c6e6",
        "cursor": {
          "ref": "78806a2f-f730-42f0-b69f-61256bca5f90",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "80f9ed36-a54a-4c3d-b414-ec5c75dc5c8a"
        },
        "item": {
          "id": "5353f6a4-327e-4e24-b664-ce67a8e9c6e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "68374726-d6ac-41f7-8f17-c743bcf47053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5808e38-474a-49bf-a6fa-b7efe1c76b83",
        "cursor": {
          "ref": "8fac4b67-a3b7-473e-9c93-65daa8b71351",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3be942e7-2be9-48ec-b50f-81385814c540"
        },
        "item": {
          "id": "d5808e38-474a-49bf-a6fa-b7efe1c76b83",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0be008e5-c4e2-4524-aa69-7eb91cf426d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d581b8-bcb6-4d2e-8000-3c3719f4077a",
        "cursor": {
          "ref": "a6e12772-5156-472d-a1e5-ad2b9e3412cf",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2267bb26-38f5-40f5-ae08-76f94113acd2"
        },
        "item": {
          "id": "27d581b8-bcb6-4d2e-8000-3c3719f4077a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f0428353-7321-40ca-834e-d6a68d179003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505c67a6-c689-4a0a-a5bf-74d641563c67",
        "cursor": {
          "ref": "1547681c-79ea-40e3-bb23-51dd985618bd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0c106e61-c9b4-49dc-b1c2-3eb80544134b"
        },
        "item": {
          "id": "505c67a6-c689-4a0a-a5bf-74d641563c67",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ff31b502-d8e4-4118-8c46-33fe1781d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04f83f5-a708-4238-9dd7-e61aaeb580d3",
        "cursor": {
          "ref": "85f9f53e-e66d-4571-a36f-c74f6428a3e8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "063d6439-388c-4574-aabe-ed52bf7ce404"
        },
        "item": {
          "id": "f04f83f5-a708-4238-9dd7-e61aaeb580d3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "17e5bccc-bf16-4e1d-ba36-d48bf5772e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826d3a02-e8e0-4a6d-942c-7b8c0ec91519",
        "cursor": {
          "ref": "ea867516-e474-4c71-abd9-1bf41cb7c055",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c62c1263-4538-43fd-825a-f248321b20b0"
        },
        "item": {
          "id": "826d3a02-e8e0-4a6d-942c-7b8c0ec91519",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "edd51e01-786d-4931-b5b0-c53904d5a3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd5bb4c-95cd-4611-a9c9-295064cd095d",
        "cursor": {
          "ref": "b46aa788-13ef-4e15-8024-c2dafebb6981",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "05f31fe3-f908-4887-b487-5f734f6d0739"
        },
        "item": {
          "id": "1cd5bb4c-95cd-4611-a9c9-295064cd095d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4da3297c-d535-4479-868d-674487f2354b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051477b7-f83d-4931-93f8-4ea89d10b1c3",
        "cursor": {
          "ref": "2b9c3678-ef27-47c9-bf5f-1fb089a75519",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f3cd7d1a-9f38-49ae-bf65-7e104e154f37"
        },
        "item": {
          "id": "051477b7-f83d-4931-93f8-4ea89d10b1c3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8fe8a283-634b-4f35-a295-43932ca496cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d80848c-a7ad-4a8d-a25a-a490478d842a",
        "cursor": {
          "ref": "3d2dfbad-d87d-482e-99e6-940f85d52ccb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6ea72137-bd39-4166-a0c6-226666975334"
        },
        "item": {
          "id": "2d80848c-a7ad-4a8d-a25a-a490478d842a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "81f9463b-1f14-4ba8-b09f-c9c5779dc218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15f6cf8-3585-48a1-b90c-0b9789aff899",
        "cursor": {
          "ref": "1a0b7379-6f33-46f7-b9ca-e59d6278fb11",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b7ce173f-03bc-4960-8fb5-08d3e00e2d22"
        },
        "item": {
          "id": "f15f6cf8-3585-48a1-b90c-0b9789aff899",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cff5c8af-d5d3-42b0-8cec-2fc7e92dc628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb3f9e8-08f9-47b8-b7e6-ead7763ede82",
        "cursor": {
          "ref": "7d73410a-9a82-488d-a354-393730d44bd2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "38c2da68-0265-4c05-ac60-4d935fd4da7f"
        },
        "item": {
          "id": "abb3f9e8-08f9-47b8-b7e6-ead7763ede82",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "93e89a24-a118-402b-b177-b3dc5858af85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e904e108-9e87-47fe-bc67-8b70ec9d9def",
        "cursor": {
          "ref": "9d5f251b-e100-48c1-a70f-9e4d4435c9ce",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c93a343b-70aa-417c-a557-96b6893f6893"
        },
        "item": {
          "id": "e904e108-9e87-47fe-bc67-8b70ec9d9def",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc58a870-7c2f-4df2-980c-499be3556dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb128e3-ffb7-4d12-bbc6-74332432e8ce",
        "cursor": {
          "ref": "5f145048-04d2-4d6f-bead-f589bb558288",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9a7b5993-a6dc-406c-8929-4b419eab5688"
        },
        "item": {
          "id": "6fb128e3-ffb7-4d12-bbc6-74332432e8ce",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9ddc46a4-11d6-43e1-b833-2799d7554237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13113ea2-5efd-4179-9cab-5c2aabc2a6cc",
        "cursor": {
          "ref": "e5575c13-c147-4119-a0fb-950896217bc2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7a2f1427-aed9-4d6a-a5d0-f86842285682"
        },
        "item": {
          "id": "13113ea2-5efd-4179-9cab-5c2aabc2a6cc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dd93fbdd-a810-4e73-a1f4-027a58ddba7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24db275c-d3e8-40ca-933d-66fe4a0b86a9",
        "cursor": {
          "ref": "92c9018f-3cad-48ad-9cf9-bb20ebadf70c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e7d3630e-b3eb-4624-a6eb-6d1357d75ad9"
        },
        "item": {
          "id": "24db275c-d3e8-40ca-933d-66fe4a0b86a9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "321fe9bb-9965-40da-843e-bad724c7f35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638e71d5-c244-43bf-9271-56bd4403bd02",
        "cursor": {
          "ref": "c16c4e8c-4e26-407b-8a73-76160a6360dd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "04f84376-6479-480c-8fed-38f034558098"
        },
        "item": {
          "id": "638e71d5-c244-43bf-9271-56bd4403bd02",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ba2236fa-b86d-4c92-9884-eb4b98865405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe71b9d3-536b-4f54-8148-79071c661cef",
        "cursor": {
          "ref": "b04407a8-be6b-4256-b4b4-656c3564b37c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9978d8ce-32e4-4a97-a52b-bcb28e082a28"
        },
        "item": {
          "id": "fe71b9d3-536b-4f54-8148-79071c661cef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ca3466ae-7748-4d0f-bf92-43db5b404fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4865981-200f-40e6-85d5-c7cf27a88474",
        "cursor": {
          "ref": "bc1957d4-91ed-4599-a053-10ba6ba708ed",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "992576fe-d905-4a41-b226-0b34633f82a4"
        },
        "item": {
          "id": "e4865981-200f-40e6-85d5-c7cf27a88474",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f65b276c-cbe8-45e3-824a-f30662d31a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2b61e-68e2-46f7-8a8e-2e8732d70a17",
        "cursor": {
          "ref": "792fefd4-a030-470f-8890-1148278a3560",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b08c0ad-fa00-4e5f-b956-cfea7b2cf226"
        },
        "item": {
          "id": "43e2b61e-68e2-46f7-8a8e-2e8732d70a17",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5e0b6584-855f-49cd-a478-45ec5ec55445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf182190-40e2-423e-b2ba-089c79a5bf96",
        "cursor": {
          "ref": "8637026f-a455-4bc7-b5b9-eba257c8b191",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8f605bb1-0b49-4cbc-b93e-b01902edb487"
        },
        "item": {
          "id": "bf182190-40e2-423e-b2ba-089c79a5bf96",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6b465535-cbb5-40ea-b341-ece38d962a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee433a0d-244f-4377-bcca-f52461087dd7",
        "cursor": {
          "ref": "cab85e69-f54e-4c3e-87c9-0b347e21843c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a011f3b2-0b0b-4b0a-b7bb-b9c76c5fdb16"
        },
        "item": {
          "id": "ee433a0d-244f-4377-bcca-f52461087dd7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "548e7350-9c05-4137-8b19-b65207dba84c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41ec3dd-15d8-4388-9688-25335f7ef29b",
        "cursor": {
          "ref": "58ddf19a-11c9-4a68-b4f6-1dc4e7c0e31f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e5c279c5-ad60-40d1-96b0-319a78e3d655"
        },
        "item": {
          "id": "b41ec3dd-15d8-4388-9688-25335f7ef29b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "74a08a05-7314-442e-a6c6-7fd139079734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6cae1c-7c9a-44cc-bd03-13355f9034aa",
        "cursor": {
          "ref": "728c1683-4c48-47fd-a16d-9eb154925712",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "49c0154f-948e-401e-9828-765237be1809"
        },
        "item": {
          "id": "de6cae1c-7c9a-44cc-bd03-13355f9034aa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "daa57a26-22fd-4efa-95ef-dba25066bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a7ad85-aa9b-449a-ba25-8e3efa13595c",
        "cursor": {
          "ref": "9ef752f4-abbe-4653-a656-8a5d3b5a6a52",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fafe682f-3a91-4b1f-b9a0-f3b056d4f257"
        },
        "item": {
          "id": "a3a7ad85-aa9b-449a-ba25-8e3efa13595c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "997765d7-fccb-4638-9332-d015e183e5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85285a8f-4c09-42c4-bd0b-5032f7f31c54",
        "cursor": {
          "ref": "eaa6228b-ce76-44eb-8df9-b1e3d8cd48c8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "19c259d0-dc7a-499f-8d53-eb717f16101e"
        },
        "item": {
          "id": "85285a8f-4c09-42c4-bd0b-5032f7f31c54",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7fe9482c-ee3d-425c-9677-556ab6afea59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbe7505-d472-4976-ae68-3b5c42cf2ebb",
        "cursor": {
          "ref": "4445be04-882d-4941-9f46-d7abfc7afcde",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f7be83d2-9916-4247-8587-1a52e9252f27"
        },
        "item": {
          "id": "ebbe7505-d472-4976-ae68-3b5c42cf2ebb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5f7732a0-c801-49a0-8cc5-66ee41f0ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791e2396-6cfb-492a-b83b-2e9abc0facf9",
        "cursor": {
          "ref": "6c4580c2-1f33-4203-a3f2-9b98aa5c4b9c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d8ec1489-dda7-49e3-973a-aacb0b90d076"
        },
        "item": {
          "id": "791e2396-6cfb-492a-b83b-2e9abc0facf9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "37728b3a-1564-47ff-9895-beb729830776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aea888-bde0-484e-ae28-7d725f3ec9c9",
        "cursor": {
          "ref": "5e57eceb-46b9-47a4-9a1c-69a06550a3ee",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57bdce07-dadb-48a8-a5f9-396a5b03459e"
        },
        "item": {
          "id": "d0aea888-bde0-484e-ae28-7d725f3ec9c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7aa16acc-206f-46f9-bdcb-ed9b152bd524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eccc157-5a73-403f-b9f6-994542b01d4f",
        "cursor": {
          "ref": "5b733e76-63ab-4da8-b90a-2bb2e7974f2f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c653583-e636-4c0b-84c2-7361c7d184a9"
        },
        "item": {
          "id": "3eccc157-5a73-403f-b9f6-994542b01d4f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e3ab9899-f7f4-4ec6-ba92-c1fdddd9129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d2a348-2415-4f19-b311-e776316be45c",
        "cursor": {
          "ref": "8b9ac1e0-518e-409a-b701-9b97f17cc259",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5fde5e5c-41a4-4d3d-90a2-65fdb8faa4e5"
        },
        "item": {
          "id": "13d2a348-2415-4f19-b311-e776316be45c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e8b32422-5634-49cd-b882-29542dfb3927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7f5c08-82b8-4f2d-b121-15b3f036a880",
        "cursor": {
          "ref": "afe0f52e-b864-493c-8b77-f80d81429ffb",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4e85ef4e-559b-47c8-a771-1a82453b2187"
        },
        "item": {
          "id": "7a7f5c08-82b8-4f2d-b121-15b3f036a880",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be4fb1f7-75ef-4afa-b629-b16b6ed56427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c97e06-a90f-4c82-9f57-8960e90e88f2",
        "cursor": {
          "ref": "f2ed98d1-69f7-42a9-9129-d9a594bc64b2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b2a7b47e-ad21-4418-85eb-4caa06f09d1c"
        },
        "item": {
          "id": "20c97e06-a90f-4c82-9f57-8960e90e88f2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ba92b0f6-484b-402e-a33b-27b4c9098e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7169ef2e-ab81-4ef0-b978-e27bda75ec1b",
        "cursor": {
          "ref": "a04d51f5-c935-4992-ac01-388af387dc2b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "55943bce-7cc1-46d3-87a3-2dd23005ccae"
        },
        "item": {
          "id": "7169ef2e-ab81-4ef0-b978-e27bda75ec1b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea6cf995-0299-45a7-b10d-9d28c8ad8f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8104131e-db04-4bdf-911d-68019d63b300",
        "cursor": {
          "ref": "cfaa65ac-2e74-4071-8eaa-309b7bf441c8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c851ef5a-ef2e-43e4-8d48-f6b8521579a8"
        },
        "item": {
          "id": "8104131e-db04-4bdf-911d-68019d63b300",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f4e2b7c-bbcf-4a10-917f-7391799f466f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b450e6b5-546b-4be2-b16e-5a0f3fa87b58",
        "cursor": {
          "ref": "cfbc38ae-0d97-4fc4-a40d-ca1fac222e65",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bd494679-3462-42d6-8793-c68960d6161e"
        },
        "item": {
          "id": "b450e6b5-546b-4be2-b16e-5a0f3fa87b58",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f8050658-8cd8-49b2-84ac-9430e205810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c4efdd-386d-4b04-9134-6e0fe5e915f8",
        "cursor": {
          "ref": "02742e56-442d-4b02-b0a9-7c5ab9e0ac08",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ce66e860-8e5e-444e-bdc2-b7d507821e36"
        },
        "item": {
          "id": "d8c4efdd-386d-4b04-9134-6e0fe5e915f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "67946144-2c78-408b-9756-2a20fd532761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ceb5ac-3da4-4f7a-b5ba-e0a836559490",
        "cursor": {
          "ref": "9fc6453f-c05c-42ab-a865-22d226a24776",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "34abe85e-6f2f-4ee5-8050-d55295679847"
        },
        "item": {
          "id": "96ceb5ac-3da4-4f7a-b5ba-e0a836559490",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2929fc53-8a06-437f-86e5-04cc671dbedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f39982f-dc6b-4e0f-b880-e02ce0ebfe35",
        "cursor": {
          "ref": "5da006aa-55ce-48bd-8aba-ad7989ee2b31",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d6c2276f-21d0-4cdf-82a8-0e9dcfa03ccf"
        },
        "item": {
          "id": "3f39982f-dc6b-4e0f-b880-e02ce0ebfe35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a0d632a-615b-435e-a940-6ed29b5d9b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a6b01c-f203-4186-b07f-a07c932de348",
        "cursor": {
          "ref": "e7e18cb3-3af2-4ae3-b82d-e9cd88ad8a2b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "852b7b79-2aad-4a77-a042-309860bd1e09"
        },
        "item": {
          "id": "29a6b01c-f203-4186-b07f-a07c932de348",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04332237-5f88-42a5-854d-a0767ff120ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad944fb-08a3-49cf-9fb1-dcfc1ec7a75c",
        "cursor": {
          "ref": "69b8e438-8748-4127-8fe7-2ada94aae045",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dac662e1-f8ae-4456-ad5c-1d0eaa8fe4a3"
        },
        "item": {
          "id": "4ad944fb-08a3-49cf-9fb1-dcfc1ec7a75c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "521e2ab0-c7df-4aef-8d12-99f2c6a28e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe0a848-c0c0-4730-b266-12717b4af0bf",
        "cursor": {
          "ref": "ff371360-06ed-4247-8c8a-4e2def20fea2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9f48504-08b3-4cde-8515-3f7f4484225e"
        },
        "item": {
          "id": "ebe0a848-c0c0-4730-b266-12717b4af0bf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "281c04fd-f54c-4db8-baee-506eef93d9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f949e1-44cc-4946-b200-59fbd4033950",
        "cursor": {
          "ref": "5b3735b2-640e-4478-ab86-d46e0a6d015a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a3f20789-42e5-47fb-9c25-ea776bb4b5fb"
        },
        "item": {
          "id": "e6f949e1-44cc-4946-b200-59fbd4033950",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "121e75f8-931f-472e-941c-6c797370c7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c7881-ccdf-44f0-96bb-be53d55fe2de",
        "cursor": {
          "ref": "086e62a1-4776-4983-8008-fa0ab6f9e8e7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2c1840f6-09ba-4182-9590-76f023ca85e5"
        },
        "item": {
          "id": "0d7c7881-ccdf-44f0-96bb-be53d55fe2de",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6b03460e-c81b-4660-b4eb-23d37e168d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b3cbc9-9705-41a3-bbfa-d9ecf14e674d",
        "cursor": {
          "ref": "1654b975-c6f2-4641-b509-fcca0dcebff8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3b957e1f-71bc-4bc3-9e5e-0d8595f3447c"
        },
        "item": {
          "id": "39b3cbc9-9705-41a3-bbfa-d9ecf14e674d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "22a6b22a-161c-427d-9983-8f8c9308828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b9cc4a-3d51-4fb1-8737-b56635a044b8",
        "cursor": {
          "ref": "0afabf53-17c9-4a17-9c23-963a73850deb",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa14ef26-9b7b-43f8-850f-493248ef6b4b"
        },
        "item": {
          "id": "68b9cc4a-3d51-4fb1-8737-b56635a044b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4f87bd44-4e34-44fc-8e3c-fb4c175908ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1891bd3-431f-4644-95ac-22f4cc75c28f",
        "cursor": {
          "ref": "b8b38c4e-062d-45b9-a0f1-f25f22efe9b5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bd361bc9-4d15-473e-aa65-37494ddaa456"
        },
        "item": {
          "id": "a1891bd3-431f-4644-95ac-22f4cc75c28f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c72377c8-2ccf-4e7c-9af9-e2a7cc9487ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3790aa-0cec-47e3-a6b7-faf9ebb48895",
        "cursor": {
          "ref": "7b3ceff8-6c81-4474-8520-60ca2a05adee",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "875885f4-f8b4-40d7-8b83-c3b8cde6a8ec"
        },
        "item": {
          "id": "ec3790aa-0cec-47e3-a6b7-faf9ebb48895",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "13ccca4b-9fd4-4b1b-98ce-7aa8dd312b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b6394e-7ae1-4227-be21-9764e0a383a2",
        "cursor": {
          "ref": "26875ad4-320a-4804-ae89-502bc7e39712",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "887111b8-47d4-4745-996e-010343fef090"
        },
        "item": {
          "id": "92b6394e-7ae1-4227-be21-9764e0a383a2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da2f64e7-e946-42e7-bf50-2edd6d66777c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39e2921-242a-47b9-875f-6ccb2d7c746c",
        "cursor": {
          "ref": "1b208074-6d3e-4bd4-98d0-6878a760bc20",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "df152250-b8c3-48e2-a6f0-5108377d1213"
        },
        "item": {
          "id": "a39e2921-242a-47b9-875f-6ccb2d7c746c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e44d65be-1089-493c-a850-6a076b33d9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0109a529-d795-4058-9e90-eae8b68fd7ad",
        "cursor": {
          "ref": "eeaf5f12-4423-485c-bf77-db144e497c57",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "336c5ab6-ef0d-407c-ab52-9968aa588bdb"
        },
        "item": {
          "id": "0109a529-d795-4058-9e90-eae8b68fd7ad",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fc49fa40-5142-4e27-8532-f1c55e90d473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6543cf7e-f50c-4b9e-b5c6-0e946bbe5ae1",
        "cursor": {
          "ref": "b5598cdf-30bb-40b6-97d8-3a0ff03ba0df",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "002c1115-5b0d-489e-b22e-9bbe6d585ab0"
        },
        "item": {
          "id": "6543cf7e-f50c-4b9e-b5c6-0e946bbe5ae1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ee75f1c1-822f-49fd-8cde-c28208759d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d3358c-3a3e-438c-91f3-07eca23e95c6",
        "cursor": {
          "ref": "16713a67-4af9-4704-b1cb-2fcc36a6bed8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e7c5407-01e0-471a-97bc-88c962084c6f"
        },
        "item": {
          "id": "73d3358c-3a3e-438c-91f3-07eca23e95c6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "da94a425-db59-4d8f-a910-d8658e49a88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e93a2b-ea9f-4573-8336-12bf5de3ec10",
        "cursor": {
          "ref": "0e58fd55-f604-4e99-add9-1a230974e3c3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4162c9b5-700d-46e6-acc0-fcf21a880e83"
        },
        "item": {
          "id": "05e93a2b-ea9f-4573-8336-12bf5de3ec10",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3149d2a9-c165-49f6-8dca-5dee4d151b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b26872-0718-4c64-96e1-fac7f12e8215",
        "cursor": {
          "ref": "7a750bcc-54a1-45fa-b191-8988773a72ed",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ee2f6b2d-a6db-44ce-8bad-6eddb1d8235e"
        },
        "item": {
          "id": "b0b26872-0718-4c64-96e1-fac7f12e8215",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08bb3a4e-e873-4a0d-bf94-f064d0ae0f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ab38e-f59c-46f9-bc48-262905aba868",
        "cursor": {
          "ref": "e8401e73-e59b-4066-9bee-63b1897551b8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5d520b7e-3e6c-41c9-ba45-966707b20a2b"
        },
        "item": {
          "id": "062ab38e-f59c-46f9-bc48-262905aba868",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1bec1282-6ec4-4e14-8deb-52ded795bdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3b8e8e-1cd6-4141-a102-064060b3337a",
        "cursor": {
          "ref": "dd770aa8-9e82-4d0b-8022-4e9ac02f505e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef7a6f78-929b-46e5-8bdc-21eeff68ad13"
        },
        "item": {
          "id": "fd3b8e8e-1cd6-4141-a102-064060b3337a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "55977d7b-d3f4-4b51-9990-cbf3e1bb302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4a6e51-c50f-429d-996a-a9d9a2d6d4f3",
        "cursor": {
          "ref": "5e0e2297-29e0-413e-8bcf-2f3300e580c9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "102ca3ab-4ac7-491a-b538-8ac43a45cb52"
        },
        "item": {
          "id": "ed4a6e51-c50f-429d-996a-a9d9a2d6d4f3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "08e39c4b-2cda-45cf-9120-8469d36a848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2ab8cb-4a33-4679-b1de-e0a558a77d0b",
        "cursor": {
          "ref": "434081d2-044a-45ad-baf3-58d8e9f3963a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2edbc321-2af0-4a28-8ed4-5e61f6dce86a"
        },
        "item": {
          "id": "df2ab8cb-4a33-4679-b1de-e0a558a77d0b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "565bf4d8-2a78-45ab-aef5-10aff09d7920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21383d0e-c316-440f-bff4-bd77a1d501da",
        "cursor": {
          "ref": "c0609bc8-0094-45eb-aedd-da2a588f1149",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39d75e8d-4fd8-4b9d-85f1-3eeb236ef0e3"
        },
        "item": {
          "id": "21383d0e-c316-440f-bff4-bd77a1d501da",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4b05cc17-cb4f-4f21-98ad-72a39b806eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aadf5be-8118-4b5e-98f7-64b0f70df9d3",
        "cursor": {
          "ref": "9a13912a-611b-458e-900e-586e943543e4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1d0710b4-5096-4c65-8271-bdcfe70d52e1"
        },
        "item": {
          "id": "4aadf5be-8118-4b5e-98f7-64b0f70df9d3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c0a3a7eb-5d54-463a-8a1e-abcf827a15a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f050bc-d717-4884-be85-f436d8a0d8fb",
        "cursor": {
          "ref": "229d796d-6938-434a-ad77-32b43498d80b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "06591560-2241-41bf-8d01-ea0082e040b1"
        },
        "item": {
          "id": "52f050bc-d717-4884-be85-f436d8a0d8fb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "625c01eb-e2e4-46a7-a321-5af527703b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90f3e57-2c54-44d1-8ec6-ab2d6d1cd570",
        "cursor": {
          "ref": "8984002e-b31a-472e-a5ad-82acc6940fe7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8dbff823-b6e3-4156-87bc-aecca763ed23"
        },
        "item": {
          "id": "c90f3e57-2c54-44d1-8ec6-ab2d6d1cd570",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a1f3b19f-cbdf-4add-adeb-c1a45c7eda32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d13ee7-be8b-4d7c-b384-5f6979762093",
        "cursor": {
          "ref": "b93a00e5-219a-4c1f-afed-9f2811094e19",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f082e6c6-4651-47ed-8737-e247a79e1278"
        },
        "item": {
          "id": "f6d13ee7-be8b-4d7c-b384-5f6979762093",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e06b47e3-47fd-4d71-a3fe-3390e75bcb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8133582-4eda-4124-8e5a-561ebe8be207",
        "cursor": {
          "ref": "36082416-ee3e-4bf7-a39d-621c64098976",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0b6ee20-d482-4ade-bdf4-1e1454dd259e"
        },
        "item": {
          "id": "a8133582-4eda-4124-8e5a-561ebe8be207",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "12e0a211-5b32-4c59-a93b-5d287587178b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6bef61-6e62-4b43-9f92-bbf11de4ed96",
        "cursor": {
          "ref": "9b5dc7a8-2072-416e-9aef-7e9070e84bdf",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cd734cd7-33ac-4087-a897-1b97669b169d"
        },
        "item": {
          "id": "6d6bef61-6e62-4b43-9f92-bbf11de4ed96",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "36c705cc-4279-48e3-9363-787b2b718308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782df3bb-de03-4add-bb26-0c0991f33929",
        "cursor": {
          "ref": "1982708f-96ac-407b-8228-ed41d598986e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "62d6ba1b-bb20-4080-a79d-00fe8237451a"
        },
        "item": {
          "id": "782df3bb-de03-4add-bb26-0c0991f33929",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2d7e7e16-ddea-4ff9-b5b1-e23fa4d7732c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b415d785-15e4-43d5-8ab0-418e089f98e9",
        "cursor": {
          "ref": "5cbbb4ce-4ff0-4065-9f7e-94f5aecf1096",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "427e4191-6828-457a-9019-bd7baee50658"
        },
        "item": {
          "id": "b415d785-15e4-43d5-8ab0-418e089f98e9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "984d4711-fc2c-4f4e-a0f0-3972c2fc6e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966f8866-66ad-4d79-99c5-f1af29c4c828",
        "cursor": {
          "ref": "89269071-2fe5-43eb-8029-acceef1099a5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "de14a7e5-2795-4c98-894a-ba162ace672e"
        },
        "item": {
          "id": "966f8866-66ad-4d79-99c5-f1af29c4c828",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f2b8e8b9-711d-4bf1-ba4f-6550feb487ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb2e54b-601c-4bca-8e02-b25d2742e59e",
        "cursor": {
          "ref": "b8aaf9c9-71ba-4bd4-9250-7725878b5e01",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fa300aa8-770b-4c61-af81-834eed02f6fd"
        },
        "item": {
          "id": "6eb2e54b-601c-4bca-8e02-b25d2742e59e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6fa64371-201c-4f8c-8b24-bd1c029e4330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea6ff61-2c1c-4325-a0d8-08260ab2904e",
        "cursor": {
          "ref": "ff8624fd-2db9-4930-8457-db6129bbcee7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fcfe305f-699c-43a2-a3ad-1d28ab2d25c8"
        },
        "item": {
          "id": "bea6ff61-2c1c-4325-a0d8-08260ab2904e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "58ba1305-6a19-43d1-85b6-82ed10b8ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4afabd-2c48-4b70-846e-d35af93b29ce",
        "cursor": {
          "ref": "9e8cf7e8-7627-4ec6-8c57-25b60c3166cc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d3995425-7956-40cc-85ba-d70476c80461"
        },
        "item": {
          "id": "8e4afabd-2c48-4b70-846e-d35af93b29ce",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "446e88e6-1091-406f-8dbe-e35226616029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbd2965-fa9f-4c52-b0d4-6ad0e41d35b0",
        "cursor": {
          "ref": "9054a7c6-7b36-46c3-ba08-80f3513e543e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9387f5ab-1c0b-4966-9344-1a1a486b59a0"
        },
        "item": {
          "id": "dcbd2965-fa9f-4c52-b0d4-6ad0e41d35b0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2092533e-8194-4562-9dac-0ef2ae8371c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "20c0f1e8-7bb0-41aa-a950-24efe5858064",
        "cursor": {
          "ref": "49f47aa6-cc1b-4e7a-a48f-773e7d11796a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "570e601d-503a-426e-9006-f6950f02649e"
        },
        "item": {
          "id": "20c0f1e8-7bb0-41aa-a950-24efe5858064",
          "name": "credentials_issue"
        },
        "response": {
          "id": "faa1eeae-d10e-48eb-93a5-5a48a71cd88e",
          "status": "Created",
          "code": 201,
          "responseTime": 15088,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b570eb78-a2a3-4042-9f4c-0546745f8cba",
        "cursor": {
          "ref": "5cf968e0-be92-4dc8-a6a0-ed628cb10aac",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7c7d03a2-944c-44c9-ae40-16c053a5015b"
        },
        "item": {
          "id": "b570eb78-a2a3-4042-9f4c-0546745f8cba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "65521f64-d617-494d-ac42-9d26af986c88",
          "status": "Created",
          "code": 201,
          "responseTime": 14390,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b692047-f6c7-4b6e-89e1-e4a60d43c255",
        "cursor": {
          "ref": "7a4cee2a-2cbe-4300-9ae9-46634826b267",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dc323ef6-34fc-48f7-b2ce-abd207d6b26f"
        },
        "item": {
          "id": "1b692047-f6c7-4b6e-89e1-e4a60d43c255",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "40789d63-b29f-42a7-b1f6-d5bfcd970fdc",
          "status": "Created",
          "code": 201,
          "responseTime": 14649,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f7e052-9465-48e4-a06a-0130bc1a0318",
        "cursor": {
          "ref": "3a9c2e22-66bb-4853-b63b-645fad13606e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ce6ac4ef-97ec-4bfe-ab39-8eca14e93761"
        },
        "item": {
          "id": "80f7e052-9465-48e4-a06a-0130bc1a0318",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "529fdd23-a044-418f-9220-a699d4f6da59",
          "status": "Created",
          "code": 201,
          "responseTime": 14226,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9048a8a5-097e-4b3a-ac85-38c7c0eb6557",
        "cursor": {
          "ref": "ecb32105-9b7d-4af8-8d25-656f2b7aed88",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ad9dd6b3-ddf5-4b23-bd4c-4726e1b08f45"
        },
        "item": {
          "id": "9048a8a5-097e-4b3a-ac85-38c7c0eb6557",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0ea25100-6b4e-453d-8b6a-f32f56797768",
          "status": "Created",
          "code": 201,
          "responseTime": 14942,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-11T00:44:20Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-11T00:44:20Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1699ea09-431b-4bc0-a11f-aa612ad947c1",
        "cursor": {
          "ref": "387d92f2-a62a-452f-b07f-0107651568d4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "67850cfd-60ea-41f6-90e0-1d2629d28386"
        },
        "item": {
          "id": "1699ea09-431b-4bc0-a11f-aa612ad947c1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "902d402b-4581-4ab7-942e-4e4a85e92fb3",
          "status": "Created",
          "code": 201,
          "responseTime": 14570,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6473c8ea-93da-47a7-b73a-3c447d9c42f6",
        "cursor": {
          "ref": "2ad49557-fd33-4e75-bcc3-3754670e28d2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "22d5d241-3e8b-4766-8034-a09395a50d0f"
        },
        "item": {
          "id": "6473c8ea-93da-47a7-b73a-3c447d9c42f6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a0889916-8bb0-4f8f-bb62-8128711c5bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce6ad9a-45c1-4ff0-895e-0d378df91844",
        "cursor": {
          "ref": "c3187030-44f3-4a21-9283-7b304771b91f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48afe967-2738-4a58-979e-a3f1a99d1aa9"
        },
        "item": {
          "id": "9ce6ad9a-45c1-4ff0-895e-0d378df91844",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ca74c79-0fc9-493c-81cd-826e338934ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fb0022-6c16-4836-a866-4570df0e00ae",
        "cursor": {
          "ref": "a0984a20-02ac-4b45-adac-e597bf8d88a1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bee5da34-8dff-40ae-a8a5-2e95f124df88"
        },
        "item": {
          "id": "e0fb0022-6c16-4836-a866-4570df0e00ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "112ff5fd-1e30-439c-bc0c-aae791923ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696d2d8e-d038-409c-aa14-ad5b655fc2d8",
        "cursor": {
          "ref": "ee92fa50-e4d8-4ae1-b03d-9d66823fd30d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8d862ff-14cf-4a04-b11c-72e7aa588f15"
        },
        "item": {
          "id": "696d2d8e-d038-409c-aa14-ad5b655fc2d8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "416014a9-8087-48e2-9cee-d49559fdebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d0f29d-54c4-437b-89cd-19e79d221ddf",
        "cursor": {
          "ref": "e2ed78cf-c716-41e5-8e6a-4d729ff2de6e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "268a240f-e534-41ac-bc4c-2e4a1b3eeaf8"
        },
        "item": {
          "id": "a0d0f29d-54c4-437b-89cd-19e79d221ddf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a0836b62-ac30-4c3b-a6b7-2bf9b6804185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09912382-3020-4bb8-a3e8-bb4873e32d86",
        "cursor": {
          "ref": "4bfe54c5-2a7f-4a4a-ba0c-92ba8f11136b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "917163b6-58ac-4422-89af-1129fc7c866d"
        },
        "item": {
          "id": "09912382-3020-4bb8-a3e8-bb4873e32d86",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c423141b-6e9f-462b-9a5e-a68affe5ff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc233e0-9f9e-4110-88a1-6a13d90ee81a",
        "cursor": {
          "ref": "82d47146-13e3-4033-998e-8b85045a1d88",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e7627417-e6c9-4e97-a2c7-088313a94b88"
        },
        "item": {
          "id": "abc233e0-9f9e-4110-88a1-6a13d90ee81a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "47695e29-8bd4-4ef6-a5a2-dc50ebe95034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef47973-be0a-438f-ab81-47c2d97434ca",
        "cursor": {
          "ref": "1e956644-74be-4a2a-b74c-126bc1e6c7fc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "09c77458-849e-4de8-94b3-8f72827a184a"
        },
        "item": {
          "id": "6ef47973-be0a-438f-ab81-47c2d97434ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b201880a-ad87-46b2-8885-126d2ee8c963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc2913-f82e-46ff-854b-1e1a1cc31227",
        "cursor": {
          "ref": "994cf7a0-7676-4b0b-b224-1ae40c5b1130",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0d675e3c-116f-4de6-9a98-2934fb326f4f"
        },
        "item": {
          "id": "69bc2913-f82e-46ff-854b-1e1a1cc31227",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "439be18a-6fa0-48e3-aaac-aa9b5fd08a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e57447-dcd3-4900-ab75-bf439a48caac",
        "cursor": {
          "ref": "aedbbc16-a29b-4c55-8d3f-5b2126121ebc",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6a1f5a55-7d8f-4cad-aa02-41b943fd66e8"
        },
        "item": {
          "id": "70e57447-dcd3-4900-ab75-bf439a48caac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "47c23e6a-d85f-4623-b3fb-28e834ce7e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bacbd6-098f-4be1-8155-c67fd7e8476e",
        "cursor": {
          "ref": "4d63fecf-8203-4dd0-b89a-811d55ba1f15",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "41e44a70-8a7e-4115-9a1b-e7f605dfe77c"
        },
        "item": {
          "id": "b7bacbd6-098f-4be1-8155-c67fd7e8476e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "74d33074-11bb-45ee-a858-66592d66c05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2a770b-caf7-4e90-9be1-36b29273d9e7",
        "cursor": {
          "ref": "df81198c-f977-4342-bd1c-7ca0b4d21549",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ecaffa6a-0da4-404a-8eaa-906ff5c3c76e"
        },
        "item": {
          "id": "9b2a770b-caf7-4e90-9be1-36b29273d9e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "87d23cef-1fea-4069-9b9e-519fc6c3abd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d570962-0b2d-44ec-972c-b4ea2bc0a505",
        "cursor": {
          "ref": "31edee68-2360-4946-9edc-c0f7b52cf419",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d00857ee-c6e8-4d83-8414-689441c82dbf"
        },
        "item": {
          "id": "4d570962-0b2d-44ec-972c-b4ea2bc0a505",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc3459a8-6270-4176-a42c-da99e56864b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f7e98-a3cf-4816-a0d4-f45fe208d7ca",
        "cursor": {
          "ref": "09e40194-3f5c-4fb8-a950-6d6876ba1d09",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4db4d102-aa59-450c-9fc9-e3e636551a7b"
        },
        "item": {
          "id": "1e8f7e98-a3cf-4816-a0d4-f45fe208d7ca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8234131e-be9d-4ecf-a977-0c3ed4160552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa123ce6-466b-4bc8-b537-c957903033b7",
        "cursor": {
          "ref": "85442115-33a2-4ea6-8bd4-e72fdbabcc40",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "07b1627c-b960-4787-9f8e-fee7bf285c8b"
        },
        "item": {
          "id": "fa123ce6-466b-4bc8-b537-c957903033b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b32fe3c7-10bd-4c79-a06f-dec7274a6f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46954cd4-5303-4c53-bd60-ff9492a06fb6",
        "cursor": {
          "ref": "72b0f8fe-c42d-409b-91cc-1e1a4d306470",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f908c6ab-a1d8-46db-b5dd-bbb4a03d467a"
        },
        "item": {
          "id": "46954cd4-5303-4c53-bd60-ff9492a06fb6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "40e91d4b-ae98-444a-9697-00ec5946962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9430d4-5bce-4e2d-a934-952029d574c5",
        "cursor": {
          "ref": "f641aa4a-3ff6-47bf-b7f1-19e0425f0417",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "45ba66fe-eae5-40ef-9550-5c6bb224aea2"
        },
        "item": {
          "id": "4d9430d4-5bce-4e2d-a934-952029d574c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab3665cd-cc12-41f4-a6be-b4620b425937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee43ec-f145-4e93-b561-5ab9c8ef0128",
        "cursor": {
          "ref": "0e312348-50e9-4aaa-a403-ef3f4bc18afe",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4f268cdf-8589-42d6-9add-da837c5a823a"
        },
        "item": {
          "id": "1dee43ec-f145-4e93-b561-5ab9c8ef0128",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f7d4e2f-6079-4ba5-85df-5353cfdef9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18462cd9-58c5-4705-ae75-93849d7f612f",
        "cursor": {
          "ref": "f520edb7-9982-4968-8ba9-00a182087a10",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3b4ab248-808c-4f8c-b191-26ce5f1399eb"
        },
        "item": {
          "id": "18462cd9-58c5-4705-ae75-93849d7f612f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71e15071-f1b2-4845-8783-ca4816681dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dbade8-116a-4d1a-bed6-58935b4ea87a",
        "cursor": {
          "ref": "b0b1e47b-f23c-4045-976f-5b221ff5cf92",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6f90145a-2cf0-4c95-b1da-c1285d39c97a"
        },
        "item": {
          "id": "77dbade8-116a-4d1a-bed6-58935b4ea87a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce02eb20-49f5-4e0d-9ad5-1ae71daeaf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc71ba0f-47c1-4f30-bbbc-3f702e9112a8",
        "cursor": {
          "ref": "c93992ac-87e1-4380-91b6-f2cdb059581b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f66e846e-c3ae-416f-aa8c-7edf42cb5fd7"
        },
        "item": {
          "id": "dc71ba0f-47c1-4f30-bbbc-3f702e9112a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b7fce0cc-829a-4685-857f-f1dbcb8b3c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db37e5b5-7ea0-4de9-9c34-689a9866a042",
        "cursor": {
          "ref": "2efeeb2b-05ca-4913-b4db-6d821d0c7a63",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "27c86ac4-740f-4c15-b957-04e09d7bce02"
        },
        "item": {
          "id": "db37e5b5-7ea0-4de9-9c34-689a9866a042",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1a4cd544-fd4c-419b-9c58-fe5dfba3efea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a228df-cf4e-4173-a56b-c336e24a3f1f",
        "cursor": {
          "ref": "35e10db2-8cfc-4bd4-ae41-a15cfb5c1f5e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2539a2eb-1d80-4bbb-97d4-f02671375368"
        },
        "item": {
          "id": "48a228df-cf4e-4173-a56b-c336e24a3f1f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e75f5ddd-c18d-479e-bd1d-4d9d774f470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e325899-9cc2-4f29-96bb-e507bcc0bfd9",
        "cursor": {
          "ref": "f8f837a8-d65c-4649-a914-bdbcb94a1157",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3fb9ee0d-1808-48a4-b418-62ce3ac26412"
        },
        "item": {
          "id": "1e325899-9cc2-4f29-96bb-e507bcc0bfd9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "80d2d16e-4e07-4e53-9182-2d6ead610a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d894e33d-48e5-4808-a447-03a799f7f8c3",
        "cursor": {
          "ref": "58003350-770a-4c63-97b7-c9667b27c459",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a394444c-b995-4b20-810d-81112c9e6888"
        },
        "item": {
          "id": "d894e33d-48e5-4808-a447-03a799f7f8c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c7f2b4d-f6bf-406b-9ad8-5c48f8478725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9395f970-45b5-4bed-ae8c-6fd42a5e7196",
        "cursor": {
          "ref": "46c68db6-360c-4c75-ac0b-96af7a7389f2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "09828777-e2cc-40da-a7b3-b7c669afea4a"
        },
        "item": {
          "id": "9395f970-45b5-4bed-ae8c-6fd42a5e7196",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "779e3562-4290-42dd-b124-fe1cdad5f035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98daed7-f783-4b25-b8f3-6ed696ddf6d0",
        "cursor": {
          "ref": "269db4c4-bfda-4905-b867-d3ccb91f90a6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6d0bd532-1cad-4a16-bfa6-1f2ed14aa928"
        },
        "item": {
          "id": "e98daed7-f783-4b25-b8f3-6ed696ddf6d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bbadfcb2-a518-4251-bcb0-9895f8a27f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ada1d4-2ddc-455e-88b1-6b9ed75301ef",
        "cursor": {
          "ref": "df5d65f6-4c91-4f9a-bebe-7af0d3eaf914",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "546fb07d-6eff-48ed-9d09-18f5459658d8"
        },
        "item": {
          "id": "44ada1d4-2ddc-455e-88b1-6b9ed75301ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "23aa5316-7ee8-4a5e-80cb-2e09507db42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c67e7e-9a60-4e47-87d1-89b7a8e5e7f1",
        "cursor": {
          "ref": "78234f91-d717-4511-8638-d827cb800ca9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9404b306-8fb9-47ff-8f22-fb0f6ed765da"
        },
        "item": {
          "id": "93c67e7e-9a60-4e47-87d1-89b7a8e5e7f1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a5c0d97-d169-4ba2-9ca5-e7ce41bebf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae6168-69f7-4330-9c00-eda2741957bf",
        "cursor": {
          "ref": "8f173684-6fad-4fae-8d0b-a06a1b53889b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d66518dd-f60a-494e-8720-e578a44091df"
        },
        "item": {
          "id": "38ae6168-69f7-4330-9c00-eda2741957bf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "af248bbd-9c18-4293-85f5-c308664df0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b2a11f-8984-4343-97c8-d997d7a09742",
        "cursor": {
          "ref": "89717c09-67e3-4f3f-a185-df590284bc43",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "53a0ef15-8564-4d32-b9fc-2de0c3eab2b4"
        },
        "item": {
          "id": "f8b2a11f-8984-4343-97c8-d997d7a09742",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2e3baa35-9b82-40c4-9fe0-b6251f68b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1369c3-bfbf-4d50-993b-be8bbfbe193e",
        "cursor": {
          "ref": "1f792325-6179-4171-89fb-44dcd1cbd566",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d169fa80-61ea-46cb-ae05-937b21f83508"
        },
        "item": {
          "id": "fe1369c3-bfbf-4d50-993b-be8bbfbe193e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e6f9c980-a782-4b69-a5c0-c613b3eaef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f599c8bb-d292-4eae-974e-4c09ce68bc1c",
        "cursor": {
          "ref": "1d7d90b9-97b4-40f3-8b0b-3c6a5e5ac818",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1990778e-ed88-4ecb-ba00-8ac452369dfb"
        },
        "item": {
          "id": "f599c8bb-d292-4eae-974e-4c09ce68bc1c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "474cd5e0-27d9-4714-87e2-044bc5c62fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc6a703-a1e7-482c-8954-550b4678b83e",
        "cursor": {
          "ref": "6e5a66ab-7ecd-4c01-b55c-6a8653c1be75",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cf8df1c4-5eda-4a2a-b9ad-9aa8319aef88"
        },
        "item": {
          "id": "cdc6a703-a1e7-482c-8954-550b4678b83e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "38fedefd-535b-4d1c-9c35-274548350249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5fe7ab-897d-47c5-a16c-c310c1011559",
        "cursor": {
          "ref": "53d4bf40-0a57-4237-ad4b-e5c6f9109fb5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3561c35b-5c70-4806-9883-eee7547ed7f4"
        },
        "item": {
          "id": "df5fe7ab-897d-47c5-a16c-c310c1011559",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b9bf34a5-354b-4530-a675-35d5c99af658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b061673-d5ef-4728-9e37-a6bdda877b03",
        "cursor": {
          "ref": "d21394e1-49d2-475c-8ac4-bc2e518c2447",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d550ef4a-9f16-4aa1-a05d-346dbee2b488"
        },
        "item": {
          "id": "8b061673-d5ef-4728-9e37-a6bdda877b03",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "89b0ba7d-ca71-4626-9bdd-081a785311fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b97717-4ad4-43c0-bcb7-f46da2a0e7cd",
        "cursor": {
          "ref": "9dd344dd-4d16-466b-850b-a81639e22076",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b07cca10-1520-45c5-b95a-2ec4bb1e33b5"
        },
        "item": {
          "id": "b5b97717-4ad4-43c0-bcb7-f46da2a0e7cd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "42012d69-e87b-493c-b3c2-c1ac6e6033c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecdb92c-d4cc-4379-91ac-24e183818d5f",
        "cursor": {
          "ref": "882a8a08-5435-4a83-9434-a22569388fcc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2851f910-8415-44cb-9ecf-a5fdb9ffbcaa"
        },
        "item": {
          "id": "9ecdb92c-d4cc-4379-91ac-24e183818d5f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c3256a7d-6393-442a-99a6-33d18975093c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1497907a-9a5f-443d-8418-2d2cfe023e8d",
        "cursor": {
          "ref": "517bc19a-3bfa-4b97-82d3-a8fb10b9f393",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2f852988-e1c3-4e2b-b303-561368a99f51"
        },
        "item": {
          "id": "1497907a-9a5f-443d-8418-2d2cfe023e8d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "047c6a4b-c9d9-4963-8e9e-8588f8c509e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6174908c-c4f1-48ea-b8ca-4c8ac70d2edd",
        "cursor": {
          "ref": "eb3d4dc8-3b07-414a-86f0-5ee17711aee7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b6b68978-3b63-4ff2-a6ee-3b800a588b49"
        },
        "item": {
          "id": "6174908c-c4f1-48ea-b8ca-4c8ac70d2edd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "204ea959-cbed-4168-8859-a74479581021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040cae33-27f0-4421-9318-6747f73387b3",
        "cursor": {
          "ref": "ba6eea8c-e705-426b-a44b-fa4c452a0692",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f39b3bdc-97c5-47d4-81b0-00e18474fda0"
        },
        "item": {
          "id": "040cae33-27f0-4421-9318-6747f73387b3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9a2a7065-af60-4894-b843-68838f100c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5244ec1-609d-4d60-894c-24120d0d6ca2",
        "cursor": {
          "ref": "716154ab-bfc5-4404-b780-a3ddc34eed16",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3f6693ab-d2e1-47b1-a4f6-6d49cba1ac43"
        },
        "item": {
          "id": "b5244ec1-609d-4d60-894c-24120d0d6ca2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d0355fd5-f8af-4266-aad0-8edd6cf199e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585c7235-6791-4fed-81d8-a0e15f2583b9",
        "cursor": {
          "ref": "998ca8e6-f0bd-480e-9e59-e01f27247456",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "171b1a8f-5e45-413f-8233-f788077c66c4"
        },
        "item": {
          "id": "585c7235-6791-4fed-81d8-a0e15f2583b9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c218c5a4-1c44-4432-9d98-b4a4623edcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32c40c8-9f6f-4fb2-9312-98f60a07b2ef",
        "cursor": {
          "ref": "77c9796d-71ed-40c4-9f1d-9a821144b742",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a9b0776d-19a4-4eb5-a804-622196f5c267"
        },
        "item": {
          "id": "f32c40c8-9f6f-4fb2-9312-98f60a07b2ef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e8085a4e-c0ee-4d63-abac-3eb234275065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4a6bc2-723d-485c-99d1-75c31889b848",
        "cursor": {
          "ref": "96751f7e-bdaf-4e4e-8c91-e9a9b19fa314",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7edef29d-18ec-42ee-a764-7f77dc77fded"
        },
        "item": {
          "id": "7c4a6bc2-723d-485c-99d1-75c31889b848",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b7df5dd5-e6f1-429d-87b1-01b983c3c586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ca6929-6d42-47b2-ba59-c6fb1622f1cf",
        "cursor": {
          "ref": "55a69322-1ad8-4140-ad69-b96521bb9c8d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "58e63ab0-1dd2-4ab8-8378-c0bb6f9937d1"
        },
        "item": {
          "id": "e9ca6929-6d42-47b2-ba59-c6fb1622f1cf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98021f73-6a38-48e0-8b38-636695a88268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b9c421-b847-4a78-9129-ea4523f265c5",
        "cursor": {
          "ref": "e055639c-31f9-435c-a9eb-b2a7dee59f05",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "41351b2a-2f14-45b1-8bfd-f6194a8f5c51"
        },
        "item": {
          "id": "f8b9c421-b847-4a78-9129-ea4523f265c5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3b33d97e-be6b-4cd0-970a-c1e13545ed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f7e9a3-c6d6-4a54-a830-78ffea06f0a9",
        "cursor": {
          "ref": "121de554-0cb8-405e-9e80-0ea3d08680bc",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f2b0cfaf-0075-4d08-8dee-bd22697be910"
        },
        "item": {
          "id": "40f7e9a3-c6d6-4a54-a830-78ffea06f0a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f3cf36a4-b5e7-4e9b-8ea2-c8fb1b11c7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dcfa16-1b27-4816-b0a2-8c04aab5a7d7",
        "cursor": {
          "ref": "336a0ab8-bfc0-4e77-95fb-ab3218751f4a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "787cd432-f4a5-4ec1-a3fa-cc50f1dbc7d4"
        },
        "item": {
          "id": "99dcfa16-1b27-4816-b0a2-8c04aab5a7d7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "66a1143b-89ad-4d02-af91-ac0485384f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de533bf8-514a-43bc-af6c-e83c2c03ea53",
        "cursor": {
          "ref": "aafe5962-c6a3-42c8-a183-c0c8a212898b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6901f41c-293d-4cd2-9900-c4fde458f456"
        },
        "item": {
          "id": "de533bf8-514a-43bc-af6c-e83c2c03ea53",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5a48cadc-0b36-4543-acdb-0e08cab365f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eed7e9-a34e-4a29-8b4f-f00b3b27f955",
        "cursor": {
          "ref": "6d5c2bde-e68e-4411-9ab5-bc45dd75ddd7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c799dbc8-b573-4309-9fff-d5c5644b81b6"
        },
        "item": {
          "id": "58eed7e9-a34e-4a29-8b4f-f00b3b27f955",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cc6055b5-4f3e-4343-b665-30a9495f62cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d5ca08-9ad2-493e-a24c-11d791887896",
        "cursor": {
          "ref": "02161852-5f1f-4079-8c2f-5ab477cad720",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7fb58452-8a7b-49ee-b253-35b5463bc7c6"
        },
        "item": {
          "id": "86d5ca08-9ad2-493e-a24c-11d791887896",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a7eea0c3-9f7e-4cbc-953e-b580ead67fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af928c13-eb8a-4ea7-8490-27800e51365b",
        "cursor": {
          "ref": "913608e0-3761-4c14-a532-41289b8b7bed",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8bc94187-a306-4ac5-940e-9087f2fc5c1b"
        },
        "item": {
          "id": "af928c13-eb8a-4ea7-8490-27800e51365b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "82d2f5bb-d7e7-4d6f-8457-572bdf8a2791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a450f0c1-f33d-4e94-a64f-aa7566b5b667",
        "cursor": {
          "ref": "3087c313-34c8-4077-a48b-3e8ded2e06c3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4ada11a0-f804-4a66-b7f4-26b42f39e0f7"
        },
        "item": {
          "id": "a450f0c1-f33d-4e94-a64f-aa7566b5b667",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d55276da-0909-46ca-8b88-034b8f8734f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf2822f-7793-4e23-92ab-422fe3ee438a",
        "cursor": {
          "ref": "3e411381-632b-4445-9fdf-101ddecfff79",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8ccb67d6-c0e0-47c6-94b9-2df57dc8f5a1"
        },
        "item": {
          "id": "ebf2822f-7793-4e23-92ab-422fe3ee438a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1dc760e1-997c-49c6-85f3-de5f5b08eb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7456350-484d-4fe6-94a7-ae995823d09e",
        "cursor": {
          "ref": "a2d8f691-e248-4a60-ae9e-94b545ae64ef",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "01cd4f07-c08a-496c-8d5d-928327e613fe"
        },
        "item": {
          "id": "c7456350-484d-4fe6-94a7-ae995823d09e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "241ae40d-350a-46b2-8e85-9771355dde28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce17e4-98f6-457d-86fa-0ea13e4975c2",
        "cursor": {
          "ref": "b2c400c4-5969-4da9-8f7d-74ac1ea327fc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "51a66561-539a-4dc6-8b0d-77f65836e392"
        },
        "item": {
          "id": "d9ce17e4-98f6-457d-86fa-0ea13e4975c2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "00a7a5f9-eb98-4fcc-9c8f-420a967717e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546debc0-c2ad-4d74-b36e-2b7ef38c369a",
        "cursor": {
          "ref": "fedcfd14-65db-4f32-accf-2c3a05213a83",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d6448117-56ad-4957-b9c5-3c118c128b4c"
        },
        "item": {
          "id": "546debc0-c2ad-4d74-b36e-2b7ef38c369a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cadf144f-cee7-406d-8e76-75a8e727c2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec56cd52-3091-44ca-b6de-3becd8d22552",
        "cursor": {
          "ref": "46dd8af6-a8d2-49d6-8539-645b05963cfa",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0befb720-804a-4f70-9b8f-5096757dc02a"
        },
        "item": {
          "id": "ec56cd52-3091-44ca-b6de-3becd8d22552",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "091ad474-9fe7-434c-aed0-956d81a4a1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b69104b-fdc0-4fbe-8c1d-12b8f5ba472d",
        "cursor": {
          "ref": "d553684f-f2ba-47ec-acf1-b754f84866fa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "73a0be0f-e7ae-4af2-82b2-21325f3acef8"
        },
        "item": {
          "id": "3b69104b-fdc0-4fbe-8c1d-12b8f5ba472d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0fbc8975-f1b6-48d7-8839-494612859ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677808ca-a870-4fd6-86f9-77c34cf3db33",
        "cursor": {
          "ref": "cbb06f1d-660c-45b5-9168-165b5aeeb904",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c9af01ab-892d-40dc-ba0f-3a1489acada3"
        },
        "item": {
          "id": "677808ca-a870-4fd6-86f9-77c34cf3db33",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7ff5df1f-1f22-4f16-a1b4-fb67f50e67e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4213a41-2303-48b3-8b33-95ceb131bd69",
        "cursor": {
          "ref": "63b3a28f-b3a7-4a49-8f3e-93e792b7c84a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9b37db30-4910-4010-8370-c9f53ebe30de"
        },
        "item": {
          "id": "e4213a41-2303-48b3-8b33-95ceb131bd69",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1af0b810-b2ce-4cba-ab60-da65f451f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5462fc-8b7a-4a08-a5b7-c4fdad09395f",
        "cursor": {
          "ref": "04802a06-2d0a-4c9a-8862-10667a1577d9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ad5d3d2a-f3d9-4e4f-8d98-c81a0460086b"
        },
        "item": {
          "id": "0c5462fc-8b7a-4a08-a5b7-c4fdad09395f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2346eb19-9ec6-43fd-9d16-442c1213f56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d267061-6edc-425a-a2ca-6eb9024f3a6e",
        "cursor": {
          "ref": "c18a3428-e869-4d62-b984-bafbca489f69",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c81122d6-9fb6-4f50-a68e-c09aac4a9889"
        },
        "item": {
          "id": "4d267061-6edc-425a-a2ca-6eb9024f3a6e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e1a240c9-425f-4879-8474-cde89a3d23e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af4fee7-2873-4e35-a20e-89e110ba5aa7",
        "cursor": {
          "ref": "e7a72814-24b6-44a8-983b-44da8f305df9",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e1538123-4e9c-49f8-9252-dca00d347d11"
        },
        "item": {
          "id": "5af4fee7-2873-4e35-a20e-89e110ba5aa7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d83fa64a-d8d8-4a41-ab94-0ad137c6388a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7927292c-4bbf-45d5-b3fb-f57e94c2a0ee",
        "cursor": {
          "ref": "5cdce3f5-f151-4f51-b275-aff0154c950a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "02d3412b-8a57-4ca8-950e-22c9fafa587c"
        },
        "item": {
          "id": "7927292c-4bbf-45d5-b3fb-f57e94c2a0ee",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b9b9e8b2-8c45-4355-8605-96009ba559ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999c9560-c994-4ec5-b155-06990a9d7b3d",
        "cursor": {
          "ref": "25a8d93e-4b0d-4206-90b8-223dc2657036",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e998c205-9b18-4a68-820b-b8ba7c4d1ff9"
        },
        "item": {
          "id": "999c9560-c994-4ec5-b155-06990a9d7b3d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "be521cf5-af61-4a3b-a236-f29b3175fbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80a05c8-9200-4a5e-83ad-55cf24d81fcb",
        "cursor": {
          "ref": "901884e8-626a-4ef8-83f6-4983e32cc170",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8bb662de-08c5-4aa5-a49a-5c5fc6e46f7b"
        },
        "item": {
          "id": "f80a05c8-9200-4a5e-83ad-55cf24d81fcb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "68910605-0f76-4125-bd1d-82cdcff621ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aac17a3-ca2c-486f-8a1c-f5a6d0e1b8d0",
        "cursor": {
          "ref": "ec6c4243-210c-4519-ac09-65b4dbbc5bec",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f1c74413-3da3-42d8-9160-29e7d54eeb51"
        },
        "item": {
          "id": "4aac17a3-ca2c-486f-8a1c-f5a6d0e1b8d0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "84a748fc-2cbf-4e54-8454-29fb9261da64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a9f05d-b633-4f6d-be37-a6dd7d0866e7",
        "cursor": {
          "ref": "a1844dff-8e16-4f7e-a920-632d62fca476",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "93a6cbfa-ebb5-4ab7-8df4-4ce47745669c"
        },
        "item": {
          "id": "06a9f05d-b633-4f6d-be37-a6dd7d0866e7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4df671c1-6dba-42f7-990d-bac4cbe076ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe64b5f-8eaf-4850-82c8-d7a01b3f06e0",
        "cursor": {
          "ref": "99d5d11b-cbba-4395-8df4-104ea13e61dd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2442f8f6-8cef-408f-8f31-10c38dda104f"
        },
        "item": {
          "id": "cfe64b5f-8eaf-4850-82c8-d7a01b3f06e0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ca207f45-4a11-4e2f-9cfb-532622431a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a9a800-ebe3-448e-b8b1-0d0e6680e0f8",
        "cursor": {
          "ref": "819bcb32-29b3-44d8-818c-f8e71b756933",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a397d109-f854-4986-b6cf-898543e49291"
        },
        "item": {
          "id": "c7a9a800-ebe3-448e-b8b1-0d0e6680e0f8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b1796399-3129-4e3e-9f35-631be12c46e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d63bce-c5a8-486c-903f-6cc1d1dfe760",
        "cursor": {
          "ref": "6774371c-9209-4d95-802d-623956c1268c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a54ed2e1-aeb6-4677-b5f4-2b5878d3bf25"
        },
        "item": {
          "id": "63d63bce-c5a8-486c-903f-6cc1d1dfe760",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "83943a8a-2b49-4bab-bf9d-ece9bb17ed8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e39b173-44c9-429d-81e2-1f116611de93",
        "cursor": {
          "ref": "cf2df82c-23ec-457e-b96b-b30224ed7dfc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "734bb80a-2ce0-4cc4-9f12-d81ab3624465"
        },
        "item": {
          "id": "0e39b173-44c9-429d-81e2-1f116611de93",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a7535b1e-6f4c-4fd3-a44f-7527f29ea4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28db444-e628-4256-9251-11e0603c9b2e",
        "cursor": {
          "ref": "e547becf-eea7-4342-b06a-47bb2cf69a9b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d424cb3a-9618-45ff-98a7-3258c69ce9c4"
        },
        "item": {
          "id": "c28db444-e628-4256-9251-11e0603c9b2e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "202b71ee-2ec1-4ffe-9cf2-64525e17b3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c4e2be-7c6f-4b66-b33e-fb658c8f017b",
        "cursor": {
          "ref": "6bcfdd44-4fe8-470b-baf3-bbd30e40d26c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7582c46e-b95b-4228-ac68-f8088f0f8214"
        },
        "item": {
          "id": "52c4e2be-7c6f-4b66-b33e-fb658c8f017b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "62f7f402-1b12-4260-b66a-3e586801d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ed415b-223b-4c1e-8074-12d2fede9ec1",
        "cursor": {
          "ref": "beb9bf40-1096-425c-a199-b95d9b14e435",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69371f8a-ff4a-4b62-994b-63b86695b5fb"
        },
        "item": {
          "id": "c9ed415b-223b-4c1e-8074-12d2fede9ec1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a741eb74-936d-4a52-8090-5af7d38ec20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a4b668-f393-4cc7-8103-23457acabc14",
        "cursor": {
          "ref": "adbbb473-341a-412c-bfd3-79c759ff5859",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bab4e71e-fc29-4003-a632-d4341d976e87"
        },
        "item": {
          "id": "88a4b668-f393-4cc7-8103-23457acabc14",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f7ed3026-b0f6-48d5-b7d2-a19b2ef2bdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d93677-deef-4994-9559-aed768bd8447",
        "cursor": {
          "ref": "7ecee91e-2762-4851-9528-66e23afc2c15",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "79aa3897-050c-4c17-afba-1e006cd14645"
        },
        "item": {
          "id": "59d93677-deef-4994-9559-aed768bd8447",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dea5c536-a75d-418b-a667-c7642dc88f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779690cd-8529-4e2a-9012-11346b0003b8",
        "cursor": {
          "ref": "df88d887-fc97-4c67-a5a6-fdae5d814574",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "20199198-d412-41aa-a64c-6ba3a1695ed6"
        },
        "item": {
          "id": "779690cd-8529-4e2a-9012-11346b0003b8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b49a52fa-2c0e-4147-8f2b-b2f61e9d9dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8c743f-8dc1-4977-9f2b-7fe5fc59e535",
        "cursor": {
          "ref": "6013bb32-1ff1-449d-aef1-22483b11d718",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a606cb3c-f0c3-4cee-99af-1b5f3aa2b166"
        },
        "item": {
          "id": "ff8c743f-8dc1-4977-9f2b-7fe5fc59e535",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "532805fd-c4d4-47aa-a50d-bb988b8d7b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b56287-5389-4ac9-94cd-d85a83ca7388",
        "cursor": {
          "ref": "e0a458a9-deea-4e00-a697-410368319f3d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f71f158c-7bbc-4653-af51-5d90f89a6be1"
        },
        "item": {
          "id": "57b56287-5389-4ac9-94cd-d85a83ca7388",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b3fe700c-feb5-434a-8f29-6ca934ced54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98694c65-93eb-4210-9ae5-8f5e18706c74",
        "cursor": {
          "ref": "8978475e-c948-48a7-8b86-c6c5720adedf",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c972ed7-e284-4ee3-8688-c399abb6ccc4"
        },
        "item": {
          "id": "98694c65-93eb-4210-9ae5-8f5e18706c74",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72d62cdb-6078-4fce-96ab-e30a6e5ec927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0158db4-0620-4192-bd9b-5c5b83785d6b",
        "cursor": {
          "ref": "024da078-ac27-4b3f-af7a-62a0a0af1f67",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1e34fe54-f004-4c1d-9f63-b01ec4486935"
        },
        "item": {
          "id": "d0158db4-0620-4192-bd9b-5c5b83785d6b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "06242c9f-e9f8-4a6a-b89b-b723229ce755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2965ff-9c2c-42de-84b7-e41623410285",
        "cursor": {
          "ref": "9c092fe2-6ba9-478c-8ff4-663bf31e1892",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1d9188ab-4872-4b72-8c81-8fa8b78818a0"
        },
        "item": {
          "id": "aa2965ff-9c2c-42de-84b7-e41623410285",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9bbabd52-58a9-430b-a718-3ed345b8753f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c571e-c641-44da-ac65-e8c05f53d5e7",
        "cursor": {
          "ref": "c00da5be-0404-49b0-bf4f-da021902071a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c2fde126-a36c-4a3a-859d-957ff28fcf93"
        },
        "item": {
          "id": "6c7c571e-c641-44da-ac65-e8c05f53d5e7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3478c251-0469-4ec2-97b0-aeb205a46ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb90741-680f-4d7f-a175-d9faad040c45",
        "cursor": {
          "ref": "d6cec66e-aced-4fb9-a4af-7bbdf485fb3e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6ea77280-5836-46e1-8d62-60e0f4166d16"
        },
        "item": {
          "id": "9bb90741-680f-4d7f-a175-d9faad040c45",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5147cd3-a39c-46dd-a5e1-243cd26d748d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504b1c5e-d0b3-475a-82c0-91f2861472eb",
        "cursor": {
          "ref": "5d0ab270-3f04-4367-a062-7f7565e2bee8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "506f0564-7f21-46cb-b9cf-646ec204a538"
        },
        "item": {
          "id": "504b1c5e-d0b3-475a-82c0-91f2861472eb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ea06ee0e-6b89-45e2-a7cb-7826ef7ecf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c370413f-33ed-4ba0-9151-a12b07ee7edf",
        "cursor": {
          "ref": "a68231e8-27c0-461c-bc0d-d0df03d76c55",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ca6ccbfb-112b-4dc5-a016-4e0100cdc558"
        },
        "item": {
          "id": "c370413f-33ed-4ba0-9151-a12b07ee7edf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "721dd907-1806-47c4-ad9c-dc062079845f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b67a8ca-e68a-4546-9672-dda5d3e9a57d",
        "cursor": {
          "ref": "44d7b86a-38a5-49cd-b9c3-996d4da4f5a7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "904e09f4-aa54-45b5-bdc0-641f839dee09"
        },
        "item": {
          "id": "9b67a8ca-e68a-4546-9672-dda5d3e9a57d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a84a9b00-475e-46c5-a039-8008e07fc1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aa1c34-d44e-4ab4-be2c-16cdc2fc63f6",
        "cursor": {
          "ref": "a341c15c-1d7e-4ac1-9422-c9904621d95a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eb80a31d-1f87-4b12-975d-a981dcbee036"
        },
        "item": {
          "id": "45aa1c34-d44e-4ab4-be2c-16cdc2fc63f6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "457d3cf4-bc4e-4d40-b20b-b514f5ddbef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9c6019-c67e-4076-837a-0ff1498f0cc4",
        "cursor": {
          "ref": "b6ddf204-8bd9-4564-979f-bae71f3a044a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "41a488a5-97ad-402a-b8a4-ed7cca78bcf2"
        },
        "item": {
          "id": "7e9c6019-c67e-4076-837a-0ff1498f0cc4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d54e28e1-7666-47ee-9d5c-ae53175588c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4ea4c9-6b77-48b3-ace7-9fb757c41ae6",
        "cursor": {
          "ref": "1a4bfc04-0583-4468-89c8-fe11935b7485",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9b17a28a-65a3-441e-8a75-47a698d403c8"
        },
        "item": {
          "id": "cd4ea4c9-6b77-48b3-ace7-9fb757c41ae6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "132b5744-81e1-44c7-a63b-242fc885dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d86af3-e750-4414-aeda-3e20aa452697",
        "cursor": {
          "ref": "ad7bf9bc-1978-49d1-9dae-11a11880a760",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "53d2f23f-d671-49db-8b3d-b2fc86c0c3e8"
        },
        "item": {
          "id": "67d86af3-e750-4414-aeda-3e20aa452697",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14e01493-5453-4c0d-bdac-cecd5e26dec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327b282-8f2d-457c-b9c4-f4c68da18fcb",
        "cursor": {
          "ref": "1e6cead7-fec6-44fb-b087-e3c649aebe0f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ee5dc7d5-ef5e-477c-b2f6-9b494dd673fd"
        },
        "item": {
          "id": "5327b282-8f2d-457c-b9c4-f4c68da18fcb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "081711a3-3800-41af-96bf-0f9e833d4c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeea9516-8fcc-4fac-8500-2a41d38dcf67",
        "cursor": {
          "ref": "633ab3ee-063e-46e9-8366-e7fd72c5b25e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9cb224ad-7170-4b41-a134-11e91308b8d3"
        },
        "item": {
          "id": "eeea9516-8fcc-4fac-8500-2a41d38dcf67",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d20e2366-34b2-4e2a-b744-54cfb48d8fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd808de5-4a8c-4f28-b673-e101c3ddfd06",
        "cursor": {
          "ref": "2991d5cb-a8fe-4b7d-b275-554c27a40b68",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "12c106dd-36ca-49c7-95a8-1f3b5d37d7c6"
        },
        "item": {
          "id": "fd808de5-4a8c-4f28-b673-e101c3ddfd06",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f9107153-dead-4445-8ae9-51311a86cbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8643a7-0426-4cd8-89bd-ac48df819ac0",
        "cursor": {
          "ref": "b35e27aa-f3f0-448b-af1c-2e3f016d2b61",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d9bd9c82-9f7b-460d-98db-11b70743a90e"
        },
        "item": {
          "id": "db8643a7-0426-4cd8-89bd-ac48df819ac0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6ff2b40e-65ea-43f5-9ce7-5af581fd48e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c2fd2d-ea7f-4282-836a-70dcd999186a",
        "cursor": {
          "ref": "286dfb36-def4-4d93-abf1-afc4582e24a7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "753fedcf-68f7-46be-831c-06627f0e7b0d"
        },
        "item": {
          "id": "34c2fd2d-ea7f-4282-836a-70dcd999186a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1dc2b01e-a4e5-4f54-ab62-4fbb1d510183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadee90f-23cf-4c0c-bac6-6b407134fe1f",
        "cursor": {
          "ref": "9f8ed90c-327d-46cb-97e8-452b2f4d41b8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "35f16b69-87c7-410d-b075-7fecd3e7b701"
        },
        "item": {
          "id": "fadee90f-23cf-4c0c-bac6-6b407134fe1f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "96b69060-1505-4e40-87d9-c0173389a90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6701554a-9a5e-4a35-a8d9-6ae4bc3f626d",
        "cursor": {
          "ref": "4aa342c7-ae34-45fd-a769-eab7776f0ed6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce4ffefb-8040-4ec7-8157-5fb236b0e0a3"
        },
        "item": {
          "id": "6701554a-9a5e-4a35-a8d9-6ae4bc3f626d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "36502946-75c9-4267-a684-6dc86fe05274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88491f10-3804-4500-87e4-33f88969bf1d",
        "cursor": {
          "ref": "a99b1977-2011-48c8-b692-ccc7bcf51a36",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "584cf353-de21-4c6b-97eb-5148980198ea"
        },
        "item": {
          "id": "88491f10-3804-4500-87e4-33f88969bf1d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6351a2b9-f948-47e8-9a50-54be0810299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f493fb9-04bc-47ef-85f0-21b217bd0792",
        "cursor": {
          "ref": "49eddcbb-5ec6-42c0-aabe-34d1aa9e36ca",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c6529672-59ee-4343-a25d-b448490e4d91"
        },
        "item": {
          "id": "9f493fb9-04bc-47ef-85f0-21b217bd0792",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f25ad924-5fd5-4f24-b84e-a20534ef0316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a53482-15c3-4420-9b8e-dd8b2ea97c7d",
        "cursor": {
          "ref": "4686609b-d716-40dc-b01f-2ec9c7bf6fe1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8dbbcc1f-a5fb-4162-9ed3-4fb4ff710aa9"
        },
        "item": {
          "id": "19a53482-15c3-4420-9b8e-dd8b2ea97c7d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8438d0bc-dee7-499c-867c-9bb5644491e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e3f585-0d2f-4f49-a297-7e463e2c0ff7",
        "cursor": {
          "ref": "266a502d-0eb6-4ace-a499-0d23c67f167d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c2151c03-72c3-4c36-9cef-c48945fa36cb"
        },
        "item": {
          "id": "51e3f585-0d2f-4f49-a297-7e463e2c0ff7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "89902773-397b-4346-b8ec-6c8a7059ebcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6a95df-7681-44f4-bdb3-2e9ae333ad05",
        "cursor": {
          "ref": "e3cb2aca-24d6-41e7-8554-b77e8771ed87",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e22b8da5-3f84-4f93-8947-e42284b01f9d"
        },
        "item": {
          "id": "1b6a95df-7681-44f4-bdb3-2e9ae333ad05",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8f921ba7-e5a1-40fa-b3b0-14cf5816e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acfdfdd-3a1e-49e9-b633-0de86dc01180",
        "cursor": {
          "ref": "b6c000a4-204c-459d-a058-95ad8e928e7e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8c50fae4-ac5f-42f2-bfea-0ceab25b128e"
        },
        "item": {
          "id": "2acfdfdd-3a1e-49e9-b633-0de86dc01180",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e22d03d9-93ca-43e3-91fa-60037ef2f1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46223248-9f66-4f29-b687-7ef4ad8702ae",
        "cursor": {
          "ref": "0a4be22f-cb8a-4aae-93a8-221cb2859b7a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9e3a02b7-66df-4fa0-9370-8f885e420440"
        },
        "item": {
          "id": "46223248-9f66-4f29-b687-7ef4ad8702ae",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "034b53e0-00fb-476b-8781-78cabc4155ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26e7d22-31a0-45e9-b3a4-e6806c5f1109",
        "cursor": {
          "ref": "d37ae309-f3c9-41d2-8169-7766ec2ecf3f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a85792ed-b2e6-4b72-be45-2e017c919dc4"
        },
        "item": {
          "id": "f26e7d22-31a0-45e9-b3a4-e6806c5f1109",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b97fad0b-f3c5-4f4f-847b-45908014950e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad765a44-c2e1-4308-a50a-37741b86475e",
        "cursor": {
          "ref": "69694460-4619-4b8e-8651-ff1ec638f360",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "63e353ae-bc80-4fd4-97ab-44284445e79d"
        },
        "item": {
          "id": "ad765a44-c2e1-4308-a50a-37741b86475e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7eefd8d6-187d-4501-b63b-bf9adc42494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d62286-d40d-4e0b-a9f4-59361a9a4b16",
        "cursor": {
          "ref": "53f95a68-f912-4e64-88cc-82624952a07c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d105458f-df8d-4cc9-80ac-4ff084d1b779"
        },
        "item": {
          "id": "71d62286-d40d-4e0b-a9f4-59361a9a4b16",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e6affb11-26ce-45aa-905e-126d9b31e340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b73b83-f205-49f3-9a75-6ab3968f5b00",
        "cursor": {
          "ref": "fcbf0ef2-c24b-4ba0-a69d-4ba093e212b9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cd209906-fbd6-417f-bc67-107e1322ae3d"
        },
        "item": {
          "id": "50b73b83-f205-49f3-9a75-6ab3968f5b00",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d751db4d-245b-4f41-b8d7-5141d6f7e209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6223916-9f17-4273-ae05-f5260c7f10c6",
        "cursor": {
          "ref": "573cec01-5b7b-4eef-9c97-dc619dd1ee0b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4b1f97d0-ca64-4558-89ff-30a3a6daa9a3"
        },
        "item": {
          "id": "f6223916-9f17-4273-ae05-f5260c7f10c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "27eb0bf9-846a-4626-8700-1563672a5cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ea0c9c-ed66-48d5-9997-cd020b6bc90b",
        "cursor": {
          "ref": "34b7e832-4adf-4ff9-a021-772ef520be49",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "53156426-3345-4f31-b75c-c797187af1eb"
        },
        "item": {
          "id": "77ea0c9c-ed66-48d5-9997-cd020b6bc90b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cbebac01-0e4d-475e-a61b-e07d55ed8890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590c7b07-4a1f-4a31-9e04-df817488c7ed",
        "cursor": {
          "ref": "b515ee54-772a-4e91-ae82-aeb5f753b65b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fbecfb28-3e5a-4a32-83d7-0cadfae46645"
        },
        "item": {
          "id": "590c7b07-4a1f-4a31-9e04-df817488c7ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "abd11adc-7fbd-4f09-acc3-7d4225bddb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79b479c-10b4-4131-8d85-912f463bd98a",
        "cursor": {
          "ref": "45682ede-9551-4180-98d0-e281057fcccf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8dd36fdc-f9dc-412e-bd86-647dcc4adc87"
        },
        "item": {
          "id": "b79b479c-10b4-4131-8d85-912f463bd98a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3654471b-260e-41d9-b249-4424ee660876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073f1b64-5965-4bb6-8c40-226cbcbc0692",
        "cursor": {
          "ref": "5880de25-5a08-4771-841e-50b115c6736b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "515b4be1-faf6-45a8-ad19-936243387748"
        },
        "item": {
          "id": "073f1b64-5965-4bb6-8c40-226cbcbc0692",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "687ef6b9-fdf6-48ea-b075-5c7c4b1edbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98286512-83a5-432b-bfaf-b89f4b43e475",
        "cursor": {
          "ref": "1654de58-6f83-4f57-95d9-6bbfaf7853da",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c89e8c19-3eae-4516-8de5-11f6d2e7f6e9"
        },
        "item": {
          "id": "98286512-83a5-432b-bfaf-b89f4b43e475",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "85556fbd-987e-4cce-9ad9-34330a7e9001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3624caa-2b96-4d2b-b89f-2487441f8765",
        "cursor": {
          "ref": "09242597-80e1-4fba-a399-af8c91f93427",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b1a521ca-d891-4622-b34f-b40f6ec39358"
        },
        "item": {
          "id": "c3624caa-2b96-4d2b-b89f-2487441f8765",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "943aa4b5-8daf-41a4-be1c-e5a6d14248f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d718fbae-978a-4053-9309-11bf66121d1d",
        "cursor": {
          "ref": "0f23e0ea-23d9-4214-9797-fadea5d121d4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bc5f349c-15ba-46b9-a511-f9042e318ba0"
        },
        "item": {
          "id": "d718fbae-978a-4053-9309-11bf66121d1d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5fa8fb11-0b86-4ac5-b34c-bca365a3ae5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6619eb6-315b-453c-aabe-903ded4ff8cd",
        "cursor": {
          "ref": "cae96fdf-0171-4111-8db4-ddd97744a058",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4af9085a-7c2a-424a-9784-2571ad75f0af"
        },
        "item": {
          "id": "a6619eb6-315b-453c-aabe-903ded4ff8cd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c8767909-fa4a-4e7d-b15d-c1b831c3fff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c214e4b-d6f0-4e1b-9849-5e93c810baf9",
        "cursor": {
          "ref": "ec083aa1-3fb9-439e-90cd-6cfdd48acae2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c8ed61bd-b9ea-44d9-be4c-54234e399458"
        },
        "item": {
          "id": "2c214e4b-d6f0-4e1b-9849-5e93c810baf9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "025e9313-1714-45b4-97e4-2a37c31b8b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cc4155-a37f-4a06-8c39-d80cb0e4e571",
        "cursor": {
          "ref": "81c5801b-c097-43db-8e3f-6937d98bca6c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "441847c9-f6bf-430b-af84-0dff2c5474c7"
        },
        "item": {
          "id": "26cc4155-a37f-4a06-8c39-d80cb0e4e571",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ebc15017-3d3e-4cee-acdf-d04a8b4e5ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79632138-e663-4de8-8aee-33de01b82109",
        "cursor": {
          "ref": "2f7942c7-6559-492e-83ed-b95c2acf3037",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0ce53715-4064-4d66-ab69-b2126c3e4d84"
        },
        "item": {
          "id": "79632138-e663-4de8-8aee-33de01b82109",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a3a35c47-6484-45e4-be17-f64494ab22e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb8ccdc-5d6b-4b46-ae5c-d56df5636098",
        "cursor": {
          "ref": "e7a870ca-2aa7-4a8b-9f48-00a830679a6d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "63188139-17de-4322-98dc-3900adf3c146"
        },
        "item": {
          "id": "feb8ccdc-5d6b-4b46-ae5c-d56df5636098",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cb849904-2565-4a20-a726-4d70b5dc24a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cd5b4e-bf24-4dc0-af18-86529aa4915a",
        "cursor": {
          "ref": "708d0baf-1755-4fb3-ac49-c6d3dec70a53",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fd5fdef7-3caa-41ed-bb94-3f38ca2b494c"
        },
        "item": {
          "id": "83cd5b4e-bf24-4dc0-af18-86529aa4915a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "130f1a1e-5245-42b8-a599-336d4b3c9646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea633bd0-5a81-4e45-b69c-d41ab138f3bf",
        "cursor": {
          "ref": "15fad8eb-1c2c-4eea-9e18-3facec609977",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "74451b8d-df3c-4017-8505-847c74e038e3"
        },
        "item": {
          "id": "ea633bd0-5a81-4e45-b69c-d41ab138f3bf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8a00c1ee-617a-4de0-b79c-3a99e2680624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9beab6-8261-45fd-b3e0-8f542f296a4d",
        "cursor": {
          "ref": "bdef73eb-1791-43b0-8df9-ab51e0123920",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "90818897-cd00-435b-a2f5-2a91e436d278"
        },
        "item": {
          "id": "0b9beab6-8261-45fd-b3e0-8f542f296a4d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9423b484-1724-44db-a554-af67bad5049c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73500600-82af-40d5-b7e4-bde6834d91b1",
        "cursor": {
          "ref": "cc0c3225-10aa-404b-aa6c-48effc79bcc9",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e3f9bde5-fe66-4e06-bb1d-e69fc8d011bc"
        },
        "item": {
          "id": "73500600-82af-40d5-b7e4-bde6834d91b1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e1e88ff5-04c7-40a7-9c7c-89716040a3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d199492f-838c-4162-a537-0c6e62dbe014",
        "cursor": {
          "ref": "ff376f69-09ff-46fd-b9d2-919b309a0630",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b88f41ae-6820-4dac-8493-ff9c2685dd92"
        },
        "item": {
          "id": "d199492f-838c-4162-a537-0c6e62dbe014",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9425ced7-479c-4147-af1b-81466d8b1a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9f881e-7fc9-46c8-8868-9c98b88916fe",
        "cursor": {
          "ref": "e7603938-9138-451c-8d0b-5bfe7290feb5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f088eb8a-d60c-49bc-a701-30268f688983"
        },
        "item": {
          "id": "5c9f881e-7fc9-46c8-8868-9c98b88916fe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b751445d-5e01-44e0-98a0-eda89a61d7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c7cf2-6010-4214-82d3-fe9eb53aa755",
        "cursor": {
          "ref": "1353d672-6925-41c9-aa8e-ae1b7f431a94",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "328ebf95-5419-4025-ae1b-73f5089c44c7"
        },
        "item": {
          "id": "861c7cf2-6010-4214-82d3-fe9eb53aa755",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2a07ec94-6387-41be-b719-a608be818ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c427e1db-1b8e-4e3b-b697-ad65c8a101d7",
        "cursor": {
          "ref": "1818e90c-e6cc-4e8f-8ac5-980a31ba7bb5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d5136692-6504-4503-878d-2a4f2eda4dd4"
        },
        "item": {
          "id": "c427e1db-1b8e-4e3b-b697-ad65c8a101d7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3bbfe782-3b98-49ca-a3e9-e0a2e4e2f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2659c34-d9f9-4b2b-86c5-7d9e25bc951a",
        "cursor": {
          "ref": "a4120f08-baf1-459b-b12c-f459362bffb3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fd410816-9c56-4747-bbbe-f749e945c872"
        },
        "item": {
          "id": "b2659c34-d9f9-4b2b-86c5-7d9e25bc951a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "70e211f5-167e-4921-8f34-0094ad097577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f7c493-a45f-48de-9c36-7004f05ccab8",
        "cursor": {
          "ref": "7fe5a52d-43f7-4990-a986-c782f3afc6ba",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "455ef74e-8480-4805-9bfb-baa2524fe726"
        },
        "item": {
          "id": "81f7c493-a45f-48de-9c36-7004f05ccab8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1b21b23b-16a0-41a7-8c65-09c83930f308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f31634e-a42f-4428-a49c-c5d9e229d470",
        "cursor": {
          "ref": "1bfa8f7f-1dd0-49e0-bf01-01b9e42d03ff",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b1d457bb-ca64-4ad9-b1de-2f071a2f11d8"
        },
        "item": {
          "id": "2f31634e-a42f-4428-a49c-c5d9e229d470",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eab467b8-2522-451d-b227-f6b454a3f8bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3bb141-a320-41e9-9d49-08607d85a3f1",
        "cursor": {
          "ref": "a71d365f-8d36-42da-8d95-2c32d7f5f283",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b5de94f-ad79-4dcd-b813-f55ade21d8ad"
        },
        "item": {
          "id": "bd3bb141-a320-41e9-9d49-08607d85a3f1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3fe3015c-986e-4ea2-ae41-cc3d685f7f2b",
          "status": "OK",
          "code": 200,
          "responseTime": 2407,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "573faf2f-8be7-456e-8055-960ae1255900",
        "cursor": {
          "ref": "850a63f1-5206-4f8b-9fd7-a79e7179754c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "268e7c2a-234c-4730-b623-663eaacbd03b"
        },
        "item": {
          "id": "573faf2f-8be7-456e-8055-960ae1255900",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5c6e2c87-ce70-4f2b-bad7-175334db6694",
          "status": "OK",
          "code": 200,
          "responseTime": 3553,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e1d529-59ec-4bb3-b514-4d89a13ecc45",
        "cursor": {
          "ref": "15968663-f1e8-4439-bd51-a1d3a76c87d2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1b814c21-77ff-43b7-9ae3-da04a60a813b"
        },
        "item": {
          "id": "81e1d529-59ec-4bb3-b514-4d89a13ecc45",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f73337db-ea03-4b3c-a0e6-5be751969f1e",
          "status": "OK",
          "code": 200,
          "responseTime": 3387,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ddb64-db3b-4161-abf7-1d1c9fb16f01",
        "cursor": {
          "ref": "d6c5d755-c162-42e9-805d-c9498cc8cb71",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dd303da7-5e80-43a1-b517-a80b29dfd2a8"
        },
        "item": {
          "id": "190ddb64-db3b-4161-abf7-1d1c9fb16f01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21234592-6741-47e0-8d74-aa50728bece6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ddb64-db3b-4161-abf7-1d1c9fb16f01",
        "cursor": {
          "ref": "d6c5d755-c162-42e9-805d-c9498cc8cb71",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dd303da7-5e80-43a1-b517-a80b29dfd2a8"
        },
        "item": {
          "id": "190ddb64-db3b-4161-abf7-1d1c9fb16f01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21234592-6741-47e0-8d74-aa50728bece6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d646d4f0-f042-4a3a-a297-36b24fba1119",
        "cursor": {
          "ref": "50f87953-bd69-4245-87e8-67f4a28df3aa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6a7c11b8-7b80-4ae9-afd0-4af8d0b3188d"
        },
        "item": {
          "id": "d646d4f0-f042-4a3a-a297-36b24fba1119",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1a43bb0e-c380-4051-b1ea-5b3abff48da7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa93b5f0-0f5c-49d4-9e0f-7cdcec621cd8",
        "cursor": {
          "ref": "309dd17a-2b33-457b-9602-ece670213fb7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3275daf8-ac79-4948-ac47-9a7d3eeed851"
        },
        "item": {
          "id": "fa93b5f0-0f5c-49d4-9e0f-7cdcec621cd8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f0d10314-2dd5-4f37-b9ff-9416df69d4bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}