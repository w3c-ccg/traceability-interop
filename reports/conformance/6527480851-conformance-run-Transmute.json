{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "42732141-7e49-4c80-a1db-4e2be8e03d25",
        "name": "Clear Cache",
        "item": [
          {
            "id": "584919ee-d17a-472b-afa4-928732c201aa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa44e3c1-9512-4baf-af04-97328b227172",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "96b96fd7-8d46-4bbc-9447-79b8a69c8658"
                }
              }
            ]
          },
          {
            "id": "4bba36d9-8209-4874-9f7f-b14fdfc38ae6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01eba246-ce29-49f6-8e9d-5969fecef17d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "037069c1-c1ec-4679-bf02-3ac33aa32867"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f9a56305-8633-4d34-aa86-d6c958cb6879",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70fced25-b703-495a-825b-e2d2c1bb6c62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "823ffe11-773c-475f-bcac-b7f397247cd7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77d9b7ef-698c-44b4-98bd-3205fb7d9dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8decaff6-2f97-4ca7-96be-cfc46cde62f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9976630-a36e-4c37-9d00-28047a1cdb1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93caf8c2-a06c-4721-be8a-3908ac6cae69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "def3ce27-a189-4335-8a2b-c73f22e5a2c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "311b0820-c7a4-4859-be5d-cf8f7ba60252"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d1f4699-7c68-453f-801b-c9495499c0dd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "46c2b778-630d-4192-ab0a-906d824077dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a845196-a650-476d-9205-069d21d7c7df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aee0afaa-8256-4e2e-bcfd-551e2b8de7cc"
            }
          }
        ]
      },
      {
        "id": "458191e3-b1fa-4700-902a-b8bfc0d63a62",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cf343119-3783-4d52-8add-3921f5fba0e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd35b7c0-59e3-43d6-bccd-ec700973bc0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cc7233c-77e3-41ab-97c9-d5fdbdd7f0eb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e733cebb-b366-4c6e-87f2-fd27e031745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed439102-8371-4ed0-9cc1-ac508ce67fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfc5e0a-d1c9-49ba-80f5-158ecf63f38c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efb0eed-57be-4216-8cd8-23c15326e417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca49ed2f-c507-417b-b1bd-d5cd21b9a339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9a721c-8c78-430e-8c76-30a7e8b9f123",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f708744d-ac43-4c07-9569-8baa06d8e2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e83b0057-7743-4c70-a2e6-3c6e4d8d3aaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52fb54e2-e351-4ee4-925c-78e35a51e4d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18a8c963-0685-455a-a085-3c8cee2c242d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbfd0cd-abfd-4108-8ce0-374fefa3927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26b4c0b0-e047-4be6-867f-fddbedbb4d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2d63a6-e8f7-4d91-8622-4193598f16bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3c9157-406d-4cb1-a31a-3897bc8f6f5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23a18128-ea85-40fc-b6b2-afa844f00ff4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d75ff93d-bd13-4f14-aa44-130c1b0a89e1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed8f4d4-9b4b-423a-939b-186dfc1d9b76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e410df55-8629-4856-961e-f725fe9e53ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e980237-792a-415b-badf-a769b3c38c7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "233f0733-8cc8-4896-b4e6-67af5920b121"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb8d2fa9-6bf1-4e16-bdf7-507e0c5db4b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79a18142-526f-47db-b784-565b6e2321cd"
            }
          }
        ]
      },
      {
        "id": "50bd66c8-e584-4a7e-bcc5-0d237b937a55",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c5d49a45-48b2-4655-97e0-1ef2a13c8286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fde6c07-0b89-4eb6-adcf-c1bcef1e2d29",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "21b8e383-4570-4e97-985a-b288efeb4820",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a1b05e-0cfc-4f86-8ed2-5190f8a1133d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8803d85-b8c7-476d-9a5f-a09698df3a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aff100f-15af-48cb-aabe-0a12444fe2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff1ceab-8061-46c2-87e3-82af98297648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef96e877-4367-4fc0-bf68-0d52a3405975",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43253225-be20-41ba-b0a9-b0996cbb2615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd74433-3a3c-43f2-bd96-a6da8d5c4b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec8b61c-4c2d-46d4-8906-8e258db9c495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9705f7a-1795-4875-ad05-78948ec61d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5315162-55bc-4999-9daa-5734a6522aaf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9a6794-7068-41ca-9207-e887d5e4e95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1199fdc-1c7e-4867-acfb-92e3856c449b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187966d8-9236-4c66-9b6a-78def02ab1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ceabba-1e24-4468-9f3b-7b3e9ef4394a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2ec2d3-348c-4eb1-982e-5d025d82276a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9219dfbc-1ce7-4733-b7a9-01e39b85be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfeda7d-8420-4320-a1d1-97553c4860c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63591a30-cb81-4512-8174-23531618afbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "323eef3d-0c63-4e92-9e88-b84f1efd9eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8a1ad2-c014-48b6-a8bb-3984d556cc51",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690812ff-142e-402a-bef0-c27c08668898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2de69a-ae6d-4e02-a581-5f73d2007131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350b55a4-f20c-431c-8ec7-8727f6b0cc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2919a1c3-0489-43d5-b2c3-e2db446a88d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac6eda4-e12f-424d-aa4e-ba4ad2023f0f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c505d23-26d2-40dd-847e-cb512bce398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93de2836-12c6-4e7b-99c3-dd5d370bf513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23866b18-2e6e-4951-9b81-25e55bf17b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4966c8c-83e0-4204-a24a-9527c182b235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33bfc9-781c-4a5c-8e51-d6126b825777",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce2f6ea-9de3-47c9-9573-40d5f8413de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcea1b59-c9a8-4d67-aa52-150c917790cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f3f580-1ea7-4fa5-86a5-2fda5a889ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e904f677-12dc-45ef-92ec-2a825c8a9bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1938c99-2f24-42eb-a7dc-2691465d20ed",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1b6352-3569-4682-b267-f8b761ab5792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92e9580-5c68-4b51-8b12-31786a45e12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba92bd0-2eee-4d3e-a41d-82a28ccd08c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e918bd9b-1daf-4e3b-9a5b-83b1575edacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ed6d1-4f45-475e-897b-0d4f6fc57108",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc27ca65-8bd5-4465-bedc-50588233a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349948c8-b1a3-44f7-ad24-9e7deed30391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad10371-8aa2-4309-b06c-d46041fe30b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59256ec2-3c55-46ce-8fda-b651ca40361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf2028a-7a67-4caa-bbaf-1b105a8e7b55",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ad9676-ea3c-4625-bb36-29d3a354fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d4a118-1004-4093-8e50-fdb3a6855b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276e5f39-ecbf-4a01-806a-845fe3c9e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d907e15-9c7b-40b8-8c36-96557fc9bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3cb5b9-e35e-4d08-8ad0-8106d888699b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29bf034-46f1-4642-a3f0-8724c5c22cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb600d1-32a7-460a-b315-6a9fe085d760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189e3f6a-adb5-4bee-9171-f1ba146d579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae7f0134-8506-4743-a97c-e8fffd9dd020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea18577-c381-42d5-9802-8015236d95b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb08cf6-17bc-4bf0-9dba-23fedfc3f897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7d8916-89b4-4b07-a0b3-e80eef40cf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab4f0a0-bf31-414f-9ff1-6ed0072af438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85af5b30-d3d1-453f-825f-218a5bfb0088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7fa587-f859-431c-ae84-1f3a8584322a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec81c272-7a61-45c8-8e7e-a676fa8e86a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f579cb4f-f973-416c-b49b-56cbdf9a59d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41958576-fd5a-4c0e-b760-20a546a457b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f743da5-9b9b-484e-9b39-5025d6550a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e71d3f-d1b1-41dc-9061-7feb9515cdf8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860df313-e4dc-407f-91f4-d4a285dba865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f736b58e-c276-485c-bf3f-0de5befe013c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445159c8-7c11-418c-b020-9d7b4e6a6473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdd67294-85d2-4f66-925f-fdef9bcc3ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73e848a-2b79-48c4-b904-79d2de7be351",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89e4e73-7f23-4aac-816a-0791aff55d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262ace12-3c9d-4081-858a-aae1e67acda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93470307-982e-450f-a32d-b668475aa751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf16fc84-a800-4f5b-ac68-db598b831f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1e209c-e9f1-4c3f-b176-a193fec24c07",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9470e84-6a9e-49a3-b0ae-1155332b97c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b406e9-7b47-42af-bbc3-17545c2b6037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcf5945-0ff1-45be-8ab9-711e50d6b24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82633028-b60d-40c9-930d-acafd01e61cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367b9539-bc3f-49f0-a072-f9730fd5d965",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf0a81-efaf-4aac-a2d9-d6cff5a85205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387a5970-79af-434b-bdf9-4a8ac0b05470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa64945f-c91a-4c2c-b375-6a8949497ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f3a200b-4caf-47a9-a9d5-db9c24c95d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9d2026-f5b5-4597-a807-39da1813dcb6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9660556-e7ad-491a-bb3f-b6d4367ac601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8102c6f0-0d9a-438f-92e5-70845799ddd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a582fbe2-b00b-4ad6-ab2b-c64ba58cf212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3368282-5bd9-4114-9695-cfbc7233be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495f9a28-54e7-4a79-805d-f7c31af411dd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1615392-9d26-498d-9996-9ff36fe58188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7127c470-13a3-4b3f-af12-c32b0ad90717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a12010-37dc-4087-a19b-a4cd0a1673f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2245cf-5e99-4c5b-a05b-820d6a69c975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7797a9ed-6241-4593-95eb-3dba28185726",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41e1ee2-052e-4996-86b7-bb5273168c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2d5774-3586-46b0-8610-1caf54b0138d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbfb343-29c9-4629-a9af-d35fcd98fa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e7b759-4fd3-431a-acc8-94a356d7edf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1753d5b2-136b-488e-8461-f3919a544eef",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807355ee-4459-4c9a-9bd9-081c53e74614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28b64b6-d4c9-4cef-a19f-3608f7ec0fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f7236f-12e8-48d9-961d-40f7fdb267d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34fb876-e26d-4b59-a141-b3c0f150a46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67425e8-a83e-4f56-827a-a5925a70bc69",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfadf6d1-5db0-42c0-96a8-969d3be53b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a353c73-c73a-4a03-8830-76742d77c324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7e4e0c-30a3-48b6-938b-9fbdc578d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b34bc2-2b66-4e63-ac51-2f17902d942b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9d2223-c9a4-4bbe-9738-ef5e3ebf6114",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21343700-1b5c-410b-9ca6-4a784959d4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460b9afb-5feb-4a07-ae28-778088934857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91666d10-b664-46c3-971e-8ef1d06376c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85ed521e-255e-4a01-9a15-b34974bc0fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422bdac-d9d4-40b0-a5f0-e238886ffaa8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c12f1f-980b-47c7-ba38-67661dc5b2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ebf874-6ecf-49df-b712-0924cf9e35f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3e4ca5-de27-4fa4-86e3-d5a2a18eb3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "319f3d31-14f6-436a-9050-43b2ac09d75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bb28d3-3e5e-428c-8065-1295d9262c27",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba319cd7-e902-415a-afad-3e63f5f48011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87706bea-f5b5-4d5f-adfe-c49ad99b7659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e26681-2711-4033-bb4f-1136838af010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc285759-0bad-49dd-a0a1-9a40b7bd9f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1ae30-f481-423c-8c70-f188620cac7a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c0321e-d557-44ad-bbac-85b1d2293073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bdaab7-43c8-4a33-b2a5-40de193fe6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad643c5-c38f-4373-be66-8298cfc0f83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "043c0b4e-bc96-4596-92ee-89ebc23d993f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d015df-fc18-476b-bc4f-9b11020fbe85",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae4035-d854-4740-ba65-5d627088c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6e92d3-abcb-4058-8d3c-33cf68cb6823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515deb43-8658-4450-a407-839c4055219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5260584-4717-40f0-8653-e41d4ef9b4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fe276d-925b-4aff-9432-2ce43baa793b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d55142-731f-429a-bb3c-b612125bc1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76194e30-15cb-45d2-8dc1-ddd8daf26006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dd27fb-6b8d-47dc-a99d-b147ba9ecac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02327a9-9fc9-417b-aca0-a88864fbafed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304ec93d-9fed-42b6-8602-b4844cccc689",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa3f50-8a29-459f-9657-58e67562f636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c32c622-5156-4234-92fe-a6455aabd95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6877df4-02a9-4d1a-8507-b1b13c7957f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5559236f-671b-4277-ae1f-b34b6e596781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85132f79-0fae-48b9-b5c4-04db6ecfeaf7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bb061d-df70-4af7-b738-1b0bb7895c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aede5712-7c7f-448b-b7b4-a786d6012e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7353b6a-9d4a-4db7-8b2c-c7763c96d3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea417fa-c093-4d95-ae7f-88654e02093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05baf7-94a8-446d-bf89-7ad53f65be14",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7edc71a-0ad0-488a-8edf-559a53561109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f36841-79be-40e3-98ba-a9334f1972d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c509d-d2ef-45ca-8f9a-2c39058afeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ab79ff-d084-460c-9cd7-0386bcb76f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e4d7bb-6e39-4bf4-91c2-ca58e5558984",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a9b5bc-5d2a-41b5-9b8c-e57e3c1e3be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c10fb2-4d5f-4ea6-abca-d72e4921cb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba948426-e8f1-4d9b-a8a2-6bd995a92e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "676ca2d3-aa26-4a6c-8ad0-549f442277a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4427ef1-4368-4576-a9e2-26e47fece6c3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9253268d-14ba-476e-a275-18a3e39acfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2ce161-fbc7-45c9-a637-928901681d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0efd0f8-e511-4e66-be30-1c082067dfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8615c496-f17e-44d6-a688-f75f22980698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c2d409-819e-421d-b7b6-8c5a70bfbad7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6725a863-22f4-4f34-b10b-f4862d63b419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d4992b-a103-444f-9aa8-ff827f957ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79981eb8-1738-4e60-9f41-ab79880952e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e35d629-b703-4dd8-84d4-95582c53d716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d45457-ff2f-4751-aee3-851a0b435b64",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5416504-2b3e-47d9-bb7a-8e514e8b9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f98677-6ba9-4e07-b6ed-f3494267aac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e31132e-2e32-4cf4-a0fe-f6d9ee26deae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8a4167-7090-42a1-958d-5f6e39dea048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a004818b-4178-4911-b18e-c5574072ad36",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993304d1-99dd-42c8-b43a-c7a8b303136f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa136fbd-a2e1-46c1-8baf-f4c804b6e518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84acfab-89c9-4cc2-92b1-a9928d3dfafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9048c4-4b83-4907-b148-c6bf83d14b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e7fd48-4256-4467-a0e1-511c2f7c9f49",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33059ead-15a3-4f42-9e74-a1529f4eaeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175edf8c-0580-4585-9c09-499eec9c8878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797cc7fc-51ab-4a3a-8e55-f3eabd181ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c19515e6-620f-44cd-aa65-bb08d3e2d138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5cc03-c62d-4129-a51b-9a255554ab14",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41978677-e848-43ba-a285-2758ab43ee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0a6860-ede7-4d54-93e3-987867508ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dadac5b-a6b0-467f-80af-c5454b732f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0d55d5-1202-438b-a324-f8a0923df326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67689770-fe7d-4933-a138-d70e356335de",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18804f74-ce57-4768-9aa0-04f13f490269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1931eeb-5a74-4d84-8b77-12a66b758972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b9575c-84bd-4f29-83d2-6f1efdaa460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e17491e-d5ce-43eb-a934-1ce9eaa0690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999470a9-4756-4569-a0d3-8e1cbebf112e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9b116e-01c1-4a93-be32-98e12ca61cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed2fa29-09b9-4edf-9c29-ee684fe2feec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc355c1-e72a-4c38-a564-20530f961c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c85f9a2-80e4-4b36-a765-26e134228c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66469aa7-ef42-4482-80df-2b76be9fe7f6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3b22e6-d122-41a0-849f-30171d2021b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7ee9c9-c98b-402e-ae1d-f73e77b3095d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100c9991-c51f-492c-9122-00e17c9c5bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e38ade7-b7c3-4d4b-b60f-397110bf7050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534c04ba-cc92-4e95-ab4e-89749f31fa94",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3954a2c-5812-46a8-8c39-cfd012a7f442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9f6e37-60bd-41de-969d-0681d1b07a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab8450b-416c-4afb-b9a4-ce115d991e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b241ba0b-1d9b-47bf-ab33-a23c46f5b040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83ce16a-74cd-4426-ad29-65b9787821d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f77953-0281-4a78-8d85-8e0997c05c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98ef43e-7bac-4fce-bb93-2c37ff0d4d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010a810d-39cc-4f56-9de7-1d27bd53c564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "015d6ecc-ba15-453e-8018-d66e7fee0254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ce5c40-4e3a-45bd-a617-c41d36c38528",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560b19ca-59f1-4fc4-8f91-d048934c302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4386c811-9b2b-4d3f-b8ae-41fcae005c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf02896-a502-40c8-80f0-beadd87560a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3890fb-f950-4eb3-a9f0-50cab931c646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e07ac-c6cf-4cfa-9d23-a74dd62a2fe9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7e00e4-1e84-4cda-b678-cb307e063d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c58dcb8-5156-49f1-aacf-e115e9a8a40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee55e4-4e71-4124-a955-ba31f65c090f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "331d85e2-e23f-4145-80cb-e7930a3c6a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0e87f7-72df-4c2c-9b3b-585543ce918a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8ce587-1e0f-4ccc-9f20-7b9744c1273a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e47c2c-b125-4f94-b0d5-9404c41cf0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8615054c-9ae7-41e3-a2db-3d8e2bdbd6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "269fd98f-884a-44ce-8209-c99f68a24ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61682459-5e3b-4761-b415-44514c598846",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295ca134-6f69-4066-b1da-50be46a939e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2cb0f4-99f7-4039-a337-1dbccb11f75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c71f31-37dc-4909-add4-811b002a8e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35964e8b-faee-4da5-b390-3bddde9d8b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc57f446-1bf9-4e47-8b32-148baff7cfd4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1829b97-473a-44b5-af2e-4c4c2985acfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8ab946-9395-42c6-9a29-23da356e42a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39d555a-a269-4a39-887e-fdb539fa26dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e1e3ad-fa46-4bbd-ba75-8df3f0671e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e660017-0bc7-481c-8ba5-6f9aff4fb60d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d90895-1427-4226-90f5-b15e84ffa4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efa4d08-b688-4182-8fd0-b36a020416ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8bb00-b742-4311-817f-cc70d1a0abad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adebd379-e594-48c2-bb3f-053536677091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c93aba-bfda-468a-bdac-716f84134545",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6573d93d-8c5a-48d3-b588-9039d804f146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89150904-fb04-44c1-9d48-e5d2f09000fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86499813-cdab-4e2c-bb9b-041f6ad04db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfdad56-e2be-4f7c-8863-e2555591f155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90792af-b350-4359-aec1-6ba8dcd5f517",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7780a88-614f-450a-81d4-b250b123e216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334c34c2-f090-42fc-b076-5590642cfc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a219176-8e10-4f0d-8369-a6753e65ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9a97d6-5d62-4243-9db9-71ae68b65ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7e191f-0181-442b-a44f-e8551b9c2314",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d3d25d-6618-40fe-9ef3-94373b9c9dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901daed3-09ea-4f84-bd57-3801cb7d9504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d944d5-d8af-415f-b585-d9923fe0c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "268515f1-fbb1-4ea1-8ff9-494a23345c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a8581f-f302-444f-8649-c77558d622ad",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9545c-1275-424e-ac86-b24aff428316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd2483a-816c-4894-a46d-38e5b03daa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190f69d0-a3eb-4094-acd9-b43868ce4822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c721fd-0ce4-42a6-a400-f9a242b0773e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf37fe68-9ccc-43d2-b142-40fda2162f8a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0b1e38-b9d1-49f5-ab0e-bcb386617347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2375199-5ee0-42c7-87fc-2266ab5d6b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a29954-5653-4e0e-935a-5b51c9cb9d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8acf241e-426c-484d-85ec-b34bd22fffbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ca5b8e-4816-4f44-b96e-573dfb3ce8c3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237bd44c-ba71-4d98-9bee-6193786ee89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c6ab89-f281-4a68-a9d2-a4da3523aadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb54cc6-6afd-40cf-b681-4b357e1e8f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25000a4c-fc04-46ff-955b-07772266b6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bd4864-b587-4258-8d97-0c13a8a3959d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9977c85-b262-43ed-99bb-d794dce81877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0fae9a-dc15-465f-a5da-a6230fe9b115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c44fab-0afe-4cd8-8f9b-ac2a3588c1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ae98e7da-29c9-475e-b527-c2d8bbffcc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06689466-925a-4ea8-a31c-358d4a08a29d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f621e5-6e97-460f-9aee-7aaae136de6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbaf169-e40b-4713-abfc-79809167c70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6558283e-4ee7-4393-8c32-9471dff15f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "715e82a1-e80f-4140-af7f-2def8266dfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170bbc72-260f-45f2-9788-f80f53623607",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481f4ffc-3f9e-4391-82ca-5ea943bf7261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0841e6-5d92-40ea-b0d6-46344b6dae83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edf71cf-8a45-42f9-b76c-28283de3b3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f51cdbcc-0c40-44da-bd25-bcaf4ad13349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6b6c16-27f6-4b57-9f08-713b3836974b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cafaba-e188-42bb-8a95-265410f5b2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948e6b05-769d-4940-ac22-7170e6db2920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f8db67-b78f-4692-a403-7794f345f743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e0e007-f2f1-4fa9-94d2-b2e8f5636753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9855c84e-4763-4a3c-bdb8-0a6f68626f2e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5cfca2-6859-4ebc-8f94-00427826f7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641466dc-522a-4ad3-9848-f9c052d54538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39371b46-d04b-4684-9a57-83f30f3df207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd333dd-2c03-4371-b0c0-ff4bb020ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d297b4-efe3-4a0e-8e51-a3b49eb78062",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a80416-fac1-465c-be74-6573512fcaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbde94f-54d8-4fef-9cd2-761057595417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8ac87f-a689-4c25-b6eb-5a5aac47a371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "420a3b6a-b239-48f9-8402-494e173b00e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8065d185-4fac-497f-a1eb-c0a79a4a3173",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9966376b-6fbb-4cd3-ba30-8a2279c27dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b42a1f-766b-4c19-82d1-fff7ed1e3148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b63d9d5-2859-4cc2-bff3-9d6731b67e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f49469d-ab77-4259-8e5b-e7fbc9896f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587971bc-e62f-4cdf-974f-ad85a32459a5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71fe77a-5c55-4d82-b60c-c2a09544ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d204288-9541-4018-8eb3-df781664fa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81204f4a-13fd-4b73-8c6e-316362d38603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f0b554-42b3-4028-8d44-513f5d01dbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e052bd0-5bb2-4790-89bd-1309218d25b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80029b8-b92c-4e74-8020-a798d9dad741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4cb69a-3f4f-4d9b-8d69-65d3d50c926c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ff451d-7dcb-4de2-9ec5-257e58fca7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8950cb81-f150-4de0-b7bf-7800905f98e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c76bb9-45ee-405e-ab09-944bf8ed84ce",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30b0f85-c800-41d7-9880-3c22c4ff7429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d023532-e51a-4f46-a728-0b8080e4b4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5adf3d-0085-4ae5-9ee2-0a8d73306a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caccea9f-9999-4e2b-947c-56c8f88b17d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb22e2a-8fe7-4bd2-b386-e343027bf91b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e075d0cf-141b-41dd-b28c-6fc78e07579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdf4765-909e-4d45-b2f4-0cbd5cf23e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a6f810-4ee8-4a6f-a0df-2e81525cea26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fba11c2-dc39-463b-a649-f8cb502fab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b747c3a6-c16e-46dc-8acc-13f62a328b41",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6c44d1-e601-47ae-8913-4a462ff0567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af881cb0-8efc-4bea-a1e5-eaba660916a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed613cd-7eab-4bc2-b657-374a58e40fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f725e55f-be34-4248-84e2-6ff86d7832a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2a50af-7501-427f-abc8-05b8e34b696e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c06819-20d9-4794-8313-1daac10b6e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acac9e10-f20f-4b16-9032-80be8008ef96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8431f6bf-8ffb-4db8-a6dd-e4e2ffb06f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "844813ec-ac7d-4df9-995f-b1497f4f5343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a1845-607a-4372-842d-0ccb513ab515",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2d80af-7300-42a2-8ec7-718c6ec15ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af01419-fae1-4ded-b0b0-c64d675bda49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495a65c1-1a1c-483c-aa24-4efad814783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "538f24d7-206c-4655-abba-acbb68e5dedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbc1ec3-fcd1-4769-89e2-3f9766df68f1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922c9fbf-7c51-4ec8-851e-c014c96aa44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d159edd4-b9ea-4820-8544-334bdec6fb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76940452-1e03-4d3e-a47c-b73ea643dd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6156818-336c-4814-9548-16741127a6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14d5533-52f4-4227-b338-3a4ff6eca1cb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d06afa-8fa4-43b2-8d14-89338964d4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87839f28-e9a1-4a0e-8ea8-d338857e098a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17228f76-ecd7-4631-a992-a1e2454905ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab5ce2e-3302-4282-9e98-e51747818102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6343a8bd-566a-469a-a251-713b0132b59c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13664d6b-42e0-4281-a5f5-8c745578607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ad3124-b475-4caf-95f3-c118653a293d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f3db84-2446-4cfa-ab49-fd7e21839347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e311fac8-083b-4db4-9512-b59b72d0b193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcf5cc9-1dae-481e-85c9-98ce4c9cc84d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f791c5f-fb43-43cd-8d70-7ff595b91131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3811bb48-0c23-41e8-8bb8-a38b5ab5b815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93511d3-432e-42bc-a639-963fd08fadd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "798acd2d-25bc-4c8a-811f-1d44e8c58da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3a1338-0ee5-49d0-a107-2d076c69242f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac793905-4505-4b13-901b-f8324aa6e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2a42ab-e402-4761-8ae2-af9885df8ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10d2367-5e34-405d-9110-9e6408d6ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db9b4ed9-2023-4ab7-b032-d53f68c69fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca563c59-690a-4cbf-9e65-14faa48a45ab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ecd365-602f-4829-bfc3-6653e0c21a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92918df6-b44b-4031-8dbf-9390897a0dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995a482f-bc76-4803-808b-d3cbedc42fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df0656f3-b51a-4dae-b0f7-0b80bc7796fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf961fd0-9ade-4dd4-8779-730b5c45c564",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad824c7c-fa82-4da0-bec8-0f9e02ffa749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7d6178-92cc-4bc9-8a35-708019f6ca0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8a5863-0c88-44c7-bf8f-3e3300a8dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99fb2e04-e1eb-40e8-ac1b-ce4437392cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f688666-5b9f-4e52-9cd7-44ca57143bfd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f54071-6fbf-455e-b9d7-1289e4e364bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1746d3-0724-4799-8196-e987f530664b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cceef3-3306-4522-a9dc-2730157853e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfda7b7-c7f6-4b8c-b487-2069977039d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705b2407-dbed-47d1-ae59-527ff486eb93",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dea791-cf0a-4907-bf19-e3ba97027c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fd96a8-a072-4e59-8d53-92c8e5ae1be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96a0623-974c-4dbb-85aa-d20e56a37c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3bd078-8dc1-4811-9537-494f6dc0b55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7f9058-e978-44b9-ab78-d1c99281c681",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa048907-4b96-4eb4-9f85-cd2a523cd869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae2b895-9116-4963-a2b3-a225ff545c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85adcaea-6fbc-420c-a171-4ef7a770978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "726384c4-2a41-4bde-af66-137ec11e48e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7e2259-405c-402e-9645-a9b34e8915dd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e110811-4b57-4a06-a823-cd3f5eac0a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9f957f-bb19-4725-af09-7ad39683b2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e4d36a-1344-4b3f-9231-ba349c527703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c398477-19fb-4d24-8845-6325dbd9fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71e06ae-eccc-4dfa-89e8-81a543bc5f7e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9da614b-0b6f-4957-905f-d830af66b18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eef5665-e8bb-4e3f-ab54-f521acac150d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86baac9-1e74-4319-9c52-4d59de189716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "902bac18-ea3e-43c5-89e5-8c649894061b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb514401-b54c-4c99-9800-0b6f91936a4f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a2d929-d829-4f9d-ad00-13f35d3c0304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d64f66-1562-4b88-9463-bcfcd57759d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d0b874-5dd0-4512-8d37-e300a8260378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb57705-1051-431b-ac39-2fa33d76cde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca30d17c-4b33-4a8f-a529-a7636d77d0e1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d0ff9d-71b1-4e19-b756-fef29a8cadfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f06660d-c26f-4997-817c-a209867e6a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea912f67-cbcd-4e94-8dc4-6f6102b04774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d13cb7-6ff5-4e5d-930f-761769395280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9115f89-8522-4b69-a15c-1aa3696b2086",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32a1e22-1859-4b92-b97e-63862ba0a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f058b3f-b781-496c-b30a-43c21ab2c2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d570f2fa-ac8d-4ac1-a440-9b91155eaf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7931a04-c802-4e17-86d0-db5cba585ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7408279-9f0e-403b-87f2-90c2b81701d1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a5791-7ec1-43c8-9bec-072211758dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7a0699-a19b-457f-8940-ccfdfebb531c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93e14c3-b7ac-4ed1-abf6-3d60afc7d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95f50571-02da-4c8e-9b06-1869582d8810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a83705b-cb8a-43f2-b8bd-300f0b8786fe",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bcd9ef-a665-4047-b625-cbba7439ff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960cb33e-7845-4505-b5ba-02e4ba7596ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d4e5e5-cfb4-4e5c-b203-d8b5eafdeb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd795a0-8387-432f-9ce4-e050cce81c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452014ff-2ecc-416b-a64c-2fe41cd69364",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c357a49-2c4a-46b3-829b-53cb0d0ed34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cf37e1-bddd-4367-9278-b2639eda1d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77618548-0c2e-438c-8ce1-b08059196e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66981c05-0c1b-4c75-8662-922bb86fa4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4718e1-27c1-4e00-96fa-0c2a178b7de7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e67761-abf4-4ec1-bbe6-ad9fb90a3705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9983f1d4-d551-47a2-914a-4cb5e1c1151c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02c9671-7efa-4266-911e-2016a82c5122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85800345-a5db-4238-8197-ad58d4f4ac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f01fade-01eb-4a6d-a188-3cde817dce63",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e786e97-70d1-4b40-8aff-874f33a3dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc551555-72a5-40f8-97b1-d4de392805b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd4563-30ff-412d-8e8a-59b88db07419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9901fb7a-93ee-4b39-a902-ff984385ce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2138b51d-d069-4aee-a2df-9728d5b442c2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f01488-309f-46ec-8782-c45fe145b4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59bb530-bb8a-4598-a65d-f89d2e71fb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1633aeb3-ec5c-4e41-83a1-794887093b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3941144-a2e2-4d61-b05a-a7c63b671630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0063add-6586-4266-86b4-898ab550c29a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0840c145-254b-4506-a92c-90e972e63c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0143f9e6-9cf6-412a-b066-8fa20ff0b6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f54e20-3ec4-4d3e-85c9-320ba2c59eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf38df9-a284-4f2e-a151-876ca8cf0bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b62750-f2a6-448c-bb76-dd2e3fce4da3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778bb566-4829-45bc-b3a9-ce735d1db16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e1cfd347-ae5c-4fa4-a1b8-ef85ebb938f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e615a-e4bf-410e-9936-f50fe901e654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c316379-d925-410c-9e11-f515a29b913b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2aed876-235c-4931-81a9-74ec2f8a1ae3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4c0d171-60f6-4cd6-87b2-789ba66fc7b1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7ba95a-599f-41bc-ae54-d69a01f3f276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72bb9e69-9d8c-47da-b797-5f2c00d98146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f1055-dd6d-4c06-8156-b648ae15fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d57ea197-68a3-4fd6-81eb-92cdf7418d0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee9b9ce-45f7-4dcf-8372-c64834495aa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64370b1e-5ca7-4176-9c9d-adc332da6486"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaa8eb99-e464-4ccb-b503-50393b525d0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef54a6d6-0efa-43d4-a68a-0de0eb8a2218"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dd211fd-67ad-41d7-baf7-11300c57b60f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28030404-e00d-4666-8edf-b63ae69cbfc7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "985fb341-c08b-43d7-9a32-73ef10e5902d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c20e7478-b278-4f57-996d-1a4448dc556a"
                }
              }
            ]
          },
          {
            "id": "b5d3d7e2-710f-4348-a626-0923d9b55812",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89883cb8-cbcf-4274-8ce0-b14b2e3ad964",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37345bd3-39db-446f-9f7a-8c8a7a63e047",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7a515ad-849a-4331-bd4d-7211ed4d89c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b919adc-7805-48d6-9b59-7c9b15cccc8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b9200ac-4334-4374-9a53-04810b1b1ee5"
                    }
                  }
                ]
              },
              {
                "id": "0913f786-4bbf-4b77-8151-30d0cb56767d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4ffcdfd-2bf3-4580-978f-fb194ea0af5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba079a75-151e-415a-bd20-b04bb3a9d26f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22545b0a-1ffe-4cb9-8e04-5778341bb715",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca1a492d-490d-4803-a54a-73f656a5fe02"
                    }
                  }
                ]
              },
              {
                "id": "2ef199e1-789d-4365-8f04-ee67dae10b18",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a043201-7a9f-4b7c-98d2-d6ca828de21d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18e2b3fa-8b4f-4b16-9c57-af7c14a1ece9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "676ac0d7-180f-452a-b6db-3dde2091cdb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2df59d7-1cc0-4c2b-a162-d00a39cdf431"
                    }
                  }
                ]
              },
              {
                "id": "275a1354-cbe9-4086-81a8-1441e51f0c49",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b03631a4-7110-4b5f-bf1a-68727d462022",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d24d8282-7c49-460e-a647-d1709b0ba1a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdec0b28-ddd8-488e-b831-f72ba114a93f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ef12bef9-5990-42f0-a612-364f4180f93b"
                    }
                  }
                ]
              },
              {
                "id": "5fe4d3a1-e721-4d28-ac3e-b83bf2b2e4fc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39381df5-004d-4beb-8574-a3ef04269d80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08eef512-8833-4dc4-ba6a-393c15aed02e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d6338c8-5fb3-4bd4-a056-ac2cdc8bd6eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "79bed0b4-8f2b-4c0f-a70a-ddc8a371dfd2"
                    }
                  }
                ]
              },
              {
                "id": "cca03b12-b30c-4b16-a14e-f94722e8bb4c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f37c16d-f061-43d2-a454-8ef7e8b829c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bdccd75-2c2a-4c63-b1df-45fda468f14f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "488f34e6-9137-4ae7-bb9f-629675f07701",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdeb71d0-be10-4089-b7bb-29f552393967"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14ace635-4bed-4f4c-91aa-d7255ca6439b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6dfc6c03-3349-4a6a-b1b5-e3b5a9298136"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5e8b400-fddc-4d9c-9cd3-63b7eaa9fbab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "897bc70d-f7b9-4d8f-a233-7cb4e5865d39"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a90cfd-a103-4942-a6f8-913ea69aef6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25480a32-3676-4cd6-a79f-a71649dbba6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a7de8e6-901a-455e-8ce5-3b63d1a9764d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64187792-e9f5-4822-b807-f6808b64e65e"
            }
          }
        ]
      },
      {
        "id": "126d99d3-112f-4736-9e23-cfe1a610af50",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5458a54e-6a26-4203-b14e-3440364d0731",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4e05a5d-6be4-4b24-b249-96d45cbc0a7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "859c6748-adb1-4b5f-8c26-4f753ac4ebe4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d39482-5dbb-4dce-85f4-756d6de86fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4679a41f-c455-4bf3-bd50-ab8015506c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59550c74-2896-4680-9a9a-6fc759f67479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eceead3f-57f1-4150-a9cf-5d250e196d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d55b44-16e8-4f32-b2ad-e512514560ba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a9db7a-27b8-4cf4-9ab3-a5d37d9dbf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64026909-f854-4338-b3ec-368acde5be6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7768fc5-9274-4952-88da-2c18bc4a66db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9761bda-5b1c-4ea1-98da-9c04ca4364e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ad773-aab1-4dd7-a1f4-81a9df7dede4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea486f5-c20c-4b4e-856e-51c94ff11d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f58f46d-950b-46e8-b493-06353d245d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c62d6-01e7-4c24-a5a4-9524ff98b302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5ea0ba-74a3-4f0b-be70-b7e681138b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44996f71-668a-4f0e-9073-5c1776757273",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8add8edc-bb87-4145-8a51-0b8fb834a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85188994-0806-4c75-b510-9b13760a9cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3dafd8-7256-4795-9570-394d4b6cbad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95faa1b-6687-4653-a2ed-6d0220be17b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a352ec00-0e87-4a1e-a9e1-9eb8f36ca4c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8daed5-16c2-4c08-a62e-a8bddbe7b0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29733c1a-e62a-4a11-b553-d7e2087a90de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca42b06-f866-49d2-b1d9-fb99a204d816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a9d1bc-ec10-48dc-a299-d561b3e5df7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e279af-1f84-4d61-a9cb-d14970cfd143",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c050287b-a23d-49d9-aa8f-8ab63debf5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3657a9-794f-4bf4-ba45-4aee6304c3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c72a6-a35e-4643-b6b3-61175bc11c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6535150-cd13-4517-b301-5604ddf2d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a541c5a1-43cd-41df-8c33-dc555f52bbb7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aad60c8-ff1f-4c3f-86f6-271061056cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f955db-04b3-461e-a227-5b67c5ec21df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5644f411-4982-435e-b0ec-178bc3d85923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c93bc9-6ea0-4efc-825e-0d8249754dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fe7b11-df30-4b98-a5c6-f3e9702178e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c06671c-8bd2-4261-be3a-d9b6183cd8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57592df-851e-4cb5-b390-38c5c8ef22ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc4e7d3-0d89-4eaf-952d-5746a496c08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f84b72-b3ca-415c-a9a8-fd520edebd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd4c989-1288-401f-989d-cefd0db69fd1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01c0215-542c-4e7d-959d-f865b657cd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7210ce3-30bd-4e79-aacf-8039d1384f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabcd2cc-96d7-40b1-9475-efc6d1fa0830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a4b282-eb44-4cd4-879d-fc39b31e491b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f33224d-8419-4f4a-9943-8f75ed5d8816",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6182c09-167b-4559-abd2-4a166f50239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ab3ad-2af1-415f-a71f-c4bd01bab644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fad007-5ac8-401a-b51d-a5c292949d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed14104-217a-4ba7-930e-37869856f1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e153c40c-d0b5-4b67-bb19-38062eac7d96",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a1411f-164e-4c58-8a9e-cc943e0e4e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8b5748-8791-4913-bb44-582d35bb6570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c44d50-868d-460e-bec4-2c540c295cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "281f9fcd-976a-4ac0-957e-d459d9958e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15a6e0c-930a-4a4a-a19d-a1deeb1dc880",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b79cc5-8cda-4708-8940-dfe7dc385393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3145c668-5736-4c26-8553-6bef838f5526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5d0004-95a2-45c9-a388-fd2060f8b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6ec226-8bf1-425c-9efe-9250d211bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955ef86e-86f6-4c06-bc09-ade8b9e8db90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e1a4cb-b578-4cd8-bd79-78af4052314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5558c7-0678-42c8-9ab7-7a6120fb2062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d855b5d-9e73-4d06-a33d-7bf052b7221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d6e231-0a12-4a02-883c-b2e35b306e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67ec7cd-57c0-45e5-b8d1-096bfd04ea06",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c4373c-1087-4879-87f1-c95a91ed0825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aa2d13-d4a5-428e-a6e8-30f91d81c163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88abbe25-59e8-4ef9-b895-47d448e95530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa56b1b1-4dfd-4bbf-b3ab-be0b5cb329f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35c9ab9-1376-42d0-ba55-bf82a5561ff3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecb8391-74ce-4326-bf2c-c3b297ce06bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375d2e28-e2eb-4835-8de0-836cf531451b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6f81e6-8eea-4a58-a09a-1f21193f691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "629543b6-2ea2-49ef-a3db-776750b4c696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8658d6a6-aba6-40b8-831d-34719d8e7bcd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f892b5e-40ae-4935-8895-8dc287b7a184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78847973-0171-4b85-b480-d95b0e8c9eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6b94ed-f361-48f8-8693-0b890eae041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "209e966f-66cd-4b51-901d-df5f4c7f6e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b62b8d-cca4-4334-929f-764b023494ab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407919c8-2400-41f8-a2fa-3867757be9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22578a8c-cbc3-420c-98d2-458aea8fa71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256cb2ff-a026-4539-bb7d-2ccb9c227a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0a0138-b73f-4129-a7c5-37b3c0ba012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd8ead-b306-4d5d-8881-f2a016d7d88c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1704679-0970-4f3b-94f0-6b291fe6b62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7197b285-b962-42e3-a17b-406125c8a1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bf67b2-fa51-41d3-8bbe-74b5d052313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b983e117-898e-4762-bb29-cd27805918ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91acb69b-24b2-41a5-a03c-3301d6c48157",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc096fb-b7ff-4265-bd21-e36146f13c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e34a9b-8dfd-4c2c-936e-053e5f3b6161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfc9f10-8f63-402c-a31a-2cf1b0975f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cef1c1d-8e0a-4345-a32e-7652d3a44da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538d8083-6b56-46e3-9163-3242dfb50544",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57dd81f-4a8c-433a-9e37-6dff6d60f376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61457629-d080-437d-8053-807d980fe750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4f2d3a-f997-4c3a-b242-787522c9eb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a58b429-1d1d-4d2b-b4fb-7f5d2ba1d97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c387da-c831-435d-bef4-18652034bd52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a728297-f9b6-43d2-8cd2-97d6615be498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f928b467-1eac-4620-8c3f-027bca6f5757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67be6154-3fba-4c51-87ad-384e5145bb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbe51ba-9c56-45b5-8b04-9e2b459daf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def0654a-24c8-484c-8ca4-bd898b9dc3fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f696ebcf-65ea-4ab5-89e5-645aaf7ac2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271f49f7-f919-47e9-81bc-74f186c1c054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8066a2-f5f7-47a0-898b-8a679cbcb005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab45e5b6-1a84-47dc-aba5-b8eed793584a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a62bad9-4a80-4bdd-ac11-77af5d4a8b7a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79d9cf9-8724-44e5-834c-fe9ca1020f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ac8e98-548f-4a5f-808c-b4df3addd554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa0afe7-fa59-4ea3-8f24-d5550f48ad2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1c705a-ff77-41d5-9222-53a31f75e8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cbbfda-21b0-4800-8346-70a3ca85bf34",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3c6054-de26-4483-9b2a-eb7f094fd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437552ec-4a52-4691-b789-640cde59a816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc657ab6-1c8f-4cac-8ef0-420b2f1870ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ad79eb-9ec7-4c44-88a3-f9972f5dc4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ed46f0-c930-4878-8212-0c0d071a0e39",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e502319-a177-4edc-95ef-e3fe89eec64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796c81a8-84e6-4002-bf15-1689c6f3dd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229f51fc-53d5-42c1-b3a3-1fb7a1478068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58591aa8-a2dd-4fcf-a08e-b05cd05b132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9899721-10e8-415f-88a1-f1ba27e156c9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea100a8-6349-4398-9c6d-29cce8b80ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ac0a6e-6054-4c9b-9639-8e23cfd4bb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa937aa7-06f1-4281-9420-72cd39bd091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95938533-7bde-4fb6-804d-21d20da521e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f752be-bc55-4e9c-adf7-7ba78ca3e763",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccbbe2b-e036-4975-a6a2-ac2ced5147bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef066005-2dc9-45b9-b6c6-9c11a0612f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f7a22d-c2aa-4428-adcf-83147250e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b194c1-5a81-4f62-9b0b-a4d99c46fd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624f4223-c61b-4b22-b18a-42c57309777b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb205e2-029b-4b8a-87d2-670e758e8ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199ea398-67cc-4704-9977-6e7d48aa81a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dc3982-b62a-45f3-8077-6cac4047bbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780383b9-be61-4acb-8dee-439308415319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666802c3-8574-4660-8f45-5d43efc212a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa34e25-7d5f-4325-b146-cfd0b7fab669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df79cc3-d945-4808-83b5-f5a8fbb44c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69510d66-c1e5-4dd6-ac7f-ccfd7bc9380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e87d7ef-f61c-42b8-8ea1-e2fba3613663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e499f-33c6-40c5-b2d2-9d6f55db56de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9b13f2-d592-4eb1-b2d1-e68acdb23a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338f60ba-be07-4a92-b03b-fef2e2a381e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70f0f97-7768-4548-a2ec-a111eabbac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4c3bd0-0373-4fa9-bef7-07c8263db932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef0698b-825f-4e3b-aadd-f40cfb0e83b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40321477-79d8-4459-810e-d07e7b4db4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64872b3-d8a3-4cb8-9497-9b44db47b596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62096499-909b-4c48-a929-5b6a850d4cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4c70b4-561d-420b-94d8-c52039c03166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe23eb1c-ce3c-49db-b4a4-269d8eb172e3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad2ffc-bfba-49f1-b4b4-5ab0142a61d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29293579-89e5-4331-b5fe-4e20f2679bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1faa201-4a22-4e6f-b8a6-6bd865f2188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "889bf6cc-57f6-4e63-bbb4-ea001e27ebbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edb3167d-f008-4f18-9ab1-3f3d358c20b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73af9db0-9ddf-4861-8073-3ea01723662e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326a83b3-c29f-4e2b-89b6-25e8000ad3c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6c5a63-d5d0-42ca-904a-3e5d7796e9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa8c912-07c1-4076-9e4b-fc967a83193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "432b7796-753d-4bd6-9c78-720d951765cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52f92382-8c6a-469e-b345-f28353dac812",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4fe767c-dff7-45f9-b6d0-0e7d12b7bf84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c621fbb-bdc9-4af5-a0b4-fc25bd42b8b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9abd7c2-c263-4d5d-b79d-0db7691fd6e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0801d78e-57c8-4b49-ad3f-e05975d09bff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e40e7b78-d620-42fb-9605-38d921041de0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "552359cd-7a6a-4ad9-8ce0-8a48455ea211",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0018e5b3-83cb-47da-b936-22bacff02d31"
            }
          }
        ]
      },
      {
        "id": "9ea4400f-321e-4263-a133-d2bbc64a6d94",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e95ec139-2dac-445e-bef1-8ef4190c6b20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33fdc6b6-9c5b-4e2e-96e0-89f54094b1eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aefc10de-6bc9-4d00-81a8-eafa99fcbe64",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a384441d-9c62-40e2-be3c-fd1b266132d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16285fcf-0c72-4e87-afb7-2e10608350f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf77a09-ca64-4b58-b500-2dba7f7e3e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6f20ff-13e2-4cb5-a596-b43ce416e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a4b172-7308-4efc-bf79-7cd259ac9c02",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24300aa-b0ac-4dbd-96d1-e64dd0068f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219cf5dc-211f-4b99-aaa7-55bbce7c4909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec9680f-2072-43d6-88b5-da442ad08d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "530b0827-8e49-4409-820a-52f6a9ab9f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b8981f-e9bd-4bf7-8d54-4ee8af6c7e4e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defc7688-3155-4da4-b78f-2c63733610a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9f74e3-a5c2-4d3d-8999-1d0e99c1a2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54427819-6432-4699-850c-ca2f94257478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66ae8a3-01e1-4f2f-8f9e-50d77d9f1fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82efa9e7-0c05-468e-9503-324da39f57c9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e010d21-cc7a-43fb-8507-12cf667f1fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0b79df-b6fb-4e1d-8aaa-5cb08567e50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5912b0-4524-48c8-9789-b89ef9dbb3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59fb12f-98b2-4923-9f0b-6ea5b91c6f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d078be99-949b-4fef-afc4-bfc25483beb9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef55f49-452b-4ac6-bbb1-e4e45b3d5ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d892f3f6-bee0-47c3-a58e-51a397a5d842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9bad22-bdc7-433d-8fd9-534e80f249a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f76f3dd-8c5e-4e25-8a81-8210319b1d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b77ee73-f28f-4a1d-96c6-e022d2bd7a67",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09424549-10b1-47b9-a16a-c9601cab42ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1ad1b2-b970-4cc0-8623-bfc51ed43cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be853ad6-dbd6-490f-b516-0abef6384a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f031ba-ca01-4d7d-9307-9c785f0ec7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed385f9-da5d-461f-821e-428f98f9b16b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39123d88-99a7-4a02-9ee9-000dc16d77f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52907cf-0652-4578-8fcb-0cf3e6a7dd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b54fe-d8d6-4b68-bbc2-a33ad364c166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2bfa12-d66b-4276-9b12-395b8e493fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8462d61c-bbda-431d-b43a-920bd5d9972b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6c296e-b900-42b8-b846-46eb1cfa117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83282f17-dfb9-498f-9cd3-9f02a1c1d09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28beb73-83a1-474e-a27b-c7f766f9aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc331d5-0e72-4c94-bca0-4adb2e480483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb75049f-ca6d-49fd-975c-748544906cce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413788c2-05e6-4f6a-95d6-758a411f1414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db58e734-3ae3-43d9-b25a-33e15a4aa2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a28721-bdb9-4816-b5d9-1a0cda5af8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a7c7a8-7e0f-472d-a7e8-d85d2f70d53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fc7ee8-6218-4f8f-a83c-38de7f994190",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973e992f-bd97-4eaf-8c32-ec9449e239a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c7e01a-a7cf-4fbb-bf10-8a2fba31a7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd3c780-807e-4679-84f9-6bbcc6020a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f2847a-1ca9-4d78-bfab-e9d8bb1a40e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88473795-e4a1-445d-a2ef-cf66dd624395",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584b77f4-5642-4be0-bb0f-41735dc6e9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9aff51-f279-4ab5-a099-5d18a58b0bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b71188-b0c2-4fa8-842f-dcc8d377718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3df4bfc3-9aee-466c-bed0-665fc52a56b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b652c0-0569-4b04-b7aa-d5dd72d6ceb0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808c2749-8fb1-4b73-bbe0-67b463a6a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b60b4ee-1bbf-4b91-a99e-78aa945c94ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a1f2ff-bbfe-41d7-b646-ee665f15b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d83ac9a-1bee-4595-bbdd-794f1c68a33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c895d0-3759-43d2-9ef0-fe004cf71c55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573d2f81-8200-4546-8bb5-3d53d4338a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6046191d-c713-485d-bc03-bd01e33056cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c57f50f-bb45-43f8-a287-44003070063a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd9f75b-030e-4fc4-bd04-635934f47dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b28b1f-9bac-4a1f-9ab0-651ef2d486f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090b738c-7bed-47fb-a7a6-ab4b90bfc773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cca988e-055f-447c-aead-0b96b9582a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daac070-b95c-4fc8-b8b4-1ecb964144aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d25727-dfd6-45e5-b362-194bb7336d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b26d26-c91f-4685-8105-35647c434049",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8f78ea-1089-4cfb-8b12-dff6cd6eabf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236a97c4-f847-48a2-b990-b305d658b86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7ad216-406f-48d3-8982-088b0a59dd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "455fc77c-9b8e-4607-adb9-22ad48d4a6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c806dd-3207-482d-9ce1-8a4c223b6f0b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37f95e4-27f5-414a-b9b1-08867783d631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1f27c2-b132-43a1-8eb9-6b351cb94850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60daeb09-685c-46c0-80c0-5ca743ba9f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac6f1ff-b9c5-45df-9cbf-7e33ba8ff2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2cfef7-fbcf-4ee1-8a9a-118b6db8b351",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b07d53-b9a4-4dda-901b-5b79b267a7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08a5baa-e3f9-40ac-ba8a-238ce81852e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f1c21c-9a55-4c29-a5fe-13debac4c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "70449249-0af2-4ee1-8dd1-1eccc25f96e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec7e3e-2b35-4a82-8dd8-42c79d8ab820",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eaf7a4-a08f-4b46-8a42-34650f532898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b77e73-96b5-444a-b6ef-2503e03d3f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ffdd6a-2ccb-4148-9ef1-8d822c5597ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc96496-5648-4d78-876b-628e539c929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331c758-9491-4947-90b0-a9fadb102732",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c1abdb-d1e1-4d9e-bf36-e2207de31aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746fca0f-d41d-4468-b1de-947b28966d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c038130-6d78-438a-8922-72f2a056062c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d9f89c-9a4c-46a6-b2d4-9c1a941c68b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9c75b9-8359-4e12-8670-921b39a3bebb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f518ff-1bb7-444f-99f4-560b9b92439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d187851-d028-43bd-808e-b99cf544d660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4216bb5b-7e31-4606-b41b-081901ff9e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0941f12e-b082-433a-aa85-701261b05bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd5d3e8-2ed0-47f8-9bc4-57ef3241d5d7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24034f3-28d9-4bb6-acb3-8260dd1b0faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb926792-0e6d-48ee-a55d-927868866e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c98f3c4-9abb-4ef7-8a2a-23a7b824a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d64b3ed-28ac-454f-ac3a-8d24bb9fa515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2f3070-5efd-4ad5-a5a1-41d875aeed54",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8198f66-33e8-4ab0-9712-dc8516dc027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d74bc10-24f1-4c6a-9c33-40a5ffc0efce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17948032-4c0c-4dd0-b1d7-f87b18659d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76dc341f-7327-4304-8a82-60766048ef93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c907f416-d526-40a1-8a79-0eebf56fb59b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964dcc57-2ee7-4835-9706-8fcac96c7899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c1a707-8921-4324-9be1-6179769199b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dbb6e0-59b8-40df-9e37-3807b19d0f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddee64a-7449-4ece-b94b-95244974c743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fadbb-5585-40f6-baf6-a5fcb3c4f5bf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a3c8c3-c0d1-429f-be9d-2a3750df5103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b3c8a4-ff1a-404e-a53e-fe054f2eb05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9706f793-f408-409d-84c6-109591276bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac9ecc4-dd23-4dea-abbc-8fe79314f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65680a06-5063-4713-8f41-c633a15b3709",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94803ad-b3d0-4def-8834-490d5ee8b6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2950f00a-775c-40a7-ba23-aca14becc59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c12087f-a3ca-4553-b4f0-e5e5f3a1780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d021363-96f7-47a1-b466-c9dcd845487e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e61128-252e-47eb-8e3e-9f063af48d64",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d8da3a-e3f2-4d15-abef-0a128e1b5ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c71a8f5-6d19-4907-b3df-b0203515d44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e92e4f2-238f-47cd-ab13-a73b3e9a22a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c8bd37-88c0-468c-8fa5-ba8566a1b00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389ba888-9f12-4bab-9eeb-6f168c32da92",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7acad1-7ce7-4c2b-b419-e0fc9f2c3387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b472af70-4b4f-46ac-8e59-2a13f3e17956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b557845d-bbc6-4447-803b-46028e0ec6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7c7f2b-f106-4b02-a504-9caa215acd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42461e1-76d5-4638-b8c7-22bbe5889542",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01aaffb-683a-4629-a72e-df3e2dc274c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068cdb59-df94-4ead-931b-e484350fc986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557abbb8-689d-42cd-b6d6-0a5c00f90a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d6423e-91ce-42a0-b4b2-21c39099c500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061a7e2a-561b-4150-bf7c-dfd7628f61b9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b57838-5943-446c-af29-45533a2b1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68abf9ab-ec03-43c7-9840-e8e0022a7b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ee22ea-6013-470c-9c1c-d64cee199cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf8b85b-9273-4cd4-b746-b8fc74a3e09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f5bbf-b274-43f0-b4ee-179f06e8ed3e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161b1b77-f050-41fe-937d-0d52e05320ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa95ac31-2a32-4433-86ba-5143bd5c92b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8c0bff-bef5-4c81-ba8b-e801bb703b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbd3dac-ad7a-4a04-a9bb-d5d5e827b92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312a7344-68d5-4f5a-88cf-70c41692bd40",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4abf6b2-4a32-4298-a59b-4e880b59708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47be9ab8-3219-4b78-8791-7346d10fee12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ade855-bd9b-4587-9d94-ecf0d4718d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4373396b-5bf7-4908-80cb-a025c1d8397c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb7675b-c483-42a1-bfe4-bd89b9af72b4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b05eca-e86f-4d54-87eb-a89b9f8c4c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0789ca7f-90b0-4bcf-90d1-39270dc0f568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc3dacb-faac-4246-a993-d92ce78676e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "443e4b32-2a4a-4fd7-8a78-d5afce893ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e116c13-19b4-4975-8a82-c6f9f3272561",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4fbb82-78c5-4c89-9819-8ab6b2e6d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb0116d-dc39-42cc-8459-d4f9fbaeac5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21df5b9-b040-4b12-add4-cf084afaebf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cf0442-afed-4813-a382-b84bf0a093c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38907d40-ee69-47d6-836e-669beca730aa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a743ed45-45f5-4d5d-85cd-6ac6b6c963a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b963ff-953e-4b9f-9902-24c4ff71ab1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c23fb2-32bc-4a9a-a9d3-f11853dc462f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7545e8-af8f-4a61-b06f-9237bdf5b062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fc2010-a11b-4890-88b8-ac9015d72373",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a50ad-ab29-4b1a-a30e-068077e723d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a155ff-f61c-4bf0-bf6b-3926c7d771e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893b1520-09cd-434e-85a7-b5d10a28e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55b4496-b310-4280-a37a-988ea83ba840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e6e95b-45e0-4831-9294-058723190483",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b82894a-14f6-4a1a-9558-9aa4beb70ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca945de-2a5f-4e76-82b4-7b6b2331a2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb6192f-4910-4bd4-a538-a17afd431699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "901ba386-f4cc-40be-8283-5015cd09a33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082760b1-1462-4ec7-92cf-17cc7cf84452",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14871efe-3b97-4236-ba36-cbbbed04941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36216e2a-b864-48c9-83bb-cbc37f4db304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f056a63-2830-47af-aea1-603ffbef155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f31322b-db5b-40d5-b888-b4d50c493f3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fa5b22e-0e73-4905-a24e-4710e1611a8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2587db7-0d03-4b77-9a60-cdf44305890f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30151b3d-d46d-4b99-a45d-5c7d0ab9cb86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e437ac1e-12fb-41a4-9495-e80e800a3142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d2ba3c-b871-40b7-bfc8-587e22ed0661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fed4d33c-7637-4079-ac9a-8200708ab298"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e9dc3e4-0c68-4ca2-a09a-f1df10db3bef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85128c83-3f85-482c-8284-fb473fb3fed2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e8fd0ce-ba36-4474-bc9f-4953ae8c1529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "688f9825-77be-491b-aaa1-faa327c3de2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dbc56f8-5b3f-4885-b64b-9e121c080fa9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e448f1f1-e52e-4684-8c04-10270e3bd0be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ea68c08-ba4f-4bf3-915d-a06a5a925963",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb2b9b3b-e863-4f18-a70c-6429957a6766"
            }
          }
        ]
      },
      {
        "id": "843af80b-6075-41e0-a72c-a82ef2aca334",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bc668060-0e99-476d-ae7c-192fe5e05a71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d16a7f6-dd13-4445-96ac-10951ab1a020",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2724f848-5fe8-41d5-8875-57a0e23bf964",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b50379-17d8-4076-97ae-808e9ef75503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb50be59-a840-419d-bdcf-23c4ada363e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc99dd45-24a3-4ee8-8c1c-603d0bc7468d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d341ac4-1884-4d40-b328-0a461e90c6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd54149-e45d-40dc-9199-7d32dfaabcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c4e809-a4f0-4a91-8270-e291c91bc1d4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a84538-acd1-4fff-a104-1472137a0dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a21f37-222d-4f49-97c6-b3f00e1804e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cffe77c-446e-472f-a540-f861aa3ef0f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e845af-b89f-43f6-a7ea-05ff9cc3c0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e07bea1-fea6-43c8-9220-fef4ce49639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27567ea-c1d7-42a0-b04b-7af0c943b0bd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83e3c71-6a18-41c6-8ef3-365dfadcc634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32521b8d-2096-4151-9931-dfda4c9f1b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa095eba-3b51-440b-8dd7-f46f0fb90a8d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8ecc6e-0b13-4f4a-9dc4-3fe7de2d0dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9281b04f-acff-45a3-8244-dfcb27baf432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0944a0e9-2424-4843-a05a-8945b2a6c0ca",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dc573b-9709-4993-b6d5-6f42d5b07026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af9c8b7-2c27-45d8-bbb5-530e6ebd9085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9ff1b5-21e7-420a-aee0-8e9b4e636305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c33ab78-a7a2-4d3a-a016-23b4825b31be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5998eff-8264-40a5-9382-f5ad9d659f8c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f9a745-e7d2-43eb-aa48-d206fda34b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03aeeca2-4f93-4596-aa69-44a77f26ae1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aa6ffd-dec5-4d2b-b47b-96b97636290c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1e4c37-f5bb-4884-b9e8-f80e0abdf3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74666d01-4360-4926-96c4-b45d70b2db68",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af2389e-0582-4517-83db-386ea3ded9d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bcc3b29-0851-4ca9-9ea5-82e39a352298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28652f-126e-4ea4-b452-8cd82073585c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa78986b-4b6c-4254-900d-4c8838bdfb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed26e771-73aa-42bb-91ea-0fd250e5b305",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32817e6b-c347-4994-b2bb-bb276b113ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e350ece2-dc5b-4349-8c34-e651f9d9fdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1def72e3-fb82-45e9-9406-c8651b41face",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31c90b7-1936-4f28-bfce-5bfd9aae341c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7513cad-7905-4c62-9bc6-27e70d82bab5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a617fd72-3aa1-4aca-90d7-a7f61c8233de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a49725-7947-4721-9b92-e5067a20e412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb56f7dd-d28b-4049-bf1a-90f07f3eca86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e1864f-b803-48f9-97cd-632b49ebaf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5920b86-f531-4c1d-9f06-3127bbb08feb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcae4055-5287-471c-8997-8992b79a178a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68969ae-f4a5-4608-aef5-52f87a54585d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90067e14-c5d6-4dc8-84d6-c6c141833035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9a6e9d-32b7-4ab9-8320-2423b0511c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d92341a-1ce6-4484-b22c-dd6b45f756b2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abfb769-f7c9-4dc8-9b9e-75555deeb602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "745daf6e-dd5f-4012-84b1-868b2ae17c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a20afc-19de-44b6-ad2c-1845465640c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2d57bc-2033-4488-ab53-a1889de3b4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d93e172-48e5-4a69-b40b-072292752a9c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b6b5f5-3b76-4774-9c3c-c5de954468e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af7c459-33ce-4278-a093-4948c09ae91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e00ab3b-6931-48e9-84b4-971eb7632768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358f3ad1-8899-4da4-8243-734f758b26f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affa66b1-35d4-438d-8a5f-b40c4cf2bf2e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767eb593-eda4-4aa0-855f-12fa4b5e15cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb772f7a-68a9-4910-9d0b-c0a5586f3f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26988f19-c8b1-4d26-8d33-de4ab1a6ad75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc302943-eddf-4104-9a1e-979048fa25a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7030dc92-771a-4bf4-a31d-ba8adfb53489",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6559f86-37e6-49be-ab3b-137f9c90b8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf97344-532d-495c-8826-e3c4af5ad2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad742d12-182a-441a-9432-443fbb0669f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c78f8c2-1096-4244-9e02-9856fdcae565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a67da8-737a-48c4-88fb-e3b409baf4f2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a8d0c8-b05d-43bb-8d1c-39386c61010a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c909fc-fabd-46f7-bb42-7fa4448b9888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e20c48b-ee0a-422a-8bdd-cdef11d02406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4ba904-1cb8-4db4-b999-48e7d3de6285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b092d9-5efa-4b98-a95f-d05ec99ae1ba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc9c0c2-2fdd-4b59-b97f-1559b55d81bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e591438-fb55-4a14-85b7-bbe618fa40fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a063a9c8-21e1-4905-95bc-dadf13c5031e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35ff177-c189-4e67-9051-0e3d0317bda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761aece5-7f41-4079-b4ee-542b53652f12",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431a361c-99fc-408c-bcdc-35efcf9959c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ade7fdc-22a8-4966-bf87-c13ea6b2c7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e299270-f9d1-4e10-be2f-e8047fa2f17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb50b1e-517c-4ebf-9ae2-08c9f794f84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bd437a-5619-472d-ae8e-bf2625f2527f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8b6a06-ca84-4d56-af1f-264c6d08d0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddc46de-93a1-4b96-8806-66cd48d78ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0637f9-0a9d-4fc8-ade0-fccbf7957ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8eaf0c-310e-4115-a098-c688f3988d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5364d0-2e7b-4d8b-9636-0fd8e58b344f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f85a89-6eb8-447e-96b0-227c3eb1007d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9635d62-c005-47d7-a6f6-f1c963797192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d7c1ee-d3b3-4488-b55a-595239fa2ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f7a503-0b26-4752-8697-d6afd3215e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eed45fd-122b-44fc-9e5a-09c29ed379fa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34058a03-4013-4f35-9379-7cb49e04e9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934518ee-6e69-4dee-ae68-15449156f422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e990fa-5d3b-41be-9052-23aa92cb2759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eee66de-cc77-4a1c-9e9f-2fa7794a72e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ada682-619d-4f77-9c42-76d50bbf701d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5571afc-ec18-428a-916d-f323de4eaf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a0d0fb-aa2f-4caf-ab94-1e8093316bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc8bd3-18a1-458b-99f5-dc54d8545d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3280023b-14f8-4f9c-8d25-34141ea2379e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d39ebc7-3b97-417e-92da-4736d5744482",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1acbb37-f347-44b1-943a-89766f8db5f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a618218-61d6-4108-a168-77eac3ca0896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b402e413-74d5-445f-9a03-c5f61c8d0189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b913d0e-9d74-4690-bb7a-ecfbc0965b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e1cd4f-4e2f-4f28-a83d-ae1a77bf0243",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f170edf3-34b2-4caf-8c7b-8ab1ab971f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64320de4-4a00-4327-b94c-772d083d781b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82ec6bd-9f62-4274-8163-9d396ca71aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e178399e-6570-453e-b507-e1739bbfa045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea90e75-9e66-45b2-a1ac-e4fcd8ddf8ad",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b243e38-41fc-4e6b-8d4c-f593948d5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc120b26-c9cc-4f74-ad9c-17965a2ee892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e598a98-df10-40c5-9108-673e49e4f690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557d54b9-f6b5-4851-bdd3-ef9083e60ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb642155-5b02-497c-a294-cc4fdea04617",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5280e2-905c-4c7b-8f3c-fce97ef2a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89df41f2-4cce-4c06-b912-5caf72bd27f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27147b0-fa13-41d0-96fd-e87e59fed468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cf4f6a-2357-4119-87f7-bfb5987e0e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267cff4e-9d6a-4b97-b475-7e2a11bb552f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bcffb3-07f0-49ff-a9da-6ed4cb396aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a22e4a-c3f9-48d4-a552-6a93b35e77ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e31f179-c94e-433b-a438-b8a5d02ba1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818b195e-ca54-4296-be2b-07ccb3bc8981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9d007b-5131-4a6c-a00d-21f4f7e0505e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5727a1cf-fdb9-4c47-8ec4-79acb12a163b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22209898-9146-494f-998f-320b6e343906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e49c1a-c377-4c0c-9ba7-d55839a54633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae0347d-6ce0-4fc0-b8f3-64aca559aa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435df6a1-f06b-484a-8228-45387ee829d6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b00b312-e257-4671-bdd2-870cc26f21cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cacfb95c-aa96-4b07-8241-d86cc3d2fb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7b1051-5a35-4340-b193-1df859c55077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41f88f7-3485-4f9e-90b6-fe501db87b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5cb91-0cba-4d25-8db0-0561a18b76d9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b91b84c-6a60-49e5-82ed-03146a729bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6c76c9-7dfa-4c32-9ab2-9e78ca4c7396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fd0d02-2063-4940-b6c9-84bac870b033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3870c640-35a8-4061-a7d4-16bcc17efb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5701ac-96fe-4f29-aac9-e31f04074f77",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e5a77d-6ea2-4d7d-b053-ab0b72801ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f6e9c3-6630-4c30-9b5b-0468e6add583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8c33e6-66b9-4984-82d0-e7ccd3bda627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb799ee2-87be-4794-8ca0-4a262e6b1156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e0b1cc-2b77-469d-a2d9-330a7355d690",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bce55e3-64f1-43c6-a0a8-ec93649df05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c277b26-6a3b-43b0-9ebe-eb33c4affa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64cfe7b-aee4-4c73-9b40-8787fb40c5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3f117e-3077-4623-8487-68a633a66641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b29b12d-55c9-4d8b-855a-848cc709c18d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e0bb81-d96a-4561-b1c9-95b9cb67b158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76bfc22-d28b-4575-b5bb-cf90a0aebe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d0735f-6b50-4afe-ae1c-b2001807b642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e2e780-0534-463c-bba1-fef88b3017b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddfa69d-da75-4462-9ff5-c080dcad0686",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7a0023-dc91-40a1-a244-cc4e23f39c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408ff158-2ec9-4fc7-b225-c5fa32aa6867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a29ab55-c975-44c9-8b6d-faa8cd251907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c47697-26fc-49eb-bb98-d626b38f72b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb3d2c-1dc2-4bf5-97a5-a828b6da5cb0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464b6972-0b07-4958-a381-46b81e48b6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16647d55-f0fc-4a66-9241-c8e601ae8570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef299cd-a0dc-4f87-85e8-a621297a0b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8d7215-6136-4667-8b3b-11ccea55bace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1c033d-6e0c-4c5c-bc04-0791f06e953b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e86b12-136b-4798-b13a-8a71a889a735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1877150f-fad9-4a46-992e-ba98514a82a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0522a866-df69-4ab7-ad23-76b081ca5e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4063f9ef-1e4e-499f-b31d-818c746392b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b8c5ad-e5bd-4224-b06c-3d1725b80e82",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbbb28c-0eea-462f-854c-c903a6006cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53383040-5c46-4390-ba39-8a93b9586ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d80aeb-e83f-43ac-bcb9-eebe7931071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8539fa22-abb3-49fc-94a0-e37252ad2089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6527f5-726c-4dab-a6d5-ecb1a289196e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8b6d99-5d3f-40df-ba86-2feaca5d9fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04030eb-67f7-4f98-8445-ed278033d36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2b6905-01a9-4f8e-bbe0-581821cee75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afcaaf3-706d-4687-b740-aa001a9002a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced6b1b3-ff66-496b-963b-0778e7569cef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb8c8ce-17f6-4b8a-acd5-53bb9b96f5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd6e742-4eb1-413d-9279-938745e732f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998ab1a4-106e-4dc1-b85b-ab356638db5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481abb38-8ffe-4b03-8841-de0cfc526f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddc36de-21b9-45ac-a2d0-e5522b56a788",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac383bfb-b806-4818-a4a5-1a70c86d3604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59b4bc5-0305-4ac9-84e7-abf6c372742b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90124aac-6117-44d6-9871-10d0f09b5b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0d0f9f-370c-4c9f-bbd1-5aba088a7388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b233efc-fdc6-4ee1-892e-42c10f0822cb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634962d8-f0a6-4b16-b378-02007c34c5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfd5264-5f5e-455a-aa9f-5aae4bc52017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efcf0df-a442-44b7-a493-5d52b0a6c9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9d9e6d-2dbb-4c05-a735-2733498f9228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5052d6-a4a4-4381-8f8b-84e07c3b3bbd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d85833e-40d5-422f-8f6a-0b0f69eec916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdb12f0-8821-477c-bd00-f19231ec90bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f80124-b19f-4793-bc07-0750b5c06845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b991c9-4fb5-4906-9c94-8b1a77efbe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8805199a-7eb8-4522-9983-8d11b35787f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5958f4e-a272-4993-a863-d78cba34850f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa408e3-a19c-47f7-a0e7-92c33557f858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d723a83f-1d7f-4276-9e3b-190dbce59c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3c2b51-9afc-48d6-9059-f63f40196088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9411a03e-828b-4ef1-9e0d-1e96b04b3720",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9cc525-8e4c-4a5d-b2c8-c4725802b976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac8a960-0183-4535-8d96-5103f166317b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822b7083-aeac-4b89-a48e-f0a0c833826f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996c96e7-c5dd-4071-925a-6202006ba78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1002ef95-6e76-49df-909e-a3599049ca54",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dcbc16-3ec9-492e-90a2-06a35f8c5f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7401022b-4e4d-44cb-b072-5d5101dff08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ce4950-edcc-45fa-9863-d967f53f6e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535cb698-923f-4a8f-a977-43e2a6f306b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f146c76-a473-45fe-aef1-25928c348012",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdb9bdf-a11f-4ddd-b495-8b32823aa55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e5dea8-a38f-4dc3-9c03-8df713c7c1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72088c9-238d-409e-922e-56e77dd99592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b61d770-6243-4366-a0ec-0dcd5c05f072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f942c78-78d2-4114-9826-19005236a674",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee83d43b-e006-49c0-b603-f984e499cdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb6e967-b77e-4006-b657-e58f18625823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686f5568-9396-4891-96a0-d0598fedf94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa86be08-25e1-45dd-afa4-1259c5c25fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e83e31-5649-4dec-ba9b-1a5c87dc6460",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902ea228-0357-4653-95ef-86b310c8ce5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714619df-7f5b-4e84-a431-78f1f15ebca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72554c7a-61ae-4fc6-bac9-208266aaf827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38670c60-85fb-4727-a483-4d78f181fd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9c5b61-c1f3-4780-ae7f-1ebbc3e3c0de",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2581cbf7-2c4a-4cfa-9792-bc7eff9609dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1742fdd-e542-466a-8f5f-7a863ff38595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587ad855-bb10-4fb8-bf58-85ff3b884c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10220e7-6fb1-4284-ba12-02f8311f5994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265c7da3-4b5d-4630-a8f3-b07b49bd4973",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d12aad-d430-47f4-a88e-4ddc70ac6e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda82ae7-0d58-46ae-90ff-de4f25345582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f540b6-9b0d-4ed2-b61b-918e2cf0360f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5ead21-7fd2-4463-aec2-c2622a45cc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369b387a-819c-46b7-b77f-ec5a5b6c9c04",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705bc616-d37f-4943-8ae9-84989e67eae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb281e24-c656-4e84-898e-596131e09cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e71cae7-650a-4a64-b3b1-2bfca3f28b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5b002b-6665-49af-bd0f-2c1061ad6c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4924e74-525b-49af-9b32-cb4a7a950fa3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc82ebd6-cfa7-41c9-849c-ececcd13a8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00f366d-2b02-494d-bf16-d2206651bfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8995bc31-3aa2-48cc-9a6a-ece207432345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48202eb4-f4e3-4790-857e-b2816d515ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9b9d1d-973c-4601-82fa-8b083ce715f1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35aab905-f094-41af-a5c4-599fd677b1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87585768-7c5f-4eb8-b49f-40e4d5f8c92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ed9e3-9e61-42d2-955c-4d412a3b4160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c99d31-c8ed-444e-8e41-67adc7544884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4114db3-b7c6-4f61-8d27-7b1f28f4ad56",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e900808d-9718-4afb-af68-634dd1150aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141766e7-3a12-4551-87e4-39cd2d2ab286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52e864f-d238-49af-8b6a-5a1354d6ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5810debc-fc85-4806-8202-b16693eb477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854261cc-0bc8-45ec-baeb-1ed754e10003",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9fa605-a4c2-4d5d-99bf-3265b2c07855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0a6399-eac3-4a67-8fe9-9f17adb17721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118f6bb7-70c5-4eaf-9d4b-398d2a2c2145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215509aa-13ed-4b8b-a14e-46a83710c864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec5032-9b00-40fb-a68b-a55881977f5d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546184d9-e0d1-421c-a439-d73eff8ced10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa55575-6169-409b-8e77-f994e59e7516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e056615b-1e35-4451-98b1-411a3f4b20f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d6eeb1-d46d-48dd-bc5e-5f13aa927854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4ef8b1-9a2b-4ae5-bca6-3c2c3145e5f8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2c7fa3-e3f9-48df-bd07-d7060ef1477b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d49b50-5641-4f74-a111-541e0e2b298c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21339ee0-de30-4de7-9c44-6316fa38e360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7354097c-0f79-47e9-afd9-9694295f776e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b375c698-5bca-481d-9967-b7e35fa7f046",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f89f9e-1fd9-48ac-b261-2f902216799b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4510c201-487f-4c6b-9c5a-e6801fac4ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd634b6-a905-42fb-a225-7c3c2bfead41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7da582d-d739-49eb-bb29-1956895a9a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed546ffa-c56d-43cf-903e-1b39e244dfbb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748de897-ad33-43d2-a80d-02494cc14692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379a28f5-c16f-46b8-9979-80fe56ca69ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80122127-27b4-48ba-ba6d-278907241b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9eae84-710b-417c-a565-72348a1a8fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7460b015-6fb3-46bb-b77c-122dd4531b9a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e6c6dc-ef0d-416e-8953-a9faec5f3730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8dbc0d-bd57-425a-a7bd-993c4aa43c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805943da-59ef-4306-8af3-c67568eae476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394606ff-63e5-4f2b-b843-5138cde55e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4892a4a8-38a2-4c29-9a3f-65a86906d48a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305257ce-c428-40bd-b83c-7707e8b91b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e934e0aa-f8d7-416f-b341-a07370a8d08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd78e03-8ddb-4b59-816a-99ddf217ae15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79aae711-79a5-40e4-be3d-8e31a2da8a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb25eb10-d808-41c4-8f74-4a0d04fe3df4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a0ba18-9a03-4d25-85e8-102ef88180d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698dd6c9-6776-4f00-b57f-b01f0d6942aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fdedaf-fefb-49b5-9212-030eba0bc58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a4dce1-e4dc-4017-99cb-705dc5c26f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df5b313-f989-4888-a918-6bca2bb99763",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc1f511-7666-4596-a0bd-a6e9dce0caaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d69867-c70c-4c9f-acc5-32fc8afc21fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f6d026-34b5-42cb-8491-7775436fe6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef05f95-fee0-44fc-85d7-2e6d432bb3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ad8c5d-e861-4735-9e0c-8c95ea5c4702",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426aa1bf-6c47-4d7c-b06e-9c7f7dedd7bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa8332f-6e85-4512-8c71-1cd655c8b8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d9a795-4e41-4788-93c6-37c153a62e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec132d8-210a-4985-99b7-c64731ee6692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc0b5a3-f9da-4c18-bb71-cb8f915bbccb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e53a7b-a732-4569-8f1e-ca6a728008c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3a870e-1723-4bd4-9101-58a32b83b9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fa51f7-3be9-442a-b3c3-4160b54fafb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9914c38-e460-4065-85f1-be1521a9c7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1de1d0-1799-40a1-b08d-6311149b8158",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2f838d-f963-4b5b-9587-25cdabd58502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb28463-5209-4b79-8937-3bdbdc80734e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcc4c74-12e3-4074-a244-d6e00dffdf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d379eb9-f744-43d6-8192-62bbf44fad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baa619f-bbb5-477e-81c1-bc2ec8e6ffd7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81009586-329d-47ed-91b0-445c7a2f4bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8040903d-c89b-4c57-aad8-35b999fc5941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23c5de2-6225-4366-a98c-083ed233dca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1618e55f-b000-4240-91d7-cd1c77da630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755bc986-51fe-4982-b283-3c3030528ea4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3079389b-b49c-4db6-be7b-2dcc7450a28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa907442-3d8c-47bd-a22d-ddcee17c8cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75219557-21df-46a2-a406-4ebdfb2f723c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b7742c-dfc7-4a4a-acfd-82d887df1056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7efa672-efca-4d28-aeac-0803aa7560b5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c43f9d-6c1e-48ab-afb3-fbc44978ad44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb001c22-2400-4e96-a64d-b41500803f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891fef5e-e8db-43c6-a411-180ad9ff18f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9958f6-3c59-4174-9a88-97c966030489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9170134-4ea6-4ab9-94f6-79109f3af4fc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abf6773-87fc-4a41-bbd8-2710c15ba2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a41f79d-43c3-41f0-876d-02b70319bb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff8c964-ba91-4e05-84b1-1d5bc566d9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58e1ef1-8ac0-4f18-9e5c-0bd71b2909ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a73a574-3719-4660-83b2-ce84b27d62f1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80dbd38-8efa-4d74-a801-7f45e4e9b3b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66691aac-ccd4-40cd-84d9-4ac5fc4c26f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de4d134-fac1-4c15-837d-e75150bd6b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325f866b-5fa8-40b7-82d5-289db1281cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bba61b-b0d7-4724-9cbb-fd4771f1841d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f29926d-2a86-40ba-8076-0c27df8b26f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c745102-59cf-438b-85c3-6c8cb94531e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2978a402-e320-406a-8352-dd78f48768f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0593a23a-5ece-48b0-b41f-a8871b701793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd9211b-c34b-46a4-b00f-58567857457a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854f97b6-147d-4f33-a7a8-9d80ba6b5967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35949d4c-3b30-4b97-ace6-83fc85fd1749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bc7049-fa90-433e-9da8-cba314d6159a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f415efd5-4e33-4690-bb6c-1b5dc0e4c7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cab366-604d-4afa-8592-92c970c322d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d7f080-0842-4210-ae17-49913aeaa8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3821e406-183f-40a3-a668-29f5dd772a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7689c5d-040c-41f3-b674-71100f4cf09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96559fd1-c072-477f-b75b-cf61aad2c4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca54ace-c1c3-45e5-907a-31fbc2418fa9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c66c601-748f-4c7b-ad91-365fcdd15028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fefc5697-3c2d-4e11-aa8b-4e386ea92b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7405131-671a-456a-b2b9-41ce5f436827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb29126-3784-4c37-a7e4-684a98f7539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63217957-48db-422e-84ff-95583780c040",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d11a84c-3fe9-47c1-aefa-5070d3495d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53187b74-74f7-43a5-b14b-00cc9bd0a3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d113ba5-4319-4dd3-9dd5-b59997531343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8099967c-dd51-4bb3-9170-9991f769106b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a2f6ef-ce17-499a-9c3f-ec2aba385c10",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c6c112-5c16-4581-b652-ee7425fca3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194a136f-c175-4bcf-8db2-000c02aece06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a946a4b2-8b1a-4255-818b-60dc38971b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d808f003-015b-488d-b9ec-08aa2e0123f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad35f88-20dc-46b8-ba95-89fab3c0515b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56c4db4-76bc-4d30-b9aa-a6d9f577bf56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ccd5ac-6ec3-48e2-827d-dace508cbaf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65c16c0-fa61-4284-8a2a-992f973cd8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be5cc76-92b5-455e-90a0-312a03db9362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8aa310-a573-4675-ac47-74c4f34157a0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e46cbc4-5830-4140-ac37-3aef161acec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7283216-12a1-419d-8d68-2ba713c861a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af59208e-6977-4a60-8547-7693e644c9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea2e38a-df79-42a0-a37e-0253ac5ee360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b08d74d-ddf1-4f52-b475-68fa910e94bb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddbd0b2-68a3-47e1-ba4b-0cf3c0525ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d77adc5-f324-49df-9374-da1541224f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01416b15-21b7-421b-a29e-a66c2c94d909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b3d32b-5858-4514-8992-38b332b24e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c6c816-1fb9-4588-a531-296617e1edaf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd27a04d-5af5-4cd1-9cba-8b2ff0b76fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f26163b-de7e-4369-a913-268759620883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec59438-0a45-47ba-8e61-986376706f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2b41ec-f198-455a-ad5a-40a277986504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432df7c1-7e14-4ec2-af40-a8dd0dc6ef78",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bc16dc-d13e-47be-aa0c-2021001dc8ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23903f33-01aa-4c04-b957-5ceedc829e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6beec4-566d-44f9-84aa-0b99d8d71354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914904e6-2b75-4f3c-9048-aa9a29b2d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019066be-1a84-45d4-8a63-1c15b0ff6a67",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb15e559-e3ae-4c6d-8843-460ec27c32e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3950de87-ca66-43ec-b01c-0069a3f09d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb01945-7a76-4d12-a6dd-739c22e7a6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf4343b-6458-46f8-9c1a-49968bd74b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc822b-25ef-4921-b193-220ec1e38757",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47665023-2ad9-4531-b109-8a8d94e37b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c894cdf-1a6b-4891-8de2-0f8971b333fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf113294-790e-419f-bcee-7a4b43b4d255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32018a76-9cfb-41c9-953f-9900bd21b97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900380e9-3a96-4805-a1c4-a28d2fab9d81",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a305de91-0d1b-4be3-8823-9a19c03ac64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0b2b19d-345a-4b25-a7d1-458a910ba717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949de157-30c9-4b0d-ab46-e8431068e7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63f5884-8c4c-4939-ae90-16744333b898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f0af61-2a11-472a-93f8-40a68d0d74ca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8287694d-860b-4294-bc1a-66764c20313a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e9bbb5-ce8c-4f00-8d6d-0d3c0227454f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0474cf0b-e742-4b59-a6b0-8bdac4de9a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ed3bbc-4ea3-48f7-b8b1-312bd962b412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bcaacb-9a9e-45a7-bda9-f7181ad2b804",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43cd7f8-4ada-4e33-a24c-0fac4d9722d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598d6430-91cf-47f0-9ce4-d59cb6300a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ef882a-1381-4124-8ac3-993d546aab2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693d98b7-77d8-4bbb-a8df-9e77fad8d3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76950fa0-e827-43ee-ab2e-d645feeb401a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5108bfc8-950e-4276-abaf-9965a55e325f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72345849-6903-4314-bad0-d667f6536478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bed093-011b-4b4b-b3cb-3ca481f4174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4199e0-3b72-4d9e-8fd5-09f7b890270e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268a69d0-4fa7-4555-bf17-493e87deadc4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb7c1b8-7dc1-4b30-834f-24044962544e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913f997b-575c-43ce-bc91-c4c08bd9399d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a74352e-7cf2-49ec-943b-538c6d630137",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01ef180-55c7-4057-8da0-e36fcc8beefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55063ffd-701b-44df-96b1-7c9c5b29c93b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7537786-bec5-4605-bbdd-7b8d1d4cb295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29fb5659-c231-4880-9135-0ee7b2aec1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de21618-bf34-4b0e-9783-70731bb07778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b4b862-c3a3-4468-ab27-585deeed95f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8010b5-9172-49ab-bdb4-990c9647ce03",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2eeb7d-76ce-434f-b591-eb6c630c41d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b53b4c0-2132-4e8d-989e-6933dfdd1b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cace676-0587-434e-977c-0fa64e4d6326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd39bc3-593a-4662-8e9c-98a1b7060aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19294ee1-ad34-458e-9678-a777723da9d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d589cda-8bc3-4c68-ac74-92e7278d9bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f689db33-31a2-4b51-8298-c32d3cb07887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c197d69-1778-4c62-b4b4-2ccec06c50e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3b7bd8-d54f-43a3-b641-c2766eaec2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8629f9c4-fc22-42a0-ae75-426b0c6bab61",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57c485d-017a-4595-9930-bd2d40b88f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957a1f8c-9b88-4953-9a16-ba7cf07fa063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16a6567-593b-4fa5-9e3a-4e8b03031e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afdd60b-edbf-4db8-8e17-6f5c29c9e59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a73e4b9-4c76-4b42-9415-cba1e7d3d10b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ac6a66-7fb7-47ae-b107-15e14bd6c395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d795c30a-b2e9-477b-b808-3b0ae372673e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9544a42-d66f-4855-a21c-e7a3e512d07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672500e3-6647-4f19-b2f0-4efef47f4c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb846b8-df74-45e2-96b8-4140649c03c9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb78bd8-add1-485f-899e-ef78f71973e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e625da-bc12-4a60-ba2b-b1eb3df762b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb88a69-3ebe-44a0-95a5-534bd2024bd8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d65028e-6550-47f9-b6c6-e65226149a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73593557-ed28-422b-b174-7bd6de7825f1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eeb630-f92c-4463-8ab6-75d6082a7fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cdcf18-244f-40cd-ae92-7c1fd5c07578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16543637-80e6-4110-9686-a160518a820e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e2b64b-bedb-438b-bdce-96ff5aa101b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18e31cdc-3dee-48f0-ba88-de4a788bc1cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f853c219-b332-451c-a1a6-1c062e3f8e28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d3af4e5-21e1-449f-9e96-489d417638f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "990861b8-3456-49c4-888c-43a803aec7bb"
                    }
                  }
                ]
              },
              {
                "id": "091849c8-97c9-496b-8c9b-5c58ecb9bbb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6de03488-c979-4c8d-8ce7-ca5589a1c13d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7a1c9a-23d7-437d-8921-5bbd381fb633",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ffecc715-7a5f-4dab-8e46-2ba65d65a9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86317ee2-edac-4e35-be14-c92f4dc93d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd0ca6c-97b5-40bd-a431-6a9ad4eeaeb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16598faa-1d12-4812-b85d-e1fb8f382eb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d622c870-0035-4263-8ccf-0bb864b1a833"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "756a9eef-e1c4-4708-90d0-753b02f62fac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5d8df64-ab21-42f5-8581-81c746c21b21"
                    }
                  }
                ]
              },
              {
                "id": "fc93cdc3-07cb-4e3a-8723-b7b207c70068",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2f74dd27-0cd5-4e55-9ead-0053329c3ad4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3bddb8-f942-4333-882b-47c38cd89afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "df91a089-2845-4184-81cc-5aa81b8e7a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e4ba9f-8f60-4f2f-b959-5b9cda9eb0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bbafec-61f8-4427-94ab-b83daff2ffbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "480d95f7-1ac6-497c-a048-1ea548cd5558",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8913489d-64ac-4072-8cb3-1d8033405d8b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18f6cc25-0ee1-40ea-af7c-40323aa0be18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d42a274-57fe-42a6-a591-50f65c4936e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26363b8d-025e-4f16-a7d3-84a172df6ef0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6a9048d-3e61-4c0c-add7-2a16ccaa3bea"
                    }
                  }
                ]
              },
              {
                "id": "b0a01d53-0714-452f-998f-f71598addb65",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81ef34ab-953e-415e-94ac-2606d3a08c08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "363a185f-60e4-42dd-961a-8ecc0a0b01fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab7972d0-d152-410a-b8f9-9eae70a5234f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835a936e-6b42-45ba-89ff-a0c769d86e89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3c982e4-bee0-4947-92aa-b115f1082814",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3bf13095-0ca3-4821-add5-f33fde07af0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55b6b772-560a-4cd4-8a79-9879a29f2953",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfedcda3-f331-4a86-99d4-98191ac57ce2"
            }
          }
        ]
      },
      {
        "id": "a4e04605-bd5f-4f47-96ff-51d859bfde7c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b96d1a71-ef18-48f5-91b1-4a326477f957",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8f8f458-193c-4711-a314-67674941aecd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25544dfa-307c-4c95-8733-27fb0b979943",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88006451-49ed-4035-8d57-ebaed26a8d42",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dcaadee5-1183-4c6c-a055-6731ac80d0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0c554f-9ece-4231-8165-8703f6553c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd1e64b7-95fd-4baa-b2b5-1ea00107c570"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45eb8866-a603-4513-8ea4-ba862810a8c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9be2e6ba-f902-4314-87b8-19e02a15969c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c882240-98fd-41ba-b7dc-7d36c2a2b869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d582b45b-fc6a-4ea4-b7e4-7d756cdee3c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d0cab3d-1270-49ca-ade5-40fc7b5b3cbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b8901cbd-3755-467f-b1c8-84a4583b7826"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b65ef62-9a94-47a0-889a-0d7f1f9250a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08186d4f-c206-4343-a7de-62dabaab982d"
            }
          }
        ]
      },
      {
        "id": "ed198fb5-3c6b-49e3-9ca1-8d9afd82ede2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "38bf9c13-29bc-4428-979d-8d9deeb5f3f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8761fac-887b-4ed1-8299-aa3574c6a6be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb5470b4-4452-4f43-87c7-416d1e9770d3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc8291e-c6d4-4b57-b343-36f29c3fb36a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90360493-7e37-4be5-9567-bee7b8136c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6843f12-75bc-4871-bbe3-eb7b47fbd4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aeef59e-683a-4671-aa58-4057a486da14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb659cfb-ae47-49ef-b73d-b9f975b20710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e55aa1f-46a0-4e98-8bda-c603b5766908"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42950f6a-9204-45b0-845b-33a16c66954c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f6dcb7-7205-4fa2-8293-66ef81f95cb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b52696f-bf77-4450-b24b-237726375294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9eb289a-c6a2-4865-b79f-ad0e9fa735c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79bda5a8-3875-4f86-8edd-1c12e8adcd1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e576abb-9968-4e95-bcad-9957b9b339ff"
            }
          }
        ]
      },
      {
        "id": "a5252e54-9267-4355-a79a-971266a2d052",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9505234c-aa28-446a-bf7b-a266652a75e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ed77bc8-c660-43c7-9435-20d3df45617b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "844217f6-e8fd-41dc-abc0-3d4cc71b4d09",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a7002b-bab9-498a-8d85-fa6dac00d60c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6214b4ef-ccab-48f8-b395-960f11a39450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c5586f-32c8-4ff2-84ae-3a9a18bf50a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c931e36-a558-42e3-bd96-649b573bd49f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc1544b-4678-4445-a0ab-b121356f32ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2024ef1-7935-430b-9135-a64de27a582f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b5bb7b-27a1-4377-a3fa-545e72ad6143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3855c18-59d5-462d-a550-0b8270f4cf13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59810145-56e0-45de-8063-08d2480f289d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4ffd813b-191d-4e55-87e4-ddc51931a607"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f674270-1b48-4761-9bd5-bab750b9effc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be5a9479-2779-4e73-b035-32012a9765fc"
            }
          }
        ]
      },
      {
        "id": "da2c4067-939f-4db1-b244-0299a42b3df9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c46cac9-cbd4-4c73-8ca8-82010856c712",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8be11e9b-cbfe-478b-ae16-06e62415e25f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb54ea83-49c8-416e-ad36-e3d739a3c556",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57a596a5-d0ed-4b28-8e8d-72626ee4d792",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7365de3d-b1f1-4c1d-a8a6-51de66868981",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 404.62676056338034,
      "responseMin": 7,
      "responseMax": 12519,
      "responseSd": 1423.372990663893,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697416471966,
      "completed": 1697416599362
    },
    "executions": [
      {
        "id": "584919ee-d17a-472b-afa4-928732c201aa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2d3010c-b23e-4ca8-a488-dc1224b9769c",
          "httpRequestId": "c3a666db-5d6b-4e2f-9525-9d03fce6e911"
        },
        "item": {
          "id": "584919ee-d17a-472b-afa4-928732c201aa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "efb0d605-f252-4a94-8925-473b299aa0a8",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "4bba36d9-8209-4874-9f7f-b14fdfc38ae6",
        "cursor": {
          "ref": "321e3c42-b92e-4766-b260-4f70589509b3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "728e85ef-7ad8-4ab3-ba2e-3d2db1c51745"
        },
        "item": {
          "id": "4bba36d9-8209-4874-9f7f-b14fdfc38ae6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ef32f2e7-02e1-49b3-a0ce-087aabd4ad32",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "823ffe11-773c-475f-bcac-b7f397247cd7",
        "cursor": {
          "ref": "39521a55-e053-4311-9d6f-40b297a4c6a9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5135bdfe-b7ae-46f8-bd7f-bf27a37580e4"
        },
        "item": {
          "id": "823ffe11-773c-475f-bcac-b7f397247cd7",
          "name": "did_json"
        },
        "response": {
          "id": "f9a7c7f4-9848-44a0-804d-461f9b94ff3f",
          "status": "OK",
          "code": 200,
          "responseTime": 1714,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc7233c-77e3-41ab-97c9-d5fdbdd7f0eb",
        "cursor": {
          "ref": "de206b24-106b-4442-a81b-7d836dc6fca7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ba39839-426c-4ad6-ae6d-8282959ec3c6"
        },
        "item": {
          "id": "5cc7233c-77e3-41ab-97c9-d5fdbdd7f0eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "acd84dd2-a303-414c-b602-0a4270b961d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc7233c-77e3-41ab-97c9-d5fdbdd7f0eb",
        "cursor": {
          "ref": "de206b24-106b-4442-a81b-7d836dc6fca7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ba39839-426c-4ad6-ae6d-8282959ec3c6"
        },
        "item": {
          "id": "5cc7233c-77e3-41ab-97c9-d5fdbdd7f0eb",
          "name": "did:invalid"
        },
        "response": {
          "id": "acd84dd2-a303-414c-b602-0a4270b961d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfc5e0a-d1c9-49ba-80f5-158ecf63f38c",
        "cursor": {
          "ref": "739e968c-5bf6-4f5d-ac02-21d3b533761a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "99fbaa97-3c41-4d7e-80ff-0231022daedd"
        },
        "item": {
          "id": "bcfc5e0a-d1c9-49ba-80f5-158ecf63f38c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3b01824b-6bdc-451b-9618-7e3732f2faa0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 391,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a721c-8c78-430e-8c76-30a7e8b9f123",
        "cursor": {
          "ref": "68198730-616e-4df4-866c-b8482a82f1fa",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff7928bc-3192-47dc-8aac-3597362199a3"
        },
        "item": {
          "id": "cd9a721c-8c78-430e-8c76-30a7e8b9f123",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "947e5de3-f38d-4397-8c8c-896a3840d8d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 264,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a8c963-0685-455a-a085-3c8cee2c242d",
        "cursor": {
          "ref": "84e16bcd-84c6-4947-9bdf-2721675689c3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "91d706b4-8097-4873-9e54-b810c2c7b59e"
        },
        "item": {
          "id": "18a8c963-0685-455a-a085-3c8cee2c242d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "41e143b9-b076-4369-850f-edadb5fa181e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75ff93d-bd13-4f14-aa44-130c1b0a89e1",
        "cursor": {
          "ref": "71f44536-848b-4597-a9d5-debd0b254c47",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37091af9-abbf-4718-8dda-4fab96049b28"
        },
        "item": {
          "id": "d75ff93d-bd13-4f14-aa44-130c1b0a89e1",
          "name": "identifiers"
        },
        "response": {
          "id": "8e0794cc-2e9d-4af0-b4c5-51c51fe8fc64",
          "status": "OK",
          "code": 200,
          "responseTime": 1604,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b8e383-4570-4e97-985a-b288efeb4820",
        "cursor": {
          "ref": "8bbb046b-9b42-4e6d-878a-6a475316adc4",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ef9f290-71d8-4789-ade1-c779e58d9d6e"
        },
        "item": {
          "id": "21b8e383-4570-4e97-985a-b288efeb4820",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0cc040a1-e95c-4734-a15e-2795804bdf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef96e877-4367-4fc0-bf68-0d52a3405975",
        "cursor": {
          "ref": "bf5216ec-5cfb-49a2-ad89-8a4d3e26c3b0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85ca4cc5-fc8c-4864-9efc-e7e98e83f1f5"
        },
        "item": {
          "id": "ef96e877-4367-4fc0-bf68-0d52a3405975",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "06f1096d-3f8d-40a7-aacc-20989c05d685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5315162-55bc-4999-9daa-5734a6522aaf",
        "cursor": {
          "ref": "3a98fced-ed68-41aa-a449-6b6aafe47db0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "228564aa-bceb-41ca-b374-716913b2079f"
        },
        "item": {
          "id": "a5315162-55bc-4999-9daa-5734a6522aaf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "47138e2e-d48d-41f7-9ba2-9c965710941b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2ec2d3-348c-4eb1-982e-5d025d82276a",
        "cursor": {
          "ref": "4f9278c6-731e-4d8e-9b12-7bb4e423302e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fe0aa113-ce47-4b99-9a2c-02dba96c24bc"
        },
        "item": {
          "id": "fd2ec2d3-348c-4eb1-982e-5d025d82276a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7213456f-b95f-41f1-a27f-7630abd84497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8a1ad2-c014-48b6-a8bb-3984d556cc51",
        "cursor": {
          "ref": "f246fc76-7477-43ba-b3fb-c8d999b7b063",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ec8ead71-cbc0-4bf8-892c-fe0345578fab"
        },
        "item": {
          "id": "3d8a1ad2-c014-48b6-a8bb-3984d556cc51",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f0727ee-4892-439c-bdc4-40d202ab6d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac6eda4-e12f-424d-aa4e-ba4ad2023f0f",
        "cursor": {
          "ref": "9a731bb4-5c4f-49b6-8265-ab7132c8f4e6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6afaa4ba-1a5f-4a53-9afb-7ac6e34248ba"
        },
        "item": {
          "id": "dac6eda4-e12f-424d-aa4e-ba4ad2023f0f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8860b586-24b7-434b-b96f-46d1c809dd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33bfc9-781c-4a5c-8e51-d6126b825777",
        "cursor": {
          "ref": "79c62df7-2866-4363-a64c-3528197a5d8c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d09b9ab6-4750-4631-bd01-ed47dc6a164f"
        },
        "item": {
          "id": "bd33bfc9-781c-4a5c-8e51-d6126b825777",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bf503c38-d4cc-4efc-b5b5-b1e72d1fa941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1938c99-2f24-42eb-a7dc-2691465d20ed",
        "cursor": {
          "ref": "75d496be-40db-4ae0-bae3-279ba80c60b7",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3ad57a0-d599-46f0-9d15-a7a41f0aae5f"
        },
        "item": {
          "id": "e1938c99-2f24-42eb-a7dc-2691465d20ed",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "21d9d17a-2f5c-45cb-b742-5061f5c56c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ed6d1-4f45-475e-897b-0d4f6fc57108",
        "cursor": {
          "ref": "3ce0ec4a-83b6-4503-9ae5-8da8be9741a2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "85980414-03da-44af-953e-456831801cb7"
        },
        "item": {
          "id": "146ed6d1-4f45-475e-897b-0d4f6fc57108",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "744469f0-0c04-4f00-ab05-286db48699c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf2028a-7a67-4caa-bbaf-1b105a8e7b55",
        "cursor": {
          "ref": "340980a0-b0aa-43e7-b776-fd83a9533e4e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1a1633ac-5d04-455f-9e2f-2de58748e0f8"
        },
        "item": {
          "id": "adf2028a-7a67-4caa-bbaf-1b105a8e7b55",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d908ba25-ea10-43c3-9223-d0d881424dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3cb5b9-e35e-4d08-8ad0-8106d888699b",
        "cursor": {
          "ref": "3497a41d-8e70-4d70-bd99-28139925d236",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8510b8b0-02fd-491e-aaf1-5a302cec95a5"
        },
        "item": {
          "id": "5e3cb5b9-e35e-4d08-8ad0-8106d888699b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1ef1ad13-7087-486a-ae7a-f5ad92742d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea18577-c381-42d5-9802-8015236d95b5",
        "cursor": {
          "ref": "d55d17a5-2337-4dc6-8d7d-ca186e1f4fff",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c57464b6-26dd-46aa-9384-c13f81d13c89"
        },
        "item": {
          "id": "3ea18577-c381-42d5-9802-8015236d95b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7673445e-1081-4790-b336-c0e7d0d3f09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7fa587-f859-431c-ae84-1f3a8584322a",
        "cursor": {
          "ref": "f773bf99-23d0-4b4d-ae7e-611238782352",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5eccc60f-6099-47ba-bad2-20af07e37d00"
        },
        "item": {
          "id": "ac7fa587-f859-431c-ae84-1f3a8584322a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cceacdc9-ce51-4fa3-9db1-307c1b558985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e71d3f-d1b1-41dc-9061-7feb9515cdf8",
        "cursor": {
          "ref": "0ef0f036-5d5a-442f-9d57-4614abf9b46f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0fe77c52-3afa-4f27-bc1c-fe4bc22ded3a"
        },
        "item": {
          "id": "e0e71d3f-d1b1-41dc-9061-7feb9515cdf8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1fa72d6a-eb78-4d0b-88c4-ae863859dadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73e848a-2b79-48c4-b904-79d2de7be351",
        "cursor": {
          "ref": "f1e571b8-81bb-4e24-afa4-099da5ea6d71",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "09462a0f-f1d0-43f9-8eac-0707e5a4e3cc"
        },
        "item": {
          "id": "d73e848a-2b79-48c4-b904-79d2de7be351",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f7d835ab-88c3-41d8-b8ea-d02e51060b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e209c-e9f1-4c3f-b176-a193fec24c07",
        "cursor": {
          "ref": "d9264472-dab7-4a1e-9f16-e6ace15ddc7b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9175792b-6799-4218-9400-0fb235983863"
        },
        "item": {
          "id": "0e1e209c-e9f1-4c3f-b176-a193fec24c07",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e91667d3-42bf-4f58-94a1-7566208b7099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367b9539-bc3f-49f0-a072-f9730fd5d965",
        "cursor": {
          "ref": "4233293c-0d49-48a8-ab26-c614f96e5b27",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7cd04c1b-7949-4d1b-b062-07488927b3dd"
        },
        "item": {
          "id": "367b9539-bc3f-49f0-a072-f9730fd5d965",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "339f3eb0-364c-4e95-93f1-d6e254c97f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9d2026-f5b5-4597-a807-39da1813dcb6",
        "cursor": {
          "ref": "636ab3f7-cff6-484f-98a3-dd98d23f89f2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "618f18e1-6ad8-47a5-baa3-f1718bc61872"
        },
        "item": {
          "id": "dd9d2026-f5b5-4597-a807-39da1813dcb6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "31596715-98a4-44d7-aa42-f786d0d0d883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495f9a28-54e7-4a79-805d-f7c31af411dd",
        "cursor": {
          "ref": "e18f7bee-36a9-4fac-8b5d-0f9cad3d7226",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a546eb3b-dd24-4d13-aa2c-4f9fe4dda451"
        },
        "item": {
          "id": "495f9a28-54e7-4a79-805d-f7c31af411dd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "503847ab-7dc2-4aad-a912-80020f98925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7797a9ed-6241-4593-95eb-3dba28185726",
        "cursor": {
          "ref": "7ae3af09-5539-4957-8052-3624139b62ff",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea7d10b2-f9ae-4822-93a1-3a5355c5be7f"
        },
        "item": {
          "id": "7797a9ed-6241-4593-95eb-3dba28185726",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6fa5ef66-85a7-43cf-bb79-c193e61aa8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1753d5b2-136b-488e-8461-f3919a544eef",
        "cursor": {
          "ref": "e6be92fe-946e-4d63-b065-9add4e79071f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d08e87d4-e7e4-4a31-bb22-662924e0e242"
        },
        "item": {
          "id": "1753d5b2-136b-488e-8461-f3919a544eef",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "40a295fc-5e20-474b-8a46-6cd669cdaf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67425e8-a83e-4f56-827a-a5925a70bc69",
        "cursor": {
          "ref": "cfb83e1f-46f9-42f0-8455-6201f6f1b996",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "85288bed-e17c-45f9-aa93-e4d60f92405c"
        },
        "item": {
          "id": "a67425e8-a83e-4f56-827a-a5925a70bc69",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "344addec-afc3-4a8b-af4a-f38653685b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9d2223-c9a4-4bbe-9738-ef5e3ebf6114",
        "cursor": {
          "ref": "b9c1a48a-e50d-4703-aff6-fc8dde38b83a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "07adfb03-e384-42d1-a308-2489487819a2"
        },
        "item": {
          "id": "5f9d2223-c9a4-4bbe-9738-ef5e3ebf6114",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d2a5f766-352f-4bd7-b67e-ef6afc22df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422bdac-d9d4-40b0-a5f0-e238886ffaa8",
        "cursor": {
          "ref": "2f88ebd3-6186-4d0d-8729-62e8858dac3d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "eb95f92d-1e9d-4e5a-9dbe-5b97fb4ff9c3"
        },
        "item": {
          "id": "9422bdac-d9d4-40b0-a5f0-e238886ffaa8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fca157f6-388b-4ca4-855f-21fa2fe5bf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bb28d3-3e5e-428c-8065-1295d9262c27",
        "cursor": {
          "ref": "f33ab1a2-1946-4bd2-81b1-f81095cdaf8c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "16520071-67a4-4c8b-bf2f-190377285959"
        },
        "item": {
          "id": "13bb28d3-3e5e-428c-8065-1295d9262c27",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cfc2b85c-c8b1-42f5-a03d-9766c41d526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1ae30-f481-423c-8c70-f188620cac7a",
        "cursor": {
          "ref": "e2c915b1-36a2-4b73-9cb7-383ec932b901",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "71fb1207-ba78-4ffc-9f3a-79426542bec4"
        },
        "item": {
          "id": "9fc1ae30-f481-423c-8c70-f188620cac7a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "01ba56da-f8c1-4c35-beb0-16d311d19763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d015df-fc18-476b-bc4f-9b11020fbe85",
        "cursor": {
          "ref": "11c3a08f-5807-4543-9c55-6b2a539a8545",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "caa19295-8add-4201-8dbf-4691045cb178"
        },
        "item": {
          "id": "96d015df-fc18-476b-bc4f-9b11020fbe85",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "809546f8-f65b-481c-8c22-46e3a48f0915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fe276d-925b-4aff-9432-2ce43baa793b",
        "cursor": {
          "ref": "b90e00e3-bfd3-4f4d-8eeb-c2037bfb7a2f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "924656d9-ffe7-4b61-b477-da10ff4ca630"
        },
        "item": {
          "id": "d6fe276d-925b-4aff-9432-2ce43baa793b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "11f3c297-8741-4cc3-8dd2-9f6b1d3660be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304ec93d-9fed-42b6-8602-b4844cccc689",
        "cursor": {
          "ref": "0c0848be-4871-413c-a835-6d26e27b7d6c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4ecb5680-f005-440b-bbc7-a3ecaa79cc95"
        },
        "item": {
          "id": "304ec93d-9fed-42b6-8602-b4844cccc689",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c7c00253-6452-461c-b4f8-2776c863cdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85132f79-0fae-48b9-b5c4-04db6ecfeaf7",
        "cursor": {
          "ref": "e78be521-a668-4e6a-8ba3-3d408955150e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "621f13a0-aeaf-4087-8c19-3b96936ec795"
        },
        "item": {
          "id": "85132f79-0fae-48b9-b5c4-04db6ecfeaf7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "87ce0d10-8470-4a2a-955a-15d9263e3e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05baf7-94a8-446d-bf89-7ad53f65be14",
        "cursor": {
          "ref": "4f06ad97-319f-495b-b40b-1e2dfb26aef6",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "63dad7bb-1724-460b-9cde-c488ef3f4618"
        },
        "item": {
          "id": "6f05baf7-94a8-446d-bf89-7ad53f65be14",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7d796eeb-daa8-49d7-90da-786fa8faf5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e4d7bb-6e39-4bf4-91c2-ca58e5558984",
        "cursor": {
          "ref": "47c1a073-5143-476c-8517-7108096dd36b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d328e41a-fcc5-4058-9504-6d94ad898db3"
        },
        "item": {
          "id": "22e4d7bb-6e39-4bf4-91c2-ca58e5558984",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "17d14658-9001-4dca-ac26-fe6e2549e2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4427ef1-4368-4576-a9e2-26e47fece6c3",
        "cursor": {
          "ref": "edd2cb8c-4a28-4ded-a9e3-faca73a03d22",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b71eac9f-ea35-433a-b036-7580acf96b74"
        },
        "item": {
          "id": "f4427ef1-4368-4576-a9e2-26e47fece6c3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd40184c-fa1b-4ee2-88c4-09201ea84ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c2d409-819e-421d-b7b6-8c5a70bfbad7",
        "cursor": {
          "ref": "6f3d587c-8842-457f-86b3-c555d41ca2a3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fbb6852b-6e60-4767-8b90-522e595263ce"
        },
        "item": {
          "id": "f7c2d409-819e-421d-b7b6-8c5a70bfbad7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5045ead1-9184-4be5-9c37-ce79558e56e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d45457-ff2f-4751-aee3-851a0b435b64",
        "cursor": {
          "ref": "a8c75c6a-891f-4816-9683-b6bd505fd043",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "81e39cb7-26b3-44d2-a98e-634209b0abfe"
        },
        "item": {
          "id": "73d45457-ff2f-4751-aee3-851a0b435b64",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8a6a7033-fe77-4614-82d9-634e1a0a71cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a004818b-4178-4911-b18e-c5574072ad36",
        "cursor": {
          "ref": "9649c71f-9f18-40b2-a9a2-7b0b3534dad0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "43ab322f-667d-4d8e-b164-77c80b80b68a"
        },
        "item": {
          "id": "a004818b-4178-4911-b18e-c5574072ad36",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "14430654-2fed-4030-93f9-8cc1659d9433",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2239,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e7fd48-4256-4467-a0e1-511c2f7c9f49",
        "cursor": {
          "ref": "e0194575-fbf8-4ff6-a173-9f12b878dae9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7d8f3417-76bf-4426-95fd-9f898e2e1ed5"
        },
        "item": {
          "id": "12e7fd48-4256-4467-a0e1-511c2f7c9f49",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a1d74307-d0ea-48b2-922f-c54e21832f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5cc03-c62d-4129-a51b-9a255554ab14",
        "cursor": {
          "ref": "4c6cff6d-c4a9-41fd-8cc0-b0debdcff079",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "78d0badd-c1c7-4d93-8f8e-0bb9fa5fd0d2"
        },
        "item": {
          "id": "47f5cc03-c62d-4129-a51b-9a255554ab14",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bbb1125d-bde0-4298-be81-95b5b6a7d750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67689770-fe7d-4933-a138-d70e356335de",
        "cursor": {
          "ref": "0aab3a79-360b-4948-a5a8-994348903e17",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2c21a6f9-8e00-4ade-b39d-033e0e253dd8"
        },
        "item": {
          "id": "67689770-fe7d-4933-a138-d70e356335de",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d1a2b83f-978c-4aba-a6f7-728f4d0e4ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999470a9-4756-4569-a0d3-8e1cbebf112e",
        "cursor": {
          "ref": "f98a0f51-e7b4-4c74-9a31-e6f2bb8858c8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a7349236-a7ba-45d7-a450-abc3410bfb67"
        },
        "item": {
          "id": "999470a9-4756-4569-a0d3-8e1cbebf112e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e9fd391-6454-448a-8c8f-bd82b5e9831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66469aa7-ef42-4482-80df-2b76be9fe7f6",
        "cursor": {
          "ref": "8fdc93d1-da78-4e26-8d9c-f642849acf00",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9509520f-7729-4040-bb0a-b62bf2fc68f0"
        },
        "item": {
          "id": "66469aa7-ef42-4482-80df-2b76be9fe7f6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7871a945-29b5-4536-a133-2564a34b9bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534c04ba-cc92-4e95-ab4e-89749f31fa94",
        "cursor": {
          "ref": "e80e9b03-d99e-42c7-af53-5d07f15e2240",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "57cf7fc0-efb0-45f9-bf11-c93d71ff5209"
        },
        "item": {
          "id": "534c04ba-cc92-4e95-ab4e-89749f31fa94",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "61fe7715-64e3-4baf-b65d-e7f8e9bd8ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83ce16a-74cd-4426-ad29-65b9787821d3",
        "cursor": {
          "ref": "50325254-4e26-44ac-ab0a-290215cc2599",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "efe1197d-ddfe-42de-be56-57af68c32459"
        },
        "item": {
          "id": "f83ce16a-74cd-4426-ad29-65b9787821d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b86ba3f-722f-43ae-a01c-d9aec86e6c72",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2201,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ce5c40-4e3a-45bd-a617-c41d36c38528",
        "cursor": {
          "ref": "eeff921b-6f14-4c14-908e-78d655aa20be",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "270a8112-a307-41ab-b177-72824683b852"
        },
        "item": {
          "id": "e4ce5c40-4e3a-45bd-a617-c41d36c38528",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d4758855-4910-4394-8829-9c5c7e0b5699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e07ac-c6cf-4cfa-9d23-a74dd62a2fe9",
        "cursor": {
          "ref": "8d3cc385-7483-4d2e-b7d6-cb404a8cff37",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52bcfb17-7c08-4bec-84e3-ea3e32c773bc"
        },
        "item": {
          "id": "ac4e07ac-c6cf-4cfa-9d23-a74dd62a2fe9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "af55f103-061e-40ff-b018-f5466a86b747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0e87f7-72df-4c2c-9b3b-585543ce918a",
        "cursor": {
          "ref": "244661c3-9e09-4ccf-9944-41f6a2be0612",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0deee64a-977f-4325-bd7e-61dd7f64359a"
        },
        "item": {
          "id": "6c0e87f7-72df-4c2c-9b3b-585543ce918a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "62da3626-93df-4fdf-ad4d-ff32b9de653c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61682459-5e3b-4761-b415-44514c598846",
        "cursor": {
          "ref": "633e2b3b-76a4-4390-bb92-b4f7eb47b030",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "543b9d63-7489-49b2-a1a4-b69a806999c1"
        },
        "item": {
          "id": "61682459-5e3b-4761-b415-44514c598846",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "16886f16-0794-42d3-8b08-50f1dfbf5cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc57f446-1bf9-4e47-8b32-148baff7cfd4",
        "cursor": {
          "ref": "7c24b6db-22c4-4f82-9ac0-44800763eca9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c626f806-8f7b-4c7b-8f78-6ab174e790ed"
        },
        "item": {
          "id": "cc57f446-1bf9-4e47-8b32-148baff7cfd4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "31c7be8c-fcec-4931-a097-6b94a2ea3ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e660017-0bc7-481c-8ba5-6f9aff4fb60d",
        "cursor": {
          "ref": "a172f668-f004-40bf-bc2a-38c35f10d4f3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e9cc1944-abc9-4a8e-bff8-ad0859b584ee"
        },
        "item": {
          "id": "0e660017-0bc7-481c-8ba5-6f9aff4fb60d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a0be9da9-92e9-48bd-a500-9c2b1164b97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c93aba-bfda-468a-bdac-716f84134545",
        "cursor": {
          "ref": "ead1e957-fa8b-4bc0-b79d-078d7b826bd4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "52e61dd0-1dc0-4d96-bb27-c1fa64a3ac16"
        },
        "item": {
          "id": "37c93aba-bfda-468a-bdac-716f84134545",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8577b1c3-0eea-4d4c-8362-616006615a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90792af-b350-4359-aec1-6ba8dcd5f517",
        "cursor": {
          "ref": "6f8ee112-948d-4ffd-bb55-4bc40319ccc1",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e1df80a0-a45d-402a-9b3f-6293252bd1d3"
        },
        "item": {
          "id": "e90792af-b350-4359-aec1-6ba8dcd5f517",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3e7a0849-de7c-4a7f-9333-0da70dbe4f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7e191f-0181-442b-a44f-e8551b9c2314",
        "cursor": {
          "ref": "c8f535b6-6445-43e6-a034-9f887a0ae00d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dd5d4b2d-1d5a-4f66-b17f-5124ec3a66e3"
        },
        "item": {
          "id": "fd7e191f-0181-442b-a44f-e8551b9c2314",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d496442-7f8d-4437-8bd3-7c212632213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a8581f-f302-444f-8649-c77558d622ad",
        "cursor": {
          "ref": "2541a088-2df5-4b5f-9f78-3266abc677f9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "da2f8572-f500-427f-bf8c-e464186ef824"
        },
        "item": {
          "id": "26a8581f-f302-444f-8649-c77558d622ad",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3e81cd5c-61b2-4007-b2db-d96338b1890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf37fe68-9ccc-43d2-b142-40fda2162f8a",
        "cursor": {
          "ref": "e900f8e2-3948-430b-9e25-0649d531486f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "42fc263b-c4a5-4a7e-8610-b561ef29432b"
        },
        "item": {
          "id": "bf37fe68-9ccc-43d2-b142-40fda2162f8a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e5aa2853-6f5e-4251-9a02-4507b58a7ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca5b8e-4816-4f44-b96e-573dfb3ce8c3",
        "cursor": {
          "ref": "964c009d-4c26-4f04-9585-616b52a7052f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d1a5cdea-e8f2-4827-87ed-73fcf9363e85"
        },
        "item": {
          "id": "94ca5b8e-4816-4f44-b96e-573dfb3ce8c3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "82e6bed8-7371-4c60-b66c-15a78359f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bd4864-b587-4258-8d97-0c13a8a3959d",
        "cursor": {
          "ref": "a60e04c6-7893-409e-ab21-9e4155ec664c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74a9239e-2358-43cf-bae2-762faa7795dc"
        },
        "item": {
          "id": "a7bd4864-b587-4258-8d97-0c13a8a3959d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7def72da-557f-4ae9-9be0-9e5c71e273e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06689466-925a-4ea8-a31c-358d4a08a29d",
        "cursor": {
          "ref": "d26a498c-f00d-42f9-b61e-0f2b4db4b2ae",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3a2a0fd8-eedf-480c-9b53-c6fce9eadc60"
        },
        "item": {
          "id": "06689466-925a-4ea8-a31c-358d4a08a29d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0da3c573-615b-4c12-9a70-d512c299d2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170bbc72-260f-45f2-9788-f80f53623607",
        "cursor": {
          "ref": "4e9c7c8b-a6af-47b7-bd03-fa74f1d9de8d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "edcb57e7-bc09-4839-a2c6-93f8b6bf5c7c"
        },
        "item": {
          "id": "170bbc72-260f-45f2-9788-f80f53623607",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3d5f0ce7-ef35-4acc-88ad-7744ff8b83e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6b6c16-27f6-4b57-9f08-713b3836974b",
        "cursor": {
          "ref": "59928c2f-4238-45eb-8084-63a81b2277de",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ccb0462-6a5c-4222-b909-3720bd62b608"
        },
        "item": {
          "id": "2c6b6c16-27f6-4b57-9f08-713b3836974b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac49a01c-d927-43be-88a2-4b4c4e6d701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9855c84e-4763-4a3c-bdb8-0a6f68626f2e",
        "cursor": {
          "ref": "41c1b79a-346c-4781-9c27-f92416fa3a6c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "142d72cc-0654-44c4-b801-81003e28621f"
        },
        "item": {
          "id": "9855c84e-4763-4a3c-bdb8-0a6f68626f2e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a74be482-72a7-4704-bc40-410221ad7da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d297b4-efe3-4a0e-8e51-a3b49eb78062",
        "cursor": {
          "ref": "ec371388-1f46-4b2c-aeac-e597b1040ab0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7d0de497-a0e3-4775-8a75-059eb24165ef"
        },
        "item": {
          "id": "19d297b4-efe3-4a0e-8e51-a3b49eb78062",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a03f423-fcd2-4956-9b8b-0629d8a18a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8065d185-4fac-497f-a1eb-c0a79a4a3173",
        "cursor": {
          "ref": "e0b6d7db-db0b-4bfc-ad1c-025818ab7dce",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "60f3eccb-d9c7-473d-bb27-f4cf89891c87"
        },
        "item": {
          "id": "8065d185-4fac-497f-a1eb-c0a79a4a3173",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7582a3b8-1f59-459e-95f9-0d555ad0478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587971bc-e62f-4cdf-974f-ad85a32459a5",
        "cursor": {
          "ref": "d86107a7-7d0d-4992-9b0a-15fb04c81f29",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "58f71c52-6cfa-4399-bad9-5ab57d07da2f"
        },
        "item": {
          "id": "587971bc-e62f-4cdf-974f-ad85a32459a5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a080c6fc-e345-41fa-b3ee-7b7653d9b013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e052bd0-5bb2-4790-89bd-1309218d25b3",
        "cursor": {
          "ref": "ef414f88-4af3-4f65-a7ae-a6a178ac4202",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e99e5ca1-2f4c-475b-acf7-21dc48530d21"
        },
        "item": {
          "id": "2e052bd0-5bb2-4790-89bd-1309218d25b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "40bec6cd-8e9e-445c-b87c-b72062daabbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c76bb9-45ee-405e-ab09-944bf8ed84ce",
        "cursor": {
          "ref": "dba21e1e-6908-4829-a960-8f5e96f7afb8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1147af8a-54b5-4424-947e-e1e8b4bf1256"
        },
        "item": {
          "id": "d5c76bb9-45ee-405e-ab09-944bf8ed84ce",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8a413eda-ca3e-44d8-85fb-6e622dc09b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb22e2a-8fe7-4bd2-b386-e343027bf91b",
        "cursor": {
          "ref": "8593ea6c-7585-4023-898a-6b14b7c309b2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a7783652-2afe-4559-b203-f26e9a61f931"
        },
        "item": {
          "id": "2eb22e2a-8fe7-4bd2-b386-e343027bf91b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8380288a-95fe-417c-b307-ccc00e0afe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b747c3a6-c16e-46dc-8acc-13f62a328b41",
        "cursor": {
          "ref": "5997e35a-74ec-40fd-a35f-a27aae063062",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b70296d3-e617-409d-8393-2004381a4aa4"
        },
        "item": {
          "id": "b747c3a6-c16e-46dc-8acc-13f62a328b41",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1020633b-1809-4367-821c-70a1e589402c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2a50af-7501-427f-abc8-05b8e34b696e",
        "cursor": {
          "ref": "593a3f16-ea43-4ce5-a369-3c2d27c6efdd",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "959b5632-09d0-448c-b348-6cd2c78eb08b"
        },
        "item": {
          "id": "ef2a50af-7501-427f-abc8-05b8e34b696e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0ed52bd1-da50-4568-80d7-961fe91b6b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a1845-607a-4372-842d-0ccb513ab515",
        "cursor": {
          "ref": "daf1ed38-488d-4b2c-a2f5-3012c530eade",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ae7e8388-3183-4fee-9f47-51706131e5b0"
        },
        "item": {
          "id": "a38a1845-607a-4372-842d-0ccb513ab515",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6f419fdc-9037-464a-9474-067306fea923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbc1ec3-fcd1-4769-89e2-3f9766df68f1",
        "cursor": {
          "ref": "b05eea80-cfdd-4260-af2b-3b08f84ebe97",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "82a6d5dc-836a-4f98-8f6d-83bc6579abd4"
        },
        "item": {
          "id": "edbc1ec3-fcd1-4769-89e2-3f9766df68f1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e1789023-a56d-4460-b1c4-0029304dc2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14d5533-52f4-4227-b338-3a4ff6eca1cb",
        "cursor": {
          "ref": "2628b7e9-0adb-47e4-95c8-381560929cd8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e366233a-a6c0-48b5-a6fd-2841ecfdffe0"
        },
        "item": {
          "id": "c14d5533-52f4-4227-b338-3a4ff6eca1cb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "65e4a2c5-1efe-41b7-8e1e-c585c3c792f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6343a8bd-566a-469a-a251-713b0132b59c",
        "cursor": {
          "ref": "bd4c1cb3-092e-4d45-99a3-dc893457c68e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5893b8c1-6b94-4389-9c2e-b70e19da69fa"
        },
        "item": {
          "id": "6343a8bd-566a-469a-a251-713b0132b59c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9b1beca-0227-475b-b72f-a720eb0bce38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcf5cc9-1dae-481e-85c9-98ce4c9cc84d",
        "cursor": {
          "ref": "db03f449-b904-4994-bdd1-250d2e4077e5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b4706371-2e36-45bd-b88d-9eb5067fac13"
        },
        "item": {
          "id": "edcf5cc9-1dae-481e-85c9-98ce4c9cc84d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "adbf9ee8-499d-44b1-824a-ae5dca94a6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3a1338-0ee5-49d0-a107-2d076c69242f",
        "cursor": {
          "ref": "e1c4534b-8f42-4636-bdda-51fd86e86fc8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9d7471c0-d3b4-4dd0-b889-19c8fde878fc"
        },
        "item": {
          "id": "6f3a1338-0ee5-49d0-a107-2d076c69242f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "25bfbfbb-e236-4f9e-ac3d-41223d7bba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca563c59-690a-4cbf-9e65-14faa48a45ab",
        "cursor": {
          "ref": "37d174ea-7367-42f2-81ac-1ecce95ac9d8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c947eae5-710a-42d8-b586-745cc627da68"
        },
        "item": {
          "id": "ca563c59-690a-4cbf-9e65-14faa48a45ab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "918a64c4-e905-496b-b953-5d96380cad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf961fd0-9ade-4dd4-8779-730b5c45c564",
        "cursor": {
          "ref": "04dc6764-8e35-45bb-8e28-8e2499215585",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "360ef810-0d89-473a-952d-8b7981882f97"
        },
        "item": {
          "id": "cf961fd0-9ade-4dd4-8779-730b5c45c564",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "861ccaab-007f-4cbf-a2dd-2bcb978a862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f688666-5b9f-4e52-9cd7-44ca57143bfd",
        "cursor": {
          "ref": "ea8ac384-59e8-4f53-8907-9c86c6d6d6c4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0fba8871-39ae-47fe-8bd5-72d8522de57d"
        },
        "item": {
          "id": "6f688666-5b9f-4e52-9cd7-44ca57143bfd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a73060a1-e1db-4237-80f8-63323a114344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705b2407-dbed-47d1-ae59-527ff486eb93",
        "cursor": {
          "ref": "1d1f812e-6bec-47ed-8d6a-6f01d5d8611c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "47235330-770b-4fff-a879-744fbc0efbb1"
        },
        "item": {
          "id": "705b2407-dbed-47d1-ae59-527ff486eb93",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "943c8572-1714-41fd-a236-9166ed059c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7f9058-e978-44b9-ab78-d1c99281c681",
        "cursor": {
          "ref": "ad7f5e79-0d9a-47be-beec-2ccbb05821ba",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5ddc53f3-193d-4d1e-8eed-f7499ecd2c21"
        },
        "item": {
          "id": "fc7f9058-e978-44b9-ab78-d1c99281c681",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5a669cb-b35a-4589-aa41-1c06f242b362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7e2259-405c-402e-9645-a9b34e8915dd",
        "cursor": {
          "ref": "ac62b370-9bd6-4991-9d5a-6a40d7551c6c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "59e5a2d1-5248-413d-b323-a46588882bd3"
        },
        "item": {
          "id": "7c7e2259-405c-402e-9645-a9b34e8915dd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "24c0843d-87ea-4468-9a37-4d4f8a244fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e06ae-eccc-4dfa-89e8-81a543bc5f7e",
        "cursor": {
          "ref": "ebd0d523-435c-48ef-b947-7b67027eecfc",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a721999e-fa71-43b7-b79d-ff4d30f091b2"
        },
        "item": {
          "id": "c71e06ae-eccc-4dfa-89e8-81a543bc5f7e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c359e67e-0965-4497-9c1b-68a52b5efed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb514401-b54c-4c99-9800-0b6f91936a4f",
        "cursor": {
          "ref": "269c64c6-988f-4614-8c3b-d2e2440a37d4",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d1e9e548-7579-4b69-bc6e-7a4636735c67"
        },
        "item": {
          "id": "eb514401-b54c-4c99-9800-0b6f91936a4f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ee0edd6a-f71c-4436-92d7-b2f874ac0e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca30d17c-4b33-4a8f-a529-a7636d77d0e1",
        "cursor": {
          "ref": "058f01a0-1ab2-4ac6-8cb0-c4e87a6f3e74",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8106f711-7533-43ec-9034-fd4cc4330dea"
        },
        "item": {
          "id": "ca30d17c-4b33-4a8f-a529-a7636d77d0e1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b1844240-9da7-47db-be92-dcbdb1225e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9115f89-8522-4b69-a15c-1aa3696b2086",
        "cursor": {
          "ref": "52cd018b-5c6e-48f6-ba7c-7fffb751a297",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5d9b3d3c-65a3-4a06-9180-7c366da571d5"
        },
        "item": {
          "id": "f9115f89-8522-4b69-a15c-1aa3696b2086",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1cb5a542-6a1a-4ca0-bf45-9a1ad331c6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7408279-9f0e-403b-87f2-90c2b81701d1",
        "cursor": {
          "ref": "9fc82a9f-262a-437a-8514-9f5b95ec93c3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b31c373b-aa47-4956-a598-23e514f9ff3c"
        },
        "item": {
          "id": "a7408279-9f0e-403b-87f2-90c2b81701d1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d304796b-a5bd-4149-9091-3d096bb3b641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a83705b-cb8a-43f2-b8bd-300f0b8786fe",
        "cursor": {
          "ref": "5670c883-e57a-4588-85c9-7aad76939589",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1092197c-a96b-4bd7-a461-48b8ee7f31e5"
        },
        "item": {
          "id": "7a83705b-cb8a-43f2-b8bd-300f0b8786fe",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f5d47176-e5c7-4774-91a2-c2d35d3bf104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452014ff-2ecc-416b-a64c-2fe41cd69364",
        "cursor": {
          "ref": "efa25f2d-baed-45d4-9a9b-9a66a7385827",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "230da727-061f-45fa-9af0-97a71d516052"
        },
        "item": {
          "id": "452014ff-2ecc-416b-a64c-2fe41cd69364",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2b6439ff-4c3d-42b6-a9ca-bf446bb37d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4718e1-27c1-4e00-96fa-0c2a178b7de7",
        "cursor": {
          "ref": "182e3ebe-0f76-49aa-b9ac-9661e84c67c3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a987a86b-a1ea-4dd6-846f-aac6e2edabc3"
        },
        "item": {
          "id": "df4718e1-27c1-4e00-96fa-0c2a178b7de7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a9b047f8-97c6-47f4-8a73-aa0f19490995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f01fade-01eb-4a6d-a188-3cde817dce63",
        "cursor": {
          "ref": "62f277b0-8d01-49fe-8191-b5639e0bef8f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2e801b89-fcfa-40cf-94cd-8b9e564d767c"
        },
        "item": {
          "id": "0f01fade-01eb-4a6d-a188-3cde817dce63",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b92abe80-9048-495e-b763-e8590df22683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2138b51d-d069-4aee-a2df-9728d5b442c2",
        "cursor": {
          "ref": "466b2a10-40c1-42e6-b4e5-c4d5585d6ab1",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "982aca75-b488-4d14-95e1-08d2ff936e8b"
        },
        "item": {
          "id": "2138b51d-d069-4aee-a2df-9728d5b442c2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a16377c-4cc8-40af-af87-fd42592429f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0063add-6586-4266-86b4-898ab550c29a",
        "cursor": {
          "ref": "f2523664-79cc-4b76-9c25-513775a4f5b8",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4de20600-f274-462a-8b1a-17dc1f3f3d7e"
        },
        "item": {
          "id": "c0063add-6586-4266-86b4-898ab550c29a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "70cb5fd8-82fe-4a30-847e-18be5797bc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b62750-f2a6-448c-bb76-dd2e3fce4da3",
        "cursor": {
          "ref": "e292d3d0-30e8-428e-a80e-dee787a142c4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "76e0e298-297e-4e22-ba09-880b5972282d"
        },
        "item": {
          "id": "05b62750-f2a6-448c-bb76-dd2e3fce4da3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6b001508-d0a4-40a0-acee-e98dd2b361ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c0d171-60f6-4cd6-87b2-789ba66fc7b1",
        "cursor": {
          "ref": "94494ce8-449e-48b6-8ccc-d9a15a19e95c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "46233068-4316-4813-8fed-b1a6ee17e0e2"
        },
        "item": {
          "id": "f4c0d171-60f6-4cd6-87b2-789ba66fc7b1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "511897cb-91cb-4760-ab14-9f171e716ba3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89883cb8-cbcf-4274-8ce0-b14b2e3ad964",
        "cursor": {
          "ref": "d58c9724-24fc-4da1-8b1e-51f34ef21f34",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "13adf7cd-87ef-4c94-979f-fbf3e9595b1a"
        },
        "item": {
          "id": "89883cb8-cbcf-4274-8ce0-b14b2e3ad964",
          "name": "credentials_issue"
        },
        "response": {
          "id": "52262510-5b3a-413e-9e67-25114701f4dd",
          "status": "Created",
          "code": 201,
          "responseTime": 11615,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0913f786-4bbf-4b77-8151-30d0cb56767d",
        "cursor": {
          "ref": "3fe12c54-d68b-46f1-af5f-e1fe9b2647cb",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5bd0d056-7cae-4380-8503-6ada1e47f769"
        },
        "item": {
          "id": "0913f786-4bbf-4b77-8151-30d0cb56767d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "05a13803-20e9-4a09-95b0-1932236e1e6f",
          "status": "Created",
          "code": 201,
          "responseTime": 12519,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef199e1-789d-4365-8f04-ee67dae10b18",
        "cursor": {
          "ref": "491403be-9d57-4f32-9a2b-cca8fd96ad7d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9820db36-54b9-4c21-8f1c-59721615341e"
        },
        "item": {
          "id": "2ef199e1-789d-4365-8f04-ee67dae10b18",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4a3efc0c-aacd-4247-8376-94654e03204e",
          "status": "Created",
          "code": 201,
          "responseTime": 9869,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "275a1354-cbe9-4086-81a8-1441e51f0c49",
        "cursor": {
          "ref": "6878bcf3-0d27-4477-b42e-b7ccf95a4cac",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ac41bece-e87b-4039-aa86-4783c4729c89"
        },
        "item": {
          "id": "275a1354-cbe9-4086-81a8-1441e51f0c49",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5ac5a058-f968-4de7-87fc-a8fdedc8a191",
          "status": "Created",
          "code": 201,
          "responseTime": 10091,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe4d3a1-e721-4d28-ac3e-b83bf2b2e4fc",
        "cursor": {
          "ref": "5db88d57-a386-4696-922e-bc2110be5d7a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "97b46b27-97af-450e-83b9-d57e5c09e6ce"
        },
        "item": {
          "id": "5fe4d3a1-e721-4d28-ac3e-b83bf2b2e4fc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e7372d3e-34b9-4225-bc53-4761a777ecf4",
          "status": "Created",
          "code": 201,
          "responseTime": 9889,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca03b12-b30c-4b16-a14e-f94722e8bb4c",
        "cursor": {
          "ref": "85ee6112-2d9b-4cb6-814b-c6ecb1099bc0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "444742c2-aa87-45bb-a0af-c42e81ced100"
        },
        "item": {
          "id": "cca03b12-b30c-4b16-a14e-f94722e8bb4c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5c079db5-93b9-4b25-8dc9-e5fb9c32fbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "859c6748-adb1-4b5f-8c26-4f753ac4ebe4",
        "cursor": {
          "ref": "3f456a78-81d2-4577-ba41-75c795abaebb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "34c44b76-3197-4948-ac75-bf4a6b5ba730"
        },
        "item": {
          "id": "859c6748-adb1-4b5f-8c26-4f753ac4ebe4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "53380d94-17b5-4554-a720-e3d767221413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d55b44-16e8-4f32-b2ad-e512514560ba",
        "cursor": {
          "ref": "6a72ac21-395f-4b46-a7c7-94d3211e5be8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1cfb91db-b376-4af0-a336-9e6ad4617fa2"
        },
        "item": {
          "id": "e9d55b44-16e8-4f32-b2ad-e512514560ba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e967dae8-d6ee-4fce-96cb-2bf16bc22506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ad773-aab1-4dd7-a1f4-81a9df7dede4",
        "cursor": {
          "ref": "b16587b0-9b5c-44dc-afd9-2fc17af565e0",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "41cbbdcd-8137-4df9-a125-721d4e3cff37"
        },
        "item": {
          "id": "263ad773-aab1-4dd7-a1f4-81a9df7dede4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "53cbc4ab-1a3a-4d39-a2a3-f6525457da75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44996f71-668a-4f0e-9073-5c1776757273",
        "cursor": {
          "ref": "dd205a46-abb8-4464-b48a-935e28d6c67f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1d667301-d838-406e-a8fe-820c28c6491b"
        },
        "item": {
          "id": "44996f71-668a-4f0e-9073-5c1776757273",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "64ba3200-68cd-42aa-b5c8-196fc4851c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a352ec00-0e87-4a1e-a9e1-9eb8f36ca4c0",
        "cursor": {
          "ref": "b5e4e104-9d70-450b-b0dd-bc7bfa302297",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08c33ba1-327a-4b48-9dd6-c1e60bf8361a"
        },
        "item": {
          "id": "a352ec00-0e87-4a1e-a9e1-9eb8f36ca4c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "29a246e0-9754-4bde-8f44-fee93429604c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e279af-1f84-4d61-a9cb-d14970cfd143",
        "cursor": {
          "ref": "51930f7c-91f2-4ac4-b470-418a361dd039",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ca051c8-d8ee-4d72-8d13-db94996fc2fb"
        },
        "item": {
          "id": "46e279af-1f84-4d61-a9cb-d14970cfd143",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1eaf0cf-e33f-43d0-99e3-713ca29d47db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a541c5a1-43cd-41df-8c33-dc555f52bbb7",
        "cursor": {
          "ref": "3e6980d9-6797-451d-8bf4-d883afc44a12",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "206e5297-f792-4503-a987-59ba0aa26bcf"
        },
        "item": {
          "id": "a541c5a1-43cd-41df-8c33-dc555f52bbb7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c02e84c4-7cc1-4ab2-9916-dadad78b2f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fe7b11-df30-4b98-a5c6-f3e9702178e8",
        "cursor": {
          "ref": "67d79249-8c6c-4b5e-9d76-e02257b222eb",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a58bd566-a34d-4511-8917-20e447c14e0d"
        },
        "item": {
          "id": "e2fe7b11-df30-4b98-a5c6-f3e9702178e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b05885ab-b181-4f83-a8dd-319050a7ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd4c989-1288-401f-989d-cefd0db69fd1",
        "cursor": {
          "ref": "b573ce40-4d2b-4f62-a356-d2a8d3989f56",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c59fee9e-4c10-4fc3-8dc4-07d11574eabc"
        },
        "item": {
          "id": "6dd4c989-1288-401f-989d-cefd0db69fd1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5bb3c25b-be9f-4043-abc2-8281a6782038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f33224d-8419-4f4a-9943-8f75ed5d8816",
        "cursor": {
          "ref": "c49ffd8f-eea3-41a4-9fc8-3441dec9ea9f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1d196af8-9bc4-4d2c-a193-f2e1ef1549e9"
        },
        "item": {
          "id": "5f33224d-8419-4f4a-9943-8f75ed5d8816",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8faa81d9-94a0-43d4-8157-75700633ed55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e153c40c-d0b5-4b67-bb19-38062eac7d96",
        "cursor": {
          "ref": "158c226a-7b9d-4867-a64a-1d5a44a9abcc",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9a4f8cf2-9b10-4481-8eb6-d0fbacc08bfa"
        },
        "item": {
          "id": "e153c40c-d0b5-4b67-bb19-38062eac7d96",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8df9c51b-5c44-406a-af5d-94b08d19733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15a6e0c-930a-4a4a-a19d-a1deeb1dc880",
        "cursor": {
          "ref": "8af34941-3ac8-40aa-86db-bd8b1173d5c4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b48a0b7c-d674-427c-824f-6fc609bc37de"
        },
        "item": {
          "id": "d15a6e0c-930a-4a4a-a19d-a1deeb1dc880",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d55df5f-635e-4b41-a6cf-28dad2da705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955ef86e-86f6-4c06-bc09-ade8b9e8db90",
        "cursor": {
          "ref": "c653097e-183e-49e8-bb63-99df9096d337",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05008433-c41a-4725-8c32-dada73e37b82"
        },
        "item": {
          "id": "955ef86e-86f6-4c06-bc09-ade8b9e8db90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c2f2f11-f8c3-419d-98ca-7524f849edd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67ec7cd-57c0-45e5-b8d1-096bfd04ea06",
        "cursor": {
          "ref": "5bc27f5e-ff20-4f40-afa3-231dd6fd111f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3885bb85-ca4c-440c-b868-3b174c36bd90"
        },
        "item": {
          "id": "b67ec7cd-57c0-45e5-b8d1-096bfd04ea06",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "29234386-77ed-480a-bda0-55d56098b831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35c9ab9-1376-42d0-ba55-bf82a5561ff3",
        "cursor": {
          "ref": "093dac1f-db0e-4a84-8bd5-5efcf71e42e7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5694b34e-7a46-408b-b103-ee2a9728a66e"
        },
        "item": {
          "id": "a35c9ab9-1376-42d0-ba55-bf82a5561ff3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "56b758c5-60d5-4961-8479-4c788e8873bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8658d6a6-aba6-40b8-831d-34719d8e7bcd",
        "cursor": {
          "ref": "f07ed19b-7561-4fd0-9c8c-ba05c07abd54",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1da55010-3c69-4ba2-9c3b-79a71eda3c33"
        },
        "item": {
          "id": "8658d6a6-aba6-40b8-831d-34719d8e7bcd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a4adc98f-8580-49c9-b3e8-bc36f80a46d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b62b8d-cca4-4334-929f-764b023494ab",
        "cursor": {
          "ref": "a9e71fd6-a3d8-4ea2-ba65-26217a5d9618",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "89ecd097-bd7c-4c4c-9ac7-3d58183bf9b5"
        },
        "item": {
          "id": "71b62b8d-cca4-4334-929f-764b023494ab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "61f7c96a-6421-491a-9fbb-cbc317c8aaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd8ead-b306-4d5d-8881-f2a016d7d88c",
        "cursor": {
          "ref": "f3d33007-6031-49b4-911c-99564f858882",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8b8bbf9f-9b61-4151-b088-526a3733a038"
        },
        "item": {
          "id": "02bd8ead-b306-4d5d-8881-f2a016d7d88c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "050645cd-7478-4b1d-966f-a3297807edc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91acb69b-24b2-41a5-a03c-3301d6c48157",
        "cursor": {
          "ref": "339c1f1d-13e5-4b74-bd67-f40a9169b21d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b27a903a-d86f-46d8-a6b3-e4c8d20eec9f"
        },
        "item": {
          "id": "91acb69b-24b2-41a5-a03c-3301d6c48157",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2c8fc020-bd27-4481-b4cd-523f72308bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538d8083-6b56-46e3-9163-3242dfb50544",
        "cursor": {
          "ref": "41a74556-2b58-44f0-8c5d-641b9fad8adc",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c1389e25-f139-4ed6-9081-37839ba24850"
        },
        "item": {
          "id": "538d8083-6b56-46e3-9163-3242dfb50544",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd61367f-4427-4357-a449-7b56d2d843f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c387da-c831-435d-bef4-18652034bd52",
        "cursor": {
          "ref": "40bd1ad0-8fc7-4fca-ad8a-de219f4770e8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "912c3eff-f30a-4e51-9420-8231af9da872"
        },
        "item": {
          "id": "b5c387da-c831-435d-bef4-18652034bd52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "33068ccc-14ea-49f2-9d85-bce3edc6f8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def0654a-24c8-484c-8ca4-bd898b9dc3fb",
        "cursor": {
          "ref": "b5f1a9ba-291e-4c95-8276-90b7286b2bf6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb689e87-e8ac-4e5d-b903-90d74984b715"
        },
        "item": {
          "id": "def0654a-24c8-484c-8ca4-bd898b9dc3fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b1923e63-27db-4380-960c-303495b95306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a62bad9-4a80-4bdd-ac11-77af5d4a8b7a",
        "cursor": {
          "ref": "5e6b8599-01e4-46e5-818d-0878a8b84f53",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9aa012cc-02a7-4571-87d8-f930ffe6cfd4"
        },
        "item": {
          "id": "6a62bad9-4a80-4bdd-ac11-77af5d4a8b7a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3b11fecc-4973-4087-8d26-d59935efef3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cbbfda-21b0-4800-8346-70a3ca85bf34",
        "cursor": {
          "ref": "014ae365-1562-430c-b90a-998de35e143b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a9bd51bb-7e8f-4f2d-844f-76fd3ffa1d4c"
        },
        "item": {
          "id": "72cbbfda-21b0-4800-8346-70a3ca85bf34",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96418c8c-c862-4438-a914-1f4d713d9a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ed46f0-c930-4878-8212-0c0d071a0e39",
        "cursor": {
          "ref": "d1866ba0-1058-4954-9eaa-a3568be234d3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2fa4164a-b3c0-4230-87c7-c52f83c79970"
        },
        "item": {
          "id": "97ed46f0-c930-4878-8212-0c0d071a0e39",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e87286c6-e382-4463-afa4-47c886a35feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9899721-10e8-415f-88a1-f1ba27e156c9",
        "cursor": {
          "ref": "f7933332-e9c7-46ba-b944-59079c06b085",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a60533fc-10fa-4140-a1cb-d280fd93d0d0"
        },
        "item": {
          "id": "f9899721-10e8-415f-88a1-f1ba27e156c9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d5dcc06f-8762-4d65-94da-ac82d0c0973b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f752be-bc55-4e9c-adf7-7ba78ca3e763",
        "cursor": {
          "ref": "c2b9dab9-f03c-4c49-ad45-c31c774c93b7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "405b1c18-eeb0-404d-b0fd-5a15a13a303b"
        },
        "item": {
          "id": "a8f752be-bc55-4e9c-adf7-7ba78ca3e763",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fa55a9a0-d45a-4af6-99ac-518991f3a26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624f4223-c61b-4b22-b18a-42c57309777b",
        "cursor": {
          "ref": "fac1ab65-62f0-40a0-8fd7-c21c438f63d6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f4c4ee34-9d42-4e42-887f-393e8b55cce9"
        },
        "item": {
          "id": "624f4223-c61b-4b22-b18a-42c57309777b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0f626eb-5f1c-4b66-ba4d-1e7122c85f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666802c3-8574-4660-8f45-5d43efc212a1",
        "cursor": {
          "ref": "9383bb70-642d-46e0-a194-1c9fa4215c04",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c70ccacc-6fa3-458c-a78d-b95d01f19e0f"
        },
        "item": {
          "id": "666802c3-8574-4660-8f45-5d43efc212a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1c6f4bb2-0fca-4c76-bdf9-b6236c794d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e499f-33c6-40c5-b2d2-9d6f55db56de",
        "cursor": {
          "ref": "ba5165ac-7bfb-42c1-8b23-6e7a1fc66702",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c2fc97f4-6eed-4485-8dff-d3b9065422f6"
        },
        "item": {
          "id": "d79e499f-33c6-40c5-b2d2-9d6f55db56de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01a3cd44-012f-40fd-a25e-9fc6da5260b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef0698b-825f-4e3b-aadd-f40cfb0e83b7",
        "cursor": {
          "ref": "b805956e-7080-4b2c-942d-6452bb8bf19d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a6efface-8b67-4205-8995-bec58ea49d92"
        },
        "item": {
          "id": "1ef0698b-825f-4e3b-aadd-f40cfb0e83b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "05135468-4d64-492b-98d4-0e0e6d587666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe23eb1c-ce3c-49db-b4a4-269d8eb172e3",
        "cursor": {
          "ref": "4b8d7c12-8db3-49e7-8d84-1183d96e5467",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9ae523c-ae88-44ee-9d44-ca855afd1007"
        },
        "item": {
          "id": "fe23eb1c-ce3c-49db-b4a4-269d8eb172e3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "23ace747-9ee1-4fdf-a3c8-71afc03dbce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af9db0-9ddf-4861-8073-3ea01723662e",
        "cursor": {
          "ref": "05335b65-4443-484f-a095-65d1786f3e5f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b8783cc8-d4a1-4544-b273-ba90d349370d"
        },
        "item": {
          "id": "73af9db0-9ddf-4861-8073-3ea01723662e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cba6ea9-4646-4f2f-9447-0155d6744280",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefc10de-6bc9-4d00-81a8-eafa99fcbe64",
        "cursor": {
          "ref": "72fb3824-c1f2-4c8c-879f-e33dddffd495",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "155476fb-cf4d-4203-b4eb-a1e093e5754b"
        },
        "item": {
          "id": "aefc10de-6bc9-4d00-81a8-eafa99fcbe64",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fe9cc81e-ffe4-481a-b47a-fb55b2cfa851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a4b172-7308-4efc-bf79-7cd259ac9c02",
        "cursor": {
          "ref": "d86d81a1-2b11-43ab-8985-028f6edc27b8",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "03536537-3148-4eda-a51e-a76ed8b9be84"
        },
        "item": {
          "id": "f5a4b172-7308-4efc-bf79-7cd259ac9c02",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1e86d320-7c3d-4849-94ec-2c6c70e56226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b8981f-e9bd-4bf7-8d54-4ee8af6c7e4e",
        "cursor": {
          "ref": "61f9bdcb-ee13-4fa7-ae36-f3da1e8994f4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "805aca4f-74ef-4ceb-af04-50c775894c68"
        },
        "item": {
          "id": "95b8981f-e9bd-4bf7-8d54-4ee8af6c7e4e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e06aedea-2fbe-4fdc-b20d-808634508335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82efa9e7-0c05-468e-9503-324da39f57c9",
        "cursor": {
          "ref": "35a55671-7934-4880-b086-e4c580816187",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6e3ea91a-c9e8-4a3b-b1a7-cfbc13f26006"
        },
        "item": {
          "id": "82efa9e7-0c05-468e-9503-324da39f57c9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "80a6724e-ac4e-4a69-a749-c9e4658dcc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d078be99-949b-4fef-afc4-bfc25483beb9",
        "cursor": {
          "ref": "c3e07b63-292c-4651-8788-399400941c8b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ac74c1f8-cb90-4e1f-8800-b80bf2fc217e"
        },
        "item": {
          "id": "d078be99-949b-4fef-afc4-bfc25483beb9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e3ec7f8e-1448-4cf1-8b3b-5b04d15d89c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b77ee73-f28f-4a1d-96c6-e022d2bd7a67",
        "cursor": {
          "ref": "69370e47-bb39-48c0-af8a-212d9e24b7ba",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5904d9a7-f480-4260-83a3-3fcdb9d8c334"
        },
        "item": {
          "id": "4b77ee73-f28f-4a1d-96c6-e022d2bd7a67",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "83897a6a-1585-4ac7-a9c0-10927d6b00a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed385f9-da5d-461f-821e-428f98f9b16b",
        "cursor": {
          "ref": "52383038-0a5e-4190-b821-aeba849b75d2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "13d723a6-1531-4413-a1c8-ff4192bc7934"
        },
        "item": {
          "id": "3ed385f9-da5d-461f-821e-428f98f9b16b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "47d08466-431f-4133-a8c5-32d348e8fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8462d61c-bbda-431d-b43a-920bd5d9972b",
        "cursor": {
          "ref": "0d003703-aa7d-4abb-bf52-0c93f0982c5e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6306943e-2403-45f8-a8ae-63790f32eb41"
        },
        "item": {
          "id": "8462d61c-bbda-431d-b43a-920bd5d9972b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aa7e1de6-8b68-4329-83f7-8ccdd5aa18b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb75049f-ca6d-49fd-975c-748544906cce",
        "cursor": {
          "ref": "b484e3aa-4e39-49b7-8b67-0e6487fe58c0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b88e4ce8-0ed3-471d-8386-2fcc50506ce1"
        },
        "item": {
          "id": "eb75049f-ca6d-49fd-975c-748544906cce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a7bad154-7173-42a9-ae33-a5658e8cc325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fc7ee8-6218-4f8f-a83c-38de7f994190",
        "cursor": {
          "ref": "1517c278-0338-4e0a-98f6-d890cee26da7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5d0856c2-1076-4f68-979f-d8a364ecbe4e"
        },
        "item": {
          "id": "85fc7ee8-6218-4f8f-a83c-38de7f994190",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b7b9a289-0f88-451d-b50b-fbff2e011d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88473795-e4a1-445d-a2ef-cf66dd624395",
        "cursor": {
          "ref": "5202b000-2706-43dc-bad5-6441f93dbbd1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "61742de2-6b61-4bee-b671-60c6dff61a32"
        },
        "item": {
          "id": "88473795-e4a1-445d-a2ef-cf66dd624395",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a204fe2f-2758-4365-9451-16b627caa128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b652c0-0569-4b04-b7aa-d5dd72d6ceb0",
        "cursor": {
          "ref": "67354ae0-6c84-4084-9e83-0a74478e1de6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "98280966-1256-4f16-8960-71f019ba5ad1"
        },
        "item": {
          "id": "06b652c0-0569-4b04-b7aa-d5dd72d6ceb0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5635956-6c6b-4a8c-86c4-bd34fea48122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c895d0-3759-43d2-9ef0-fe004cf71c55",
        "cursor": {
          "ref": "cabc46eb-a8bf-4112-8865-78a0cccb984e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b25140fb-0348-4e85-b495-c31e6c3c60e2"
        },
        "item": {
          "id": "d3c895d0-3759-43d2-9ef0-fe004cf71c55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bc602b4a-f2b5-47a0-850f-1a8f95a57c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b28b1f-9bac-4a1f-9ab0-651ef2d486f3",
        "cursor": {
          "ref": "df4b1e7f-fcd0-41c9-a55f-fe56cf6e210e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3badecf6-1548-4d31-a1b2-429693f831ab"
        },
        "item": {
          "id": "99b28b1f-9bac-4a1f-9ab0-651ef2d486f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "785db98c-927e-4a1f-8de1-a22b06be53b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b26d26-c91f-4685-8105-35647c434049",
        "cursor": {
          "ref": "ff2d8ddf-c7c9-4232-84c2-d786267253f7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "91ceb856-7536-49bf-a09d-3084f36d2fd6"
        },
        "item": {
          "id": "62b26d26-c91f-4685-8105-35647c434049",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fea71662-a223-4fe6-a4f5-23b4f69b3992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c806dd-3207-482d-9ce1-8a4c223b6f0b",
        "cursor": {
          "ref": "bb9f9064-0cc8-415b-a39e-0f279d8aa510",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6388726c-3536-48e0-ad62-8a876af91057"
        },
        "item": {
          "id": "71c806dd-3207-482d-9ce1-8a4c223b6f0b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d61bebb2-26cb-492d-a8c2-0aecb75d3334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cfef7-fbcf-4ee1-8a9a-118b6db8b351",
        "cursor": {
          "ref": "58ab964c-4a46-4f51-81a7-6174110cd2bd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2fdddf20-a07f-4536-8414-830404ade9d0"
        },
        "item": {
          "id": "1a2cfef7-fbcf-4ee1-8a9a-118b6db8b351",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e0a85702-f834-404d-95da-f3eefdee880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec7e3e-2b35-4a82-8dd8-42c79d8ab820",
        "cursor": {
          "ref": "9e2126e5-84f0-4c09-81cd-8f4e89b95de6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "57f90208-28db-419d-a001-7ffdf7fdcf8c"
        },
        "item": {
          "id": "76ec7e3e-2b35-4a82-8dd8-42c79d8ab820",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea30d5bc-cbbc-4330-8591-1ee38bb46e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331c758-9491-4947-90b0-a9fadb102732",
        "cursor": {
          "ref": "b57d8980-63ac-43bd-8b99-d35586fe9610",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3b474219-f86b-4dca-953a-03061cd0559a"
        },
        "item": {
          "id": "6331c758-9491-4947-90b0-a9fadb102732",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b081ac85-85f5-4000-9dea-1e932ad1bc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9c75b9-8359-4e12-8670-921b39a3bebb",
        "cursor": {
          "ref": "5534405f-7e6c-4b2d-a4d4-f481a67af42a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bc9af300-3383-4d05-aaa7-fdb6c284897f"
        },
        "item": {
          "id": "fd9c75b9-8359-4e12-8670-921b39a3bebb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f24e78d3-e23f-4e7f-9dae-68869767f042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd5d3e8-2ed0-47f8-9bc4-57ef3241d5d7",
        "cursor": {
          "ref": "1906d88e-cd8e-43e7-935e-0c20ab06ceeb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d1859fd4-ee8d-495b-85b2-8d8f8ef349b1"
        },
        "item": {
          "id": "5fd5d3e8-2ed0-47f8-9bc4-57ef3241d5d7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "012c2dcc-c824-4f46-a0c6-d9165e680aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2f3070-5efd-4ad5-a5a1-41d875aeed54",
        "cursor": {
          "ref": "027158d8-6ec4-499e-9b11-e6cc09fb27fc",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ea6fd247-f3b0-4310-a720-cb59ddd4d87f"
        },
        "item": {
          "id": "7a2f3070-5efd-4ad5-a5a1-41d875aeed54",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4154e85-4c59-41c3-a562-29484bf77e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c907f416-d526-40a1-8a79-0eebf56fb59b",
        "cursor": {
          "ref": "8ffeec27-9a13-43e5-a5c0-126f4ebf9f32",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "89c8c1ad-3f6a-45b1-9a45-e0262dd6c342"
        },
        "item": {
          "id": "c907f416-d526-40a1-8a79-0eebf56fb59b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d1501d2-bda7-4f5a-beec-c38518865bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fadbb-5585-40f6-baf6-a5fcb3c4f5bf",
        "cursor": {
          "ref": "8cf3eca0-abea-4d08-b8df-e461e0a267ec",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ea7a3e0d-ecd9-45ac-9318-d95477174a7a"
        },
        "item": {
          "id": "f24fadbb-5585-40f6-baf6-a5fcb3c4f5bf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf4c004a-01c0-46eb-8203-853ce5df35b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65680a06-5063-4713-8f41-c633a15b3709",
        "cursor": {
          "ref": "0a316c40-cb31-4d53-80f6-b9f07fbf4666",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9c42f657-8049-4173-96ad-b5bb76f75490"
        },
        "item": {
          "id": "65680a06-5063-4713-8f41-c633a15b3709",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a0322a0-1ab4-486b-a45c-8fd018bf383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e61128-252e-47eb-8e3e-9f063af48d64",
        "cursor": {
          "ref": "dc401a8b-20fe-4082-85d1-ad9d1f2e4c4f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c2ddf79c-3df9-41a2-b90a-20f99c16be78"
        },
        "item": {
          "id": "12e61128-252e-47eb-8e3e-9f063af48d64",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "32ce1794-47fb-4613-a1b9-4ac3a9d5bccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389ba888-9f12-4bab-9eeb-6f168c32da92",
        "cursor": {
          "ref": "81924b0f-2bbe-4419-a758-6983437929e2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1528449d-4567-4f3d-935e-52996f73729d"
        },
        "item": {
          "id": "389ba888-9f12-4bab-9eeb-6f168c32da92",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "960104b9-7b8f-4ba0-85f8-1baad7748ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42461e1-76d5-4638-b8c7-22bbe5889542",
        "cursor": {
          "ref": "2689a9d5-53de-444d-b075-a747164cd05d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a3bb2f39-1c6c-4f18-9e46-949ebb88c6ae"
        },
        "item": {
          "id": "b42461e1-76d5-4638-b8c7-22bbe5889542",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "18eb8f47-9ff3-4b4d-8e51-b8efff195530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a7e2a-561b-4150-bf7c-dfd7628f61b9",
        "cursor": {
          "ref": "86205ac5-90a4-4521-bdb1-a5d0414f1f73",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "69ed4f5d-2b0e-41ab-9155-93c6860222d5"
        },
        "item": {
          "id": "061a7e2a-561b-4150-bf7c-dfd7628f61b9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b90ec632-d6ed-4ee6-baba-d3b7b708b910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f5bbf-b274-43f0-b4ee-179f06e8ed3e",
        "cursor": {
          "ref": "0ffbd2f2-636e-4de0-b41a-ebd088b95844",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2515628e-1eb4-4ab7-91a3-dae2caf7d496"
        },
        "item": {
          "id": "501f5bbf-b274-43f0-b4ee-179f06e8ed3e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8e63ffc-99d2-4715-9e99-ed168e16681c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312a7344-68d5-4f5a-88cf-70c41692bd40",
        "cursor": {
          "ref": "24752f38-6d70-4cdb-b94b-58120dafbb89",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ebf1affa-3d7f-44ea-85c7-e0831bbdcf22"
        },
        "item": {
          "id": "312a7344-68d5-4f5a-88cf-70c41692bd40",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "38963718-1053-4312-9f39-e3d17f0f4b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb7675b-c483-42a1-bfe4-bd89b9af72b4",
        "cursor": {
          "ref": "8a5bd008-d7aa-4746-accc-fa2d235238c6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "478ca9a4-dc1b-441f-ba9c-025b0c08fe04"
        },
        "item": {
          "id": "8eb7675b-c483-42a1-bfe4-bd89b9af72b4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "246aca74-574c-459b-8961-f467ce6755bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e116c13-19b4-4975-8a82-c6f9f3272561",
        "cursor": {
          "ref": "fca69e41-931d-4d34-89a1-fcae67b1f9b5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6f31ca70-2475-4adb-a9fc-d3277fd7d7ce"
        },
        "item": {
          "id": "5e116c13-19b4-4975-8a82-c6f9f3272561",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56798f1b-d373-4758-b3df-a3face37c43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38907d40-ee69-47d6-836e-669beca730aa",
        "cursor": {
          "ref": "2c14863f-941d-4b7f-8aec-68d278a0df5b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "06b8d3d6-6747-4635-8c80-1d62075bcbbc"
        },
        "item": {
          "id": "38907d40-ee69-47d6-836e-669beca730aa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2f43e939-a696-4be8-b577-b367896fbc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fc2010-a11b-4890-88b8-ac9015d72373",
        "cursor": {
          "ref": "32f31eb9-460b-4373-af05-893e8e453e7f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4273b216-e29e-4d32-8777-c8a847096847"
        },
        "item": {
          "id": "17fc2010-a11b-4890-88b8-ac9015d72373",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "526e6c87-26d8-4fd5-90a6-d625d14015bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e6e95b-45e0-4831-9294-058723190483",
        "cursor": {
          "ref": "b4af5127-4acb-4ca6-a15e-5838ce2490b9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "03b12ce4-6860-4b35-88fc-bcf34ef11d50"
        },
        "item": {
          "id": "98e6e95b-45e0-4831-9294-058723190483",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "671d269c-31af-4075-9dd8-e963499de410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082760b1-1462-4ec7-92cf-17cc7cf84452",
        "cursor": {
          "ref": "0c77af08-bdbe-48b3-81e3-2be176337ca6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f15526c1-8423-4986-92b5-e26649da47dc"
        },
        "item": {
          "id": "082760b1-1462-4ec7-92cf-17cc7cf84452",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "700cdb65-f9d8-416a-a6a5-8cddde1a588a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2587db7-0d03-4b77-9a60-cdf44305890f",
        "cursor": {
          "ref": "04c0fa28-b8ff-498d-b9dc-602840a2d5cf",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4a14084b-d61d-4e8a-ba41-2a4e2ebc4758"
        },
        "item": {
          "id": "f2587db7-0d03-4b77-9a60-cdf44305890f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ecabe142-2d47-41f5-a144-14628f379add",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2724f848-5fe8-41d5-8875-57a0e23bf964",
        "cursor": {
          "ref": "217a661a-544e-409e-b1f2-93a7090186f8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2f0113be-0a3a-4894-ba1d-f1af6d29a121"
        },
        "item": {
          "id": "2724f848-5fe8-41d5-8875-57a0e23bf964",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f063459f-41cc-496f-9f06-fed1372c2d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc99dd45-24a3-4ee8-8c1c-603d0bc7468d",
        "cursor": {
          "ref": "34f4fadb-3053-4a6b-9b2d-592fbbf90d4e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dc0c62f7-f190-4d9c-951b-9455f615c809"
        },
        "item": {
          "id": "dc99dd45-24a3-4ee8-8c1c-603d0bc7468d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0d27b72d-5f9d-429e-ab3b-7e27ff40ea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c4e809-a4f0-4a91-8270-e291c91bc1d4",
        "cursor": {
          "ref": "236fddb4-3235-41ea-aad9-7f46f616dcd3",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7338bda2-ce0c-43c4-a7da-480c6542935b"
        },
        "item": {
          "id": "79c4e809-a4f0-4a91-8270-e291c91bc1d4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ed653d9-97c5-4dd4-af48-d9af75a27c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cffe77c-446e-472f-a540-f861aa3ef0f3",
        "cursor": {
          "ref": "08c03dd7-3f33-48b0-a261-279195ff08f4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f1798fa7-83ee-4bff-878e-18c167e22e4b"
        },
        "item": {
          "id": "3cffe77c-446e-472f-a540-f861aa3ef0f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2fe347d8-659f-404b-997d-500eb333adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27567ea-c1d7-42a0-b04b-7af0c943b0bd",
        "cursor": {
          "ref": "f4e7c839-597c-4216-8892-c343a9727a9b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c4e8ee3a-c4e5-45ce-ad76-37b0f3fe1363"
        },
        "item": {
          "id": "f27567ea-c1d7-42a0-b04b-7af0c943b0bd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13551739-5637-445a-99ed-86e4ae4e0cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa095eba-3b51-440b-8dd7-f46f0fb90a8d",
        "cursor": {
          "ref": "4a5c818a-302d-4d2f-8328-cb4f644061b2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "13ca0851-a9f3-4b6d-95d0-d39ca2a5d98c"
        },
        "item": {
          "id": "fa095eba-3b51-440b-8dd7-f46f0fb90a8d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "351f068a-aba3-4797-b605-3ba1efbeeeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0944a0e9-2424-4843-a05a-8945b2a6c0ca",
        "cursor": {
          "ref": "82a98e38-a620-4005-addf-22fd847e3542",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4af40465-707f-4ec4-bea5-1eafca801679"
        },
        "item": {
          "id": "0944a0e9-2424-4843-a05a-8945b2a6c0ca",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "63b98c5d-3a3d-4662-b6d9-43072e3d8fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5998eff-8264-40a5-9382-f5ad9d659f8c",
        "cursor": {
          "ref": "c833fccd-3f5f-4fa3-b96c-be30eb814e47",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0ed2b010-b485-43c7-a922-5f44220d7f90"
        },
        "item": {
          "id": "c5998eff-8264-40a5-9382-f5ad9d659f8c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8cfcacba-d283-4099-9392-7e2a69da2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74666d01-4360-4926-96c4-b45d70b2db68",
        "cursor": {
          "ref": "c9c07f34-0871-432f-8c60-670f94269336",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fabc7d23-3fcb-46f4-aff4-b97da24d3a95"
        },
        "item": {
          "id": "74666d01-4360-4926-96c4-b45d70b2db68",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6fd360a5-1295-41b0-a019-ff9df4951d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed26e771-73aa-42bb-91ea-0fd250e5b305",
        "cursor": {
          "ref": "6debf369-6a2f-4a04-8fd9-acb6268606fb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "268bb3bb-4c29-4a70-b3fb-9b1787a0e147"
        },
        "item": {
          "id": "ed26e771-73aa-42bb-91ea-0fd250e5b305",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8dd0f16d-cdfc-4c81-aded-b1174f13cb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7513cad-7905-4c62-9bc6-27e70d82bab5",
        "cursor": {
          "ref": "428d2fcc-ea68-4835-a992-1472684352ed",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f25814c3-afa1-4fd0-8553-49bde7f1d25c"
        },
        "item": {
          "id": "a7513cad-7905-4c62-9bc6-27e70d82bab5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c6a160d1-9bd8-44f8-8bcb-5e73081eca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5920b86-f531-4c1d-9f06-3127bbb08feb",
        "cursor": {
          "ref": "1badcd00-d4c9-4a6f-a094-36a5b9c61e82",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5d4d11bc-ef56-491a-abfa-d032180d4909"
        },
        "item": {
          "id": "b5920b86-f531-4c1d-9f06-3127bbb08feb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "115271c4-e384-4020-b70c-36d2de480c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d92341a-1ce6-4484-b22c-dd6b45f756b2",
        "cursor": {
          "ref": "af3a671f-1419-4c64-9a66-8b1ee7ebc2bd",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "488fef61-110a-4a2f-863e-e60b0f0d264e"
        },
        "item": {
          "id": "1d92341a-1ce6-4484-b22c-dd6b45f756b2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1fe9f26c-246d-4520-87be-37311d258f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d93e172-48e5-4a69-b40b-072292752a9c",
        "cursor": {
          "ref": "1c782d91-8eba-48ee-85f6-80da5dd3bae7",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba432b3f-5a42-477c-8889-d317ec09746e"
        },
        "item": {
          "id": "7d93e172-48e5-4a69-b40b-072292752a9c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4bda63f7-0ebb-4cb4-b284-c4aacbd753be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affa66b1-35d4-438d-8a5f-b40c4cf2bf2e",
        "cursor": {
          "ref": "88da2f36-8562-4b02-a435-5e9860e240c7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "43259f88-e702-43e2-bac3-eda29efcedeb"
        },
        "item": {
          "id": "affa66b1-35d4-438d-8a5f-b40c4cf2bf2e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2cab6df6-78f0-4a49-b44d-fad99060c586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7030dc92-771a-4bf4-a31d-ba8adfb53489",
        "cursor": {
          "ref": "fbb0c908-ceb0-4c23-a21b-46e73daf9468",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c6f2d9a3-7766-4698-aac3-3a358f374708"
        },
        "item": {
          "id": "7030dc92-771a-4bf4-a31d-ba8adfb53489",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d84d8aa9-bece-47cf-b306-1cf6c0bd48fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a67da8-737a-48c4-88fb-e3b409baf4f2",
        "cursor": {
          "ref": "f0dde75e-b937-49e0-ad36-f35ec7fe1a6b",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f0485e38-577c-4ab1-8512-4c849cb0e49f"
        },
        "item": {
          "id": "f1a67da8-737a-48c4-88fb-e3b409baf4f2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc5a7716-d21c-44ac-850f-4cf172829031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b092d9-5efa-4b98-a95f-d05ec99ae1ba",
        "cursor": {
          "ref": "88440dfd-d3f3-46bd-b4ee-e26553689eca",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "34975215-5f1a-4696-bc08-0ea9881db9bf"
        },
        "item": {
          "id": "32b092d9-5efa-4b98-a95f-d05ec99ae1ba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2b153725-e9f0-4c84-abcd-16476a3f9aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761aece5-7f41-4079-b4ee-542b53652f12",
        "cursor": {
          "ref": "6bbfb312-a557-427e-95fe-fe1c5f743e84",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5b06e484-ea20-4fb0-bf78-b0a538501cf7"
        },
        "item": {
          "id": "761aece5-7f41-4079-b4ee-542b53652f12",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "45024bcd-f745-4b34-be06-71eff4df4294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bd437a-5619-472d-ae8e-bf2625f2527f",
        "cursor": {
          "ref": "d1b6e123-1331-4025-a474-d28867e3e7f3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a7e7c76d-772a-4cda-9c49-5a9e3ddda43e"
        },
        "item": {
          "id": "46bd437a-5619-472d-ae8e-bf2625f2527f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dccfa6cf-5c8b-4991-a1c6-81d2db51e090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5364d0-2e7b-4d8b-9636-0fd8e58b344f",
        "cursor": {
          "ref": "5277fa60-9e41-4d11-8762-d02bdc547928",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d25f9219-4180-41ef-aa4f-52550c7d17a7"
        },
        "item": {
          "id": "ae5364d0-2e7b-4d8b-9636-0fd8e58b344f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ba2ca7c-7cbc-4590-b55b-3617fb00e412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eed45fd-122b-44fc-9e5a-09c29ed379fa",
        "cursor": {
          "ref": "d220fbcf-611e-4785-9d57-c30eae0738d0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7c427c98-e1c8-4898-b442-e47c87a10df6"
        },
        "item": {
          "id": "5eed45fd-122b-44fc-9e5a-09c29ed379fa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8b05f5ce-73eb-4ec3-8963-5d7aa970b517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ada682-619d-4f77-9c42-76d50bbf701d",
        "cursor": {
          "ref": "425ff912-3352-4a0b-bd34-b160464a65ab",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fd524c93-c17b-4f77-8b48-4aa2bdbb54af"
        },
        "item": {
          "id": "a3ada682-619d-4f77-9c42-76d50bbf701d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8454d25c-27fc-4c30-8e64-89ad3bb12fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d39ebc7-3b97-417e-92da-4736d5744482",
        "cursor": {
          "ref": "0d5399fc-f2ea-4490-9c21-50bd68d6089e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d83dd726-d2ce-46b5-8c86-310ece5412e0"
        },
        "item": {
          "id": "6d39ebc7-3b97-417e-92da-4736d5744482",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "20347c11-23e8-4e39-9598-cc25b587a2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e1cd4f-4e2f-4f28-a83d-ae1a77bf0243",
        "cursor": {
          "ref": "757198e1-ada7-484d-a3f4-06286e421012",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e69ba1a0-524e-4d0e-a163-30fad48280b7"
        },
        "item": {
          "id": "11e1cd4f-4e2f-4f28-a83d-ae1a77bf0243",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "82a021c6-f59c-435f-b6ad-f6975ff29f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea90e75-9e66-45b2-a1ac-e4fcd8ddf8ad",
        "cursor": {
          "ref": "48dedabd-cfd7-4d9e-a8b0-05142377bcd9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4413b81d-c162-443c-a151-e00349ee8d50"
        },
        "item": {
          "id": "2ea90e75-9e66-45b2-a1ac-e4fcd8ddf8ad",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7fd53bab-3cdf-4df8-a57d-b8d250f22163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb642155-5b02-497c-a294-cc4fdea04617",
        "cursor": {
          "ref": "6fd04da2-9b1b-41bb-917d-62931e547778",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "032247a1-fbc7-4f40-b38d-330e9d507f39"
        },
        "item": {
          "id": "cb642155-5b02-497c-a294-cc4fdea04617",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bfff0d43-e7ef-4e8a-a0a3-55974e76e943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267cff4e-9d6a-4b97-b475-7e2a11bb552f",
        "cursor": {
          "ref": "4662f738-f9d3-4440-bb4a-56e61ef71612",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b113b731-accf-48cc-be5b-ba940790285c"
        },
        "item": {
          "id": "267cff4e-9d6a-4b97-b475-7e2a11bb552f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "14b38872-d16b-483d-bb24-46d0caa820f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9d007b-5131-4a6c-a00d-21f4f7e0505e",
        "cursor": {
          "ref": "9786dc9c-23e0-4781-9787-89139aa890ec",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "87768a2a-da4a-4812-a128-0dd7e6399e7d"
        },
        "item": {
          "id": "0c9d007b-5131-4a6c-a00d-21f4f7e0505e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f65972bd-1135-46c7-b00b-d1606d00ff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435df6a1-f06b-484a-8228-45387ee829d6",
        "cursor": {
          "ref": "c0f23cd8-8799-4e96-96e1-c37a77edfc6c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e8702e42-a50c-4c30-be38-0ac8e48d69af"
        },
        "item": {
          "id": "435df6a1-f06b-484a-8228-45387ee829d6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "acbb927f-07ab-4ed8-bf12-805daa9f8ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5cb91-0cba-4d25-8db0-0561a18b76d9",
        "cursor": {
          "ref": "93c6ab06-92ff-442e-a2d3-6f9207ed775e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "86ad7d52-8438-4362-bbb4-d7515c43ca51"
        },
        "item": {
          "id": "aac5cb91-0cba-4d25-8db0-0561a18b76d9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6e296c87-6afd-4064-8c71-38b24e2cfeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5701ac-96fe-4f29-aac9-e31f04074f77",
        "cursor": {
          "ref": "3098dcc7-e84b-4f74-ab7b-8b4d0f238f7d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "810d8777-b6dd-478c-9470-b1bb5a3d761e"
        },
        "item": {
          "id": "3c5701ac-96fe-4f29-aac9-e31f04074f77",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "47be6488-a150-4a24-841e-2e089850d4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e0b1cc-2b77-469d-a2d9-330a7355d690",
        "cursor": {
          "ref": "1e3a1d42-1423-47df-a3b9-5589b1aab3f8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "efd836dc-fec5-41a3-96ba-fb791e514b3c"
        },
        "item": {
          "id": "b7e0b1cc-2b77-469d-a2d9-330a7355d690",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4991b002-2bb2-4c95-8bb8-643be60c7dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b29b12d-55c9-4d8b-855a-848cc709c18d",
        "cursor": {
          "ref": "c2906475-67e5-4e7c-b030-25372d6619f9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b27fd5e8-1c04-4666-94ef-b30ea6fe1508"
        },
        "item": {
          "id": "0b29b12d-55c9-4d8b-855a-848cc709c18d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b4c4127-30e8-4428-b8d1-eac67a6bb16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddfa69d-da75-4462-9ff5-c080dcad0686",
        "cursor": {
          "ref": "87b732ba-2c95-4f69-a66d-67413bd4ee00",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2c05bc4-feb2-43db-bcd1-6919c856c0f8"
        },
        "item": {
          "id": "4ddfa69d-da75-4462-9ff5-c080dcad0686",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e95cf7f0-72d5-48b3-8be2-64e3648fa116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb3d2c-1dc2-4bf5-97a5-a828b6da5cb0",
        "cursor": {
          "ref": "3842fc81-d44e-4d87-b8e6-98fea4f81ea1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9f1b2e7a-0efd-4068-81ef-998ade802251"
        },
        "item": {
          "id": "26eb3d2c-1dc2-4bf5-97a5-a828b6da5cb0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "41afe948-9d5f-4a6d-ac8c-46a6dca70b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1c033d-6e0c-4c5c-bc04-0791f06e953b",
        "cursor": {
          "ref": "e44f151b-bfa8-4230-b66f-c1fec54d357d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a787c07f-b761-4645-b0a6-9d66d769e2cb"
        },
        "item": {
          "id": "4e1c033d-6e0c-4c5c-bc04-0791f06e953b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "913705ff-e4d9-44b4-b4ed-4c32778e6c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b8c5ad-e5bd-4224-b06c-3d1725b80e82",
        "cursor": {
          "ref": "3fd676f7-365d-47a8-97a6-2768a451fcce",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1fb194c4-340d-4ac0-8d7a-e43523604ef2"
        },
        "item": {
          "id": "c7b8c5ad-e5bd-4224-b06c-3d1725b80e82",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fdfd421d-e286-41ab-95b7-4fc29a337690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6527f5-726c-4dab-a6d5-ecb1a289196e",
        "cursor": {
          "ref": "4482da10-473d-4b4f-b3d2-06bea5110f34",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9d214f9c-4b81-4926-a03c-3863e97453b7"
        },
        "item": {
          "id": "3a6527f5-726c-4dab-a6d5-ecb1a289196e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84662692-0d7a-46b2-a4cd-7e8fe57eac91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced6b1b3-ff66-496b-963b-0778e7569cef",
        "cursor": {
          "ref": "cd5ed332-6b5d-4cfd-b7fd-354b300c87be",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "93da4535-9dfa-4f49-a162-872f8e171fd4"
        },
        "item": {
          "id": "ced6b1b3-ff66-496b-963b-0778e7569cef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "818d44fa-ce96-4b82-881e-ca9912a854e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddc36de-21b9-45ac-a2d0-e5522b56a788",
        "cursor": {
          "ref": "84d58cb5-100c-4cd7-823a-de34ccbb70e1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f20681d-6321-410a-81fd-9d5c43703782"
        },
        "item": {
          "id": "7ddc36de-21b9-45ac-a2d0-e5522b56a788",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "76e265d4-e596-4ca1-be61-ad6b272bebb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b233efc-fdc6-4ee1-892e-42c10f0822cb",
        "cursor": {
          "ref": "ce8861e3-f8c6-4a1e-9219-bd02f3ab1a99",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cdd49bcc-b31c-47a9-b457-429825fdaf1f"
        },
        "item": {
          "id": "9b233efc-fdc6-4ee1-892e-42c10f0822cb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3aec6cc0-554f-4052-a4a5-726391f1eace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5052d6-a4a4-4381-8f8b-84e07c3b3bbd",
        "cursor": {
          "ref": "39de61f8-5488-442a-a9f2-2abe87a13caa",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b03fe7d-aaf2-4ec1-a297-348669fcfbc3"
        },
        "item": {
          "id": "ca5052d6-a4a4-4381-8f8b-84e07c3b3bbd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "72cb7815-63d9-4102-a8fe-cea1b300df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8805199a-7eb8-4522-9983-8d11b35787f6",
        "cursor": {
          "ref": "c73ea080-9d88-443e-9896-a7b99d96220f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cb607a04-d7ca-4cb9-840c-1eda8fad5f60"
        },
        "item": {
          "id": "8805199a-7eb8-4522-9983-8d11b35787f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d68c1c9b-705c-4fd9-b179-e2df4b61172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9411a03e-828b-4ef1-9e0d-1e96b04b3720",
        "cursor": {
          "ref": "9af42b60-07e9-40ec-8f6c-523bb04c3388",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a0bf8c1b-7699-4a22-832c-99223201a23a"
        },
        "item": {
          "id": "9411a03e-828b-4ef1-9e0d-1e96b04b3720",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ef001620-b711-44f2-809c-bb51ad7d3773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1002ef95-6e76-49df-909e-a3599049ca54",
        "cursor": {
          "ref": "dc211d5a-7147-4dbf-8945-a57138d936fc",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eef8225e-ed47-4b18-b8ea-d41d1fca706c"
        },
        "item": {
          "id": "1002ef95-6e76-49df-909e-a3599049ca54",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "88d8de3f-a0d4-4090-bc17-8db29e9f2dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f146c76-a473-45fe-aef1-25928c348012",
        "cursor": {
          "ref": "76d646f2-0dd9-47af-8b20-7750964f1629",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8511928d-9187-4fb5-a3a5-e8980659acdb"
        },
        "item": {
          "id": "4f146c76-a473-45fe-aef1-25928c348012",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "74607ab1-e030-4f4c-8372-cf8fe124ae4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f942c78-78d2-4114-9826-19005236a674",
        "cursor": {
          "ref": "007eb561-4117-499f-9d79-1be9f6fd9df3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61ef5e3a-1200-4e14-a477-8b35e8f22a19"
        },
        "item": {
          "id": "2f942c78-78d2-4114-9826-19005236a674",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "14a9eaca-f807-4f00-a882-a2b0429a37d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e83e31-5649-4dec-ba9b-1a5c87dc6460",
        "cursor": {
          "ref": "4b81270a-513a-4075-9c9e-648ac5b3fa65",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "87d43167-ea27-4a2f-b9d1-30350da913e8"
        },
        "item": {
          "id": "20e83e31-5649-4dec-ba9b-1a5c87dc6460",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "14c35ab2-57da-4ae6-8aad-853afa496a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9c5b61-c1f3-4780-ae7f-1ebbc3e3c0de",
        "cursor": {
          "ref": "49d87cc2-c8c2-4394-b906-4f94504785e4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d3e80dda-1809-4ab8-81fb-0f2491c7c5d2"
        },
        "item": {
          "id": "cc9c5b61-c1f3-4780-ae7f-1ebbc3e3c0de",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "83dea3bc-5d1a-436d-9490-ce32fb8323a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265c7da3-4b5d-4630-a8f3-b07b49bd4973",
        "cursor": {
          "ref": "0807eae4-c3b3-4e70-ab65-256aa63b70e2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1edb3418-c207-45e2-bf0a-cfe71b4043ab"
        },
        "item": {
          "id": "265c7da3-4b5d-4630-a8f3-b07b49bd4973",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f07ffd42-d5e4-4d3d-9cab-bad39ec88fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369b387a-819c-46b7-b77f-ec5a5b6c9c04",
        "cursor": {
          "ref": "be1849bd-f420-48b1-81de-50b29c9a2367",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7dba5e13-04ca-47c6-8a55-f8c33a97a98f"
        },
        "item": {
          "id": "369b387a-819c-46b7-b77f-ec5a5b6c9c04",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "95e0a6e5-baa3-4009-9f52-a4e07ca603d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4924e74-525b-49af-9b32-cb4a7a950fa3",
        "cursor": {
          "ref": "462d377e-4c6e-466d-bc5b-ca62900e8536",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ded1be5-feee-449d-9812-84f90c709bb6"
        },
        "item": {
          "id": "d4924e74-525b-49af-9b32-cb4a7a950fa3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "904e1894-1f41-4b74-ac2c-f926ee99ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9b9d1d-973c-4601-82fa-8b083ce715f1",
        "cursor": {
          "ref": "c916e3b0-a425-4dcd-9d65-e7112e369eaa",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b51c73e0-64c5-4ddd-bde8-ea574bcacfd3"
        },
        "item": {
          "id": "1a9b9d1d-973c-4601-82fa-8b083ce715f1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fd985b19-357d-4ddf-aa51-fe2108f63071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4114db3-b7c6-4f61-8d27-7b1f28f4ad56",
        "cursor": {
          "ref": "234ec9f9-fddc-4343-bc26-d564d3ec31f7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c97b8cd7-46fe-4370-be77-920095e303b9"
        },
        "item": {
          "id": "e4114db3-b7c6-4f61-8d27-7b1f28f4ad56",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "67dd183a-3da7-44b7-a1be-79661c8a6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854261cc-0bc8-45ec-baeb-1ed754e10003",
        "cursor": {
          "ref": "24913c8e-3fb5-47cd-bfd6-6665c608d5a0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6a19e4b8-19d0-4a60-9359-f300287c9de0"
        },
        "item": {
          "id": "854261cc-0bc8-45ec-baeb-1ed754e10003",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "893473e2-18b6-4555-b202-3ea29916e130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec5032-9b00-40fb-a68b-a55881977f5d",
        "cursor": {
          "ref": "fbacbe7f-ed10-4f6d-9498-913fbca0b303",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8fa74ef8-72a8-4e81-87ab-d4e77899a913"
        },
        "item": {
          "id": "ffec5032-9b00-40fb-a68b-a55881977f5d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "43c859aa-db13-48a9-bbbd-1cd04b998756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4ef8b1-9a2b-4ae5-bca6-3c2c3145e5f8",
        "cursor": {
          "ref": "5499bd5a-5547-418c-b45d-d9f02a09a8e4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "765a1a45-9c62-4044-8627-91f0efdc91c1"
        },
        "item": {
          "id": "0d4ef8b1-9a2b-4ae5-bca6-3c2c3145e5f8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6ee8c1ab-084c-4754-a76c-47443b83f521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b375c698-5bca-481d-9967-b7e35fa7f046",
        "cursor": {
          "ref": "302db8f5-e343-4f38-84a8-db661d52f255",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2253d0a2-9300-4cd8-ab25-3855a2f9d27d"
        },
        "item": {
          "id": "b375c698-5bca-481d-9967-b7e35fa7f046",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a14d9ee-aba7-422a-a5db-830b39d85674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed546ffa-c56d-43cf-903e-1b39e244dfbb",
        "cursor": {
          "ref": "3bdb196d-a8fc-4541-a285-6f8f30909e94",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d3770ee9-4a7c-46c5-bbab-f79dff89710f"
        },
        "item": {
          "id": "ed546ffa-c56d-43cf-903e-1b39e244dfbb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "888b4064-30c0-4df7-8b02-45e10bfeea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7460b015-6fb3-46bb-b77c-122dd4531b9a",
        "cursor": {
          "ref": "26c377ad-f1e3-4ec5-afa8-9162cf17f6c3",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a3778784-77f2-44dc-bd7f-b7aca8b7f838"
        },
        "item": {
          "id": "7460b015-6fb3-46bb-b77c-122dd4531b9a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a8905fc0-7ef6-4f65-92ea-ffb429f0908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4892a4a8-38a2-4c29-9a3f-65a86906d48a",
        "cursor": {
          "ref": "088ced62-bcb2-41e6-8250-e9276b4aabd0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c3a188d3-5c67-4ec7-815e-6a4637a59a53"
        },
        "item": {
          "id": "4892a4a8-38a2-4c29-9a3f-65a86906d48a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "230af706-297e-4a84-b5a6-7c62146a8079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb25eb10-d808-41c4-8f74-4a0d04fe3df4",
        "cursor": {
          "ref": "d391ef6c-8aa6-4cff-96ce-7f5573105c64",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "53178b70-86e7-4a3c-b626-4dc6904f684d"
        },
        "item": {
          "id": "bb25eb10-d808-41c4-8f74-4a0d04fe3df4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9d1ca5a6-5b2f-4755-88b6-f4fa7469496d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5b313-f989-4888-a918-6bca2bb99763",
        "cursor": {
          "ref": "de991af8-a89c-4268-a229-97259631ef27",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5f49f734-4e59-464c-a36f-022d0c56c66d"
        },
        "item": {
          "id": "0df5b313-f989-4888-a918-6bca2bb99763",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c4fededa-b030-4407-a916-258c34413f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ad8c5d-e861-4735-9e0c-8c95ea5c4702",
        "cursor": {
          "ref": "049dedad-445f-465e-a8f5-331a84f83515",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "83dc6835-7511-4209-84b2-e3d6f004b14e"
        },
        "item": {
          "id": "38ad8c5d-e861-4735-9e0c-8c95ea5c4702",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f76a244f-d398-45ab-978f-4227c6d7ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc0b5a3-f9da-4c18-bb71-cb8f915bbccb",
        "cursor": {
          "ref": "e5108c79-3ab8-4ff4-965e-47ab6018b304",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6607499c-eae4-4ddd-9a2c-1bd946891e44"
        },
        "item": {
          "id": "3cc0b5a3-f9da-4c18-bb71-cb8f915bbccb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "64047793-f249-4ca4-bdbf-477174b0280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1de1d0-1799-40a1-b08d-6311149b8158",
        "cursor": {
          "ref": "54bdc145-ac6f-43bd-ad55-96f1427e5617",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "87c447a8-90e3-451e-97f7-63828b6d5b54"
        },
        "item": {
          "id": "4b1de1d0-1799-40a1-b08d-6311149b8158",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1b328ea3-6436-43f6-a5e6-f221fbb9f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baa619f-bbb5-477e-81c1-bc2ec8e6ffd7",
        "cursor": {
          "ref": "2febe69f-255f-453a-b56a-97c4903fb666",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "82c2bc4b-2119-431a-bff2-8c3ed9413efe"
        },
        "item": {
          "id": "7baa619f-bbb5-477e-81c1-bc2ec8e6ffd7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8cc5c9a0-76f4-47be-9df9-3037496af2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755bc986-51fe-4982-b283-3c3030528ea4",
        "cursor": {
          "ref": "ab2f0c9b-808b-4adc-b481-18899c515306",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78a082ce-619a-459a-b2ff-f85865bc6ee1"
        },
        "item": {
          "id": "755bc986-51fe-4982-b283-3c3030528ea4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57cba52c-0d90-465d-a636-0829f8f889fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7efa672-efca-4d28-aeac-0803aa7560b5",
        "cursor": {
          "ref": "4a441a0b-c1b7-44b2-b2e3-49474040751e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a80e0ecb-8544-4920-a931-b9395c7fb601"
        },
        "item": {
          "id": "b7efa672-efca-4d28-aeac-0803aa7560b5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cc11cf5b-f8b2-4d90-88ee-eec19ada012f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9170134-4ea6-4ab9-94f6-79109f3af4fc",
        "cursor": {
          "ref": "9ec127ca-70e9-4b6e-b547-925205f5b66b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8add706d-cd78-4b44-8a18-78054103ca74"
        },
        "item": {
          "id": "c9170134-4ea6-4ab9-94f6-79109f3af4fc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "72feefd3-492b-453f-b021-74ec721b0e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a73a574-3719-4660-83b2-ce84b27d62f1",
        "cursor": {
          "ref": "c4537f08-b83a-4d8d-8f4e-3359b4b9771b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4bffaa31-ff5c-4130-9306-2fa7c732a0c3"
        },
        "item": {
          "id": "1a73a574-3719-4660-83b2-ce84b27d62f1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0e3ef4c5-5cd5-40ee-b25a-79fdf2f590b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bba61b-b0d7-4724-9cbb-fd4771f1841d",
        "cursor": {
          "ref": "3ae82566-2ef7-49d6-8a07-fb7d4942800f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "34c9f1e0-6572-4a7d-93e9-c0ed4314507f"
        },
        "item": {
          "id": "94bba61b-b0d7-4724-9cbb-fd4771f1841d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9449b03e-b9ba-4c1c-b297-d2090556955c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd9211b-c34b-46a4-b00f-58567857457a",
        "cursor": {
          "ref": "ebc53baa-e088-4cd2-af67-e7b3593d877b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "63eae6dc-d7ec-4edc-a270-caa3b7cd86c5"
        },
        "item": {
          "id": "afd9211b-c34b-46a4-b00f-58567857457a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c2aa2c28-b45a-4eb5-8164-f92292d99104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cab366-604d-4afa-8592-92c970c322d9",
        "cursor": {
          "ref": "8d5913f3-ef6a-4131-9385-67d9388ae721",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "100dd1b2-8616-40c7-ba11-79d461bf0e7f"
        },
        "item": {
          "id": "b6cab366-604d-4afa-8592-92c970c322d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1608f037-e610-4e48-89d3-1f3d9237839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca54ace-c1c3-45e5-907a-31fbc2418fa9",
        "cursor": {
          "ref": "37dc305e-8e7d-41be-882e-11fdf5ff7c58",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "35b0da70-8bc0-4da7-af88-7903884faaac"
        },
        "item": {
          "id": "bca54ace-c1c3-45e5-907a-31fbc2418fa9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0c75ca5d-9117-4f5a-bd27-db2e7162ff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63217957-48db-422e-84ff-95583780c040",
        "cursor": {
          "ref": "b53592b3-c6cb-447d-a6d3-8cebad1675dd",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "538b2a9b-1400-4d7c-aec5-196c29fcb929"
        },
        "item": {
          "id": "63217957-48db-422e-84ff-95583780c040",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3c216a8b-9ad0-49be-b180-07c1dd15182e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a2f6ef-ce17-499a-9c3f-ec2aba385c10",
        "cursor": {
          "ref": "3e488768-ba9c-4bc6-9a26-4d4d9bfc74a4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0636706d-0aff-402d-9eba-4227e173825f"
        },
        "item": {
          "id": "66a2f6ef-ce17-499a-9c3f-ec2aba385c10",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "215331f7-37ff-4d02-b590-25813b3d12a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad35f88-20dc-46b8-ba95-89fab3c0515b",
        "cursor": {
          "ref": "5091d21e-98e7-441e-bf42-56c1a2c68483",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "efecdcdb-b067-4e09-9d81-7a5eedd67ad3"
        },
        "item": {
          "id": "8ad35f88-20dc-46b8-ba95-89fab3c0515b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3273b103-44f1-423a-b1c5-0422b2f67769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8aa310-a573-4675-ac47-74c4f34157a0",
        "cursor": {
          "ref": "ab2a1611-66ca-49e5-8129-5a760ff0c4e3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4757ac2c-1516-4c96-8998-b5a3a7f4241b"
        },
        "item": {
          "id": "8b8aa310-a573-4675-ac47-74c4f34157a0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a874b03f-ee8c-4757-ade2-cd9a67aa0210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b08d74d-ddf1-4f52-b475-68fa910e94bb",
        "cursor": {
          "ref": "ccf72ef8-2532-4c77-8f4c-172d8fdad11c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b74ddd82-c36e-4814-900d-e869317aa28d"
        },
        "item": {
          "id": "3b08d74d-ddf1-4f52-b475-68fa910e94bb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7cda5e16-520c-48ee-8f92-dfb52feae47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c6c816-1fb9-4588-a531-296617e1edaf",
        "cursor": {
          "ref": "33ae0f94-1958-4338-bd0c-8d1fe6c9f351",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b1b47308-6287-4a07-8143-fdb6df162e29"
        },
        "item": {
          "id": "b0c6c816-1fb9-4588-a531-296617e1edaf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "77f26db5-ab30-4b81-a925-28b61d8662bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432df7c1-7e14-4ec2-af40-a8dd0dc6ef78",
        "cursor": {
          "ref": "af8feec8-c9d3-49f9-97bc-9f96002969ed",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d730b06b-1515-4dbb-bbf4-0dcb82ed7144"
        },
        "item": {
          "id": "432df7c1-7e14-4ec2-af40-a8dd0dc6ef78",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d396a698-4cef-4091-ba8b-0356993057aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019066be-1a84-45d4-8a63-1c15b0ff6a67",
        "cursor": {
          "ref": "388708d6-3bfb-4fc1-9603-1281a3db2b1c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c3fb30a6-e535-418a-b4ac-e2ef7b6d6156"
        },
        "item": {
          "id": "019066be-1a84-45d4-8a63-1c15b0ff6a67",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1ce22287-898a-40ce-8782-3099ccf14b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc822b-25ef-4921-b193-220ec1e38757",
        "cursor": {
          "ref": "be4507e0-a53d-4b92-a36c-ac28b7af2af2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ec3439de-9c22-41c8-8bc6-de76de277102"
        },
        "item": {
          "id": "5afc822b-25ef-4921-b193-220ec1e38757",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7b6edba5-0872-432b-8f1c-76b4a0a1f441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900380e9-3a96-4805-a1c4-a28d2fab9d81",
        "cursor": {
          "ref": "24db6156-b725-4c62-a538-2f53e8655389",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "07eb8cf7-caf6-4478-ad61-bdbc27604140"
        },
        "item": {
          "id": "900380e9-3a96-4805-a1c4-a28d2fab9d81",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "64df4a89-5aaa-4c12-ad77-6130067a004a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f0af61-2a11-472a-93f8-40a68d0d74ca",
        "cursor": {
          "ref": "d793dfbc-a0d7-499f-8a65-fa55e87c9462",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "45e135cb-7a3b-4c91-b348-c8622788a634"
        },
        "item": {
          "id": "69f0af61-2a11-472a-93f8-40a68d0d74ca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08b1aeb1-2e35-4f73-b9ca-39a67192254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bcaacb-9a9e-45a7-bda9-f7181ad2b804",
        "cursor": {
          "ref": "c7af426b-2245-4894-80d8-a63c3b2607be",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "03ef16cc-ddac-468c-953e-7ae574987a50"
        },
        "item": {
          "id": "42bcaacb-9a9e-45a7-bda9-f7181ad2b804",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "90d3ddbe-c472-413e-8396-08aa7f5d1644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76950fa0-e827-43ee-ab2e-d645feeb401a",
        "cursor": {
          "ref": "aa6282da-35e0-4b9b-aca2-f343d9432077",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d2d1bb84-7f58-43c3-81e5-bcad72b4bb39"
        },
        "item": {
          "id": "76950fa0-e827-43ee-ab2e-d645feeb401a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9650b786-c49c-47bf-a43f-0d9b4fd5fa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268a69d0-4fa7-4555-bf17-493e87deadc4",
        "cursor": {
          "ref": "391e528f-3270-42cf-8a5d-d7d1ae495f4f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "58cb7fb2-57c5-4eec-9bba-bb1b577571b7"
        },
        "item": {
          "id": "268a69d0-4fa7-4555-bf17-493e87deadc4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9bcefe5e-8c54-4ef3-9c01-a6855b066acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55063ffd-701b-44df-96b1-7c9c5b29c93b",
        "cursor": {
          "ref": "01256640-6a49-404c-8a7f-3a63844ddd3c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d29e602b-f7bc-4e7f-ab5a-5fc5f453ac2b"
        },
        "item": {
          "id": "55063ffd-701b-44df-96b1-7c9c5b29c93b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "439f62c4-fda8-449b-9af1-5d44b2027f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8010b5-9172-49ab-bdb4-990c9647ce03",
        "cursor": {
          "ref": "9e57cc9d-f071-4d65-ae0f-34b7c87a50e4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a7d3c808-8482-4d91-8f6e-283905ff39bb"
        },
        "item": {
          "id": "fa8010b5-9172-49ab-bdb4-990c9647ce03",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bf24be2d-42a0-4440-be2c-4f700d837143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19294ee1-ad34-458e-9678-a777723da9d2",
        "cursor": {
          "ref": "81b8f2f1-9965-4c5f-b101-9ea1aabfb36c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c058b14f-ee3f-464f-86b9-b072bc29b58d"
        },
        "item": {
          "id": "19294ee1-ad34-458e-9678-a777723da9d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3e1106ec-d3be-4973-9ac7-440626456dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8629f9c4-fc22-42a0-ae75-426b0c6bab61",
        "cursor": {
          "ref": "58478eb7-db8a-4e61-bf9b-c8caa77bff49",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1b5ced41-82fc-494c-8a30-2b0d2e1e62a6"
        },
        "item": {
          "id": "8629f9c4-fc22-42a0-ae75-426b0c6bab61",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "065be995-873c-4e59-b0a8-a89e689154d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a73e4b9-4c76-4b42-9415-cba1e7d3d10b",
        "cursor": {
          "ref": "4dd9c658-8140-40fd-9965-a899401aa21b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "498a7652-a61e-4454-945e-7de5fae053a0"
        },
        "item": {
          "id": "9a73e4b9-4c76-4b42-9415-cba1e7d3d10b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "05c118f1-caf1-4df0-89c2-e6bc343fde09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb846b8-df74-45e2-96b8-4140649c03c9",
        "cursor": {
          "ref": "f8a86a6a-bc1d-4d21-be8d-a86d9415611d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "465f5498-d4c3-43cb-a718-db5828c06bea"
        },
        "item": {
          "id": "cbb846b8-df74-45e2-96b8-4140649c03c9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "049021dd-a46d-4993-9b92-0303461c7f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73593557-ed28-422b-b174-7bd6de7825f1",
        "cursor": {
          "ref": "b26aafe4-2ba1-4123-9986-ba657d8e14bd",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cb1d499d-2509-48a2-85f7-e09302984651"
        },
        "item": {
          "id": "73593557-ed28-422b-b174-7bd6de7825f1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04cec15c-6256-4d20-a99e-ba0a745f029c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de03488-c979-4c8d-8ce7-ca5589a1c13d",
        "cursor": {
          "ref": "77300040-c09d-42a2-bead-8174c4ec1f4e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "caf3d46e-7ec3-4ddc-945c-2143ec9bbcd9"
        },
        "item": {
          "id": "6de03488-c979-4c8d-8ce7-ca5589a1c13d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "07c595f4-a2b5-441f-ae7a-d86a3eea0f17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f74dd27-0cd5-4e55-9ead-0053329c3ad4",
        "cursor": {
          "ref": "8ed2a910-4866-4c32-9502-aa96059a5f4a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c6e0d10c-50ec-4ecb-b506-f029691f9cfc"
        },
        "item": {
          "id": "2f74dd27-0cd5-4e55-9ead-0053329c3ad4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0289fc20-c1fa-452b-997d-b7ab7e410da5",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8913489d-64ac-4072-8cb3-1d8033405d8b",
        "cursor": {
          "ref": "3bec7c09-0007-4f83-aa8f-61b871236fa6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2322a3cc-f679-4f05-89b5-00f8ce4d2b70"
        },
        "item": {
          "id": "8913489d-64ac-4072-8cb3-1d8033405d8b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d91ce3c-2cf7-429e-833a-91ac5460009a",
          "status": "OK",
          "code": 200,
          "responseTime": 1449,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a01d53-0714-452f-998f-f71598addb65",
        "cursor": {
          "ref": "f9865dc0-2329-43ce-a01f-50aff7e1b726",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cc0270d6-c02f-4fc3-aeb4-55e83c3e9b20"
        },
        "item": {
          "id": "b0a01d53-0714-452f-998f-f71598addb65",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4ad4fbb7-1278-4617-af43-599401a478cd",
          "status": "OK",
          "code": 200,
          "responseTime": 1416,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25544dfa-307c-4c95-8733-27fb0b979943",
        "cursor": {
          "ref": "9a769dc9-5fd5-40e3-bbbc-c1e5be36fa0d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4827339f-c47b-4dbb-8c5f-0636f9d4636b"
        },
        "item": {
          "id": "25544dfa-307c-4c95-8733-27fb0b979943",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e313814c-fe15-4e7e-9b1b-fb45934bfdac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25544dfa-307c-4c95-8733-27fb0b979943",
        "cursor": {
          "ref": "9a769dc9-5fd5-40e3-bbbc-c1e5be36fa0d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4827339f-c47b-4dbb-8c5f-0636f9d4636b"
        },
        "item": {
          "id": "25544dfa-307c-4c95-8733-27fb0b979943",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e313814c-fe15-4e7e-9b1b-fb45934bfdac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5470b4-4452-4f43-87c7-416d1e9770d3",
        "cursor": {
          "ref": "31e8140b-a29e-4ef0-af73-9dce4f83b03a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1cfd2382-9c64-4f20-b59d-004a7dadb016"
        },
        "item": {
          "id": "cb5470b4-4452-4f43-87c7-416d1e9770d3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b28496a6-4a2a-42b8-920a-c886d2e59ae3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844217f6-e8fd-41dc-abc0-3d4cc71b4d09",
        "cursor": {
          "ref": "7700dcbd-3627-4343-855d-2e57f53994ba",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2a1699b8-49da-4fcc-a4e0-0c5f55c5297a"
        },
        "item": {
          "id": "844217f6-e8fd-41dc-abc0-3d4cc71b4d09",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "371c1eeb-c736-4616-b2a5-bf86b9ab66dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}