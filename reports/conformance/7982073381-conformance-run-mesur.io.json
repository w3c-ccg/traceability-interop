{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1c7225f3-e0ec-4eb3-b5ee-001536286d93",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eeb32c45-2bac-4713-ad7e-3e735af21f52",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1cedf7b-b4d3-45d8-88b5-12df88287f8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2f1cec1d-1a1e-4b1d-aa35-eb3656875dff"
                }
              }
            ]
          },
          {
            "id": "998ef03a-6849-4481-86eb-93ae23301df2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ca78bf2-47a7-4a5b-b700-9c3685e8debf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35ad1125-218c-4e24-be6a-9944cd0e0ede"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cd74c87b-c996-450c-88fe-6b88c5ac7f03",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "66c59f69-c2f4-4898-848c-28e8beb4caa0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bdf04a3-f5f9-4323-9e22-5fc926bca17b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1c820d2-9b7c-4eef-acbd-322d242af7e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16c84bfb-b4c3-48db-86dc-63f9e2e94ceb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d040e0f3-179c-4aae-b549-65de17d8d533",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5aa3d90e-198d-4377-b3b9-c97013f19b2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06760e5e-12dc-425b-a61e-96eb91d8889d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4378b36-2da5-4246-a6cb-f71f001aaba4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1681947c-c394-43d1-bcb4-6e83897f1b64",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f53ad1f9-f7f2-4c7b-ad0b-54525395e350"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aab7c1bb-3242-4e79-98a4-8c4886d0216c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "834a629b-cc72-412d-b332-37b6b3928bc5"
            }
          }
        ]
      },
      {
        "id": "ce045777-51fa-4386-9035-3e0ad9012bb6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "27e71ef8-203d-4fd8-ab63-bd926d288dbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d61cd4f6-9ee5-4014-b299-d550a5b2fd94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07f7b883-8f41-4146-adf3-2332bd57a604",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7469bf-051f-48c5-83cd-648380783906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f76127e6-db58-4f72-b241-319f9a2ffd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533c85ca-ffdf-4ecc-bf68-b944893d35d8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b74cc6e-da42-4a1f-9286-63d7c8db5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4a940be-6229-423a-a458-5f87cf9e950c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7cf3d3-6dee-4ca6-97f8-e13e9ee0da59",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bf6fec-c77f-49d9-8323-ab15f442a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1edc1860-e315-48b9-8a04-e48867485400"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59d78eec-305b-4911-a556-bf44158e4f6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58091f15-970d-4d0d-811e-9a9f02361c89",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35695988-be9c-4044-8ad7-11685cd75bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d962324d-e906-4623-ac8d-20a94ef53d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beb8b2a-a59e-48f6-b166-7efd701df8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf903fb-21b5-4d48-8113-b44626575f9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3842eeb1-9f3d-45ff-9cc8-48c57021ebe5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81809179-9121-48ad-b7b0-cf8d3bff6066",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f906d48c-2d78-4446-b518-ac5ddc5e982f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bfeaf92d-a659-49a9-918e-04a6c6b41fa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58ad2c42-cc2f-4eba-b38a-779b6213cda8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ec79dbd5-4a20-48c1-b9be-6af5ae90d3c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b62f22a-9819-47a5-a338-0bddca3aa266",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d89af23-c9a8-4b6f-a549-7682e7ca0526"
            }
          }
        ]
      },
      {
        "id": "8e91dced-9d9a-4d27-838d-b5cc24b8b9a0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9673fc0f-4d79-46c6-8518-1acc4f3ba900",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff706921-b94d-4be0-bc22-40e239cb3263",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "42557807-aa74-4423-a6f5-61b17f77d886",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a419b621-dfb7-472d-90da-8bdc43994e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f75c41-a41d-480b-a702-d42ff32b7843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dabb82a-6fce-4131-9dc1-22491469c46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54fc0bf8-5f39-4187-90d4-58c8517d3e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff8d743-1f45-4feb-b914-2fd252a96429",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b68fe4-33e3-41d0-a5ae-4602471070e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b0c936-911c-4535-b40e-b56e6adf9930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c244e6bc-00aa-4c6f-b116-ba9865e3a056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61bcdbb3-dbb7-43d2-aa04-0012d07d44ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91cac26-1600-44fc-9ed1-83a9344f0261",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b9b469-1686-4ee5-ad5d-34a30ffea72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8346b80a-244e-4494-9bf5-c3ac28f4cc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944ce67a-9688-4241-87e0-7f229e45cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7217b57-6dcd-44f2-9813-8bfbc2529b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87f629f-3e3c-400c-9440-7351573b4468",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06780fa4-4897-47d8-9b93-ba6e87005bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55cf832-0732-4e1e-8a08-0f24ea70f107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d367837-c818-4043-89bc-10c6f64cbf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad89e730-715a-4c34-8a22-9de966b403d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3badbe-6dc5-42c2-8b50-9489edf1fca6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0b9954-a959-4402-b807-a97a8e1dcfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae706d6f-10b7-408d-b2e0-7ba3ed161741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e9894-4ba0-424d-a121-7a9fb61d4131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ce3c516-cd4c-434f-9e45-1b6aa278f007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f25435-76ff-44ad-82c1-8a786e2e518e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae9f5e6-ffc4-4582-a756-a556ea962966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a705354-8db9-4c10-b965-98a7cc646d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deae849d-2acc-47a6-aec8-ef524502264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea6d90b9-1b7f-47f9-9e2b-62fb8fd0d149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04409c-561d-4f3a-bc9f-739875130f93",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f445dd9-f1d6-40af-8f48-2fc8f84bdb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6673d12-284e-4f3f-9f62-ffe7b4e7e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba5bd24-7d54-4769-b18f-e06f66641357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ee42658-6c73-494d-9acd-ba9def9f757b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1098c89f-2bde-47d7-a508-e5c39a83aec4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909126d2-7e94-4b14-bd01-021f6c630572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41259c19-e96a-409e-9702-4ae231aecd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668c4552-b2fe-4d39-8431-d50f3a0dfc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10752af3-29df-455d-a6fb-731371df1caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bced1ceb-81e9-4632-b6aa-ae3953125f44",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d3f2b4-ab04-40f5-a964-5e508829f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47047c07-12d2-444a-bdbe-ffd2e1205257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d55ec7-8812-4a40-8648-438d3a9e995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5637322-fe98-43f6-9404-6b954b2888f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340c5249-ca46-47f1-bcb6-1459801099c6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f626f6d2-1683-4344-9928-67a8b462e373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dd4c88-dd8a-4036-8bf1-16851a644ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821aee95-5571-4236-96a0-a195028fa07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1413505-8117-45d8-9ede-fd39b886727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210936f3-8d70-4886-8c9b-c3382362828f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db81c03d-f434-45af-b751-c95e78a9b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23391a8-ffa6-4523-baf6-1c7b0c7a9c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57eec08-7f3f-47b1-be6a-15cfd6150f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b5e704f-6942-4fdf-a3dc-0ac2d6cae418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c66e85-5604-4cce-8ab4-f2edf26edaf1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ebd9a5-407d-4c2a-9f6a-ed9602e449ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5969f54f-f542-47e5-acd3-f39a10453521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee6c7e8-e5bb-429d-a210-11429fc3ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c94fb75-8d3d-4f36-bc87-b3b82090acf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761c7604-d9a3-4db4-95c5-563d888233d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b4e4ce-5e55-4556-b299-f54da709220a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e738fd-1f53-4ed5-a1d4-a92b9a3079fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62864d05-c251-453b-9b2c-19139fa22644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06024f53-ed30-490e-87ab-e25b9ab008c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faaac66-245d-449b-9f7b-c412d922f395",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822bff4e-2f69-44e0-b706-f3649f796dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237599aa-cbf4-4824-92cf-1b6c82dfd0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e634ac-4ad0-45f2-8258-a17c911e72d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d6a991-831b-47aa-be5d-b48fcfa66fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8274670-1a6f-4130-9eb0-64269e587cc1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3137afab-1b88-40a6-ab9e-0baae663ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98813b8-7e88-48f8-beae-69985428ad67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19fe218-f6bb-4612-92c2-7208886364bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8397083e-a4f5-48f6-b721-e425e6118c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0881fed2-5cb6-41d1-903f-1a60a22bedec",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99355883-8217-42fb-bdc8-31629080dbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be4e59f-0ac4-4262-b78a-2e12c37801ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcce7f5-e751-4e4f-9d5e-146b37a3c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe616b9-53bb-4090-83f8-b4e33b3681a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1952d8-7ce7-4cf4-9a11-a9de2df99460",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6731cf6-ff94-40ad-a184-e4d302432cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac863c6-2838-4665-8901-cd8eb7801798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bbec38-9ea8-4a62-8770-1ccac95cefd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90448a0b-32c8-4838-af0e-496ec0189982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8955e961-ec81-468a-bcec-bb2a8a3bc5a8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad90f76-00ec-4347-b5ef-96b9e2a82a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b2b86b-d3cc-41d8-9e6d-792f268633bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dcf792-8691-4196-8750-1daf42dd94db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcab08db-1431-476e-9da4-a53da655f50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100579fc-aaf7-437b-aea3-cb41e114b3d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a58e9-5acc-4d89-9366-cab7585c3ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66dab16-b297-41cb-ad7c-241f21e5880f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a76b77-30d7-4547-b9ec-87744b9df4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50403da-b203-4cbd-8ba6-8ab950aec2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe313a18-7bb2-4ede-9200-5e19c5ab41fb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e3195-6559-4d5b-9bea-ea59a0b0c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2ef645-524d-41c5-96ca-722180a0d5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f02e5-c4b9-4063-bdde-417e3300599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d39f7712-565c-4800-a77c-dc9ca0ddf6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13acb073-92cb-4e6b-81b4-b1a63ed479e2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6142716c-2170-402f-8c21-8bbde0da5152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d052bf92-4bd5-46e5-b03a-459bd9cb6022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d98b2e-a03f-47c8-a572-3bf1557b2801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6547413c-a3d0-4538-bbbd-feeb9165fe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd2eb72-e189-4fbf-8b15-baa83057fbae",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56f4566-15a9-41b5-8e77-b43e52ffde64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c98e68f-96af-4573-84b1-728dc505b4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708d22ea-5cf8-43ed-aac7-ff12d95d808b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64b8cc5-e785-48ac-863a-10fddd271790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d2d2b3-0d61-49cb-bcaa-80d65629ec2c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd381d7-5149-4b61-8661-8be3b2738d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84c6581-09a4-40eb-be7f-2c0e521a49b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ced4898-35f0-40ef-a287-9e0e5a8d7fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8274d0bd-a018-447f-91e9-a4967fb16830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebdd7d4-3edc-409e-b1f8-5ac26fd8f0d3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80d5549-cd16-4826-8ddd-7ab0a6f4b651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb7d65a-c203-4e16-8491-6485787b17b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f091a-de0e-4fad-ab62-c977a6c79e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12adfef-32af-4575-b4a9-3acd0cebc648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c1ab68-27f3-4eed-af30-cb87ff2028c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cd25fc-dc50-44e5-93a4-c1e4b7ec90b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4f9486-2485-4a72-9aad-d44f0b2501aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6626801f-f51e-4874-810f-5cd552719099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f742c8-6a10-414e-b8e5-3b4dce898473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41be283-61ad-4983-bcaf-a4980c1fbdb8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a05f17-e393-461f-b1cf-217aa675ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db66645-3e4f-446d-87fd-01c7b0866373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8cd56e-2017-439d-87f1-6fadebc37c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c768d42-9374-4593-b519-ed317741487e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b87cb6-52c4-4daa-8400-9b70f18dc27d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426fdf0c-21ad-4be7-97ec-3fdceb006e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa365441-9a12-430b-8209-e5b42f770418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad0d758-4fc5-44ed-8dff-18f9b21eefa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc9627d-5191-453e-a5d9-986d9dc1bb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eb7fc6-85f8-4e3f-a27b-5817f92aecac",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896ee5f3-f7de-492d-9492-ba06579ba0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65828cfe-cabb-43ca-960d-51000ec02433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2817be49-c69a-4d4c-99b6-447d95a2b703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46790ec3-6b8e-4ec4-9db6-db3ddcdc6eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bec6b7-a12e-4506-97ca-c0a6976c7bfb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfbef93-ef52-4fbc-8457-aa91eec9b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8100df-fbea-4fc9-80eb-d1a4c6b4c1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b30cfd-3c1f-4354-9b6b-81f4fbacb2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "996eb8af-1bc4-43de-982d-e0fcdf160db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60549c6b-77e8-43a0-8daf-e96a7ed88b0d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa374966-a3be-465f-96e9-533fbecdd9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be32a0ce-de96-4561-8c9f-28fc773a3146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf62d146-fe9e-4a98-82a4-fb2fd4cf2d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ab2ea9-b7e1-498a-81be-08209ccb0d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce2bd8f-66d2-4e8b-a119-bc7a89e54f31",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8749fc-ec4d-4426-97d8-d1d9078f3bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1360a87f-eebd-4d2f-88b4-11c151c3aad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cd6811-9903-4494-bf58-c2b9c05e32a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3eba926-a1f9-4cb2-96b9-f89e2dc1950d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef4f979-9936-4cea-b117-adbefbcfeeab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bbe4c8-fe6e-4022-8be4-0bd7180c7759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3821f7c7-5c3f-4280-bd1f-271c260f9d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ea909c-afc0-4873-8a96-530f5e182a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23fb411d-037b-443c-9f12-38dfa6ab0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9dce10-44b6-48ab-9f81-6cbb1769e83b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6696bd0-227a-485b-a707-37dc24a1f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fc1b45-2816-4184-9d54-81340a73e2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9915a820-313f-4f53-a466-4dad1dc21c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e36755-c580-4294-b6c9-7a890dc248e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776e5174-bbd3-4941-870b-282376964151",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf35b837-16c6-4e72-aac8-522888ad2e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2938052c-f4f3-4dda-b8f1-cb13b425b1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8cc3dd-1e4f-42e4-b9af-e193b010b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd7c6da-5802-4e72-8d16-e3e54bd4d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95580ae-250e-40a3-a752-5eb0b3e7c3ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febde1ff-d6be-4826-81e8-8570c60173f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf224816-a05e-4279-b885-990de6c38a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8321f36d-21e0-434f-bdc9-fb0e2f5dbf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "658915f9-de68-498e-8ac0-b801f8db853d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb11e80e-9cba-43a2-b919-4a8bca16c723",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba9dcd2-aab7-4884-b98d-58fe7774cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "929846da-c535-47a7-b70b-b7941c464f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1da35-6248-4efd-8053-9130e802529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f962a8ad-47f8-40ae-b66e-fa5bd8094aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410feab4-9199-4715-b8a3-e1eb3424e44c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f870b60-1116-4b68-abd3-8fdb5d1809ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17bac89-e820-4263-93d0-5e63d70f95de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cd0456-409e-4966-982e-fcceb2883cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3cbdef-0456-4865-b545-bd6b6397afc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3835f041-29f0-42f5-b774-70f28ecedb67",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0ecfae-e01b-45cf-bce5-6ad2932d7193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed86975-f378-4f5e-93e5-ee2ea798b6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4ec66f-42e3-4976-9798-da8c7168e532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87aa2f00-fae7-4e09-8c8f-d4bf1c166349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9922ae-9d33-4a08-accf-0b8a2d509bcd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74ef4a7-af79-43de-a70b-ef25e502fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b1ea9f-863c-4f51-8e5e-c1a74dc72c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1150400-4005-41c1-a170-cfbc43c7ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a5f1d3-3223-48de-ac6b-747cf0aff0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a67de8-c498-404d-bb5c-e0abbd430c3a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e292e29-6083-44ca-b74c-0df0bbb1d9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb49199-2a9c-46a0-95ab-f2a800976f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4dbc23-dc5c-4959-b987-4afbc8ae8742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e0cdde-4bfe-4948-9770-56498ee0a88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163bd644-ead0-4fae-ba0c-0187adb02c6b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c4eeab-d3fe-41c9-b103-66f16189de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19346f0a-cb56-4c4e-9ffa-41c1329a81b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827a100c-7b44-4a53-939a-51554837630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a963d2aa-fe13-44a5-850b-7fa84f00acc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84441e19-8215-49c9-b52f-40e36103a8fd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74629065-7ec6-43a7-a7c5-8f08b6dff93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa0d6b6-aef4-4d0b-8e88-2af4b251abcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9383e0ec-439f-41f5-aef2-885571ea0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0da887b3-87c7-44f9-81b8-4b37d4747728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b879c1-af48-479e-abda-6b09368747e1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f518a-ba91-4aa9-ac6b-4e3f6607f068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fcdb64-98e6-4682-af68-bef3bbed0967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef90596-3d13-4f72-bbc0-8251acd44bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3bff02-2fc5-4c01-ba98-169315c6a6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7309ca-c35e-40c8-9015-ee660ddb1c0a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76c735b-58be-4c51-bc4c-c59c350ecf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f23c296-13e6-4065-83f0-a514f6a87040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7beb39-ca22-4a52-a86d-29d37c1c2777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe47779-8e40-4b1d-aeb6-7ca38ec7a13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09982e84-659c-4c78-9532-44b43363f32c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274c888a-e896-41b1-b11e-d428d711db84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1579eebf-566b-418a-a48b-ea88baaf3b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d258e66-83f2-4c79-b78d-5fd2f691bb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db301b59-1dfc-4941-9b10-90567f331a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7ebb7b-63b6-41d0-9412-ba126c95ac8c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6b1894-edd4-4561-875a-bbea5761b8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d90c59b-27e6-4e10-870b-94320e93e95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fa8971-8a1d-4918-9a38-8baf5a998819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "193e6672-eef4-48a2-964e-e052833b60ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bda1ff-1a05-4708-bc39-619738ee1cee",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73136499-1e55-4cee-b89c-0ce990cd77de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30adfa2d-fa34-4e74-824a-a023d8fd1464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6264b8c9-28c8-4e84-bdeb-b6cdbba51deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8c3aa0-593f-4482-b228-3b9b1a389ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57f891c-2f52-438c-8f38-368900769366",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7366408c-efb9-4695-a640-5bd6daf5c0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e465b37-239b-41a9-924d-0fd06cacb277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71936e56-23bd-4ee8-b121-031c0b853dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65bacbd0-f850-44ab-88fa-1ec18f339822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0468f9-9c1d-4041-bff3-72e4b143c615",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192d1bf9-35ac-46a8-afec-7205da11fb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0360c02d-d3aa-46eb-a0df-68e0c3161dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb8c0f7-6f52-4047-b5cd-f83f8f019071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbea5f5-b649-4b74-aec0-6205401cb716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76359a59-97af-470a-9a6a-05857542c59b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7007c2f8-fad5-48d7-9a07-f12b0377281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adc9957-4cd1-4f37-a0ec-2e36cd0d2a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a5890f-31be-4a90-83ad-fbbb56708c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61d88060-446f-4550-8c97-65f15ab1aa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7dd720-91e8-4861-bfd9-4ea925c4028f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a401f918-40d2-43b5-a39d-5b839ce71764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8640ae5e-cbbb-48fc-b0d7-87b979213b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a8ab81-e32f-44a5-8631-458012cef210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4764b2-b225-4e36-80c7-f9a4eac36cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91930d38-9c67-449b-8c84-95b95a290571",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c9cce6-0eb5-41c7-8723-71decacadad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b4b5d2-cc0f-4a0d-b04a-e4dc605cbced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f8d1b-0ae5-4bf1-ac74-c1d8995bad7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c026ab8a-b0e6-4d12-9a6c-50967f23cf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1146a2aa-5a6f-48af-a5fe-0436405f6194",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ef3b4f-c80e-48e3-af53-06fbd7049aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca98d47-f8ad-4616-9d5d-41d9de0563fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4d6c91-7b85-4109-b442-16277f5cd8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7055dd-52c3-4041-b6ce-300633952918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0016203a-fb18-483f-b0e2-5820da06b396",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccd3e1d-88e9-492f-af10-e1e4cba23fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4103087-cb4e-4a6d-b69e-caf516e4826b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9fa7ed-f5d0-48eb-9387-1471b40e2470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dbac9b-fd0c-42fe-b6c0-743bc6689eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a252e750-ce5e-497f-b8f0-194ef346e944",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14a976f-9dcf-4852-8a02-d7998277601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664032fa-b779-43a5-b0e6-3fe005431757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e23b67-6e95-4dd3-b032-0e5dc8983222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ed42ad-ced0-4572-a72b-5282ace1f417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971b2293-c497-4ad1-a38c-1e30096a11dd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abd6b4f-028b-4f76-b5ac-9dc4ce593bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6126c1df-fd7e-4a4d-944c-000a7fb1d18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100868ca-5f06-4989-9c8b-318cba768d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7b45478b-adf4-4c04-9159-b3fa2a0e7340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8c9ca2-5289-4672-8d3e-b431505564f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520bc59f-d769-4bc0-98a6-905fc89c7143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5d4f88-27e4-45b0-bdd9-8fee46058d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b57c938-0a98-4e91-aba8-44aedf83e6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d63e7f8-0d47-4237-bf09-8d63f7a2bca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197fba4e-2662-4b3e-af1c-d85949e33763",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63868159-161c-42ad-bbd3-ccddee495e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca143d0-6cb4-4967-9b8c-36f9d65763c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ffe27f-5a4c-4274-9dfe-b66e99822213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6769823e-056c-4e40-bf1d-2790fded7df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830e651e-9c61-49d0-b9f6-10a9228b2077",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c55f6-759d-486e-9e3b-1a03548719ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eee4896-e54d-4de7-8d06-9a045590c054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8d1c0b-8519-4497-b753-6ba4f1588da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7073798-f123-41df-ac00-93e6468fa811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf4e71-5fe6-4530-8071-5ba204960dfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf4e479-502c-4db1-b288-c1d9c5fca051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad076eaf-a207-4ce3-b17e-98f8862be431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420abd90-597a-4bbf-8504-671dc4c27584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b35a3d5-8679-42cd-ae19-92af07e8d919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e2a97d-b239-4fab-9c57-39a3fd3ad058",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4383ca0-a3f9-441c-9f81-09f453a40c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82182662-8ba9-4012-9e40-3d6faf90497a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d96d42-fba0-4373-b21a-abd5bb2f7b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44121ef3-076b-41a6-b619-5a33c4b3baa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af277b-1cab-4efd-b002-da815e4a9041",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b366e8-30ed-4cb3-bdb4-26f03e82eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e0535e-8965-4576-8a78-ffbcc8b3d108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bdbcc1-9b09-4161-9fc2-df2b870b16c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8028d5c3-a46b-4c06-8a06-8a09c579ed98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbd50c4-ae73-4e74-991c-6681991ce7b6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6525273a-88e5-4bf4-add5-f065bf49ffd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4458f12f-d2b5-4cee-b53c-9f8c00aa4646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c155d1c-034d-4c8b-99a7-cec8082c5fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de62037a-4629-4fc6-94df-da2614fff91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca22d47e-ce2e-4bb1-8a63-34c8827c618d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba89e64-a714-4ec6-a614-7ff8864be018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302ca4ce-21bb-4279-a684-52138ee70cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2b1e9e-30ec-4f33-ade3-b47612adc12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8151a7bd-4b4e-40f6-94c7-4a23e85d1c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d7ef84-7310-4cc9-8ad5-82ba077e5b49",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86ffab4-3d12-4d7c-a0cd-df8441261dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932f55f0-7ff5-47fe-aafe-163f0b73e133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f4331d-768b-415e-a5de-113639eafc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f786168-6edc-4509-9944-a04eb828f43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8a0244-9554-415c-9c6e-d7303bef71ab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e15df73-93fc-43f2-b666-34961ddeec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb29e06-f80c-41f6-ab25-a0c5287fb11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d551b732-a637-4677-abb9-74a75ec4457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabf3735-52d8-49fc-a89d-64beb50080c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aeae21-9730-42d0-b429-3f6fbaa28561",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc34b8a-b9ea-4bd6-b5c2-ce9326bcccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c548fd-32a1-413e-bd31-65308ab9315d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d8b77e-41f8-4b61-9111-6730cd7155f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e352cbd8-6fc2-42fd-8372-02bad050457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3efef3-c40f-4bcd-afbc-72c29d4f3b07",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ddfceb-bdfb-40e9-b771-039fbebd78cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073e3f71-caaa-4162-b65f-130469d2e3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5a0ac3-2d44-4f5f-bbe4-81a712decb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e28d253-e0fd-4d47-9d7d-28e3218e2d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5718c8-03aa-478c-83dd-6a1e1150c268",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67fdc62-29f9-4dfc-893f-ff15ff8e1ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce114ce-baf8-4e19-8cf8-8ae31f8aa3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611b755e-a458-4343-b160-8c7b7f037538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3cbbde-fde8-4329-9fb4-e32e4702b80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdab1532-56cf-42b4-8a31-ef74c44204af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3241c0-dc9d-40df-a72a-fc2356964bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ecd289-dfa4-44a3-bf5f-aac36dbb1951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08a664f-bddf-4ced-8d47-c54d829a66ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d6e76-aac1-4f7d-a2b4-6c795e4d6349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db004d6f-ef87-40d0-a56b-07642ede6330",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da15ea27-75b6-4a4a-9eca-116db6b9c647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd8ac26-9cf5-4406-a34a-1942df1d1d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c56191-0e20-498f-9dbe-613fc7e6d896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9035d616-c650-4169-bd6e-120afa408e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ba5502-d644-4ec3-88b4-3c38e0e1f2e7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa51171c-a85f-490b-985c-d19fd255ddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665f57c6-3cb8-473b-99e0-8ea3b0cbc76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f06901-3eec-4c14-ab04-f10b4398789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8bf49d-f108-4c51-97f1-cb07375a41c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50187fd1-dfb4-4e22-9f72-7ffbf888ef4d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aa32ed-4263-410d-abac-4b8311b6f3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eedf84e-97dd-476c-ab1e-69a5cbb738b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a3416e-707c-43c2-b770-d450c612ecd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6ea387-a557-477a-832f-dc9764f29bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cef588-9d2c-42ea-9b0b-997dc603f915",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5935400-89d5-459c-ae17-ee750177b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2549fb4c-c5c5-4100-801a-5f57db43450a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743652b3-0e4d-4625-914a-2f8c1bd47546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2480be05-fd80-4969-a26e-042da2b3925c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0483124-4715-458d-aaf9-611648cfc300",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05920d50-9609-4d96-adcd-849774f1f415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac46fc1e-0dbd-4b0a-b2e8-cd7244fe05a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2441e0-f1cd-4e9b-8ca2-49fb36b59cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b70484-a8fa-438b-8d2f-3919565ede15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49610848-6c0b-44d8-bffa-e3f61cbf8752",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbace6f-0047-4d8e-88dc-87e78ce728bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9def41d4-571a-4191-a7b0-d7a9d8d0eab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1345f8-7707-4c73-a3c0-2cd446251f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f790b2-adc5-4a66-a1ca-7cc0742151fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4736aa57-5ae6-4b87-be30-4e73005b94d1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fe7068-42da-41c4-af81-fede5af2e16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d601793-b737-44f9-be39-0ac4de17f0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329dbbc6-f574-474b-8b78-684349772cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0c384a-d20f-4fe8-bc00-a3875bfb9078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9ef493-17a1-493f-a677-2fe4bcee77dd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdff77f-89b3-47fa-baf7-4c8ab31186e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea16d7d-7cd1-40d4-b9d9-8a5556aaf600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e517da-42bf-4d01-b6f8-87c6ef120718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebbfc08-7d65-49eb-be56-a15f673b8651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5cd383-84b9-4e0f-b10b-83659b471345",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c52b03-146c-48cf-a61e-1c92a6aee7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cd5e00-ea4b-415c-bfb7-05796580b4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99d275b-9acd-4303-9551-ccb6d9ed7417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34c30a4-ee52-422a-9a2c-793702318dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a7a26-9b3b-4443-b267-d93ec1a1e097",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe56ee1-db60-41df-913b-0db310e4e386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05415189-9e8a-4272-892b-311b40aca103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87cf296-05ca-4903-a4f2-7b951742330e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c144c8e2-aa58-4f1b-ab28-33d5ce27e910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535ef321-16a1-468d-9cd5-36ef4ad083a4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3526f6-fb67-4de2-b77b-f4dece001ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f13851d-00bb-4c34-8a9d-a5df6dc57ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc42647-927c-4d7b-a10d-3ea6b5e082ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fc9cdb-6e8d-408b-85a2-0b7c5e1d7739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c510e7-5333-4736-9cbc-500517f326ca",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca883186-c3fd-4c7d-b9ce-4af5f925a1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a15d6d-d064-40f4-be13-f575bf0f3fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0e1590-ff2b-4cb5-baf3-f420a5dd340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff59d14-d18e-4f74-9117-7eebfcbc74e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7af3fd3-29e6-4baf-9d4f-6368a7ed03b4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c605e3e9-1ac3-4940-b1b7-98b2c2da955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a8fb6d-7000-4ce3-bf0f-e350afda68dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a689c3b-57ab-4b29-915a-e30c8f38cea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "219cfa94-30a2-4599-afe0-15b601b8dfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12d3fe7-fe95-44d4-967c-11061c322307",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f909ccf5-3258-4bcb-b277-390e38b40b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810e8610-64a4-4c02-8980-e22aad84d6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a84fa81-1104-4fa4-9228-41c0e49ca965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d1f4cf-7068-4e91-b82e-4b7d8c426c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2762ac2d-a5da-4322-a7f4-5a5969b771b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4a3809-8a04-48ba-9006-09fdfb96bd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fda0795-c368-403b-8870-673f30b6f207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c806e05-4e23-4a80-818e-3018eb4ebb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3d9029-2781-4e0f-a269-5a45fdfbd64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d029af96-6a4c-4bad-b66c-a315761b6e2c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b64eff-e747-42d2-9fbe-ae3cce234e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636aa8f7-2575-4d7c-9400-316f317fb4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46cf097-099b-45ee-aa7c-362d7bd60964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dcc0f1-e73b-4432-8ffb-4d6116e58f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14795baf-c22b-42eb-89e1-836dd00337a5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83725a0-e838-437a-b6d4-245d2311432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed47206-7270-46c4-9064-2d7e360bcff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79895035-f7a4-4d27-9569-9f8d5600bdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3c3b9e-c0ce-4bba-bd7c-7bf50e18deef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a2986-65b1-4261-8da2-8fc7746b2cf4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e4d46-24c5-45af-b406-3c9891bf894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918891f5-74d9-4741-91b0-34c6e7263eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1334f8e5-65ae-472a-a995-f5e27882dd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b585486-ef9a-47a4-856f-07c3570152ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b594a408-449d-4388-87f5-abd6ba587d5f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7193d9-8310-4fe9-a4ef-f0995cdd1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502e046e-ed1e-4404-a582-c444eb1eb3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5842d8-9043-4058-8d61-30220ca5f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cdbe22-fadb-4c42-8b1d-3b2acc36edd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c25359b-7bd4-4f7a-b328-d6b7da47c74c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9779ec9f-7c48-46f2-8a8c-ead821e99d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27038cc2-0b2b-4d0c-8fa3-4b6d67b8c1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e5a90b-9958-4518-b25b-7eeac2e09b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2a2196-ac61-4a94-bd24-bf97ecf512ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1e860d-1855-48c0-8841-6c2abe411b7d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763a0bd7-a8e0-422f-98d2-c2786bf184eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d50175-0399-4377-8939-97b8dba7ba2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d202d1b4-3316-4d55-9b25-5ade1ffce647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8323f7c3-7107-491e-94fb-5709b875d03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21f02ca-a0c6-4626-8357-ae967a3e4206",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911262b8-bb2b-4d6f-b379-40d5e5d5f20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e64dd5f4-9157-4106-9d43-17e75559d38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398db48f-c423-44e1-a2ea-793bfc3ea8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9308f2e-53df-4a23-b5ed-1ec764a54f86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3df9c7f2-ee61-4b90-ac14-96a3d363fdc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "037d88c3-839b-4c75-ad5d-ef660fba54f0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479615ad-3e90-4851-a428-cadb62e31baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6993421-d6a1-4671-823e-951f3ad07694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731b7e24-baab-4e8f-9b1a-3d295eb0bfec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "203a5c26-ed8c-489a-b9c6-90d85d346055"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "940ceff3-f6f7-485f-af50-7e2a86322c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bec71b8-5090-440d-ba10-788824e38a72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f925e99d-7ee2-4304-9a32-7471460c5ddc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07f36cab-73be-454c-b1f0-7e1ebe1ff7d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c33814d1-dbf5-422d-9cc4-48c149a236fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55f1fd1c-97da-4f4e-9765-1992797fa5c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06dce272-04eb-4fa6-97c9-65d5fda5235c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a42595d-a562-422e-bb6d-7f4aef8fd6d7"
                }
              }
            ]
          },
          {
            "id": "86face95-979e-4566-9c62-3f6fd2f03dad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b77e8531-15bd-4999-bb7d-0592e18fbb72",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ba022420-be41-4fd9-9ab6-6d2cbe4d9c5c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7bd9da-038b-4cee-878b-d2f5c4592d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d369bd06-d378-42f8-8d4e-9b011f9b0857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bdd3b0-ba3c-4ea8-8078-42b8e64ba04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afc5de4-0593-40d4-a85f-40486f0eb131"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c79c367-04b4-4fd0-896a-f89790d5ad60",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "086f4d37-7144-47c3-82e0-27590400c4d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5e7e4d6-e9c5-4e70-b1a1-0ead848911fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4dcfa19-4bea-4752-b421-9f6592f0056a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc007ad2-8e7a-413d-899a-d6becc3ce9b4"
                    }
                  }
                ]
              },
              {
                "id": "77acf3d9-e0b6-4ea7-9ec5-a1c0eadb5d79",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58db5940-2a37-450c-ae4f-93052ee28486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab1f9b5d-1d92-4b74-adc3-804ab803b89c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "250dc78f-6074-4661-a5fe-1eade998f77c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b96d28ea-fbd7-46f9-bfc3-76a48a1f6201"
                    }
                  }
                ]
              },
              {
                "id": "702de76e-cd91-4138-b75f-b0e2b98ff2be",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a703c001-9b73-4ebc-9e86-aaf1854c4706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10ac3fcf-6b7c-4b04-9881-7cc7206b6984"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b22296-6222-4d16-93b2-87fa94f55feb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e5b53be-7a20-49ca-be57-f51537c5659b"
                    }
                  }
                ]
              },
              {
                "id": "8c9c7f9b-3e39-47a5-b5d6-1f1fc920e7d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5333592-4b4a-4742-8c51-90567d3b43de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb9dcf0-584b-4e05-ae17-c3dc4add2800"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93354dde-7b7a-4307-a5d3-ca33baceb667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "efed75f6-6548-44ea-abde-4c75bc2f0c2b"
                    }
                  }
                ]
              },
              {
                "id": "959bc1ad-763b-45e9-8319-b679ba1fc3f4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8171d0d-3fb4-42a6-a951-ff40cfa0ff27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "affaa72c-12ae-4063-9d0a-b532bb6184e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09448bbc-8932-4387-a0ec-1cf534c8b902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "174e5ea4-36ae-4859-9022-e51ced9e1d3b"
                    }
                  }
                ]
              },
              {
                "id": "ce1f0762-d5b7-42ad-b537-221310f8b2dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf2ea0c-9b8a-40c4-a1b7-da7561db4577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7849d04b-2b9a-4201-bbf4-7c57f3ed8de0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a670c7a4-bf01-4b85-b28d-af80c3537c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51cad40d-3483-4eb4-948c-26a58e42c5fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00d21bf3-6d7e-4054-b423-5fd66216b2ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be0d7392-6818-4961-abb0-f98188af34b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e683ff68-4e23-47a2-a4a3-85ea39689bb2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba052ae4-ec23-4c16-a43d-6b418968d542"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c411c55a-ad2e-4bf4-86d3-982732743fa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b0d0cb67-e444-4d4f-80a5-9e6054f52c7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6402bdeb-5729-4524-a251-5873e353bc4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27a6a2c2-e33e-448e-a366-38fe16a62b29"
            }
          }
        ]
      },
      {
        "id": "69b90d7f-ea26-40d6-9532-d73c53a290ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3bdfb82d-dc27-4191-894e-2cc811f1c304",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1495b937-c31b-474f-940e-5a164ff89d3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c68c739-220e-4a51-a733-2210ba40c623",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35701c9d-665b-4a4e-a2e2-47c6bafc1265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c552b1b0-21c3-4fe4-aac3-b9649c2db58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76e9524-357d-4e67-b0fb-6e65efba17d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "85aa5830-9db1-41f6-aef4-1aedd3ea3c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d22de12-0f56-4ca8-b027-5791ada85183",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7797aa7-b9b2-42c2-b97c-b5ca6d466b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c711d5ef-b0f4-47e1-99ca-bf7c97d29168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299e078c-892c-4c67-9f84-7d03b940247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfb5f37-689e-4cd1-b439-ad66bd02e3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1624c808-136d-45ce-97c0-708096ae4601",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cce334-fbb2-4a83-b8b3-33fae5d083a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ade6ae-a868-4fc3-b7ae-d02ba6483786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca71c4d7-de51-4b6d-94ec-efc595085286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6df93c-b2b3-4581-8cb3-34e7ce1a89d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d953ce55-5681-43c4-b8de-9666358e3f57",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f01449-b4a1-46da-9118-bb01c5f7b05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647fe4c5-3d87-4124-9c67-aa84a1be19f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd755b-b9cd-429e-b235-f2e5aa1f3b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d2a4c3-ce0c-472c-9882-e0c102484693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664929d2-ff47-41c2-a70c-6fefc7701086",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a3a71-a67d-459e-ba15-316e930608d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5fdb92-3e88-4de1-8528-c4c6ed5f8c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454b9539-2825-4072-9ae3-61d38fd73a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4040f3ea-0ca0-4d28-9b89-1a87ea573e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c68af6-ce30-4fe9-a5f1-3283ef9f3c63",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849a7186-6f97-4adf-9e02-cfb97316890b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a935d142-9b89-4240-8fd1-6f48bc106689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167746d8-ea81-4430-9a8d-9301e8021d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06da7903-a9c1-4e82-9ff3-52bbe94144f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2e02a8-82cd-4e93-bc95-1c4dd9d8e162",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72165e7b-ac14-4e86-b301-dc197cc27c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704f537f-7ff2-4c53-9fc6-0a3e2c585281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe0255c-0261-44c4-97c9-13cc5bf0661d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f005ed7b-1695-497c-acef-2f89a0be085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e16658-3595-4a0b-8ff4-7295dbc9b7bb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c258be-43d1-4ad3-98de-5320d7626703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0c2689-8fb1-40de-9e5f-4e2594d580a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18d812b-1c7d-4dcc-82f9-68a719d96f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc9e198-cd26-40ea-adf4-6cf9cbb638d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069c85b0-16b5-4ff0-ae84-46396e4dfde2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570a1df1-a227-4de5-bcf7-d5a3b7afa302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1860a218-affd-4bc7-9e60-ea23d9a186bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b8c94-6909-4ad8-a244-4bee74046352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7795c134-3f9a-4816-984b-ebd4adfd633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e66452-11a4-44be-890d-4ef7868cf71d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e4e46f-efec-43af-a9c4-742e0a877755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fda336-5e29-4181-929f-732b73379fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e787ccb1-95ee-4f2e-8d07-b215f4a9c74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f55ba8-0321-4c2c-aae1-f58a5c207c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479e42cb-a696-4dc7-8e25-0cfa3c2148b4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd00051b-6b11-44ae-a7fd-1a6ec8f03554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f6ad75-7524-4552-9f49-e1c1862e51a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4ffa0f-9786-440b-95b8-885f0578291f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6639cead-2d10-4ca2-9941-f0a57b5a24bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54980cc6-36b4-4d26-8b95-a1c3d66e140d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dabc103-3e39-4c22-b37e-4f55e2ebfd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2355944d-174f-4911-bb88-6106288d4b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6de3d39-0b76-446b-928f-261675bfc555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48166d99-e8c6-4ffe-ba19-e82340d604a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c2184-d72e-48b1-92eb-259a9d982559",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e5bce1-0fef-49ee-ab58-0fb52db12656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce69890-93ac-43a6-95f2-4e8e5166f307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4886f902-b9de-4580-8fb2-dddc7850e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb172b61-b9fd-408f-9e5a-877a23ed1107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1127dbac-7dab-47e2-923d-0ca221319c87",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd563389-8fd4-4699-b815-61758d01f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c282500-c8dc-485d-94f4-4f14762d5613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c1c48-3a4a-44f0-a424-a5711610742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadc2a4b-1520-4440-a348-f174d9b1da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dcb595-95c1-4570-b33f-a968a3dab980",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba93e1b5-3a8d-425e-82e1-0e14ee0b01d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39aff6e7-9ff6-4e42-9ed9-1adca2ecebc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac164250-bf84-43c0-8635-dbf4eed24b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd645e4-9178-40d6-9e43-becbf008d222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6c2d9c-6efc-4422-b7b3-9ca2eaab27d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32949197-a2fc-4029-9396-3dc6b6482dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf36903-c6ae-4dc9-803d-76a2338771d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e282f-ead3-48ce-91c7-33d8f6fb5afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "798f14b9-a8bb-4272-ae6c-2877d2b3b42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c27b8e-349f-45f2-80a1-494c8d7d35cf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e37493-3179-4ed6-a809-bff10aed9420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ddc819-39b4-4631-a5d1-b41b24f69e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e8f8ec-122e-4576-a77b-83247cf09531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e75c34-44b4-4118-b83b-b9bd4e479923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f526bdb7-5ce0-4d22-b04e-c4882263a1a7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c735738-50fd-45b6-ac57-561e4e1f127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd8bbeb-d3fa-47a0-9fc6-fffc660143e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b58c1-d9c9-4717-a6f6-66a59323d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bb9057-69db-471b-9157-7f2e2c9a452d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21281903-47d8-41f1-92f5-122d52b1f0f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288d63b8-fa4b-4efa-a860-6e49242344f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097a907d-a129-483d-aa96-48c115a97f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59275075-42cc-4e0b-a248-4775da6de464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfdf76c-0bdd-4ce4-9906-4136f4fa2402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a1126f-a2ba-4214-baf7-7d7f9b09a72e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca571b5-939a-42b6-bfb3-fa5caa83913d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de414e5d-bd05-4d78-ac26-863b3d5033f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c202c8e-bc7b-4fff-8e33-b9ee59a661d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb198a31-174b-4bb0-8a34-2b402de40ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a93561-3d6a-47b1-9d41-5be00b839d0e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebfbfdf-382c-49a0-924c-e60a47fb532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd87159-4197-4ba9-a870-97c6f26db0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95fc7c1-0e80-4aa8-8a59-db8c6a6cba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04778ad0-beea-4fb5-b391-97f906bcd6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88364159-9414-4e0b-bf5d-fc8e8d000802",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e69c74-a11d-4e08-bcbb-05aa2b2abb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa6a624-53b4-461a-95f9-c56a466c1ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c164a131-b0b7-4ae7-88c1-983d56d2d3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b5ea3c-c685-4419-8dc0-5828511ae600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4edeb9e-f1bd-4f90-86e1-ef77489485ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1495cf76-9458-4169-8349-b8f51602e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394793a-6bf5-4a4a-865c-b241fd982631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19138eca-41d3-42d8-9b14-1b7d7cf4a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45987036-d9ac-4955-88a9-9753c2e9f812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1563aa8-cd49-4269-9dcd-18878c0a12de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382a2607-11e8-45d2-b665-cc5d1cbdb7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e61ea92-b53d-45c7-9d4a-326c1759819e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a42cb45-b8da-478b-b614-9acf6736f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6690d68d-0bb5-440c-aaad-fcd9de7330d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0827632e-259a-42b0-a0df-20eb70a85467",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc19e8e4-68f9-4180-a75c-9cf81c24cd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1dc2af-afa1-47b6-9f71-337f2909f84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2ae2d0-7419-4011-93a0-fd35235773a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a8967f-c269-48fa-aec9-09dcbc7927fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f0ced5-0e9c-46ea-8cc1-70efb0fdf12b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae12516-c680-405b-b50e-b96bb8dc6a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42146cdb-829e-429d-b9d4-7318e343f77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbcf6bc-b9a7-465e-a465-ae35f4d00a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3e934f-cb16-44b4-afa1-657752617c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8641d873-b6ad-490c-92da-9ad5dd2e5d31",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1595f3a-bacc-4442-a63e-b8a2878dfab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62cf3ef-1c48-4c1d-b9e0-c20c4b602839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daa4b28-bd1c-436e-bd8c-f466d1594fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364defbc-84d9-4418-b784-1556fbf3d337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaf5735-3bf3-4eb3-b68e-b98197a5c56b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1513f1-63bf-4853-8629-c5e5fee33d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04da7363-0d82-411d-a87b-221c4c30428e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c46f1be-7ed2-4137-bcc5-9bd73de33684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff66fa07-2d58-474e-bced-06f7150bcd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9fc0a8-6974-4adb-ae90-8477008a6664",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b6491b-cb3b-4a24-8732-ddaccbc2e6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc9f2be-b725-43df-aa46-12d40398a79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4f4c55-373a-4fc7-a222-9a34563804ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704a63e6-a16e-4b4e-ab60-e2aa9889c154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fba01a-b55f-4b8a-a8bc-4000411dcbfb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932d2192-64d1-46a3-aa65-9e8d5f7fc187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1af01c-4eb6-4f39-9d5b-cbfa8e791761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6553ee14-06c0-40a9-b215-ff66c7c1dd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a43194-eb6e-491d-96ab-9617a379b2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42315d60-31aa-4f81-ae56-95b493f5f431",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c6156f-b13d-49cd-8666-7333ab38c782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63de0b4b-0b21-4efe-9530-c42dea0d1c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21537acc-c664-49aa-b249-9e9203fa73f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a59e3c4-d76e-4ca0-97c6-dd5f6f733792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a89185-29e4-45a2-9fec-4916c5503cf8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50afa0b4-0480-450a-836f-7310bdef0936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa015547-e33c-444b-9c06-2ac87247e79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95352c-ac08-4f55-a996-4bfe31254bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a42d793-738e-487c-ab07-4ba0b68ac7cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91527317-edc3-48ff-9d29-887acadb8105",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45b20370-c2f6-4eba-9180-da1ace9e1bed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5ef404-8b9d-476f-af78-d466d84e681a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc232772-f721-4eda-bd7b-c99ce355ab0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6185096e-140f-4a15-ae5f-c518529580be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae91125-4d47-424e-ab2e-bfbad33e5e58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "057aff0a-7c8b-477b-9267-e51983238ba0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0806babd-d88d-4f33-90cf-aa732eb2f1a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccdf70ab-c44c-44d2-997e-1d686a025716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ed49526-1766-4a65-a57a-af625c6e8a5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b95e186-c5ff-438f-a8cc-fe5107dfbb69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f1a87ef-1773-4c5c-bbde-f796c67b8658"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8724f998-9f88-4473-9842-d532652a410a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f7cd4f4-4afa-4965-b4dc-84e0d3cd05cc"
            }
          }
        ]
      },
      {
        "id": "6791cc8e-2de3-494d-89de-5f1e0b491717",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fc26d9c7-dfc8-436a-9178-6d2b8d48faed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6d65f57-8af2-4724-aa13-cc510ebc6843",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0e749e0-31eb-45a5-8f70-47836beefa0f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5acd65-a2bb-406a-9070-2e7a6c4b3269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423f6ae4-bbb1-4599-9ac4-407be14ce648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f398633-3f3f-441e-9d5e-6376a77329ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a283242-4730-4feb-bcff-bc0529c6d333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a8dfe5-239d-4aec-a5d7-b6b51cc8315e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46ade8c-69f8-494b-b420-61f3a1d97b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787664c4-0e56-444a-a2d7-2d3028491fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962a3017-ef25-4b3b-b75b-1783a1005b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e358e352-31c3-4225-a889-5e8fb808617f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afbf3ba-b4c9-4fb5-b3e7-0710b09d6f25",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6e54a8-02fe-44fd-8155-4416548e338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5060d5-0de0-48c3-b3a8-33f436721023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a3d301-df32-4c3e-bda1-5274b16f9146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87e3feb-905a-4f92-9740-3e116025fe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ead8241-d2de-4874-bde5-5a83d1c370a1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af034cb-3227-457a-9347-42f8b8a87c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db831b7-b7a6-4fba-983c-8a13e0686fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a0fd4f-aac0-4357-878b-4dbf1cc83fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d1cb29-b4d6-458b-a658-e8cf55ad4c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1da988-fd40-4776-8ff1-a513cda898a0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98c424e-7d2d-4e9a-af5a-cec2779b22da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e894db2a-3e27-4583-9202-264465387f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c24e8b-d405-48fd-b5a6-15c556d446f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90c8eea-b661-4d39-b5c1-0d32436fd66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289c0aee-a494-423e-bd78-8e6e595bbee4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74458ee-196e-44d4-8f0f-f4e8918008c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f939eff6-8139-4cdc-9ccc-48fc35b1a511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70e77c1-580d-4f45-8c15-77274bd01347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4433bc2c-3598-447d-82ef-719e0af4ad40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8efd009-22d3-4ed2-ba5e-678e384bcc9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d945c55-59b0-4f82-a5fc-49743c07742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5b5d66-72e5-4f85-a5d4-46991ca08e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787e6825-f998-432b-a5fd-cd4678802c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b29e85fd-8e87-4faa-a2d1-fa6d2def8957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf180236-7ca7-4d18-a0ff-39d56edda5eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c572dc-e06c-4af3-9c1c-0e30b0c0004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adff9ed8-6d66-4bfc-9053-26f9dc4b3436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ce5382-12f8-4a2e-8e33-b40a17795e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d13080-11a4-4e00-b225-46c93099b920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86783fcf-8d2d-4995-b694-59a982de1ea6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd9d99c-e195-4ea9-80b6-49bce95b4afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e0e9a7-ec68-41f0-a5b4-c4dc1694c1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57f0b59-8903-4a09-ab5a-48c78fda578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01dce32a-f0b6-4525-817c-444bc4f77463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06c887c-cbd8-45c9-8886-b233ef6b67d3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cf2906-3b68-4f4c-ba71-25674151d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286fc1e3-5319-4919-a129-80983fe14f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a98edd8-3085-460e-95c3-e7803b0e515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8350e50d-c7f4-49b5-89b3-04bd284bd34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44353a16-4191-4cb4-ba5a-4a5f8bb05089",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d35d73c-efb6-4700-b3c9-49760f470647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479b7a38-b230-42c8-91c3-e4fdb60c7739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb66a942-47e1-4f5f-9337-f57e36c030e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5779ce-804c-4e0a-a502-195a6f2e04c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30d0002-f0f9-40cf-a49d-f01e23f3eeaf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d2bc67-f2d8-4cf9-891f-5cbc492d9d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6f514e-9af3-4e01-a145-2758f2555496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722a99f9-07ea-4dd2-aa69-d50944b0e820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb1b369-35e7-4248-84b6-e6d7942b335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a882ecf9-4721-41f9-9715-4c9529812810",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094fe967-6766-4a69-9e92-9bfa08252aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7098b658-e6c0-43f2-8564-41edd918092a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03cede5-0904-47b1-a7ed-f6263abd06d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "602adb04-6f04-43ee-b562-f73cb6c902f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0139bf59-2052-4575-9a68-3d4f3ee055cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b92e71c-6a67-47c3-9ee0-3a21e3f58147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a065ada7-e369-46f9-a367-97e3023a6bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2a3e60-ba99-445e-8893-c3376422740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5de22f-d6d1-4a52-8e98-86ade1151610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a47dd29-b2e0-45b0-9c9a-3c3a5e42e42a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe4b7e9-dcda-4f8d-90c2-68a92e47cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6487d6c8-29f1-45a2-b6fc-99a12172156f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4a3aa2-62ee-4c47-998c-30a81dc20de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaebaa8f-b976-4af5-b098-c56e1ea31da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002a29d3-8886-4cc2-82a0-f5b1d4f6b9dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fc0e09-79e5-48c8-aca0-ff789d9b9c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf1d010-7c7c-4146-9f42-85c698594b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a7f28-b312-4af7-91cc-8007ef0e341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69936aa-8d14-4e00-931d-c9e2f22a7f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d02e9a-4011-4693-87c6-7da9eed27691",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a368116-4f5b-4f71-8b65-871029bb8910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf438d5-24d8-47b4-8588-1efb92533e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed3c019-3a07-4d38-97b3-85e67813700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c2f3db-bb27-467c-a9ae-1eb324ae573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24c5c6-d5fe-4976-8733-e2735db5fd31",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67488f42-5254-45e0-9b9d-c96b1190eaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075c8b22-651d-4e7d-9b1e-87c2ce7809e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031afd42-e3be-4ee3-91a1-6e8e7e17e821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b71b470-0464-4a88-9548-9ba70c4571c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad88855d-c231-4e72-b306-855d09cf38d7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c762c09c-af79-40a0-a5b8-6fdca93d21b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f85b2c-d35a-4a39-bc4e-636721cd222e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab9bdcf-e671-432b-b4aa-67206112a697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64c0682-0ce2-46e7-a4ff-08d50b8c7214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42b11b2-d5a3-4c70-847f-cfeeeab71a64",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9aba2f-e996-424b-8943-c5ea2c6b83b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fc7144-802e-4d25-ba65-03934f6515cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f89889-bb4b-4027-8c9f-54b931b32927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19b405b-4f8b-443e-9d6f-6c252cf28e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52d5932-ed8d-43dc-a6b9-0d802e744469",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a14b482-12bf-4a87-9de2-da718c481ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d731b7a6-6ec1-48b3-901a-e059019366fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9976123-7b36-46d4-9065-eebce8c06e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac851de-f521-4d28-996c-1b813b6254dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf255d1-ddce-49cf-aeac-d51e842896ee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c770bfb8-533a-4018-8532-93eacc4e81b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b921979c-ea52-4f3d-a5ef-7edd31ce0113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b273290b-a8fe-4c5c-99c5-66d9dfe34a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea20f10-1a79-423e-a34e-45af01c92ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa507d7-6520-4629-9ad6-44e24d18640b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cece654-155d-4f79-bf40-4012894b3c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59b039c-750b-4155-a70c-d4e1a427973d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad5380f-0cff-41b5-a757-04631ce78e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8792d4e-e79a-48c9-beba-93eaafc5bb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c64f07-90ee-4259-8502-5792b1fbc9ae",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2948fb87-c247-4519-8509-f55d79a15f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6707fbeb-76ca-4d97-8a0f-038260bdcb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fbac83-c3c2-48a7-bcb3-f6f410358801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c808946-1b01-423f-a279-dee540108708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4c0358-db0d-471b-9299-2d0dff627f38",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1506c2bc-d1de-435c-8f4b-ebb9427faf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d068a5ec-1f6a-4f9c-abd0-129a24817f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d9d852-3534-430f-b2d4-df340ed7c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e90f43c-43f6-44b2-852d-abf3df4b2102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff7838-5b8c-4e88-8858-6085929fa178",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0f50f3-bed0-4735-a065-4f3e70ab92b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944b812d-b9ec-4380-9725-ff7e366fd4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0464589f-a98b-46ab-985a-15af8e9415c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9abe5290-d24d-48bd-83c7-b27b6f5de5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82c5051-c353-495e-8590-7d14089e04af",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ac8a96-cbca-467a-a5c0-bf4ddb18e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335b8e68-c719-4e6c-b3df-a4e5d7797a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90016ca1-181f-44d0-aadb-20946f348ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b5fa4d-aba9-4aaa-b300-9b2b64bf58aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51fe170-3ed0-4975-8d61-d01445498cee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c138c81-0add-4f27-ad03-40334d87ca24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92df5543-a604-42e1-b090-010eeca1eafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d0aea5-78ae-43e9-8561-93e7a4b9d461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f568588a-ced6-4f5a-8ff4-4b1ca23a0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceb01b1-e69c-4f7b-b868-1132dd7c7b22",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebc7e25-c946-4711-b19e-60f773dcdab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8410ae50-d3ba-4348-9a8c-1d73ea6da980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218501fc-9ed6-42be-8efa-32e58b796dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9469fc-2bdf-4a34-a146-e7682fdfe8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dc805f-b299-4a0d-bdac-7dc0a4f3c892",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d321559-a2cc-4d9d-b481-677557d62a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118ff560-eedb-41cb-abe8-495868d9674f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccf1878-9289-4fd2-84bb-dd976de0b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fd2269-2b65-4211-b58b-1cc2ed116c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c5a77c-093c-43f8-bc5c-f36ffcc4b71a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18330719-46ee-46f0-b2b0-f16bf6b6d3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29956b94-05b3-480c-a7bc-24a40a0483e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9127f2ce-9987-41cc-8021-2fd9aa2fb8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccb9292-90f6-4da3-b225-be4c04161b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6261780-8009-40ea-a552-61709bc1a73f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0015c48-a234-4fd0-9f6b-56cf0a145b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d284a8f-53a7-4349-8bf2-706767bc9b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100f68c-b967-4f46-8045-bcea237da35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "413096b9-309f-4d1b-a21a-76fe8c239740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91d39a-cf1d-4ab7-83d7-977fe2b7a27f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa429ec5-2dc3-4a91-86a6-2593f1f2edbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a4cf87-49de-4f39-b5b8-d5d87695cffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e443fb6-8fed-4db1-b0f4-ef5b264c68ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af0473e-aa52-4a4b-8ee0-6d80c594fce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63abe75f-b4cd-4e11-92c1-947f159914c0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3128d45f-d1b9-44c5-be58-47f2b6ddbc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f08f96-46ea-429f-a5ad-958d7dc5cf7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac7ff10-8598-497c-9d00-8c958f2d8c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73d5be4-7a6d-4563-a585-c2488d27ab25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab073547-2d8f-402f-a41b-8235ce352162",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd76db4-4c13-4126-bdc7-fd1d1168a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ee7ebb-b4cd-4ece-812c-2935f9061aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac79a9d-d10c-4507-849d-267ef27339f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c777208c-58cd-4a4d-9189-983cf6105af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c902cf23-3395-4018-9143-50f67fbd665b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2116ecc8-d5c4-4012-80dc-11c50ee0d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d05fcf6-f759-4df2-ad8b-e9f785e2b45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeb4b11-384b-40aa-a902-6bedf7c7cf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0341d76-b59d-4dfd-8892-0e1a0964500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f0926-f345-460e-a9c2-20521a787f92",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39714474-efe0-4914-a96d-dfe2789327a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1202bbb7-0c3d-47f7-a599-6a613aa6af57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9734012a-330d-4053-b737-753215b935ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "272b8cfb-1eca-4834-b5b5-25a8d1731a41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "532b7345-b1ec-4635-905b-1c73bd31f2cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "838ad10c-5353-42c6-806f-9c1a45837c95",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9871c2-80bf-4a20-bede-3ea29fd33571",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "481c1fe8-1434-48cf-b72e-7a40445807f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76165927-8eab-49af-ba05-824ae75c6320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ec6972a-623b-4e27-b675-95873c157524"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55df7be1-a34f-490c-91e7-25eaef351c4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6004dcc-9d9a-41e8-a254-a8bf8ddd0729"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85dba214-ee9c-4061-bcf2-420abba018b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "905c7190-07b5-4b7d-a1cf-944d54d84ea1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b45aca1c-668b-45cf-ab56-e5f6741dca46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4bedda91-87c5-4bb9-8aa4-8b95e7993a29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cc29b23-9287-417c-8fec-cb45071cf53f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a4a4c96-abd5-4579-a310-d8e6c1ba31dc"
            }
          }
        ]
      },
      {
        "id": "575a5083-d803-410d-9162-12f9a71dc3ca",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b1cc7078-7d5d-4619-9e15-f95e5a3c3c40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6491b4a4-083c-4213-abbd-5f7a231baf0a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "853777f3-8e3c-4a5b-ba1f-5577e43f5cff",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02fdabe-1027-41aa-9d18-6634affdd15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f391060a-7471-457a-9fc6-ec8360aa6b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfedcecb-d749-44a3-9851-33e47a9a9e86",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9fdc9e-866c-4886-ba3e-4153ce1dd288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71728de-a6b3-46d3-8376-eee42cf5c856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3de4bd8-6d00-4115-9d9e-3438b1c897dc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3996f30-0bbe-42c0-9366-0b682646b2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded30cc1-dfbd-4e14-a08a-53036fc3cf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72963321-6cad-4448-814f-5e3b44e7ef5c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5f2c95-8010-4585-93df-e3f9a41f9292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9868a86e-6d7a-4b56-b78b-5aa6af9fafdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e944a312-90df-4033-af90-d174352ad071",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040751a6-ec11-45c6-9e68-fda7b342f1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41526f6-f86f-4c19-a72a-a43d1d6a7fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d81d2f-17c1-4ced-995d-fdba435075be",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0330d3fd-00dd-4c8d-b8db-6930ae31266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351f414b-be89-4f5c-b3d3-108d08f0bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b287062-e58b-476a-8396-0e454c8a3d65",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb43ee13-1333-40e1-b4f0-648cd035904e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3156f5e9-2524-418a-b630-1be4e6121a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05119670-dedc-40b7-836d-77e0cca25df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e10cfac-ce63-49af-854d-a576498ea336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a269af42-bc16-48c1-92ee-7979dd2d1e4c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddfa610-d5da-438f-a96a-b7b1ac6d8dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9644657b-a5fb-41b7-968f-f0fe1aee5eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d264da1b-9b5b-4197-814b-4c498897ae02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b0f6e1-1c6c-4e76-8bc2-cef9d8385bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56a745a-e7d4-4c07-bbe8-4bfe2e68a2e4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae22b59-e524-440f-9453-9fb8f9136de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d54d87-d536-4dd7-8eb7-89f2fc618e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b024cf88-de0f-4341-b513-24ec756b8f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54481d2a-b004-4487-ad81-0fb4d8501ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c74e0e7-9b5b-49df-8d02-1aecacaa9e1d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29091964-d250-4cde-b1c9-0d6dda704b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1dcf625-8f98-4f23-9ff6-c8dc6c8ba547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319f10a3-1020-4d79-95f1-fe3c2aba7b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645fe026-73b8-4724-9143-e1dccddbc381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7b8aa4-ad8e-4e38-a19c-6b6adae0ae37",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c252ec-4f6b-46a5-ab93-db7458291abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48ebe00-156f-49f9-b03d-0d436525968e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19b897b-2698-4986-98ae-6a543417c13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c09a0c-ec91-4148-9a32-b6af8e012b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02289c8b-1139-43d9-8854-d85bacc2c9a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9be88c3-b049-4677-adf4-c70a1d4de5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135dfb48-c4c1-4177-ae74-635408610d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7c439a-aefd-4e94-ab30-033868052380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbef534b-65b3-42c4-8b5a-811deba5a945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3a34b-2935-41be-858b-87c0511a17ba",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc638138-5359-41e5-bb63-f0ff48fc926d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8323d607-7fde-493d-bf5c-582a83289d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902b4955-962b-48ba-8a7c-e71174b490b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cca71f8-f769-4866-9c8f-ae2515b4a13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d92d2a5-75c9-41a4-9ec6-e2c8b8a2306f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdc8775-f605-4384-a0d2-e08fa05aaca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68908767-67ae-4340-8528-4b3bacce467d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c685e2e-86ff-4f1d-acdb-2f23c8f76f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc59b5c-2d3c-4cc8-8892-fd9196def735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5d7f90-1d9b-4973-b353-3991acc67fdd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c67dbc1-20aa-4ff5-be11-91be3b58485d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa03ed1c-5544-4cfc-aa80-9c8a9abde474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3a260e-adc5-4452-901b-06fadf9a78ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf363ca-e6d5-44d6-8325-f691e97a8d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e41b2ff-2823-4b0b-8970-4d1ab7377211",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82143a6-4032-43fe-b5c1-5b1b02d2ca06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c92412-099b-4e7d-a329-a1f05f936408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cbc43b-ac84-4471-be6e-90c280541191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebed86f-57fc-4b3f-8e45-9bd407b66959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47a37f0-c5d4-4bf0-b71c-6c685eccb8ec",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a99070-ad2b-408b-b668-ad2d776d5e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18888314-6806-4920-827a-1677a34d72a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e5ff30-6e88-45a1-9f49-3d3c4a4b2683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e5a4c0-3963-441d-83d3-b18e23ab39ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a40b51-784f-480e-b947-ef966115b950",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42996207-66d4-4628-bbd1-86657c3a840a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4309e0a3-8a31-4ed9-9763-95d7a543e778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281b95c2-207f-49bf-bcf7-a619270caa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252d929f-3ee8-4f23-aefe-7238e92b5045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32209e6-9ce6-44c7-9b41-71634fc92416",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3918ca4-c617-44db-ae1c-6b8f61c180ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ec03f5-6c17-4978-b610-0f078e5fe2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9563972-7347-424f-82f5-bc268407284b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546c9083-0256-4599-ad08-1f0fc5cf10e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54828b10-d325-4a90-98c3-7ce133191548",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a0681b-67cc-40ec-a917-860fa72f44d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b04fc6-b49d-49e6-8c7e-f55fd8aa63c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2b9fc7-21d2-46ab-bd6b-a9377a5610d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72ddd95-708d-4c98-a0dd-beeeaec07565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a2b28d-7968-45c5-aeb4-edbd40656420",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a59ee9-3c42-4568-99a4-5de2155c9245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beeab930-f301-4a43-b974-023f7387ab98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762bbb63-6dd4-4fc1-b2b8-12d83941a98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b26c4e-e91d-41ef-bda2-4dd530d568b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fce7b2-923a-46da-8986-1ce117326f9e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1174d423-1e4d-404b-84a0-d2590da1ede1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd1e3d9-69b6-4066-b3f0-409699ccd399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df91dc23-3abe-45e1-9112-92aa64eef26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4e9dbc-ec5a-4d79-bb72-f1f46bedfcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28543df3-e10c-4b63-b0fc-a7b5f8594838",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fda664d-0d4d-46d7-85e8-1225c1454d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7894932-4dec-44f3-a339-378ec196d6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7204211-44ba-48f9-b57a-95ccbf889132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d049c38-2d71-4db2-bcab-24ddb65cf084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082e3580-1ec4-4081-9e54-1d031c700014",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9a4a7a-cbf5-4404-9ba9-2fbe15ee23be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f65c9e-c172-4f64-bb8e-beb6181496a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1469a113-95c8-47f7-b41f-107ca254f032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ca3dcd-346f-4e01-9cee-30aa510ea332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b727243-4165-40fd-b0a7-06c100800211",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e72f88-b6b0-4a84-9f54-14e74ee71bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92dc163d-f97e-4082-b124-fabd5d4ac54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67027985-30f2-4506-b2c8-d01171b3ac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f8bee1-4211-4eba-b0db-4b9b64e802a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4b1bb8-2de1-46b2-b16e-5ff63c635b8c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa4f04d-1964-4db6-8b3b-b60aa0a1242c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bd55bc-91b8-4a51-94e3-2156709ba15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0203651-95d6-4018-b56e-df155d7fb247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08078ffc-08e1-4fc3-a30e-2162946f70d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fba4341-36d5-4f11-8ad6-6b9c7062c277",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732d74f7-d42c-437b-9a5e-8e815c9a4873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62703b1-c65a-4541-8029-6a37e9128a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f7b8f0-c059-4ec9-8ec4-edf6f367ca01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6f4e44-4a01-495b-91ee-d6cea0bae433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dc8aeb-a4b4-491a-8364-83bb51f03ac6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f29eba0-d317-4f82-bb52-dd3766398525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f80503-450e-4ca0-beca-5b1f344ee5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c936a92b-50f6-40b0-8cee-f842a7e3dd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4227391e-227d-4a32-951c-1ee555827809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b3d2b5-5f4c-4b05-a038-79d01fb7c598",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5afc403-4325-4005-a800-31cfd79b4c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393396fa-a4b0-4546-8116-18f7121dc76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208a616-dd10-49d2-b952-e0b378b47073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cea6120-d5ca-4f69-a685-d09cbd0db86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caae6ddc-2bdc-40a6-8172-875872ce7e4f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb01f3a-2c0e-4bca-8e24-827b80522a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9d0dbb-a098-46c3-b139-f7fa8a497556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b65985-a160-4493-ad69-b97b59d18d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce62fbc3-d7d5-4024-bc1d-4d7643d7fe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65212ef6-7818-4e2b-abb3-df78c70a569e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb390e02-7cee-42e8-81b3-a64399e151f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058ce0a7-c10c-4a90-929d-c3ad638415d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7879807f-eb45-4082-a269-c21b3701ec15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf2c388-0e9b-4003-b5b8-b64f5612b738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ddad28-dc39-490c-8d87-b047f9e0c1b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535ed4a1-ecb7-4e77-919f-041f92de336c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54a1873-62c8-418d-bae1-8c79d4768d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c6340a-a1f1-4fdf-bdeb-2580191ede7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152291ad-5932-450f-8f42-06435710a016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd7da4-c098-4f7a-8b51-f9520b5b7005",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f375199-2858-497c-b45d-800236c9510c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c909aa4-dcda-43f0-9e82-1d5f4867d175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b28392-e219-4568-939b-5a86a743155b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f614a0af-f45e-4d48-a795-7c095f2ad3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b707aa8-6a73-4aca-9f23-8a115cfdae0d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f115a8b-4ad7-4534-8076-098251d641ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d6e804-2935-49be-a8c6-e13fc3f01a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d777c7ab-36e7-4a1b-9825-c33fd34ccff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a0f925-cb22-47e1-a3dd-0ccffca0e271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3531ca9-1cb0-4ebe-bcbe-921da3b35fc2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8c75fe-fff7-42d6-9a5e-6d9aedebba19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5dd2b4-0406-445c-86be-f60fc2e37cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7899410-2bbd-45b2-bfe8-9f5bdc9bd50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0fbe8c-bc6e-4d62-898c-b76016e558b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b1387e-5dfc-424d-9adf-3bd5846d9715",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2227f419-17f9-4c06-9af3-04bfc7930e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63451063-f8fb-4efb-99f0-7daef4b544c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054680c2-2a15-41d7-ae45-195a26b3abf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a25763f-beae-46df-bac6-65c1f4c3e418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a8194b-bf30-4ebc-8742-e027dacf4aa5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f8d8d3-f6e8-4a0d-ae6f-78a26b415b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e3612a-7ec7-4bdb-955c-8334ecbce708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dbf7a0-7a99-4f9d-9609-115b35b2cec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f262b70f-ff4d-4f6c-806c-a0d560e79f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1088c32-4774-44b4-894b-2cb24b4120ea",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cb3fd9-b90b-4e2b-b899-9ffe94addd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e15a9ff-a4e6-4149-8cc3-3c833f2a986f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31257087-e3a1-452a-8ba7-545e10a3c188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfbc743-9c4a-4a85-ba87-0a1c3d539fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e5adf4-aafb-47a8-a40a-003a104528d4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd87728-117c-4362-b2d0-ccb6d1ad33bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056f53ab-0f9d-4a63-90e3-ccbab7bbc85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007075e8-a9df-4ff0-b9b1-c7dbe451230e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f289778f-704e-430e-a810-4fc96b6568ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5313fe56-3179-4ced-8eb8-00e16f2af0c3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05804fdb-fb32-4f42-b274-0106fd549753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01813322-471d-468e-922e-ec1486bc8119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ca8146-136f-4027-b6b2-9a761fbce379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad99702-90c9-42c1-b02d-e304e857bf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332eb6ed-7b45-4cc2-ac60-621657a45cd4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c53bd4-f635-4a11-b3bd-3303c9628f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e75a2ba-f04e-4841-a26d-2ec92fd8af8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a206ace9-e616-4643-95cd-b934b6ee6b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f960dc43-7744-49ab-a4ad-2bd6adf798c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af437625-3aeb-495f-a0be-a9cd66c7d88d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bd6a51-e98a-449a-8c80-c44fbcac758c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd969110-bce1-442c-aed6-1fa29c6c5dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44372d81-91bf-4ce2-b79e-e2ede8ff3246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8d840f-edec-4e13-b645-8e631ab2ed47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abac9109-2c8d-478e-a76b-c8353506cb49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab924905-9c5f-40f5-8704-db279fc61119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90e2ae7-802a-4763-929e-d2bb04b72776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e110f219-193c-4527-b5d8-5f4715e71759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d967050-492e-4baa-88fb-15017e21dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83aa62a-45f5-4306-ad21-00d468cb6e4c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd550127-ada6-48c8-94d9-199ce9e0b39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7fd614-e4ed-4924-8a50-b4ba5f4e96be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5590de86-bad1-42e8-ae06-c7fd40e5cf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61fce45-a9c8-4007-9beb-0c8ad939a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa531367-bf79-4129-a400-7878bc4f6e1d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23741f2e-6be0-44f4-bd36-1ef8f8cc4a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b893a4-b35e-4c45-a105-3f1a048778bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2160b351-5d5a-457e-a2c1-b30468f1bf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccb83c1-7dc8-4949-9125-cdfd2c9a4c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9215e77d-558b-4aaf-a4a8-81a26f32ab96",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823690c4-13bc-455d-911a-b6cd4f772b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b62bfb9-d948-4421-8731-0af5cb6ab2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e5b900-0c05-4ab2-a765-74f3246a74b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a511aec0-c88d-4c3c-95fb-6df3562e3457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a2610-3cc9-46c2-a7ee-f0d78e1f91b1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2a5c4c-4527-408d-8ef4-b959a56b9b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c86d897-db52-48a4-a953-077688b0bc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a51c72c-d860-41d7-b5be-db177008c409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5843a0-a240-4509-a109-ab94c7db32c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d8eae5-f95a-4b53-b6ed-15d60c40ca3f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262bff18-143c-4ad7-8e9c-b145defce999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202b47eb-2163-46f2-ab47-d017d84f6e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa797236-6f74-4626-9aed-5b84692c1930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2dfd0d-6756-4c0d-b5cd-2a4cd2d502d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e36a68-bbc0-450f-afcb-f388a6a78bad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23063fb-780d-4ab9-b5c3-cf5201bc350d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d74cad6-16c7-41b5-96dc-8c758ea82290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cc953c-813a-4e95-a306-f73c6b6bb43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5265d7e-ed74-4f1b-9245-538aba4f88e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fec133-f4cc-420a-9a2c-ed532e5aaa95",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b18d33-d1b5-48a4-a5de-302e85a4a8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a546c42-8cdc-4ed2-b377-e94e5a58833d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca27f21-f3c0-43d0-8760-115f55187f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4735c57-dc31-4be5-aced-fa4153a64589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc97f19-9973-4296-bd06-c848c3d2063e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73274584-b504-4598-bf82-75a4e98eeb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644acf57-38ce-4c7a-8a61-9ac351487b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54788d9-484a-4fc7-ae24-1ba526543bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3a1174-48c1-4f55-812b-0784fa39539c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d398f404-68eb-45a5-b1fe-d89ac1d49c5c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d706d39-b691-4b10-94de-523c6f142406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9fbd8f-0a8f-44db-8adc-00d6193923aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d495e-d1dd-4cff-869c-91f9ef0d105b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42702119-79a7-494d-affc-0ef9c336daa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b30a85-cb62-4e15-952e-7abf812aae43",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb956f3-47ff-4a9b-b0c3-88e09add237f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00859d8-4b6a-4851-882a-3cf899dd0fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8dab81-24a8-4103-a78c-0d2d4fd44da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32114d04-77b3-4e34-860b-6f68638e2d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92cd493-5295-48e9-a9c6-ea25d0464c45",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1310f37b-cf16-4192-bc0b-7d4d3a14cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f003f5e9-bb20-4963-b30e-6bf7032f5449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f102864c-624f-4cb8-83ce-2daed379d9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef728e7-66dd-4704-865d-ef9ce4cdc0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0c17f7-37b2-4c3f-a21c-6f5aa11e0854",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1721b721-dbe5-45c4-8590-c8cc6ee9aef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c27bb25-bfd7-43fd-8a7c-1bc6db1c0565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7581e131-2e12-4031-8368-a8da4741d62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97900e2c-448f-40a0-821e-5016d455b9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f17232-1229-476b-bb0c-c62f72eb81c5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbaa0f0-2865-471f-9b0b-d8196762cb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3865bf7a-6f03-455e-be0d-545fd4354914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2200503c-1a02-4b96-946a-97f011c3cf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee8a992-8f44-41d1-bde4-0227544f9e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0355fb-7c97-4b60-a94f-472547aed26b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e7d7a4-3e65-42be-8644-b7de59a85fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce78d5a-110a-4f06-831c-c7ea8fa3bb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ae0c0f-9f85-4636-93e6-60ed824e342b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7f09b5-3a3d-4560-bcac-3b671c6b751f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3763af72-9e0f-4827-84c2-0df636c6ceb3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c12b0-b0d1-4897-8de8-a9f1d4b64f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e02672-b1f5-48de-a71e-a35a62ee1ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d39aa5-dd16-411a-963b-6dc3d04605c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9cca33-6eef-4cd6-aa7d-a45074a88db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f15bb4-309a-44c6-a7dd-d0d637a86ee3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b7c43a-fe22-44c5-913a-fa26795077af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaca612-a9d5-4c44-9221-bcf3dd9a6cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d1b869-9f97-46f5-b999-3807ab6e0643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a661631-4624-40dd-af5d-76840c965de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cee095-e092-42a7-8e4d-9c3df1556fce",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d67c634-f3de-42bf-a024-ab5182d526ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f5a664-8d94-436b-9b56-5d06b23fbd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a598593f-88b2-492d-888e-2632fff429af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146ed918-8674-4859-bd60-ba71fcefe168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86477e9f-0721-448f-8bda-20c6ff3026e5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47396e8f-14ee-48cf-9826-cff491707586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c8fb28-203d-41fa-83a2-67680c8d098a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642340ea-6022-4d4d-8a91-273e1fbcb762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31248530-4249-4c77-af06-12b33e73b6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fc6a8f-551c-486d-86d4-3bbc38da9cd9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0fce0c-eed5-4282-900d-9633cdcf8f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc97acb6-16be-480d-afd1-3cdd21521b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e49206-4950-4af9-9197-01cb71e21835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7754e9ff-4faf-4d4e-a7a6-ed6cc24ef20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f08920-7afc-4854-a5ee-d9be1cf65b12",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75068a7-99a3-4ba7-930a-6011cede3c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b928df-72e9-4711-87ca-6d9aa22bf5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ea497d-c1df-460d-b121-37d008cd824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9136c111-0bfd-4fce-9cbd-15f057feae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95e0a18-ba19-44da-bb06-a4a8bf032a0e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11694332-da3b-438c-b607-64b1baaf858c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6e9674-bf7f-4816-aaa8-369c89bdb882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671aac54-56af-463c-83f8-21bc1ed02f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56f8f32-a98a-428c-b186-e31ad0d2ed3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56628804-081e-467d-aef0-8e8c1d62b731",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e840aed0-dc51-4092-a541-f78d0be2b3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18cdadd1-d06c-49d0-91df-578cd2840f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e281d6c-d055-4824-88dc-f48f79bfe782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a47757d-f3a4-4526-834c-9b352ba671d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01afc19c-9bbf-4ecd-9d57-84c365ff193c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9093f36-c87d-4815-af09-30a77ced2730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d480ab-9676-488f-8f18-3ebb3bf3e2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceae34a8-40ef-4ec6-bbef-245b557abe90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cf72eb-d440-4e6e-8fa8-21e8d10153e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85f0646-e2c3-4121-b18c-3127d6aa64d8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb58814b-182e-4457-bf9f-1f59f9042209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef69e62-f7fc-4b8e-805f-3d60ec461070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51235de9-3ada-4975-a32d-14602dd04e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ec3ef9-6ca7-4cab-8b94-85e0c9b7a39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517ef42d-4184-40b1-bdfe-503e3a3ab375",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cced0543-2a39-437d-a499-20033c80321b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019a730c-344c-4e2a-b50b-ef20ad4ba2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b6b4bc-a021-4dc3-bbde-15b0dacf7225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf0efd8-3508-49d0-8ee0-e992495c60a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08485ee9-b1d2-4ce1-88b7-8bf84d88f8dd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f946f6-009e-4abe-9b62-8939eec6f4a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc54ac44-13b7-492d-a99c-ada96b322f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0010a505-c7e2-4671-9f32-b14a3d8079ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc49073f-397b-4b5c-bdfa-9fd2523cb32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53bedda-3ce3-4f56-9b04-a5c2ad32e022",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82019555-4399-4705-a2a2-85b048a45490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937aec82-9fc5-4405-829d-ef683fd1ad37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d995bc4b-6b95-483b-83e8-c52df6cfa646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e2a4cb-3b31-4844-a489-c6654dd3b744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a064a4-c44a-4d6d-94f8-8e5dcdeb006c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aaf9e7-0847-41c8-a0ff-384944988320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d04ecb9-d81e-4db0-9e1c-2655f916a0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19f0ecd-3b7e-4003-8206-18bf0725e895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d546afa-3428-4272-babd-4116bf2dc0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947de313-5106-49b6-a34e-2f053f99ecd2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41be6fe-ab24-4c0b-8475-95522e3a299f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9131c4-fa94-45ed-8efa-72fd1af300c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e84677-25af-44ac-946c-ac04d90eb9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9bcedc-2464-4834-be60-214378490871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d3b373-f133-4d95-ada5-77b09c9b35c6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2bf798-068b-4ed1-8a53-a19cc427080c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc444767-928b-4f6a-8910-41980ff4a8f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe9a9ac-c5e1-4532-a13a-31d082f5c1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d69d19-6bed-4410-af07-6e76c390089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fa7eb1-f37d-407c-819a-d0afc7b7bf7c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cf4855-a7bc-44cf-b955-8e7791283623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b96578-4524-4570-8cbb-4545facca99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93eb0e4-99ea-4f98-af4c-d1f9da06d82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1399292b-60e6-4197-8f33-2fb3eca836ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc484b36-9a9c-46f4-80fa-489840e88ddc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de436ab1-7299-4fe5-a30b-9618bb2dd458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150581bd-73b5-4314-a45a-608c762cb1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089ce7d1-ecff-4e28-bc01-230dca3af8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fec6fa-fa0a-4962-ac84-4679bac47566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab09521-7d43-4f3c-a9ec-e119097cb4d4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ac35e3-095b-4014-a84d-4b0d78aa00a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e44417-cb96-4c3c-9a80-402939b389ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7385594d-0d62-452b-99dc-006aedebf63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e39aec2-cfc1-41b9-bb37-decc5351b7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de3ecf-f40e-4a4a-ae00-622100d773d7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680cb351-1b91-406c-bd8e-0171cd8ac397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab91e889-9175-4f28-90d2-dfce3dfd90aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2614131-43aa-4cb8-bc72-46a8ba7c1874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca15535-469f-4a80-8fd7-650183fb54a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9519d9f4-0e9b-4195-9b96-19a1a0b904e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b43eaa-683c-44fa-b1f2-b0fbb2a07098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5529df7-fea7-49b4-bfeb-661a0e7de542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f932596-8f27-41d3-8046-dfeec29ed200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c8d074-b393-4bf6-8941-137a43bc1285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f22fb-aff6-401c-a36b-452104a627ff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88c51e2-35fb-4d64-b225-54c80ac8f0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2012b94d-5e0b-4345-8fe1-d587db719c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc4d2ec-c561-4b39-94a4-5213b3911eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc6deb6-adb1-48e4-ba14-8d8b5d661837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca7cc81-eb28-4819-a2cc-2d63c27bb4d6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86815109-2d3e-48f2-be84-12bf34719c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35880973-2279-45a3-a5eb-2f75e50df6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b91ea8-ad8d-41aa-8ae1-56e83eee7510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a04d629-2bae-41ec-bc99-ffb94dc174f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52af385-642c-49aa-b0c8-81e40d18548e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d98234-174a-4ddc-bbc8-5222c3f0d812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10da7650-c686-49ed-b450-126cd027c30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69373606-2052-4bb3-b412-87b683fb6b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c915fe8b-321c-4981-bcf1-d12838495724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f2aebb-ed28-4516-ad49-105ef515420d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934df898-80c1-4d31-a55e-bd57c1ac1b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ad7b72-38a1-426d-a4fe-456df7827445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f71825c-735a-4d53-9499-b5adf0207bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87c084a-d661-4506-8aa4-9fda44d016b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffde5ae3-ed58-412d-8510-639304e28dd3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441396f1-c3e2-409d-98a2-833a5637fe33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e2a930b-1a3f-4b0c-abc5-ff44a9f974a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb71cef6-a7f9-4f69-8c67-4ac40abe54b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4bf3e8-1312-4308-9b20-0788a96f4244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382d2362-bfab-48f2-bb1f-97e17f343789",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f51f276-58f5-4ba7-9bc1-dea465e33b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb39ccbe-38b6-4a6b-9d6b-9276bb22024b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb156047-89b6-4d4f-ae98-a8fdfb308947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc1f4ac-7ace-4d9f-9b36-9370bfd305e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402f992c-2de5-45cf-bb33-5fa74ddf3932",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd4ba95-67c8-449f-8d94-6212f21c0307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a09554-8b7d-4fe6-85ac-d352d0590450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e0dc8-82a1-44b0-9116-9c08da16b82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d9e1e1-e0f5-4da3-89b2-7f4c781c7502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11d9bca-e1e7-4ac5-bab6-9355692a09b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bc8528-18ee-4dcc-893e-b1bac3ea6ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff544d5-11c5-44db-95a3-40c689e82b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b06483d-5b5c-4955-b487-7f8b4d51ca25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db92c503-2306-4fa8-bd3b-54758e954855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdee5da-851e-4b17-84d0-63b7b3496b22",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6da232-d1ff-4ff1-be38-4e648ba68e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a30c37-69cc-487c-93b4-a414e1d6ab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103aae64-73e8-4159-bb6e-f1142d771cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b264f72-a60e-4502-9ea0-3cce849ad818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ed8210-be43-40dd-a595-c6a624d4f0bd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91250621-305a-4137-8a1f-394bd1bce9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6abf7c-2b28-4ba4-995b-19f4cb2f7344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb63874-ff86-4954-8e0a-c11f253cc789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f6023c-8b67-47b8-bb6e-c04be7126732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d293359-9c85-4d10-9538-411b1eade8ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c34d5a-4aa2-45b4-8589-10c18007d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e98e95-5208-48dc-a846-e0e0680b62e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2665d3be-7dc9-4724-b8e1-09399a812f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bb1797-b39b-41ca-b897-2961fea2daa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef7bf4f-3415-4728-8d0d-b72c75e137a0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef47a41-0f70-4182-8741-239f5b6cce8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adbb4dd-a39c-49eb-ba9f-0d7cd69f2aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd68372f-e003-4fb8-aa6a-ef67a854eaff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b518fc8d-60bd-4a0e-ab3a-7b2bd179c79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08344506-d7db-4fba-829f-749866dbc9e7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e97a32-a263-4f6d-82da-50aedc24495b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad64184-26db-4fbd-a2b7-6cbac9ae59d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8857eda6-6ab0-4e10-a4f1-b28de844a948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7ce75e-08f5-4b2d-9c26-cecc8552bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03542e73-5945-40f5-93f5-5bc705f53304",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065443f5-c4ed-4fcb-9c15-ac21f6de0c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a2550e-f8ee-4398-9462-4be271ff39ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b38d707-4bf5-4449-8980-2d57cf50e74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26722a88-9a50-4be3-92d7-9e72b644c0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aca9045-540f-4e25-a1c0-be677aedd7b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa990fbf-6c9d-45c3-99b7-6174c433f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea06cd76-c97e-488c-9e80-6ffacf5f61af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8ea50d-fd3d-4a3a-956f-99d45eb4929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0877b31a-9b11-4958-ad2d-657a40eb9a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e66f785-e9c7-4d98-b2b9-ba42cd9b0aef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc12e68-5539-4469-9c6b-b7ab94808172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2784240b-aa44-4d5f-bb34-6e6634389f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4e255e-b91d-4045-87bf-cd9d2c2c53b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e423e5-1749-4a43-9e85-c489ca98d194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68fc477-b7da-4aec-b4c8-19fe6a0dd303",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702a7012-cc61-44ae-8842-566267fd8305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ae1c06-0d79-4a82-b33e-5ba1bbbaec00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b23094d-f715-4245-a4db-c9e9bd92045a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9350d8c-158f-4b39-8d9d-cd015943d821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d4c2a-4590-4098-8d27-700bcbd52b9b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50da792-4f83-4285-af1c-3e6e9dcd1bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bfc628-ffbc-45ae-9090-2b8509de3f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10662c72-d173-4632-9357-077353cd8213",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3585aa-69c3-485a-9e53-cd43f8ab644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d1ec5a-d315-4657-b456-c10283b96d6f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210c2957-2eac-4c63-bc3c-a947875312bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5a7b6d-4a5e-40b6-88bd-c10df091fa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e8785d-2151-471e-97ac-bd99bbf01c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e7a173-c014-4b46-9289-08bc0a35ac91"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9512c0d5-7300-4eac-a94a-5458d0eefd7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cf73258-8b8f-43bd-b9da-b8d4cafc664e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21349602-c34b-448b-b402-62ad5cc871ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "509fa7d8-aad1-4f3a-9ed1-143901465c4c"
                    }
                  }
                ]
              },
              {
                "id": "61e56281-3ffc-4826-9249-3fe537752935",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a88134cb-36d2-4c26-8c8d-c1dc0e3817c3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a5053a-263a-4126-9de3-8779b5cf5674",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d953aa0a-b88a-4ddd-ae96-ac2f202b7a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc50dd71-24b8-4b2d-8d51-5553e14daf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ce8ead8-67ef-4406-89e6-ae0b7ef8bbec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47d659c9-f263-4c4a-abe5-93b0bfcd61b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0924d703-3c38-4178-8d28-7efaa44d517f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4f40359-7dee-4df5-bef1-ac706b5f1fcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaedb9f0-b68a-4a30-878a-66191b323b39"
                    }
                  }
                ]
              },
              {
                "id": "40b17a18-8532-46a9-9749-a2aa1885f163",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b5d89ecb-8a71-44e5-a983-eb7b5de5c493",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fc0303-7c1b-41e8-9970-b1827a1a2a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b7800fd5-c211-4c79-b6d4-c46493fc8914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e328d4-e713-43f7-a024-ceeb8f2fb764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5091cac0-ed99-406c-9f0f-518d7c18097a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fae41e14-e7a6-4e02-ac81-364ce2998e4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22c35fef-4ff0-43d2-b898-67aa1d3758aa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bab97dfa-c892-4742-a784-0220a33fe67b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "45c5e891-7825-486b-a9f0-9af7c83fe873"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6fba133-1ebc-40d6-8eee-ffb5b0e6ee6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce72f773-e225-49e6-80f1-0a8c7a71282a"
                    }
                  }
                ]
              },
              {
                "id": "841b27d9-8a97-4671-8cb1-a864eef976e4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf6f40a-a3e1-45ab-8142-168ec45dc5ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ae1756a-afd3-4818-ae70-2c28bbf28ca4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c2baa4e-1bd2-481a-a3ef-8aac7bc8dbd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f285e163-8837-4ed8-a1ac-63dfde8d32ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41638b8e-3304-4d2a-b8e9-ad7bb93a6bfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "51df8dab-664f-4e28-a626-c0ba391b6b1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93163404-ebf9-484a-b9a7-43293ee2bbe3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "026a9eec-3105-43f5-b0df-d95e325bcc4b"
            }
          }
        ]
      },
      {
        "id": "ef7a975f-c65d-4bc4-a872-1bf2d01d46b5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "06a719a9-1654-4fe6-a9b3-0707b71742fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42730776-eab0-4006-8535-fc79a685a4fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "507dc627-86b5-43a9-b149-a5cb5e3bafa1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4026304-387a-4b87-9dbe-d1558b29ce10",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eae4afa8-3b03-4b6f-a095-f107c1810c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dfcc8f-181b-4733-9aec-ded3d0c5b713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17b0e5e8-0f70-4b78-bfcd-835805b9b9a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d033383-f30a-43e8-b38b-43d5abc8d0a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b07f0b4b-8d2c-407e-b715-b47ea31fc111"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c38f1bb-4b0b-4214-b523-cb9f9712c6b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43ed128a-5b7b-4e14-b0d9-338c62a92ce7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "883227ad-a9d2-4cc2-a92f-df5354c5b7e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "156049d3-520a-41f4-a8d1-b82d6717edb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02209378-830b-4090-b770-15e5e149709a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad7bde33-6a8f-4950-90c0-acb1d2e6091e"
            }
          }
        ]
      },
      {
        "id": "b0da4ce7-54e4-4866-a73d-4f572fed42f6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "050fc65f-0f91-442a-9542-9f09f8b10889",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00bd0222-f5ce-4f2f-998e-b2b9bd635f54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ad2f705-7004-4971-8d1e-2d45753018d3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f52f660-a2cf-4944-9df7-4cf004b6233b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93d4b5b2-854d-45c3-b626-5406ccb97b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1255828-1494-4a2b-bdc9-2dc7a95e5cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0583e8d-d3f9-45d1-82d2-d55b1eb025a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d8b144d-0329-46aa-9f90-1653fb13556b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcd4537e-3060-4939-a210-203ad1aa0e31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59989447-da25-449d-9d48-88fadf9628cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99c43b26-4a01-4b8c-904d-07689c58c7c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82353e76-e42a-4bb1-b5c0-9db02bc29995",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fff25fdb-15a1-4094-8e23-16f47ed89974"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b27edd92-3afb-4957-bff4-9ac485e73917",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80549e84-5f28-4784-bebd-e0694c964506"
            }
          }
        ]
      },
      {
        "id": "521f68fa-cfc8-4f5a-a125-c3ce1603cc4d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0a174add-bbca-4fd2-b755-191a71abe3f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce1f184b-eb2e-4487-9786-1886af44c9e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c7e42fa-cbd6-4c1a-8d54-fac53b39fddf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2395f9b5-b2e0-4969-8c4e-036cad8552c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93044ece-b3df-4a4e-a25d-7c9aa6ea39db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f382ef2e-1f05-4b7a-8fe1-30d7386dfc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b16916ac-3035-40d1-8fb1-99fe3f86f928"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d416fd5-e179-4195-8991-8103204ed4b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e225cfc-e71f-4719-9d74-1e51d62529ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8d550d0-68d4-441f-9068-668c719c9d12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c54acae4-5f9f-4b07-b80b-3c650ffb1844"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81877d31-3d58-4f54-bb5d-3a9d480d2c30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "204a0e57-3ff1-4a22-be77-c4dedc809f3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46b8917a-a067-45d1-afe1-162e10a245c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73c67154-e7bf-4359-88df-90b87923e655"
            }
          }
        ]
      },
      {
        "id": "93a3961c-37bf-428b-8a4a-f12d38f398cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1c67adf-e94d-4c40-acb8-52c6aae16c51",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b29598c-f0a2-40e7-9fc2-ea1f4327bbc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "673f9599-08eb-4d28-9e0c-ad5645eb4d88",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c3e4280-de04-42b7-ac0c-6f9d8cc44faa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ccf2d6c-ec58-42bf-9a63-f3df8b2c2f4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.259649122807016,
      "responseMin": 2,
      "responseMax": 397,
      "responseSd": 32.769732823911895,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708475646304,
      "completed": 1708475657990
    },
    "executions": [
      {
        "id": "eeb32c45-2bac-4713-ad7e-3e735af21f52",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d28b509b-4488-4bfb-9d0c-9265e45d36db",
          "httpRequestId": "438404a1-7a7d-4b49-926b-aefa92f304f3"
        },
        "item": {
          "id": "eeb32c45-2bac-4713-ad7e-3e735af21f52",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "05b14293-8337-4653-a583-a12323c02493",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "998ef03a-6849-4481-86eb-93ae23301df2",
        "cursor": {
          "ref": "44c7349a-7325-48b0-9b3b-509312e1d8c6",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3fadae7f-155c-4f8e-bdbd-d9ef7a803e12"
        },
        "item": {
          "id": "998ef03a-6849-4481-86eb-93ae23301df2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "00e3dc8e-1c00-42ab-a319-89798d5f90df",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6bdf04a3-f5f9-4323-9e22-5fc926bca17b",
        "cursor": {
          "ref": "7bb7815d-c96b-4972-8b60-71a2e3f5ddb5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "88b0a134-0cd1-4ffc-b88e-f85e1eca171d"
        },
        "item": {
          "id": "6bdf04a3-f5f9-4323-9e22-5fc926bca17b",
          "name": "did_json"
        },
        "response": {
          "id": "a9b5a38d-0767-4d61-8749-0d02b167c855",
          "status": "OK",
          "code": 200,
          "responseTime": 207,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f7b883-8f41-4146-adf3-2332bd57a604",
        "cursor": {
          "ref": "06c1d844-e6a1-46fa-8bca-1ed3926254dc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ba024cd-af05-4cff-9b77-b3634c515131"
        },
        "item": {
          "id": "07f7b883-8f41-4146-adf3-2332bd57a604",
          "name": "did:invalid"
        },
        "response": {
          "id": "e96d287c-d1f4-435c-94ca-799c10895585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f7b883-8f41-4146-adf3-2332bd57a604",
        "cursor": {
          "ref": "06c1d844-e6a1-46fa-8bca-1ed3926254dc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ba024cd-af05-4cff-9b77-b3634c515131"
        },
        "item": {
          "id": "07f7b883-8f41-4146-adf3-2332bd57a604",
          "name": "did:invalid"
        },
        "response": {
          "id": "e96d287c-d1f4-435c-94ca-799c10895585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533c85ca-ffdf-4ecc-bf68-b944893d35d8",
        "cursor": {
          "ref": "2d5a51df-6559-4e4b-b452-42b537a7db84",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "95ccf68c-dd8d-4c93-951e-35700b5100f6"
        },
        "item": {
          "id": "533c85ca-ffdf-4ecc-bf68-b944893d35d8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3a363516-660e-4121-9d1e-b4af65793eee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 82,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7cf3d3-6dee-4ca6-97f8-e13e9ee0da59",
        "cursor": {
          "ref": "74864e94-2d1d-4fad-9b47-76903c4c6fba",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "260c31e9-d11a-4fef-8cad-03604fbab510"
        },
        "item": {
          "id": "8c7cf3d3-6dee-4ca6-97f8-e13e9ee0da59",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6b997bee-9d83-4109-b7a7-df72e5b9ca05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58091f15-970d-4d0d-811e-9a9f02361c89",
        "cursor": {
          "ref": "4de18ac7-97fe-405c-b499-91488fc43d8e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "17aec140-e612-4ba6-ae45-a366d6da1ad8"
        },
        "item": {
          "id": "58091f15-970d-4d0d-811e-9a9f02361c89",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "73b37298-8bd6-436f-b972-8f03ab1c2bbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81809179-9121-48ad-b7b0-cf8d3bff6066",
        "cursor": {
          "ref": "62c30e88-697d-4ad1-aca4-167a73e5acc7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "416c1c7e-a3ca-42e3-a055-e28d86e02da3"
        },
        "item": {
          "id": "81809179-9121-48ad-b7b0-cf8d3bff6066",
          "name": "identifiers"
        },
        "response": {
          "id": "34bac186-976e-4c27-9f7e-5dd21c1512cf",
          "status": "OK",
          "code": 200,
          "responseTime": 259,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42557807-aa74-4423-a6f5-61b17f77d886",
        "cursor": {
          "ref": "8f616ead-d0f4-4104-94a5-677500550064",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa8b0e00-8696-4adb-b248-6f3b69f21390"
        },
        "item": {
          "id": "42557807-aa74-4423-a6f5-61b17f77d886",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad7303da-4479-4465-ab58-aedfc44ec5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff8d743-1f45-4feb-b914-2fd252a96429",
        "cursor": {
          "ref": "6d16c503-8a65-41e3-91ba-7c8649fe1b24",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f66da9c1-6a43-4027-b3be-76fc322b0401"
        },
        "item": {
          "id": "eff8d743-1f45-4feb-b914-2fd252a96429",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "506bd595-4931-4184-8bfe-15b291e11ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91cac26-1600-44fc-9ed1-83a9344f0261",
        "cursor": {
          "ref": "94f0c0d8-0699-4445-ab17-8c6dfbe2a501",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d0220b39-a94e-45e6-bb24-8832ce1dde3d"
        },
        "item": {
          "id": "f91cac26-1600-44fc-9ed1-83a9344f0261",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9c121d47-4adb-4be1-af53-3fee5e5d7213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87f629f-3e3c-400c-9440-7351573b4468",
        "cursor": {
          "ref": "7f605006-68cb-46e0-9d79-b1fd08672997",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c077ccee-d329-4fa0-beb3-bf71546bee87"
        },
        "item": {
          "id": "d87f629f-3e3c-400c-9440-7351573b4468",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "95f57040-b65a-48d4-85f3-0460e08c2d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3badbe-6dc5-42c2-8b50-9489edf1fca6",
        "cursor": {
          "ref": "07d1dbd9-91cc-4801-9a94-734d21576ba7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5ee33cf6-28d9-46cb-ae31-9864d4b92703"
        },
        "item": {
          "id": "6d3badbe-6dc5-42c2-8b50-9489edf1fca6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2a6f98b7-e4da-423c-a20d-aa09a7f2ff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f25435-76ff-44ad-82c1-8a786e2e518e",
        "cursor": {
          "ref": "88fdd14a-62f5-4571-a2ee-cd238d22ac62",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf623a52-28e6-4d4b-b149-800f1bbbf56f"
        },
        "item": {
          "id": "d8f25435-76ff-44ad-82c1-8a786e2e518e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1ee46cd9-dfcf-43ab-b97e-ed326ee7b2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04409c-561d-4f3a-bc9f-739875130f93",
        "cursor": {
          "ref": "fa60bf3d-84b7-4938-b0e4-0fc05e711d75",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "07268450-ecdc-4e88-bace-dbef35be62eb"
        },
        "item": {
          "id": "8c04409c-561d-4f3a-bc9f-739875130f93",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "91d75fd9-898d-4af9-a86d-f7179f8e338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1098c89f-2bde-47d7-a508-e5c39a83aec4",
        "cursor": {
          "ref": "9d6d452a-bb4c-4c98-9350-2f70eee2763f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "df8ff045-e9d1-4859-9227-e2dd91e9d2cb"
        },
        "item": {
          "id": "1098c89f-2bde-47d7-a508-e5c39a83aec4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2d93e8a2-a8ac-47bf-9cba-9c5b9f8b91ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bced1ceb-81e9-4632-b6aa-ae3953125f44",
        "cursor": {
          "ref": "0332e78f-3adf-4fa2-bc0b-faa4fc234fa0",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1e2fe064-9432-4f23-8029-444ea2d8e4fa"
        },
        "item": {
          "id": "bced1ceb-81e9-4632-b6aa-ae3953125f44",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0c3fe55d-01c5-4bab-9040-9dbcf758753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340c5249-ca46-47f1-bcb6-1459801099c6",
        "cursor": {
          "ref": "98996cc9-c288-4fd4-a675-b41d71571a17",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "07a4be93-1b10-45cb-9f9a-a1a571a834f5"
        },
        "item": {
          "id": "340c5249-ca46-47f1-bcb6-1459801099c6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1e2926e2-72b9-41ae-a725-ad6641799c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210936f3-8d70-4886-8c9b-c3382362828f",
        "cursor": {
          "ref": "3b5529f2-a663-4f53-b3d9-de7cde4bfea0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "13b73c46-82d4-4799-8534-38d0072be406"
        },
        "item": {
          "id": "210936f3-8d70-4886-8c9b-c3382362828f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7f4539b6-a059-414e-a378-ac145fc6261c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c66e85-5604-4cce-8ab4-f2edf26edaf1",
        "cursor": {
          "ref": "aa7a4e53-1889-4e7c-ad9f-d8d98e4df30a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f91ffd58-2d88-4c3b-a4c1-93fbf2a3f20c"
        },
        "item": {
          "id": "c8c66e85-5604-4cce-8ab4-f2edf26edaf1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f8bae9bb-2286-4a70-9188-043fc940d2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761c7604-d9a3-4db4-95c5-563d888233d1",
        "cursor": {
          "ref": "f67a1cfc-88ba-488e-ac5f-ef5674a25ca1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "13ff79b5-feff-412a-b133-2432a71456a0"
        },
        "item": {
          "id": "761c7604-d9a3-4db4-95c5-563d888233d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "db1be8b1-dae4-4bb3-a207-d51a4267b9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faaac66-245d-449b-9f7b-c412d922f395",
        "cursor": {
          "ref": "dcc1a0e2-d68f-4f8b-9857-b14bb680dba5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9e041562-db8b-4fab-acac-7c39128d9b5d"
        },
        "item": {
          "id": "1faaac66-245d-449b-9f7b-c412d922f395",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e67c27f1-c145-4c1e-b808-73b87b35e10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8274670-1a6f-4130-9eb0-64269e587cc1",
        "cursor": {
          "ref": "da69a739-619c-4519-bd59-437d24cb28b7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0606c498-713b-48da-b70e-cd0b165ec0a4"
        },
        "item": {
          "id": "d8274670-1a6f-4130-9eb0-64269e587cc1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "22e61cda-60fa-4f55-b83d-f87a26fe62f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0881fed2-5cb6-41d1-903f-1a60a22bedec",
        "cursor": {
          "ref": "36ca5a3b-ddd3-4b9a-8b06-b5cc5954edcf",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0d528f0a-af2c-4a80-a1cd-d0f404179088"
        },
        "item": {
          "id": "0881fed2-5cb6-41d1-903f-1a60a22bedec",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ff8ba230-57c1-4f1c-b430-1ec4c4f085d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1952d8-7ce7-4cf4-9a11-a9de2df99460",
        "cursor": {
          "ref": "ff867de8-9a6f-4667-90f0-789f0a95673f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "941e6cb0-3ea2-4924-a921-49cebc5bed92"
        },
        "item": {
          "id": "fe1952d8-7ce7-4cf4-9a11-a9de2df99460",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a5a8ef60-df25-4319-ac2b-258d55e22ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8955e961-ec81-468a-bcec-bb2a8a3bc5a8",
        "cursor": {
          "ref": "1bcde410-7cf8-4db1-a971-6805b408a0c2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "61509f66-428b-402e-b325-5880b4068edf"
        },
        "item": {
          "id": "8955e961-ec81-468a-bcec-bb2a8a3bc5a8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0eb90c16-ea1e-43a8-a519-a2f289f8803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100579fc-aaf7-437b-aea3-cb41e114b3d6",
        "cursor": {
          "ref": "55668ea4-9e31-45e9-84a7-567a2d6b07b0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f326267a-9894-4649-90ee-917b280f10d2"
        },
        "item": {
          "id": "100579fc-aaf7-437b-aea3-cb41e114b3d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "751a033e-5b96-432a-93ed-1f9f65713c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe313a18-7bb2-4ede-9200-5e19c5ab41fb",
        "cursor": {
          "ref": "8aaa45fb-53d3-41e4-a614-00b638fac061",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8385008c-7850-41c7-90d6-39f863eb106f"
        },
        "item": {
          "id": "fe313a18-7bb2-4ede-9200-5e19c5ab41fb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "314f2e1d-3344-47c2-ba7a-60af92b27dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13acb073-92cb-4e6b-81b4-b1a63ed479e2",
        "cursor": {
          "ref": "aadd3963-bef1-44d6-8441-37dc95cfb4cf",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d09bae29-bced-4ae8-aa37-0a831b560dd8"
        },
        "item": {
          "id": "13acb073-92cb-4e6b-81b4-b1a63ed479e2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7959b857-553c-4052-8434-139924368da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd2eb72-e189-4fbf-8b15-baa83057fbae",
        "cursor": {
          "ref": "7eaab289-a234-46e9-b378-ab6aef0ba712",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2192ce54-d9cd-4d99-b8aa-fed3c9dadf86"
        },
        "item": {
          "id": "acd2eb72-e189-4fbf-8b15-baa83057fbae",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f55ba3a9-ae36-4fd6-8c81-98d005099284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d2d2b3-0d61-49cb-bcaa-80d65629ec2c",
        "cursor": {
          "ref": "feab657c-b0ae-4421-b8c4-eddff3500546",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0078ffef-38b7-4a9c-8d48-2fe597e494cb"
        },
        "item": {
          "id": "06d2d2b3-0d61-49cb-bcaa-80d65629ec2c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ea2e6126-d5fc-4171-9d8c-bc069a01e423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebdd7d4-3edc-409e-b1f8-5ac26fd8f0d3",
        "cursor": {
          "ref": "71982a3e-8788-4de3-8977-806908294a2f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "95b1dc56-4f34-44d4-a5b1-b9482b0fcb28"
        },
        "item": {
          "id": "6ebdd7d4-3edc-409e-b1f8-5ac26fd8f0d3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "de6fee8f-e07b-42bb-8721-a21b43cc4fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c1ab68-27f3-4eed-af30-cb87ff2028c7",
        "cursor": {
          "ref": "a33fd5d5-0380-4046-b198-1c257ef74052",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b4f38768-155a-4dc7-bb40-8f82ccad16a4"
        },
        "item": {
          "id": "d8c1ab68-27f3-4eed-af30-cb87ff2028c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "534774eb-f7d2-42cf-acfd-a057fe4a1b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41be283-61ad-4983-bcaf-a4980c1fbdb8",
        "cursor": {
          "ref": "416150ec-1d20-4ace-b89b-6ea7ae20ab47",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5ef6ada4-e7ed-43b4-8c28-930e16c04426"
        },
        "item": {
          "id": "a41be283-61ad-4983-bcaf-a4980c1fbdb8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "90672407-8f87-46fa-a6f5-f2c9334cc88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b87cb6-52c4-4daa-8400-9b70f18dc27d",
        "cursor": {
          "ref": "42cdd393-1641-44f3-a37d-f68084892fdd",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "28a16e45-1879-48ab-81e7-8bb8b7330637"
        },
        "item": {
          "id": "85b87cb6-52c4-4daa-8400-9b70f18dc27d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "54302d64-4fbe-4b76-8f41-27867741ad1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eb7fc6-85f8-4e3f-a27b-5817f92aecac",
        "cursor": {
          "ref": "8acf9a7c-d895-4718-84a2-3a95476c4f19",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cf000aef-849c-4dea-9de0-0d368ebb48a0"
        },
        "item": {
          "id": "16eb7fc6-85f8-4e3f-a27b-5817f92aecac",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a54fce2b-c5e8-4c3d-82a2-bf60238c73e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bec6b7-a12e-4506-97ca-c0a6976c7bfb",
        "cursor": {
          "ref": "e3e92fa6-7b94-4cb5-a789-7e635d39555f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a209d44e-510f-4627-a397-9f79a176edde"
        },
        "item": {
          "id": "97bec6b7-a12e-4506-97ca-c0a6976c7bfb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6f2d23dc-4f79-42cc-9b19-6958a9401e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60549c6b-77e8-43a0-8daf-e96a7ed88b0d",
        "cursor": {
          "ref": "0082a1e4-7718-414b-a6b8-3fd4c8bd972f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "be69e3f1-221d-4d56-82d2-47ffbc812bff"
        },
        "item": {
          "id": "60549c6b-77e8-43a0-8daf-e96a7ed88b0d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "319a5eb9-ce98-4871-b5a9-deec23ae818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce2bd8f-66d2-4e8b-a119-bc7a89e54f31",
        "cursor": {
          "ref": "f5353ead-527a-4a1a-9ad6-953f77bcf464",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4aae6252-acee-4f79-a130-375c22208656"
        },
        "item": {
          "id": "fce2bd8f-66d2-4e8b-a119-bc7a89e54f31",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "55604c0f-55a5-4387-a0d1-1a887e7621d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef4f979-9936-4cea-b117-adbefbcfeeab",
        "cursor": {
          "ref": "5b1a7c96-b8b5-403a-8a78-93183bd6c4e4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "992409fa-253f-43c2-aaae-92bfa37dd4e9"
        },
        "item": {
          "id": "5ef4f979-9936-4cea-b117-adbefbcfeeab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8e928fcb-55aa-495a-bf96-8674ee4c5c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9dce10-44b6-48ab-9f81-6cbb1769e83b",
        "cursor": {
          "ref": "165e2053-aaeb-49bf-a966-f1560d50474c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3bbd401-2246-4ce0-a04b-4556746247ab"
        },
        "item": {
          "id": "2c9dce10-44b6-48ab-9f81-6cbb1769e83b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "69bad01f-174d-456c-aa6c-790d117f9b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776e5174-bbd3-4941-870b-282376964151",
        "cursor": {
          "ref": "34dd981c-e1cc-4ba1-854d-1d0d7d5f7080",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "120d9da5-4875-4aca-a408-8a356e38e061"
        },
        "item": {
          "id": "776e5174-bbd3-4941-870b-282376964151",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dfb57d81-e9ed-421c-af00-f383caa901c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95580ae-250e-40a3-a752-5eb0b3e7c3ff",
        "cursor": {
          "ref": "c6faf595-285e-44f2-b125-08970f8518df",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4c45afb1-56db-410a-b902-f809cfa705c3"
        },
        "item": {
          "id": "d95580ae-250e-40a3-a752-5eb0b3e7c3ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cd3b4e94-6c40-4526-b166-2ac14a1a40cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb11e80e-9cba-43a2-b919-4a8bca16c723",
        "cursor": {
          "ref": "74dc0c3c-f967-4c2b-862e-f245b26e83c6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "757633a1-2aa1-4246-b11b-60269b55c431"
        },
        "item": {
          "id": "bb11e80e-9cba-43a2-b919-4a8bca16c723",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4249e623-5fa3-4e7a-8ada-a47651e1a4d3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 29,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410feab4-9199-4715-b8a3-e1eb3424e44c",
        "cursor": {
          "ref": "e6ee1677-7881-44de-8ab8-c99d28e5c330",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "58b3babd-daf5-415f-9239-bac6d0b0e3a5"
        },
        "item": {
          "id": "410feab4-9199-4715-b8a3-e1eb3424e44c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e0cb5de5-81bc-431e-93e0-14577f092201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3835f041-29f0-42f5-b774-70f28ecedb67",
        "cursor": {
          "ref": "3e1155e9-ff8b-4f9f-a0bb-c4150fdcd33e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e5c139b5-0449-4379-b9ba-ceb92e8b2c4e"
        },
        "item": {
          "id": "3835f041-29f0-42f5-b774-70f28ecedb67",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "43e044b6-96a6-4b6e-9e74-8a5cf011e609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9922ae-9d33-4a08-accf-0b8a2d509bcd",
        "cursor": {
          "ref": "69dac734-ad7e-4537-8e95-4128be6444d7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d2bcdd8b-7202-48b5-ae94-dea92f8a6a52"
        },
        "item": {
          "id": "be9922ae-9d33-4a08-accf-0b8a2d509bcd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4c58c64b-0d55-4d46-a83c-b372457b1ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a67de8-c498-404d-bb5c-e0abbd430c3a",
        "cursor": {
          "ref": "7c9b997c-c64b-473e-b0f1-e5829ff513af",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cfc4a9b6-aa2d-420c-90c0-a86a55188efa"
        },
        "item": {
          "id": "d8a67de8-c498-404d-bb5c-e0abbd430c3a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dfcab35a-47a2-4c62-944b-fbf840b521fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163bd644-ead0-4fae-ba0c-0187adb02c6b",
        "cursor": {
          "ref": "a1934e06-6b19-4d07-8272-d9f4ad85f6b9",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "60ac7676-318a-4958-9a83-46a18749a391"
        },
        "item": {
          "id": "163bd644-ead0-4fae-ba0c-0187adb02c6b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e157cb24-dda2-4e60-9905-a300472ad379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84441e19-8215-49c9-b52f-40e36103a8fd",
        "cursor": {
          "ref": "af77043e-50f0-4e0e-9765-2ab7002f914f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ebff0d3-a96f-4b8e-8b68-35b0437cd36d"
        },
        "item": {
          "id": "84441e19-8215-49c9-b52f-40e36103a8fd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c1fe4172-e6d9-4bdb-b82c-e4ecefffb9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b879c1-af48-479e-abda-6b09368747e1",
        "cursor": {
          "ref": "21cad562-ebef-401f-98c2-7f78dcbf22a9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f189d767-5066-4fcf-98ff-753ed703b7bf"
        },
        "item": {
          "id": "62b879c1-af48-479e-abda-6b09368747e1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5d992573-fec7-4a7b-a359-f6d06358a9c7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7309ca-c35e-40c8-9015-ee660ddb1c0a",
        "cursor": {
          "ref": "01a82e76-0efa-435b-b8af-2f59b819ca73",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ec830968-0626-4e3f-958b-2e1754bd0a24"
        },
        "item": {
          "id": "5d7309ca-c35e-40c8-9015-ee660ddb1c0a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9ce02fa8-739a-425f-ba18-e7c8ae73e7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09982e84-659c-4c78-9532-44b43363f32c",
        "cursor": {
          "ref": "871ddfdd-79e0-49ea-92d9-f3e63a426ea8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "61d7cabe-6745-41ab-951b-17422f42546c"
        },
        "item": {
          "id": "09982e84-659c-4c78-9532-44b43363f32c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "571903e9-de3f-46ee-a31e-f597b707409d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7ebb7b-63b6-41d0-9412-ba126c95ac8c",
        "cursor": {
          "ref": "c186f8c4-97ce-49f0-95d4-114ffc8c12e0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9006c04e-d44b-4773-bf19-2674a4bca5a9"
        },
        "item": {
          "id": "fc7ebb7b-63b6-41d0-9412-ba126c95ac8c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eabf803f-c582-4dec-b9f0-14b9c940b9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bda1ff-1a05-4708-bc39-619738ee1cee",
        "cursor": {
          "ref": "ec5754b7-96b3-4d2e-b292-86c5fdfc8628",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "54c4fd04-ed04-4ace-9309-17895e7ed22a"
        },
        "item": {
          "id": "60bda1ff-1a05-4708-bc39-619738ee1cee",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "437edb82-fdad-4ad6-8d04-ed331e0a2e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57f891c-2f52-438c-8f38-368900769366",
        "cursor": {
          "ref": "78ec4e29-4b7e-4405-9eee-a0f1098790b0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b97ce8b6-b98c-4086-bdff-695739054d22"
        },
        "item": {
          "id": "a57f891c-2f52-438c-8f38-368900769366",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4f87f4a4-b279-4f86-8497-cc744f38a9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0468f9-9c1d-4041-bff3-72e4b143c615",
        "cursor": {
          "ref": "5684e576-ca8d-4991-8970-4cf3634c5209",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "65c98241-5f93-4ae7-b02b-b62b2f4136fe"
        },
        "item": {
          "id": "cf0468f9-9c1d-4041-bff3-72e4b143c615",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2f8bb797-5f2c-484c-b328-2f1212e4dc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76359a59-97af-470a-9a6a-05857542c59b",
        "cursor": {
          "ref": "4fe331e9-a921-4fa9-8b22-f957b9d0736d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bea97b5a-0173-43bf-90d8-87363d6e0e96"
        },
        "item": {
          "id": "76359a59-97af-470a-9a6a-05857542c59b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f9615537-dd53-4390-8542-cbe5a9b2c2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7dd720-91e8-4861-bfd9-4ea925c4028f",
        "cursor": {
          "ref": "8c4e95a0-08b6-4cf6-b4c7-dec1d98ffcba",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "121f8f26-269e-4d35-9f4d-8ea468e969a2"
        },
        "item": {
          "id": "4a7dd720-91e8-4861-bfd9-4ea925c4028f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0fda7cb8-990f-4ba9-a099-20250c2e9d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91930d38-9c67-449b-8c84-95b95a290571",
        "cursor": {
          "ref": "d65ca222-90cf-4bcf-8f4d-2266186f57fc",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "83c63677-1c6c-4892-bcc1-b6fa4a2d4d7e"
        },
        "item": {
          "id": "91930d38-9c67-449b-8c84-95b95a290571",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b95f4cc3-06d2-4c9e-a7ea-b816adb33b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1146a2aa-5a6f-48af-a5fe-0436405f6194",
        "cursor": {
          "ref": "099c377d-f147-4a8f-b0de-24ce10b81415",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "506d9557-9989-4299-bb0a-70c5df3ff375"
        },
        "item": {
          "id": "1146a2aa-5a6f-48af-a5fe-0436405f6194",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "40184881-4ea1-45ad-8890-36d891f9bd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0016203a-fb18-483f-b0e2-5820da06b396",
        "cursor": {
          "ref": "83ffa599-962e-4511-b9bd-2e2df945cb14",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "056413e5-f58c-462c-9243-be8b7229151b"
        },
        "item": {
          "id": "0016203a-fb18-483f-b0e2-5820da06b396",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c5964fca-042c-4f45-8551-f2e65602b5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a252e750-ce5e-497f-b8f0-194ef346e944",
        "cursor": {
          "ref": "c8e87d11-6011-4f1d-b691-7a2cf44d1525",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9045bb8e-3a18-435c-82f2-3ae5077c310a"
        },
        "item": {
          "id": "a252e750-ce5e-497f-b8f0-194ef346e944",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cfcb4dc4-952f-413c-8d81-a150df68edcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971b2293-c497-4ad1-a38c-1e30096a11dd",
        "cursor": {
          "ref": "77379ed2-e5e4-4c4c-9148-9c61b524aeb1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "37740b47-68b9-4f65-bdc4-cfc76ae8e7c4"
        },
        "item": {
          "id": "971b2293-c497-4ad1-a38c-1e30096a11dd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "08bac53a-ea0b-452b-90b1-9f791b4b8cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8c9ca2-5289-4672-8d3e-b431505564f8",
        "cursor": {
          "ref": "4f3615cd-a800-4ccd-8c30-e0246164e3c8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b9b5027b-3248-4eac-abd6-2cce3a97bdeb"
        },
        "item": {
          "id": "6b8c9ca2-5289-4672-8d3e-b431505564f8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d786e74c-2f2d-4949-9bd4-ffc052bdc17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197fba4e-2662-4b3e-af1c-d85949e33763",
        "cursor": {
          "ref": "f837b148-33c1-4e9a-940a-0a102a9575b6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9ec66869-2824-4c8e-8a8c-930d533108dc"
        },
        "item": {
          "id": "197fba4e-2662-4b3e-af1c-d85949e33763",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ac5392e-eb3e-42d8-bc5c-a2adbc644ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830e651e-9c61-49d0-b9f6-10a9228b2077",
        "cursor": {
          "ref": "220cb4f1-8670-4a68-ace5-00afaddfd648",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60599c36-5763-45d5-aedf-2db0cd77ee5d"
        },
        "item": {
          "id": "830e651e-9c61-49d0-b9f6-10a9228b2077",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1c266686-ef55-430b-8c48-1e3336d07aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf4e71-5fe6-4530-8071-5ba204960dfe",
        "cursor": {
          "ref": "740d1a15-eea0-40b4-82aa-1d4fcff9e3f4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10d7e2cf-3ae9-4866-b14d-536158e0699a"
        },
        "item": {
          "id": "fbdf4e71-5fe6-4530-8071-5ba204960dfe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "908de1a8-1349-4134-a4e0-d684f0d58b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e2a97d-b239-4fab-9c57-39a3fd3ad058",
        "cursor": {
          "ref": "d4cef1c1-46f9-4fdd-9c7d-87a5be56a066",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "352ce639-62dc-4e76-b1d9-3d1918171340"
        },
        "item": {
          "id": "97e2a97d-b239-4fab-9c57-39a3fd3ad058",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d2a02818-dcb5-429a-a8da-512bbe2804dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5af277b-1cab-4efd-b002-da815e4a9041",
        "cursor": {
          "ref": "6aa61b83-11a1-49eb-942f-c74ba04e6fee",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4a4b9bbb-61c5-42a0-a81a-bee1505d085c"
        },
        "item": {
          "id": "d5af277b-1cab-4efd-b002-da815e4a9041",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7e5fc940-9116-490a-bdd8-622709aa4eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbd50c4-ae73-4e74-991c-6681991ce7b6",
        "cursor": {
          "ref": "b819e8ea-f8d8-4198-b578-61d5a8728409",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df4ff164-2d2d-4b67-b61d-5f3210f71811"
        },
        "item": {
          "id": "ecbd50c4-ae73-4e74-991c-6681991ce7b6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4ec7d1e5-2c2c-41a5-8bfc-ff2f04c6adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca22d47e-ce2e-4bb1-8a63-34c8827c618d",
        "cursor": {
          "ref": "011d38d0-587f-4280-a896-7ee2db92b181",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "799a30ba-c8fc-4b53-8538-8d921a237ff0"
        },
        "item": {
          "id": "ca22d47e-ce2e-4bb1-8a63-34c8827c618d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "327f3c26-f058-42ac-a5bb-7bc9b3f1a582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d7ef84-7310-4cc9-8ad5-82ba077e5b49",
        "cursor": {
          "ref": "008e6413-7615-4427-892d-4ec583d4fddf",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b8f51be9-ad46-4b54-b627-1bb55cc2955c"
        },
        "item": {
          "id": "82d7ef84-7310-4cc9-8ad5-82ba077e5b49",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ef761994-1273-4b68-9ca1-c31f17fc1d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8a0244-9554-415c-9c6e-d7303bef71ab",
        "cursor": {
          "ref": "a390d50f-76aa-4e5a-b40b-35a5d7447461",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2c4aef99-40a8-4819-8cb1-fc265acce244"
        },
        "item": {
          "id": "2b8a0244-9554-415c-9c6e-d7303bef71ab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8cb2262d-8b41-4fd2-b21f-b7f699b2009b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aeae21-9730-42d0-b429-3f6fbaa28561",
        "cursor": {
          "ref": "efdd275b-2b75-41db-9810-cfa19a33c268",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "956c4221-0827-4b71-9e13-3da2d3761eb9"
        },
        "item": {
          "id": "48aeae21-9730-42d0-b429-3f6fbaa28561",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a96f66f8-3aac-469b-8ce0-7e9aab10ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3efef3-c40f-4bcd-afbc-72c29d4f3b07",
        "cursor": {
          "ref": "cf8212b8-4c22-4041-8d59-5a786f9da739",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "70b2f33a-d488-4a1c-9d12-f606b2483eaf"
        },
        "item": {
          "id": "be3efef3-c40f-4bcd-afbc-72c29d4f3b07",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5331137d-285b-43e5-9ed3-411f71752345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5718c8-03aa-478c-83dd-6a1e1150c268",
        "cursor": {
          "ref": "7380e21d-11b9-41d1-9c31-00bc4d7abb2d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0bf5f932-416e-4f20-a441-df9045b048ea"
        },
        "item": {
          "id": "cd5718c8-03aa-478c-83dd-6a1e1150c268",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1274a26b-6d65-444b-b965-2734a490bb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdab1532-56cf-42b4-8a31-ef74c44204af",
        "cursor": {
          "ref": "446810a5-2e00-48b1-9de8-6ba989bb2c0c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6c7fc3d6-0af0-4c38-96e5-f335b038a447"
        },
        "item": {
          "id": "bdab1532-56cf-42b4-8a31-ef74c44204af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c53db029-97ef-4f0a-95fa-de55c2aaa000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db004d6f-ef87-40d0-a56b-07642ede6330",
        "cursor": {
          "ref": "5d8bbb15-90eb-4a01-9232-b982b029fb19",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7cf909b3-9594-4072-8e40-290ed9bdc657"
        },
        "item": {
          "id": "db004d6f-ef87-40d0-a56b-07642ede6330",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2fe4f727-dfe2-4bf9-afe7-7e81e99fbd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ba5502-d644-4ec3-88b4-3c38e0e1f2e7",
        "cursor": {
          "ref": "ab7c40bc-b4cc-4c68-85d9-bdc38fbb6744",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c8eb9056-0bb0-4514-80e4-d2a7a907ab6e"
        },
        "item": {
          "id": "72ba5502-d644-4ec3-88b4-3c38e0e1f2e7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d61aaed9-960a-4686-826c-b77d0394117d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50187fd1-dfb4-4e22-9f72-7ffbf888ef4d",
        "cursor": {
          "ref": "7f1519d7-6aeb-4f0b-bdda-25155994f0bf",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4097b386-b785-4f76-88de-ad623289f02e"
        },
        "item": {
          "id": "50187fd1-dfb4-4e22-9f72-7ffbf888ef4d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "02d71fbe-58fa-44e0-b3a3-ae845ed82ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cef588-9d2c-42ea-9b0b-997dc603f915",
        "cursor": {
          "ref": "2fa7d8de-b121-4812-9645-ec72bdc97b63",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "88154b31-2acd-4efa-96da-a1ae1eb20448"
        },
        "item": {
          "id": "a0cef588-9d2c-42ea-9b0b-997dc603f915",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3dc08a3a-b5a4-4d71-b500-aa7c40873c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0483124-4715-458d-aaf9-611648cfc300",
        "cursor": {
          "ref": "959fd994-93a0-4632-b4b0-53605465170f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "51fd9d76-f320-4db6-966d-cbf406e48352"
        },
        "item": {
          "id": "a0483124-4715-458d-aaf9-611648cfc300",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c52a496d-07df-4b6c-a1cf-eb453720e79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49610848-6c0b-44d8-bffa-e3f61cbf8752",
        "cursor": {
          "ref": "f0fde3d0-0ace-40fe-9235-5eb838e40895",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6cf2b2f4-21fd-4afc-92ab-95d53b12510c"
        },
        "item": {
          "id": "49610848-6c0b-44d8-bffa-e3f61cbf8752",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "78969e7d-c6f5-48b7-ac70-db744ca5e459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4736aa57-5ae6-4b87-be30-4e73005b94d1",
        "cursor": {
          "ref": "e8a6fdea-a37c-424c-9bb0-bbfa5d3a59ac",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4e947c3f-87d6-4121-8412-4f2b1c1a0799"
        },
        "item": {
          "id": "4736aa57-5ae6-4b87-be30-4e73005b94d1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d46c8af5-fe3f-448a-8691-2424ae8f14fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9ef493-17a1-493f-a677-2fe4bcee77dd",
        "cursor": {
          "ref": "2d485536-2fe6-4204-ad39-41ab279fd7e9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dc76756e-f218-4253-806d-c19fbcc7a648"
        },
        "item": {
          "id": "ae9ef493-17a1-493f-a677-2fe4bcee77dd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ffcb9c5e-4f17-42a9-b1a5-9464d1769cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5cd383-84b9-4e0f-b10b-83659b471345",
        "cursor": {
          "ref": "41179089-c5dc-4790-b689-07be4cc4cce1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6e075f32-2775-420b-89c1-25e35df86075"
        },
        "item": {
          "id": "ab5cd383-84b9-4e0f-b10b-83659b471345",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6ddebd60-dd54-4944-b6dc-607474b3ece1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a7a26-9b3b-4443-b267-d93ec1a1e097",
        "cursor": {
          "ref": "5f671924-69ee-4434-b717-c7fe5dd60a32",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "96eb460e-94d0-44cd-891e-adf0c6cf23c2"
        },
        "item": {
          "id": "802a7a26-9b3b-4443-b267-d93ec1a1e097",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "541fafce-ec1f-449f-9b6b-e4d3f0871dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535ef321-16a1-468d-9cd5-36ef4ad083a4",
        "cursor": {
          "ref": "23e22b9d-b1a9-4030-bff6-945a1c10f038",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4cba4f5f-7b8e-4152-9eac-268543b36bb9"
        },
        "item": {
          "id": "535ef321-16a1-468d-9cd5-36ef4ad083a4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "792d7160-8656-4a6f-9b27-e5ae8c44db4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c510e7-5333-4736-9cbc-500517f326ca",
        "cursor": {
          "ref": "6b2254ae-07ef-42f6-ab84-15a039865d3f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9cae3d1d-060a-49a8-a54a-df28b6410779"
        },
        "item": {
          "id": "41c510e7-5333-4736-9cbc-500517f326ca",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0362c1aa-c4ac-461e-aeb5-530a4a446b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7af3fd3-29e6-4baf-9d4f-6368a7ed03b4",
        "cursor": {
          "ref": "194249ca-5a71-43ec-9f58-23a128486b2d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "66e917f0-7298-4bb3-bfd1-8c8624db93d1"
        },
        "item": {
          "id": "a7af3fd3-29e6-4baf-9d4f-6368a7ed03b4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f596bb04-c07b-43ec-bdb0-d2fc65dcc945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d3fe7-fe95-44d4-967c-11061c322307",
        "cursor": {
          "ref": "fc596ae9-505e-435a-9ec5-62694c16ce1c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ce7c8437-d7b9-4937-ad5c-92bbbc02798d"
        },
        "item": {
          "id": "e12d3fe7-fe95-44d4-967c-11061c322307",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e899f2ab-2c50-4a45-987b-28c3a560fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2762ac2d-a5da-4322-a7f4-5a5969b771b3",
        "cursor": {
          "ref": "dbcecbc3-16ef-4b5a-85bd-db260b567b9f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df0df743-bdbb-4339-9a71-499726b5b19a"
        },
        "item": {
          "id": "2762ac2d-a5da-4322-a7f4-5a5969b771b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "62dc6c0d-4d01-477f-8940-5074735747e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d029af96-6a4c-4bad-b66c-a315761b6e2c",
        "cursor": {
          "ref": "58caef46-8da7-48b0-b48d-509efe3c4a8a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bd1cc5f6-214b-48e6-b0b5-4f87fc498854"
        },
        "item": {
          "id": "d029af96-6a4c-4bad-b66c-a315761b6e2c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3ac48336-e6ff-45b6-abb3-6ecc73daedf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14795baf-c22b-42eb-89e1-836dd00337a5",
        "cursor": {
          "ref": "9d359dc1-6d82-457d-9f2b-7416086ce2cc",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e3e63e48-6754-4036-827e-2ab023c15a22"
        },
        "item": {
          "id": "14795baf-c22b-42eb-89e1-836dd00337a5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7d1861bd-5909-4ca0-9b47-ff09a6159929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a2986-65b1-4261-8da2-8fc7746b2cf4",
        "cursor": {
          "ref": "655e4abb-6e34-4e35-88ab-388fcd888ce4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d2803d8-3449-4316-bbb7-fdf07ad63d42"
        },
        "item": {
          "id": "a41a2986-65b1-4261-8da2-8fc7746b2cf4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "08b0d8cd-a397-4e51-8785-9231052cfec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b594a408-449d-4388-87f5-abd6ba587d5f",
        "cursor": {
          "ref": "60213c61-ad43-440c-92f6-fcdc849e6137",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8a5b9845-f25a-41bd-8066-3d22b177f946"
        },
        "item": {
          "id": "b594a408-449d-4388-87f5-abd6ba587d5f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3e9aa2dc-7818-48a4-b868-126575966a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c25359b-7bd4-4f7a-b328-d6b7da47c74c",
        "cursor": {
          "ref": "9ef25132-7efa-48ce-9ca0-8057154cfb97",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7bf59efc-50f9-4ea5-b6ee-8329a7656973"
        },
        "item": {
          "id": "2c25359b-7bd4-4f7a-b328-d6b7da47c74c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7722ed18-21b2-4949-b679-f3bd4420aa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1e860d-1855-48c0-8841-6c2abe411b7d",
        "cursor": {
          "ref": "957b2e9b-8329-4e57-8f52-aceea2476d30",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7a1ad051-ad9f-4480-90c9-91a7051adafe"
        },
        "item": {
          "id": "bd1e860d-1855-48c0-8841-6c2abe411b7d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "efe26b9b-acbb-4aad-adc3-ac4f7dd91b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21f02ca-a0c6-4626-8357-ae967a3e4206",
        "cursor": {
          "ref": "4695907b-96f9-4cf6-bb2c-58f16da9b143",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fbb766d6-eac8-4557-a186-3934c8dba8e9"
        },
        "item": {
          "id": "e21f02ca-a0c6-4626-8357-ae967a3e4206",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4ba99021-66f1-44d5-947b-22942ef1c829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037d88c3-839b-4c75-ad5d-ef660fba54f0",
        "cursor": {
          "ref": "1dd4dba3-3c4e-4f11-9f35-30f21d33c0ec",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6aa303ab-a345-4444-b1f3-086ecf3cab42"
        },
        "item": {
          "id": "037d88c3-839b-4c75-ad5d-ef660fba54f0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f28d42e4-e9e7-47c2-9767-935cf51d3863",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba022420-be41-4fd9-9ab6-6d2cbe4d9c5c",
        "cursor": {
          "ref": "dca4485b-9d3d-4120-8c69-0407a8f51769",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a07081d7-725f-4cc8-a6e0-4d2894839d8c"
        },
        "item": {
          "id": "ba022420-be41-4fd9-9ab6-6d2cbe4d9c5c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "05b10e9f-d484-4206-90fc-f4f507e04fbf",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79c367-04b4-4fd0-896a-f89790d5ad60",
        "cursor": {
          "ref": "99fe5213-bb5c-47f7-a052-bab0d871608b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dda9daa4-4e41-4a4b-877c-509ed81d0ead"
        },
        "item": {
          "id": "6c79c367-04b4-4fd0-896a-f89790d5ad60",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d4ad8cf1-ff62-4c3a-ba7c-3955611fe306",
          "status": "Created",
          "code": 201,
          "responseTime": 167,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "77acf3d9-e0b6-4ea7-9ec5-a1c0eadb5d79",
        "cursor": {
          "ref": "e44e5a13-5672-49a3-9a6f-a5f03248789c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9c5f401b-ba72-4680-b519-6a9f52b0f3ed"
        },
        "item": {
          "id": "77acf3d9-e0b6-4ea7-9ec5-a1c0eadb5d79",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "240c6279-b74d-48de-a4bb-75a581b1df59",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "702de76e-cd91-4138-b75f-b0e2b98ff2be",
        "cursor": {
          "ref": "22b401b0-01a9-4ef3-9892-05e653450021",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f3774925-f721-4639-93c6-8cc95787dd30"
        },
        "item": {
          "id": "702de76e-cd91-4138-b75f-b0e2b98ff2be",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ba01dfdc-3782-4405-82ef-bdb565671894",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9c7f9b-3e39-47a5-b5d6-1f1fc920e7d4",
        "cursor": {
          "ref": "52789e41-72b2-481d-95f1-da6877be70d0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0696e4dc-0060-4957-9e05-537e4b7896d7"
        },
        "item": {
          "id": "8c9c7f9b-3e39-47a5-b5d6-1f1fc920e7d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c75ea8cf-753f-40b3-a46a-02ef03b963ca",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "959bc1ad-763b-45e9-8319-b679ba1fc3f4",
        "cursor": {
          "ref": "e46e8b6f-72bd-4d73-9b46-34cc7146b7e4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f11d61a7-65ef-417d-83dc-70a1380c1d0a"
        },
        "item": {
          "id": "959bc1ad-763b-45e9-8319-b679ba1fc3f4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f07f96be-8d9f-4b3a-aef0-eb89b0cf1116",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1f0762-d5b7-42ad-b537-221310f8b2dc",
        "cursor": {
          "ref": "3aa22e79-8327-4a61-a036-c311cffa6d01",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "40f9f125-87ae-4558-9546-8cea18123316"
        },
        "item": {
          "id": "ce1f0762-d5b7-42ad-b537-221310f8b2dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "801ddc94-d813-4f9e-88fc-c1353b8778d9",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c68c739-220e-4a51-a733-2210ba40c623",
        "cursor": {
          "ref": "c790551f-63e2-4db5-90f6-45c96d9342f6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "42d0df26-fdbd-45e8-adde-792b562b94bd"
        },
        "item": {
          "id": "5c68c739-220e-4a51-a733-2210ba40c623",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a480d7b-b83b-4e2d-a57b-4edd8d7d2501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d22de12-0f56-4ca8-b027-5791ada85183",
        "cursor": {
          "ref": "2032ec8e-79ca-4c99-af40-519fad1d7495",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "afc02431-0aa8-4f82-bcdf-7a0ec7863692"
        },
        "item": {
          "id": "6d22de12-0f56-4ca8-b027-5791ada85183",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8be05fbc-08a8-472a-8ec0-f737614c358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1624c808-136d-45ce-97c0-708096ae4601",
        "cursor": {
          "ref": "05d46135-235f-4023-ac2a-7b986f73c50c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "38e3cdb9-197a-4800-865d-a09bd8307d12"
        },
        "item": {
          "id": "1624c808-136d-45ce-97c0-708096ae4601",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "42fd6459-c877-44d1-b146-800413d142ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d953ce55-5681-43c4-b8de-9666358e3f57",
        "cursor": {
          "ref": "1c3fc4cf-5334-47c3-887b-34e8d90ce9c7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "25078ee3-a747-4d6f-910e-9336b6eb5f49"
        },
        "item": {
          "id": "d953ce55-5681-43c4-b8de-9666358e3f57",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f05c31ab-8260-4659-b5f4-42479352dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664929d2-ff47-41c2-a70c-6fefc7701086",
        "cursor": {
          "ref": "ce1deaa6-e7fb-4e04-be8e-f97f993bddef",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ee08ba49-32c3-4258-be20-2b421d697efa"
        },
        "item": {
          "id": "664929d2-ff47-41c2-a70c-6fefc7701086",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "11ced368-c07f-40d2-89a8-7289355076e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c68af6-ce30-4fe9-a5f1-3283ef9f3c63",
        "cursor": {
          "ref": "1e40e354-5592-4eee-b5f5-9381286e4953",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "54e9b5d1-57ad-438c-8f4c-85665064ea38"
        },
        "item": {
          "id": "d1c68af6-ce30-4fe9-a5f1-3283ef9f3c63",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97814f1e-91a3-4642-bbe5-6151e3614e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2e02a8-82cd-4e93-bc95-1c4dd9d8e162",
        "cursor": {
          "ref": "f4821d11-aeaf-43ba-a29a-8ecf4421a19b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b2cf32ff-53e1-44a5-9cbd-fd519d739954"
        },
        "item": {
          "id": "af2e02a8-82cd-4e93-bc95-1c4dd9d8e162",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4941dd35-08cb-432e-8f77-6f4ada5f1071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e16658-3595-4a0b-8ff4-7295dbc9b7bb",
        "cursor": {
          "ref": "bce6a2ac-4433-49e2-ae82-1abc6010e718",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a36f3291-bb55-4e21-b1be-086930a6fbb1"
        },
        "item": {
          "id": "b7e16658-3595-4a0b-8ff4-7295dbc9b7bb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "151a809f-52e9-4601-83dd-7bb643971914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069c85b0-16b5-4ff0-ae84-46396e4dfde2",
        "cursor": {
          "ref": "505ce863-8513-4743-85c0-5b28f1b9a329",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "14924c2d-0e03-4a9e-b79f-9cb5372296f3"
        },
        "item": {
          "id": "069c85b0-16b5-4ff0-ae84-46396e4dfde2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20bc575d-d097-4d91-acd8-0f73bcec75e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e66452-11a4-44be-890d-4ef7868cf71d",
        "cursor": {
          "ref": "7b94924a-95cf-4567-b722-76b25e25739d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "76ccc5a3-c8ca-4e22-922a-3017e7dac44d"
        },
        "item": {
          "id": "91e66452-11a4-44be-890d-4ef7868cf71d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d71f3d2-a3e3-40c7-8948-17d374425751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479e42cb-a696-4dc7-8e25-0cfa3c2148b4",
        "cursor": {
          "ref": "c7abb4d4-8d3b-403a-91e2-76e92a748246",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b92898e2-e982-4146-95ed-d4611d713214"
        },
        "item": {
          "id": "479e42cb-a696-4dc7-8e25-0cfa3c2148b4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e75b96c-0f9a-49d7-94aa-aadb9fab8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54980cc6-36b4-4d26-8b95-a1c3d66e140d",
        "cursor": {
          "ref": "d60cdc22-a3b0-4dcb-8950-af7c64a237b6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c6bbb74f-06ac-4292-a651-e4c234101019"
        },
        "item": {
          "id": "54980cc6-36b4-4d26-8b95-a1c3d66e140d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e0714a31-b191-4d1b-8a35-319c131d72a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c2184-d72e-48b1-92eb-259a9d982559",
        "cursor": {
          "ref": "7008bc2e-4056-4bc9-841c-8cf5ac56560c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "05f68f74-07fe-4eaa-bd87-759b990118c7"
        },
        "item": {
          "id": "3d3c2184-d72e-48b1-92eb-259a9d982559",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e0c9263-3acd-454a-9dbb-a6e415d8f5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1127dbac-7dab-47e2-923d-0ca221319c87",
        "cursor": {
          "ref": "9fa28cec-9465-410d-b881-a7c1c51005b0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7cf5d00f-666d-4d5c-a0b9-c8d4d7fd10f3"
        },
        "item": {
          "id": "1127dbac-7dab-47e2-923d-0ca221319c87",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9a3778c0-e292-450a-9dfb-167078826589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dcb595-95c1-4570-b33f-a968a3dab980",
        "cursor": {
          "ref": "68f38f07-1ec5-430d-8ea0-47d80881cbf5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e6e52b65-a116-4dce-b22c-2a12bf869825"
        },
        "item": {
          "id": "92dcb595-95c1-4570-b33f-a968a3dab980",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c51e209a-0cdd-438a-89cb-a0f319edd201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6c2d9c-6efc-4422-b7b3-9ca2eaab27d0",
        "cursor": {
          "ref": "744671d9-ed5e-4393-b608-46e0bff3b17f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a51aea2c-572f-42cd-8317-6fe81676d1d0"
        },
        "item": {
          "id": "0a6c2d9c-6efc-4422-b7b3-9ca2eaab27d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5b333fc5-cecb-4fd1-9dea-8b297dcd5d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c27b8e-349f-45f2-80a1-494c8d7d35cf",
        "cursor": {
          "ref": "67de2c64-ac64-4ed4-b168-3b89f686fcd0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "19bbc0ae-50b8-4310-a682-a246dcf06855"
        },
        "item": {
          "id": "a0c27b8e-349f-45f2-80a1-494c8d7d35cf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eff5f10d-5677-4308-bad2-7b15edf30083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f526bdb7-5ce0-4d22-b04e-c4882263a1a7",
        "cursor": {
          "ref": "a91041e3-1b96-4f04-b554-47c39cea392c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cc22e581-1c9c-4841-9bee-b8d0e50c09a8"
        },
        "item": {
          "id": "f526bdb7-5ce0-4d22-b04e-c4882263a1a7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d3f0dbdf-6a91-4662-b69f-0bc0b4bd914e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21281903-47d8-41f1-92f5-122d52b1f0f9",
        "cursor": {
          "ref": "207da8be-a820-4de7-8cff-5ffb5c439c37",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0570d3c2-b3b0-4f83-bf73-9eaba270d750"
        },
        "item": {
          "id": "21281903-47d8-41f1-92f5-122d52b1f0f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "949a9b1a-5e5a-40b2-a7c2-c3f61ece2f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a1126f-a2ba-4214-baf7-7d7f9b09a72e",
        "cursor": {
          "ref": "26b98134-3ce9-48fe-b2d7-c43b87cd3e67",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5f6c5cde-c29b-4ef6-8599-67a053ec2ea2"
        },
        "item": {
          "id": "99a1126f-a2ba-4214-baf7-7d7f9b09a72e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd157a56-280d-433a-9148-819a89d6ef9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a93561-3d6a-47b1-9d41-5be00b839d0e",
        "cursor": {
          "ref": "5e9885f4-87b9-4384-82a1-c67a93d10f2f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c50bed61-a699-47e2-89bb-fb0a28c55eb4"
        },
        "item": {
          "id": "a3a93561-3d6a-47b1-9d41-5be00b839d0e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bf471ade-e63f-44fc-b14e-70f256a563d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88364159-9414-4e0b-bf5d-fc8e8d000802",
        "cursor": {
          "ref": "061cb33a-7149-4fa4-9590-7c5872cf69e5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bc593f3b-54f9-44ac-b2a6-191cd3fff6b3"
        },
        "item": {
          "id": "88364159-9414-4e0b-bf5d-fc8e8d000802",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9a718e8-3b0c-49bd-906f-4b86c7155875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4edeb9e-f1bd-4f90-86e1-ef77489485ac",
        "cursor": {
          "ref": "5857b5e3-7759-46cc-927f-b95942b9d3ae",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ee772971-e0e9-453b-96ac-b716e107a57a"
        },
        "item": {
          "id": "f4edeb9e-f1bd-4f90-86e1-ef77489485ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "282b2693-4ff7-4e1f-bf2d-d3e3f0228f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1563aa8-cd49-4269-9dcd-18878c0a12de",
        "cursor": {
          "ref": "ce15596a-f801-4430-9a6d-868ac0c35efb",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a449cdae-dbb6-4cd3-bda1-7cd331bad718"
        },
        "item": {
          "id": "a1563aa8-cd49-4269-9dcd-18878c0a12de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9519fb6-cd37-4376-97b5-2381c8dc5d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0827632e-259a-42b0-a0df-20eb70a85467",
        "cursor": {
          "ref": "f8de58ea-f9cb-4943-a674-737874a584ba",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c07a2c7a-df5e-4bc6-8b4c-31ff850d77ad"
        },
        "item": {
          "id": "0827632e-259a-42b0-a0df-20eb70a85467",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e30fdd9c-732e-485d-af50-bc4567c6d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f0ced5-0e9c-46ea-8cc1-70efb0fdf12b",
        "cursor": {
          "ref": "5991708b-4745-4677-a354-0030c05f423a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bd883587-e52a-4dcb-82a2-1530d456317f"
        },
        "item": {
          "id": "b1f0ced5-0e9c-46ea-8cc1-70efb0fdf12b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6526af9d-dabf-4081-a7f2-ab1b56fdeeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8641d873-b6ad-490c-92da-9ad5dd2e5d31",
        "cursor": {
          "ref": "eb278443-7241-4816-8ed2-dd553689e96e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d6625cdb-ca49-4621-b6dc-15061fb34984"
        },
        "item": {
          "id": "8641d873-b6ad-490c-92da-9ad5dd2e5d31",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bfc15d0d-4678-4316-9c6f-12b29d5a3b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbaf5735-3bf3-4eb3-b68e-b98197a5c56b",
        "cursor": {
          "ref": "0e73e341-2d8b-41ee-8654-e2a0d7d6b128",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0bf5d834-d9e8-4e17-bbe5-5e20f78628c5"
        },
        "item": {
          "id": "bbaf5735-3bf3-4eb3-b68e-b98197a5c56b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2d0941e8-ca3d-4c5c-aeb3-4ddffb1491e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9fc0a8-6974-4adb-ae90-8477008a6664",
        "cursor": {
          "ref": "889769ae-a3b1-4d67-a548-68fcf480c31b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7e693226-96a1-443f-8328-70d72fadaf86"
        },
        "item": {
          "id": "6a9fc0a8-6974-4adb-ae90-8477008a6664",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e95f7f87-6060-462b-ac72-bc5d28043548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fba01a-b55f-4b8a-a8bc-4000411dcbfb",
        "cursor": {
          "ref": "9caccb1a-d8b4-42f9-95d9-1d041a4253cf",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42289f47-8865-4872-99ce-fe448288893d"
        },
        "item": {
          "id": "90fba01a-b55f-4b8a-a8bc-4000411dcbfb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8291e37e-649e-43e8-97ce-47459e683115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42315d60-31aa-4f81-ae56-95b493f5f431",
        "cursor": {
          "ref": "110e2b32-599b-4c66-acea-c4dcf807f6c7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f768e3a0-dea6-4ce3-ad0e-73d764a67c3a"
        },
        "item": {
          "id": "42315d60-31aa-4f81-ae56-95b493f5f431",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2ea811d1-2a60-48d9-8bfb-3aa428eb7460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a89185-29e4-45a2-9fec-4916c5503cf8",
        "cursor": {
          "ref": "fac6aac6-9aea-4f37-832c-229dbb171d18",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f01831a-8863-4467-a8d8-5a0b81866c48"
        },
        "item": {
          "id": "82a89185-29e4-45a2-9fec-4916c5503cf8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a8d1e14c-e763-4b45-8ab5-5f311d37c28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b20370-c2f6-4eba-9180-da1ace9e1bed",
        "cursor": {
          "ref": "06fdee69-c385-485b-8472-586cf6700f64",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3f27a410-f900-4573-a80d-132c9b0b9ceb"
        },
        "item": {
          "id": "45b20370-c2f6-4eba-9180-da1ace9e1bed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76669fda-6317-4ca1-b074-d214f2aa494b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e749e0-31eb-45a5-8f70-47836beefa0f",
        "cursor": {
          "ref": "ae3a1f13-63e1-4bb0-8f8a-53e64640fa10",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "22b31702-17aa-4ee2-b894-1c0c93dda57d"
        },
        "item": {
          "id": "d0e749e0-31eb-45a5-8f70-47836beefa0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f82d6d48-a8ae-42a6-95f3-d41e3013eb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a8dfe5-239d-4aec-a5d7-b6b51cc8315e",
        "cursor": {
          "ref": "1e56d033-46ce-4fd8-9b8b-64188d7070eb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "86563ffa-389c-4a07-b61d-6e1445325514"
        },
        "item": {
          "id": "41a8dfe5-239d-4aec-a5d7-b6b51cc8315e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "43e206b3-9ec3-4e2b-9048-7ccd892e6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afbf3ba-b4c9-4fb5-b3e7-0710b09d6f25",
        "cursor": {
          "ref": "b8e9d9e6-417f-40e1-b385-85b1834e1ead",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "38fb6234-103d-44f7-8161-1702e43eb9f6"
        },
        "item": {
          "id": "6afbf3ba-b4c9-4fb5-b3e7-0710b09d6f25",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8bfa18e5-b9d5-4b6a-8ae2-c83c19850abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ead8241-d2de-4874-bde5-5a83d1c370a1",
        "cursor": {
          "ref": "12c5e591-7c75-4b37-9a46-14139c114c69",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3ba2d8ed-b31c-4ca1-b07e-c088a1e2b92f"
        },
        "item": {
          "id": "1ead8241-d2de-4874-bde5-5a83d1c370a1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9aa82908-b9e5-4633-bdcb-37b469e461ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1da988-fd40-4776-8ff1-a513cda898a0",
        "cursor": {
          "ref": "954e7e6a-befe-407b-bbea-71c5cbdf3c16",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "93f0b1bb-1faf-4db9-b0c7-b3fbe235cb8e"
        },
        "item": {
          "id": "ca1da988-fd40-4776-8ff1-a513cda898a0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8a6c2625-5454-43aa-b3e6-56c5e4dd845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289c0aee-a494-423e-bd78-8e6e595bbee4",
        "cursor": {
          "ref": "5fdb0b8c-cab5-4f01-8714-97f32c63114d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9fbdd636-c701-4228-927f-0a6d4f8daf9c"
        },
        "item": {
          "id": "289c0aee-a494-423e-bd78-8e6e595bbee4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b0daeea-ed6d-407f-88fc-dc1942253c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8efd009-22d3-4ed2-ba5e-678e384bcc9e",
        "cursor": {
          "ref": "11e0e12f-b79d-4444-96b0-23c91b889a3b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "393bb3e4-a6f0-4b19-b8df-91c0bbcda37e"
        },
        "item": {
          "id": "b8efd009-22d3-4ed2-ba5e-678e384bcc9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "25d99fd9-aac8-49bf-9c73-cfeaffa81815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf180236-7ca7-4d18-a0ff-39d56edda5eb",
        "cursor": {
          "ref": "ec2a32da-e16f-4d79-b37d-3079b56928a8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "04e7320c-cf2f-4afc-80e2-b7ce5adf3bf6"
        },
        "item": {
          "id": "cf180236-7ca7-4d18-a0ff-39d56edda5eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "411a23a6-77e5-4556-b3d8-6a32f89b557e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86783fcf-8d2d-4995-b694-59a982de1ea6",
        "cursor": {
          "ref": "62bbfdde-e154-477e-af05-1ea519cda45f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d4a3d48e-c0de-4ac6-8cd3-a9f8559f63ce"
        },
        "item": {
          "id": "86783fcf-8d2d-4995-b694-59a982de1ea6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "34abe475-5347-4396-bbe3-64ba13ec821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06c887c-cbd8-45c9-8886-b233ef6b67d3",
        "cursor": {
          "ref": "67e4d6df-9d4c-4b0d-8684-5001ffb9b786",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4b76ae08-e882-4faf-946d-5a97baf181fb"
        },
        "item": {
          "id": "e06c887c-cbd8-45c9-8886-b233ef6b67d3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1ad3450e-776a-47ee-af36-6985fb112a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44353a16-4191-4cb4-ba5a-4a5f8bb05089",
        "cursor": {
          "ref": "b8012d30-57b8-4ed8-b095-a45b5a2edea4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1e2b09c3-0408-4a32-b585-39000352d8a4"
        },
        "item": {
          "id": "44353a16-4191-4cb4-ba5a-4a5f8bb05089",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "306e9659-bd6f-4cc0-892f-1abb5ccbd2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30d0002-f0f9-40cf-a49d-f01e23f3eeaf",
        "cursor": {
          "ref": "f6dd3785-ab04-4316-b70a-5752da3892c1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "16716ccf-8b9a-4eed-abc2-c6a0eb802c3e"
        },
        "item": {
          "id": "f30d0002-f0f9-40cf-a49d-f01e23f3eeaf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dc010452-b77b-42a4-8845-7ba1d55165cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a882ecf9-4721-41f9-9715-4c9529812810",
        "cursor": {
          "ref": "a5b99f1c-17ad-4ef8-bbbb-26d1db719f36",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a8063853-8d8e-4868-91b0-9354c7469ffc"
        },
        "item": {
          "id": "a882ecf9-4721-41f9-9715-4c9529812810",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4d0141d6-1362-4522-9f27-be97ecbd5a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0139bf59-2052-4575-9a68-3d4f3ee055cb",
        "cursor": {
          "ref": "2d165e1a-78dd-4d9e-bbf5-c5368e6e768f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1518b881-8808-4ea7-9441-9293cb0c029c"
        },
        "item": {
          "id": "0139bf59-2052-4575-9a68-3d4f3ee055cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf967359-af93-4465-87f0-b85943e853ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a47dd29-b2e0-45b0-9c9a-3c3a5e42e42a",
        "cursor": {
          "ref": "cc44310c-9df0-4298-b35a-59a6549cdabc",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "130aa937-875c-413b-bf05-70faabb0176f"
        },
        "item": {
          "id": "0a47dd29-b2e0-45b0-9c9a-3c3a5e42e42a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bdd87b43-43a7-4922-9250-c83b1fc7e106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002a29d3-8886-4cc2-82a0-f5b1d4f6b9dc",
        "cursor": {
          "ref": "8cdcb840-2312-4995-91be-e0960933c8b3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1d63af86-76d0-46b9-8ac8-f559d2b64c2c"
        },
        "item": {
          "id": "002a29d3-8886-4cc2-82a0-f5b1d4f6b9dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a93d61b6-d737-4504-9e72-3f05e088619d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d02e9a-4011-4693-87c6-7da9eed27691",
        "cursor": {
          "ref": "d8b00e8e-3b85-4a71-84ed-e013d068789d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "86e9b3ec-5d22-44c1-b5c9-6cff62a34724"
        },
        "item": {
          "id": "40d02e9a-4011-4693-87c6-7da9eed27691",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5b400846-4d9b-4e5d-9fce-587910272f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24c5c6-d5fe-4976-8733-e2735db5fd31",
        "cursor": {
          "ref": "933c2ac2-89f3-4fd4-aab9-65a9f9792b3e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8c9d0ef-4001-405e-95ff-36691f38be93"
        },
        "item": {
          "id": "ac24c5c6-d5fe-4976-8733-e2735db5fd31",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b265bd5-589a-424e-abf8-756f65888ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad88855d-c231-4e72-b306-855d09cf38d7",
        "cursor": {
          "ref": "7de1aa1b-cdf1-4bbc-8190-819818a227dd",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e1291bb5-34ae-4526-9d20-9696d8e20c31"
        },
        "item": {
          "id": "ad88855d-c231-4e72-b306-855d09cf38d7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cd8f8109-aa18-450e-a3b8-c734f777e66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42b11b2-d5a3-4c70-847f-cfeeeab71a64",
        "cursor": {
          "ref": "a94df288-143c-48bb-8457-e4ffacb3faf9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ff602290-ed3e-43a7-8114-e37362dc3315"
        },
        "item": {
          "id": "e42b11b2-d5a3-4c70-847f-cfeeeab71a64",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c730fc80-1e99-4c28-9078-7926bf7c8729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52d5932-ed8d-43dc-a6b9-0d802e744469",
        "cursor": {
          "ref": "6c06f845-727e-455e-a750-240a4394e4aa",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d7d727a4-d3b9-4bb8-9ce2-1923ea29e078"
        },
        "item": {
          "id": "a52d5932-ed8d-43dc-a6b9-0d802e744469",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7a7aed93-1344-4671-925d-348d4c058f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf255d1-ddce-49cf-aeac-d51e842896ee",
        "cursor": {
          "ref": "42e9eaf2-5789-49e4-82bd-66a826f015f0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "486af853-bbc0-4358-b5f2-f551a56e8ea0"
        },
        "item": {
          "id": "daf255d1-ddce-49cf-aeac-d51e842896ee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "19cc395c-b6b2-44ce-bf41-f3dd04f999a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa507d7-6520-4629-9ad6-44e24d18640b",
        "cursor": {
          "ref": "50ca1bdd-8f10-4bcf-85d1-64eeb23958fb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d595a6f3-589f-41ea-9d58-ed85414f6602"
        },
        "item": {
          "id": "baa507d7-6520-4629-9ad6-44e24d18640b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4a687d53-3722-4707-80b7-8d28f1df3adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c64f07-90ee-4259-8502-5792b1fbc9ae",
        "cursor": {
          "ref": "cadc8bd4-d4a5-4b6e-b73a-53e7bac42340",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "40ad420c-dfef-429e-b8de-8b7df0bd53e5"
        },
        "item": {
          "id": "d1c64f07-90ee-4259-8502-5792b1fbc9ae",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec2e1782-3744-4490-9437-682ed4dd765e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c0358-db0d-471b-9299-2d0dff627f38",
        "cursor": {
          "ref": "14ec3149-c3d8-4403-b44a-a8dcc4465e1c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a28062eb-9f1d-4d47-a93d-40d03d002507"
        },
        "item": {
          "id": "ce4c0358-db0d-471b-9299-2d0dff627f38",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d915c05c-4ee1-49d3-a5d2-1964e6065ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff7838-5b8c-4e88-8858-6085929fa178",
        "cursor": {
          "ref": "f9510505-0e12-4f9d-825c-2e463c47dec2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "feac5df7-e3a3-44da-8733-126795c1732c"
        },
        "item": {
          "id": "4fff7838-5b8c-4e88-8858-6085929fa178",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6f08b9c3-2698-4800-b5aa-29633b2404fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82c5051-c353-495e-8590-7d14089e04af",
        "cursor": {
          "ref": "dbbc750c-1578-4aac-b379-ead0a8c7d84a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a2840051-1dff-496a-9548-533c50c88760"
        },
        "item": {
          "id": "e82c5051-c353-495e-8590-7d14089e04af",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8b4f35e9-1692-40a6-a122-4756e98abb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51fe170-3ed0-4975-8d61-d01445498cee",
        "cursor": {
          "ref": "9d134cf4-0efe-4fc0-9289-36aa92accf2b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e8fb98c0-7be8-461f-a408-6bb92afc2c2d"
        },
        "item": {
          "id": "f51fe170-3ed0-4975-8d61-d01445498cee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dbc17d9a-76e5-46e8-a371-3dc58b261fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb01b1-e69c-4f7b-b868-1132dd7c7b22",
        "cursor": {
          "ref": "376da91a-c0e3-44a3-9c9a-43986ceb75b4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6accb58d-80da-4aa8-b613-878c0a9b5258"
        },
        "item": {
          "id": "3ceb01b1-e69c-4f7b-b868-1132dd7c7b22",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7de3d84-525b-4f56-bf97-988e0717d308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dc805f-b299-4a0d-bdac-7dc0a4f3c892",
        "cursor": {
          "ref": "8c05a38c-b602-4bda-896f-9855cd11656e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7f2174de-6783-4b74-82aa-224d56ef50e7"
        },
        "item": {
          "id": "15dc805f-b299-4a0d-bdac-7dc0a4f3c892",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "08f159ab-8355-4e63-9957-0c4b3ecb1b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c5a77c-093c-43f8-bc5c-f36ffcc4b71a",
        "cursor": {
          "ref": "2b4809dd-23e1-4455-8e39-63847c5b8211",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0d4fe540-a397-409e-9848-e0214ad7c221"
        },
        "item": {
          "id": "87c5a77c-093c-43f8-bc5c-f36ffcc4b71a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2631e19-9341-46bd-b18f-016b20e560bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6261780-8009-40ea-a552-61709bc1a73f",
        "cursor": {
          "ref": "e1f3c8c8-2f7d-4f1c-9d0c-c0b05327475d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "55b56d30-4622-498f-a9cc-146393ef63da"
        },
        "item": {
          "id": "f6261780-8009-40ea-a552-61709bc1a73f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7a5c0615-ba1e-4417-8268-8d780f904f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91d39a-cf1d-4ab7-83d7-977fe2b7a27f",
        "cursor": {
          "ref": "15a6da8f-164c-4948-bb5a-5c3e17a40923",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3e2ceb1f-bebc-4fc0-99a4-20bf02dd7e93"
        },
        "item": {
          "id": "3e91d39a-cf1d-4ab7-83d7-977fe2b7a27f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7095ef6b-eb43-4fd3-ad67-61f7da90de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63abe75f-b4cd-4e11-92c1-947f159914c0",
        "cursor": {
          "ref": "f64b73b6-ff39-40c5-8b1e-42835519e6a5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a839acb-e612-48b9-8c5c-4e57f04f74ef"
        },
        "item": {
          "id": "63abe75f-b4cd-4e11-92c1-947f159914c0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "72871846-052b-4587-91fd-0c4140f75cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab073547-2d8f-402f-a41b-8235ce352162",
        "cursor": {
          "ref": "b1005788-1b93-4147-9f3c-17d645948e46",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ba12bde9-598d-470f-875c-daca1d7b0eab"
        },
        "item": {
          "id": "ab073547-2d8f-402f-a41b-8235ce352162",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a728b0c3-19c9-4227-b897-fa69e98d8a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c902cf23-3395-4018-9143-50f67fbd665b",
        "cursor": {
          "ref": "08572c84-69af-4d5e-b6b3-02bea456402e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "60c2cc7c-73ef-4954-ba00-89d3eb1fc387"
        },
        "item": {
          "id": "c902cf23-3395-4018-9143-50f67fbd665b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e23268e9-8e86-48a1-be27-5e8cb6b5c716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f0926-f345-460e-a9c2-20521a787f92",
        "cursor": {
          "ref": "eefc98bd-71aa-41a4-86c5-6b7dad1d1766",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c6ce1bc2-13bc-42c3-af82-6395e04f2210"
        },
        "item": {
          "id": "618f0926-f345-460e-a9c2-20521a787f92",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e7d62805-9be8-44a9-b2dd-d286a37a1b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838ad10c-5353-42c6-806f-9c1a45837c95",
        "cursor": {
          "ref": "5b705187-d1ff-4d95-b3f3-84b468e2267a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "97dc025c-eff3-4fd0-b2f8-f001ed853b6c"
        },
        "item": {
          "id": "838ad10c-5353-42c6-806f-9c1a45837c95",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "815f2263-9186-4fb7-91f4-c61b219189a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853777f3-8e3c-4a5b-ba1f-5577e43f5cff",
        "cursor": {
          "ref": "98835855-3c34-403c-a335-2312f9578222",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d96b4a4d-f97e-4228-9d11-80596fd61f2f"
        },
        "item": {
          "id": "853777f3-8e3c-4a5b-ba1f-5577e43f5cff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb332832-f947-4bf3-b57e-78ff4d8b0968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfedcecb-d749-44a3-9851-33e47a9a9e86",
        "cursor": {
          "ref": "22b6d4cf-c944-4ca2-8136-44c15ad46c96",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "590053ae-4b41-4bbd-881c-6c2ff4f042f1"
        },
        "item": {
          "id": "cfedcecb-d749-44a3-9851-33e47a9a9e86",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "34926c03-ad8e-43da-ba3b-5b571792ab1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3de4bd8-6d00-4115-9d9e-3438b1c897dc",
        "cursor": {
          "ref": "94ee57bb-c6d3-4428-a82c-22d500660217",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0c2e3db2-069b-4f92-ae9e-14d84ae64131"
        },
        "item": {
          "id": "a3de4bd8-6d00-4115-9d9e-3438b1c897dc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "364d8dd2-a9b5-43e4-a5f0-434a1093869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72963321-6cad-4448-814f-5e3b44e7ef5c",
        "cursor": {
          "ref": "d716abdd-692b-486f-906f-4123305d75c1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c93fc45-dca9-4156-a5ef-c0e7460984ee"
        },
        "item": {
          "id": "72963321-6cad-4448-814f-5e3b44e7ef5c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d61e0705-27b2-4d96-a10e-d0e09ce7a5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e944a312-90df-4033-af90-d174352ad071",
        "cursor": {
          "ref": "54cf2dc6-cf12-4d43-965c-3dce2526976d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "99487992-2174-4c4a-935e-fcf9b8a4b97e"
        },
        "item": {
          "id": "e944a312-90df-4033-af90-d174352ad071",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8c7e392c-43a8-4b31-9594-60bbb26d1da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d81d2f-17c1-4ced-995d-fdba435075be",
        "cursor": {
          "ref": "f4774556-8ea8-496a-a7f2-9073e35872c3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "50bdaa85-0402-49f6-8b9d-d9d5a735b8f9"
        },
        "item": {
          "id": "33d81d2f-17c1-4ced-995d-fdba435075be",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "481fd634-f22c-487c-864b-32b6219efe13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b287062-e58b-476a-8396-0e454c8a3d65",
        "cursor": {
          "ref": "31e69abd-83f3-4af9-aa46-4df77f0a20d7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ce84cd2d-4af0-4b6a-927c-cb534ec95504"
        },
        "item": {
          "id": "9b287062-e58b-476a-8396-0e454c8a3d65",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "22190cc9-d4ae-4628-9383-6522ea14fdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a269af42-bc16-48c1-92ee-7979dd2d1e4c",
        "cursor": {
          "ref": "4414a920-3370-4c15-b1c0-0c662a56caa7",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a38f6b93-152d-4f02-83e9-f1965b489090"
        },
        "item": {
          "id": "a269af42-bc16-48c1-92ee-7979dd2d1e4c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6504cd0-2fd8-4912-8723-d772089249a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56a745a-e7d4-4c07-bbe8-4bfe2e68a2e4",
        "cursor": {
          "ref": "d08b73b7-0ec0-456d-b829-f2243bca7e8b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e8d353bc-33ed-4de8-9e8c-f0e7ee49730e"
        },
        "item": {
          "id": "a56a745a-e7d4-4c07-bbe8-4bfe2e68a2e4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "60dca7a2-30ef-47f0-a99f-f8b91e7c6e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c74e0e7-9b5b-49df-8d02-1aecacaa9e1d",
        "cursor": {
          "ref": "bcf4faca-04dd-4dac-be22-267d5bbf1c05",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "65fd4066-33c0-496b-b4dc-5bebcaa1a92d"
        },
        "item": {
          "id": "2c74e0e7-9b5b-49df-8d02-1aecacaa9e1d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "14dacdc0-c985-48bb-99cd-c2422f39d5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7b8aa4-ad8e-4e38-a19c-6b6adae0ae37",
        "cursor": {
          "ref": "82c9c010-a07a-4c43-b6de-3f43bd542bde",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d23657e4-3b47-4f58-9af0-e87f5617cdcb"
        },
        "item": {
          "id": "ed7b8aa4-ad8e-4e38-a19c-6b6adae0ae37",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f87800ac-4843-490a-8f35-ce06d2cc7643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02289c8b-1139-43d9-8854-d85bacc2c9a8",
        "cursor": {
          "ref": "47a89cb7-c39a-458d-a33a-6535fed591ce",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "15bc940b-568e-4d05-a9a1-711fc2786c77"
        },
        "item": {
          "id": "02289c8b-1139-43d9-8854-d85bacc2c9a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "997b0288-b3c6-4b87-bca1-b0e2ea30067f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3a34b-2935-41be-858b-87c0511a17ba",
        "cursor": {
          "ref": "5f2d111d-2950-41e8-a9e4-a6c6cdced699",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e43c47a7-5261-4577-8a71-6ff06db2064e"
        },
        "item": {
          "id": "e5e3a34b-2935-41be-858b-87c0511a17ba",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2b57e688-1917-48a2-8a4f-c9c2458c2966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d92d2a5-75c9-41a4-9ec6-e2c8b8a2306f",
        "cursor": {
          "ref": "785fc7cb-f548-4b63-beed-f1a4af3f3cfb",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8ab797f3-b53b-4acf-ab2a-b47ea8367de2"
        },
        "item": {
          "id": "6d92d2a5-75c9-41a4-9ec6-e2c8b8a2306f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "16a63eef-43c5-4059-80e1-3f7993952dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5d7f90-1d9b-4973-b353-3991acc67fdd",
        "cursor": {
          "ref": "d4cf33bd-da97-4d26-9586-36078730651c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c3c19283-aaeb-4555-a0fe-753b466baedb"
        },
        "item": {
          "id": "5c5d7f90-1d9b-4973-b353-3991acc67fdd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "237f69c5-584f-4292-88d2-9fcebb3c378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e41b2ff-2823-4b0b-8970-4d1ab7377211",
        "cursor": {
          "ref": "c7c60bdc-5bcb-4bfc-ba2f-c82795d7de5c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fa494428-916d-47fa-bccf-155633c81ba9"
        },
        "item": {
          "id": "5e41b2ff-2823-4b0b-8970-4d1ab7377211",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d65843c-b5dc-4c47-8edf-1d0977ee7705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47a37f0-c5d4-4bf0-b71c-6c685eccb8ec",
        "cursor": {
          "ref": "e0d87bb1-06ef-4210-b3eb-679a8c9bef08",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "87506dca-2298-411c-8c6e-d1b735b75636"
        },
        "item": {
          "id": "f47a37f0-c5d4-4bf0-b71c-6c685eccb8ec",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8ac82cea-4144-42ff-a84d-c2d5361a9eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a40b51-784f-480e-b947-ef966115b950",
        "cursor": {
          "ref": "5ed5b52e-b731-4f2f-a646-4bf6ea5d1a88",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "424825cd-3722-4513-bf35-2e74a1f938a2"
        },
        "item": {
          "id": "19a40b51-784f-480e-b947-ef966115b950",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c4ff74f-9569-4057-b6cc-2b745543dddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32209e6-9ce6-44c7-9b41-71634fc92416",
        "cursor": {
          "ref": "e15705e0-e1d1-4dfd-bfa1-0943e977f24c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a100464-96e4-4101-aa07-2d15101b1f8b"
        },
        "item": {
          "id": "e32209e6-9ce6-44c7-9b41-71634fc92416",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c19cfdac-67a3-4ea9-b3bb-3a0fef6fa1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54828b10-d325-4a90-98c3-7ce133191548",
        "cursor": {
          "ref": "af6eac1b-72af-49dd-895a-986d408095cd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "74932834-26b3-473b-8e54-fa71a9636e66"
        },
        "item": {
          "id": "54828b10-d325-4a90-98c3-7ce133191548",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "971e11b6-b552-4504-8fa6-4f622170d479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a2b28d-7968-45c5-aeb4-edbd40656420",
        "cursor": {
          "ref": "738c6ccb-b259-454a-be11-cd83cab2122e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eeaac5c7-d456-4e4d-a478-07db392ed793"
        },
        "item": {
          "id": "b4a2b28d-7968-45c5-aeb4-edbd40656420",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "510b70ec-849f-4f01-9344-601d4bea20c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fce7b2-923a-46da-8986-1ce117326f9e",
        "cursor": {
          "ref": "ce7fce1c-d02a-4167-8e64-97365c4cd152",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "96b21fe2-d7d6-4c6e-8ef5-58cba76bd496"
        },
        "item": {
          "id": "a1fce7b2-923a-46da-8986-1ce117326f9e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a38579ad-b5dd-4ebe-a783-876e5d88954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28543df3-e10c-4b63-b0fc-a7b5f8594838",
        "cursor": {
          "ref": "c1c07074-1cea-4fa0-b632-7de5d8d645b8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0e8d3689-bc29-4385-adec-f4f7c8fbaf85"
        },
        "item": {
          "id": "28543df3-e10c-4b63-b0fc-a7b5f8594838",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3cdf1e25-f79a-4fd4-9b8f-b49e6b27ad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082e3580-1ec4-4081-9e54-1d031c700014",
        "cursor": {
          "ref": "2abe5172-af1b-4584-9f37-dff06b414435",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fbe62281-902d-4ebc-9d1a-ee1b61945a87"
        },
        "item": {
          "id": "082e3580-1ec4-4081-9e54-1d031c700014",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3cbfed3c-d759-4627-b98c-428f537336ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b727243-4165-40fd-b0a7-06c100800211",
        "cursor": {
          "ref": "549bddd3-359a-4c5f-990a-d5c89acc154a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "59412373-accd-4ee4-97f7-cc16355143ae"
        },
        "item": {
          "id": "7b727243-4165-40fd-b0a7-06c100800211",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "075b4b2e-d5a9-480b-99bb-554589cf337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4b1bb8-2de1-46b2-b16e-5ff63c635b8c",
        "cursor": {
          "ref": "96f96be0-ac49-4afe-9e2a-f41ddb1bca72",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2c50e6b-28f8-4d52-8f43-bf0cd2558136"
        },
        "item": {
          "id": "bc4b1bb8-2de1-46b2-b16e-5ff63c635b8c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "928d8f0a-2b53-428a-b532-8fba2ecb63ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fba4341-36d5-4f11-8ad6-6b9c7062c277",
        "cursor": {
          "ref": "ed0907aa-9445-4931-9718-273ee73d589b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2c37e264-9dbb-4205-8c8c-ca0d8594c25c"
        },
        "item": {
          "id": "3fba4341-36d5-4f11-8ad6-6b9c7062c277",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8a5ac090-2c7d-4988-b012-d78b922f429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dc8aeb-a4b4-491a-8364-83bb51f03ac6",
        "cursor": {
          "ref": "4a2ee88c-ff39-46ac-93e0-bc6484379874",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "56dd1bf4-3d36-4d90-acc0-730b367cd17c"
        },
        "item": {
          "id": "87dc8aeb-a4b4-491a-8364-83bb51f03ac6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "51b9de32-cd50-461e-b22f-c0ddce764340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b3d2b5-5f4c-4b05-a038-79d01fb7c598",
        "cursor": {
          "ref": "41015be2-925a-4fe1-bc36-b55961c8df08",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "865a2b53-78db-4d16-bc5a-dba12d975172"
        },
        "item": {
          "id": "75b3d2b5-5f4c-4b05-a038-79d01fb7c598",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1080021c-68e2-4ad7-b60f-09a5a4a103b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caae6ddc-2bdc-40a6-8172-875872ce7e4f",
        "cursor": {
          "ref": "f7cf81b6-03bf-418c-a2d1-0472e70dd38f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bd7b134b-cbb5-497f-83dc-2842cf1db17e"
        },
        "item": {
          "id": "caae6ddc-2bdc-40a6-8172-875872ce7e4f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "446c7761-7f23-488f-82d4-0ba85159724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65212ef6-7818-4e2b-abb3-df78c70a569e",
        "cursor": {
          "ref": "52c32775-6089-4827-a3db-673d6d7b3e27",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "875d3981-5e10-4165-89f3-7af1711d6260"
        },
        "item": {
          "id": "65212ef6-7818-4e2b-abb3-df78c70a569e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8c669ebc-f01b-4a11-b71d-7357b91313f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ddad28-dc39-490c-8d87-b047f9e0c1b4",
        "cursor": {
          "ref": "5053ac6e-5d7c-48e1-a80d-4ebad1631309",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "de4b83f3-737a-4257-b205-75135865201e"
        },
        "item": {
          "id": "51ddad28-dc39-490c-8d87-b047f9e0c1b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c0565cf9-e28d-4fde-9fa7-2c43c1311f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd7da4-c098-4f7a-8b51-f9520b5b7005",
        "cursor": {
          "ref": "13657084-3ff4-48db-b572-87e8a304f825",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4fcc369c-131a-4034-a020-a2b24ebae4d1"
        },
        "item": {
          "id": "90bd7da4-c098-4f7a-8b51-f9520b5b7005",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e01f3050-d7aa-4bf4-8eff-838b40744e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b707aa8-6a73-4aca-9f23-8a115cfdae0d",
        "cursor": {
          "ref": "eb1f09f8-61f5-40d5-b490-9fa471d90908",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7f0c774b-419a-4c1a-b0c4-4702dd07b5a9"
        },
        "item": {
          "id": "6b707aa8-6a73-4aca-9f23-8a115cfdae0d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "abfcbac9-2de7-497f-bdd6-5b416054e51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3531ca9-1cb0-4ebe-bcbe-921da3b35fc2",
        "cursor": {
          "ref": "92db4a1a-c5d9-4ba3-82cf-de1d4ab5868c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "276e2ee9-9938-4f46-955b-b4579b37e3a0"
        },
        "item": {
          "id": "b3531ca9-1cb0-4ebe-bcbe-921da3b35fc2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fa709adc-ef34-47ec-80c0-7292360302e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b1387e-5dfc-424d-9adf-3bd5846d9715",
        "cursor": {
          "ref": "037431d9-acb0-4ad6-820e-a1e82d2bd373",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ea0058da-300e-432e-9436-ee92f0f3f127"
        },
        "item": {
          "id": "01b1387e-5dfc-424d-9adf-3bd5846d9715",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "09021601-95b9-4e9c-bc88-815f6b8538b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a8194b-bf30-4ebc-8742-e027dacf4aa5",
        "cursor": {
          "ref": "943f5e67-2dcc-4c61-8ef7-fec1108515e9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1f7ff7fc-b4d1-4358-8c1a-0fa3542137bf"
        },
        "item": {
          "id": "23a8194b-bf30-4ebc-8742-e027dacf4aa5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "226a8ce7-e6b2-4eee-8327-4b6762e9398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1088c32-4774-44b4-894b-2cb24b4120ea",
        "cursor": {
          "ref": "08d8470d-585e-4eb0-9bcd-1f1671999d95",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5a9cbed7-5a6a-45cf-aa37-68d7bc43f755"
        },
        "item": {
          "id": "d1088c32-4774-44b4-894b-2cb24b4120ea",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bcdb6319-c832-4be2-858e-180fb4b12e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5adf4-aafb-47a8-a40a-003a104528d4",
        "cursor": {
          "ref": "097fdc6b-728a-4c62-b0ec-3394b7be36b4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7b48404b-640e-4e23-93a5-6b17b603fff1"
        },
        "item": {
          "id": "12e5adf4-aafb-47a8-a40a-003a104528d4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fd09a38a-9340-4fb4-8ccb-973294d3117c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5313fe56-3179-4ced-8eb8-00e16f2af0c3",
        "cursor": {
          "ref": "8b810469-0f39-4dd8-b06a-3df6fe5ab1af",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c450bbe0-104b-481f-bf06-91b14ea40fcd"
        },
        "item": {
          "id": "5313fe56-3179-4ced-8eb8-00e16f2af0c3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b55cdc13-7fd8-4c55-b8b0-6baa71c1b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332eb6ed-7b45-4cc2-ac60-621657a45cd4",
        "cursor": {
          "ref": "539bce36-e6be-4d80-b25b-14f8560999e4",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e6e35510-d085-4cc5-be1a-53bf0cecbb66"
        },
        "item": {
          "id": "332eb6ed-7b45-4cc2-ac60-621657a45cd4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a1537721-6766-42b1-b216-53b295c0474d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af437625-3aeb-495f-a0be-a9cd66c7d88d",
        "cursor": {
          "ref": "7ad7bc2c-4d2c-442a-851c-72801329dfc5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "098fc4b6-cc93-4351-89e9-f2368be61db2"
        },
        "item": {
          "id": "af437625-3aeb-495f-a0be-a9cd66c7d88d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a4fb6582-1543-43a0-bec2-31975a9ada7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abac9109-2c8d-478e-a76b-c8353506cb49",
        "cursor": {
          "ref": "088abe6e-41db-418c-b5b3-2df4700959eb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ce4d70f0-9add-45eb-a696-527a4095ada9"
        },
        "item": {
          "id": "abac9109-2c8d-478e-a76b-c8353506cb49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d323d1dc-327f-47ea-85fc-d8c394453772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83aa62a-45f5-4306-ad21-00d468cb6e4c",
        "cursor": {
          "ref": "3514245a-0460-42f5-8d04-6d6faca83ce2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7d7b4a69-df95-438e-881c-ebdcc5ae189b"
        },
        "item": {
          "id": "c83aa62a-45f5-4306-ad21-00d468cb6e4c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "add44d50-8a17-4b70-9dd4-606dbb8e1457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa531367-bf79-4129-a400-7878bc4f6e1d",
        "cursor": {
          "ref": "d430a692-b9bc-441a-bbcf-9d28a5ca614f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ec72eb59-8abc-4063-a8e6-38c199b8c3ea"
        },
        "item": {
          "id": "aa531367-bf79-4129-a400-7878bc4f6e1d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "71cc1378-594c-43e3-825d-146278829d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9215e77d-558b-4aaf-a4a8-81a26f32ab96",
        "cursor": {
          "ref": "ca967bf2-bf16-4abc-8162-da52d32d5f8e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0cbcdb10-74e7-42b4-85cd-c08cd69f5039"
        },
        "item": {
          "id": "9215e77d-558b-4aaf-a4a8-81a26f32ab96",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2e7e363a-3585-42e0-82d3-c5737a1f336e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a2610-3cc9-46c2-a7ee-f0d78e1f91b1",
        "cursor": {
          "ref": "602acf3e-9768-49a0-942b-287e8fe2ae78",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "deb35300-9dba-461a-b695-c7b30e12e5e3"
        },
        "item": {
          "id": "114a2610-3cc9-46c2-a7ee-f0d78e1f91b1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "892eb933-bbc7-4193-a9c1-5738d7fde740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d8eae5-f95a-4b53-b6ed-15d60c40ca3f",
        "cursor": {
          "ref": "e7a22141-fdca-497d-8446-12e050612017",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4b5130da-1e7f-4792-acc8-3f365f726b94"
        },
        "item": {
          "id": "44d8eae5-f95a-4b53-b6ed-15d60c40ca3f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c6d6ffcf-e65e-4ee7-9e34-a9d697282ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e36a68-bbc0-450f-afcb-f388a6a78bad",
        "cursor": {
          "ref": "e3678bd0-ee96-482b-97fb-62e9dbce044e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "66708f00-cd32-4154-a0b3-e631d3900e9a"
        },
        "item": {
          "id": "16e36a68-bbc0-450f-afcb-f388a6a78bad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "151af960-d4c6-4f1f-9664-eb0420d48c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fec133-f4cc-420a-9a2c-ed532e5aaa95",
        "cursor": {
          "ref": "1acebc0b-ccf0-4926-ae6d-903290031310",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c4ec1613-6433-48ec-a37a-709be2a49daa"
        },
        "item": {
          "id": "a9fec133-f4cc-420a-9a2c-ed532e5aaa95",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "671f4897-13ca-497d-8791-68733d140056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc97f19-9973-4296-bd06-c848c3d2063e",
        "cursor": {
          "ref": "bc765988-1df5-4c9b-9dd0-48733307e14e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2d86851-aa97-4b08-8256-d9b5fa3f138b"
        },
        "item": {
          "id": "efc97f19-9973-4296-bd06-c848c3d2063e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "17456087-892b-4bac-9311-3322e97b0989",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "d398f404-68eb-45a5-b1fe-d89ac1d49c5c",
        "cursor": {
          "ref": "c60e5001-c1f2-40ba-9204-a5d2fc12a66e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2a311794-ebd2-4935-9332-7f0743561a16"
        },
        "item": {
          "id": "d398f404-68eb-45a5-b1fe-d89ac1d49c5c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "02f29799-8998-4239-b9e5-bba34c533985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b30a85-cb62-4e15-952e-7abf812aae43",
        "cursor": {
          "ref": "d381d602-38cd-4e30-83bf-5c4491012f9f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6ff41b7e-254c-4978-b0e7-e7bc7daa02fe"
        },
        "item": {
          "id": "05b30a85-cb62-4e15-952e-7abf812aae43",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "16ebdf35-10c2-4c77-8e86-a46bbe711f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92cd493-5295-48e9-a9c6-ea25d0464c45",
        "cursor": {
          "ref": "01f24824-66ba-47b4-8c19-edf6c88ada46",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94c907d1-6ee3-4655-bba2-53fbbe10d27f"
        },
        "item": {
          "id": "e92cd493-5295-48e9-a9c6-ea25d0464c45",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c5e42365-b02c-447b-ab25-9ee9dfb7205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0c17f7-37b2-4c3f-a21c-6f5aa11e0854",
        "cursor": {
          "ref": "cbb28de4-6198-42f6-a58d-32026691c531",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6875d5e9-f826-4d17-ba5f-9c2711fc47a2"
        },
        "item": {
          "id": "6c0c17f7-37b2-4c3f-a21c-6f5aa11e0854",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e52bc47a-512e-4e94-b421-ee594cad74ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f17232-1229-476b-bb0c-c62f72eb81c5",
        "cursor": {
          "ref": "b731c7ac-5d3d-4487-b7de-45a29af59b1f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f17418ee-0c9d-48a1-9066-0cc9eabb4fc9"
        },
        "item": {
          "id": "74f17232-1229-476b-bb0c-c62f72eb81c5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "28e07fe9-146e-4e82-835e-0e3538fdd2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0355fb-7c97-4b60-a94f-472547aed26b",
        "cursor": {
          "ref": "c7cbd166-93ae-46d9-b556-4a7a8bc45a0b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5dc3d96-211d-42b3-ab95-684a9cead85a"
        },
        "item": {
          "id": "9d0355fb-7c97-4b60-a94f-472547aed26b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "11a43f93-aac9-4f59-a70f-4fc559f1ddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3763af72-9e0f-4827-84c2-0df636c6ceb3",
        "cursor": {
          "ref": "23177f6c-34e7-40f2-a577-be76fb7fe932",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a0de627-0ae2-4979-b101-49603296e594"
        },
        "item": {
          "id": "3763af72-9e0f-4827-84c2-0df636c6ceb3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9c9e7204-e587-4a2f-959f-b983a4e1ea1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f15bb4-309a-44c6-a7dd-d0d637a86ee3",
        "cursor": {
          "ref": "fe77c492-ecff-4e0b-aa25-d93ed097ff39",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0d15e9ee-2997-4155-968f-5945369be440"
        },
        "item": {
          "id": "b2f15bb4-309a-44c6-a7dd-d0d637a86ee3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6c018dde-c4af-4dbd-bde3-5ea44a63c0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cee095-e092-42a7-8e4d-9c3df1556fce",
        "cursor": {
          "ref": "ede80ade-8469-48c5-9ce0-1d5da469bbcf",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6fbb9e38-94e2-4b31-9d8f-b8afc4ecf75e"
        },
        "item": {
          "id": "b8cee095-e092-42a7-8e4d-9c3df1556fce",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2d6d8c58-6217-4cb2-8b10-269a7a1ab61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86477e9f-0721-448f-8bda-20c6ff3026e5",
        "cursor": {
          "ref": "18c56870-11ef-4af2-bd81-54cad4837cf6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d5ef80f1-b920-44f8-819b-749df7897166"
        },
        "item": {
          "id": "86477e9f-0721-448f-8bda-20c6ff3026e5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "253c67d2-44e2-4fd1-938c-618c988b849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc6a8f-551c-486d-86d4-3bbc38da9cd9",
        "cursor": {
          "ref": "01e5ae65-13f3-4484-a9e3-94f5f537fd55",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d05f2af7-3bec-4de8-b429-9e43b4be59de"
        },
        "item": {
          "id": "c5fc6a8f-551c-486d-86d4-3bbc38da9cd9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f8fbf117-f7a8-429a-94a6-ff08113f8c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f08920-7afc-4854-a5ee-d9be1cf65b12",
        "cursor": {
          "ref": "00079e31-8c9a-4d14-b6de-69a12bfe5372",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e7ac9fdf-bb6b-4a7f-bada-236637c26de2"
        },
        "item": {
          "id": "05f08920-7afc-4854-a5ee-d9be1cf65b12",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "13bf8057-d518-4471-8090-4f77fb21a428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95e0a18-ba19-44da-bb06-a4a8bf032a0e",
        "cursor": {
          "ref": "f531bae7-5dd1-4f99-bc1c-a8f755917c77",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5a8e4345-71e7-46ee-8bb1-39b8b50f2b6b"
        },
        "item": {
          "id": "d95e0a18-ba19-44da-bb06-a4a8bf032a0e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3636fdc4-ad83-41a6-8a50-f638d4373025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56628804-081e-467d-aef0-8e8c1d62b731",
        "cursor": {
          "ref": "4e9b6aed-bdf7-42db-8d2c-4b1fbf1a6203",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a68d4b4a-a0de-41a2-b7e4-41415cd65a9a"
        },
        "item": {
          "id": "56628804-081e-467d-aef0-8e8c1d62b731",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a6f2fbbc-4ab5-4289-820f-be3bdfa6fe89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01afc19c-9bbf-4ecd-9d57-84c365ff193c",
        "cursor": {
          "ref": "b9eb109a-ffe5-4c27-a5a9-d50cecaeae69",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a5d30a30-3ca7-48a3-8b30-800727d354d6"
        },
        "item": {
          "id": "01afc19c-9bbf-4ecd-9d57-84c365ff193c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd4814a2-5470-4335-88f2-e23502b92a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85f0646-e2c3-4121-b18c-3127d6aa64d8",
        "cursor": {
          "ref": "3a0e5086-aa9b-42c4-b8bb-1ee226cbb448",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3b6ddfa7-0f51-4d9a-99e1-94d57956e791"
        },
        "item": {
          "id": "e85f0646-e2c3-4121-b18c-3127d6aa64d8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cecd45aa-36d7-487e-8d75-4884bdcdde5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517ef42d-4184-40b1-bdfe-503e3a3ab375",
        "cursor": {
          "ref": "3ce703e5-fb75-419f-843c-11c455a40106",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4a0f395e-2ad9-4742-b2f3-eea1f24597a3"
        },
        "item": {
          "id": "517ef42d-4184-40b1-bdfe-503e3a3ab375",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1b01bd33-201f-4847-9da4-99f172121e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08485ee9-b1d2-4ce1-88b7-8bf84d88f8dd",
        "cursor": {
          "ref": "4f0cb071-88c5-409f-adff-257bdeab2a88",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "227f0b11-ffb9-4e4f-8749-e851b00cc36d"
        },
        "item": {
          "id": "08485ee9-b1d2-4ce1-88b7-8bf84d88f8dd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3ab0408f-5975-4f32-997f-2e968387a746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53bedda-3ce3-4f56-9b04-a5c2ad32e022",
        "cursor": {
          "ref": "b2963a0f-214b-4407-814b-1dc6cd2f5cfd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "391e199f-67b5-4c67-8b3b-8f6ee7309b0b"
        },
        "item": {
          "id": "a53bedda-3ce3-4f56-9b04-a5c2ad32e022",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9db81a5-bef6-4532-afae-f17e592f78ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a064a4-c44a-4d6d-94f8-8e5dcdeb006c",
        "cursor": {
          "ref": "94e6a664-03de-4fe8-90bc-b60d40cd488c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "702871ff-b2c7-4e99-ba88-024dd35638c1"
        },
        "item": {
          "id": "b9a064a4-c44a-4d6d-94f8-8e5dcdeb006c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b6c20c41-19d7-4eca-b20b-6fba74bed355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947de313-5106-49b6-a34e-2f053f99ecd2",
        "cursor": {
          "ref": "e88d5713-95ef-4b6d-919a-991fbc4c4b07",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4c9045a7-3a61-4122-bf50-30f2c8cf40e4"
        },
        "item": {
          "id": "947de313-5106-49b6-a34e-2f053f99ecd2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed089b70-a3ec-4646-a220-78cfae80a2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d3b373-f133-4d95-ada5-77b09c9b35c6",
        "cursor": {
          "ref": "6dc1ee02-6985-4933-ab12-606ae149871b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2a0f053d-8f92-4335-b894-e499370f3575"
        },
        "item": {
          "id": "e7d3b373-f133-4d95-ada5-77b09c9b35c6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "23336824-fd3b-4c5b-a683-621419a1559f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa7eb1-f37d-407c-819a-d0afc7b7bf7c",
        "cursor": {
          "ref": "9c3d2134-481e-4aad-a706-f089427b1163",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "eb7a3d10-cfb8-4585-a5d7-87ee025dbd1a"
        },
        "item": {
          "id": "e3fa7eb1-f37d-407c-819a-d0afc7b7bf7c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4868b591-6362-450d-8edf-8003d0393ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc484b36-9a9c-46f4-80fa-489840e88ddc",
        "cursor": {
          "ref": "e75d1836-918c-4675-9c30-1c31a641376f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3781f33f-c191-4f1f-b792-6647dfce23d5"
        },
        "item": {
          "id": "fc484b36-9a9c-46f4-80fa-489840e88ddc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dfb03cd3-9734-420e-99fa-3a58265fc7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab09521-7d43-4f3c-a9ec-e119097cb4d4",
        "cursor": {
          "ref": "6d386f6d-6c57-4f08-be9c-8a8fed7c5960",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d2b63edb-094e-478a-9e0d-7cc2d16a6a37"
        },
        "item": {
          "id": "0ab09521-7d43-4f3c-a9ec-e119097cb4d4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d173ac98-454c-4cf2-9269-d0da5c4bcde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de3ecf-f40e-4a4a-ae00-622100d773d7",
        "cursor": {
          "ref": "a34f982a-15f1-45d1-a4be-2a7fc4f9b2e4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b3423837-f173-48ef-b21f-0260d14001c2"
        },
        "item": {
          "id": "39de3ecf-f40e-4a4a-ae00-622100d773d7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b3ef79b4-ccf5-466a-bad7-599ca82dd53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9519d9f4-0e9b-4195-9b96-19a1a0b904e2",
        "cursor": {
          "ref": "a4afe27d-aa30-4c95-88d1-cd7ec361e7ff",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "eb55c22b-d998-4348-bcaa-e17cc9a73d5c"
        },
        "item": {
          "id": "9519d9f4-0e9b-4195-9b96-19a1a0b904e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "121d752c-5665-4db8-8cb7-aec2da94a8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f22fb-aff6-401c-a36b-452104a627ff",
        "cursor": {
          "ref": "aae65c3f-1633-4c75-89ef-e9a28c314c14",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d88c1719-7cd4-47ac-acfa-0c0e5d4e922a"
        },
        "item": {
          "id": "476f22fb-aff6-401c-a36b-452104a627ff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "da6fa848-234d-42dd-a861-476d84eee0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca7cc81-eb28-4819-a2cc-2d63c27bb4d6",
        "cursor": {
          "ref": "5ba5436c-01db-4f9b-b35c-8652f8d7a9a2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "23489052-4250-4fda-9574-16b4db75db99"
        },
        "item": {
          "id": "2ca7cc81-eb28-4819-a2cc-2d63c27bb4d6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4df582ed-fa3c-49c4-b492-9d9d4f1c50dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52af385-642c-49aa-b0c8-81e40d18548e",
        "cursor": {
          "ref": "3f9583b3-1025-4f0e-bc93-4b3aaba4278b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a4f8b50e-d4b4-42e2-a278-183f582157c2"
        },
        "item": {
          "id": "e52af385-642c-49aa-b0c8-81e40d18548e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1135fb3d-6a13-462a-99a2-2cdbc48a2cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f2aebb-ed28-4516-ad49-105ef515420d",
        "cursor": {
          "ref": "77a9176d-a982-489a-8177-f3ca0a165a30",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dac49a98-9bba-4df1-b176-137bff23c9a5"
        },
        "item": {
          "id": "89f2aebb-ed28-4516-ad49-105ef515420d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ca946013-2b15-4f01-838f-1273e06bfde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffde5ae3-ed58-412d-8510-639304e28dd3",
        "cursor": {
          "ref": "8e6f94be-16a6-4c8c-bc12-92e114cda2c3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0262d803-6f7b-4145-a8a9-1d258ea5d7d4"
        },
        "item": {
          "id": "ffde5ae3-ed58-412d-8510-639304e28dd3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fe9b1608-5902-4d7b-b0f8-5940563215cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382d2362-bfab-48f2-bb1f-97e17f343789",
        "cursor": {
          "ref": "88244648-7529-43ce-bab5-2c3f97713dc8",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8b3b7b96-80ab-4654-8327-887f8b031037"
        },
        "item": {
          "id": "382d2362-bfab-48f2-bb1f-97e17f343789",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fd83a379-5f58-4ec1-92d3-ad3259d47fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402f992c-2de5-45cf-bb33-5fa74ddf3932",
        "cursor": {
          "ref": "c1e3a994-ead6-4bf1-8cca-9047f7a09bff",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b232a76c-d8f5-47cf-9f8e-625da56f578f"
        },
        "item": {
          "id": "402f992c-2de5-45cf-bb33-5fa74ddf3932",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "244873ab-95ac-41c9-b4b5-b2738dc04e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d9bca-e1e7-4ac5-bab6-9355692a09b1",
        "cursor": {
          "ref": "c4ad9ad9-b272-4182-bc2e-9786a6f728df",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5b381dd0-b848-4234-848c-061bd08f6296"
        },
        "item": {
          "id": "e11d9bca-e1e7-4ac5-bab6-9355692a09b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a0199bba-aef5-4c50-9542-3d624bbec6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdee5da-851e-4b17-84d0-63b7b3496b22",
        "cursor": {
          "ref": "a368f136-c16a-4c3b-8e92-87f31f828924",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "82bd987f-2280-4988-bc39-110eceb51907"
        },
        "item": {
          "id": "dfdee5da-851e-4b17-84d0-63b7b3496b22",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "80b455d6-d6af-4908-aee7-0cafaff2911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ed8210-be43-40dd-a595-c6a624d4f0bd",
        "cursor": {
          "ref": "b5107f80-b262-474f-abc9-7acdb3d95877",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dda1d3f4-faa6-4a76-abcb-74842701544f"
        },
        "item": {
          "id": "32ed8210-be43-40dd-a595-c6a624d4f0bd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3efcd057-1696-43e1-a10a-cd96dc495797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d293359-9c85-4d10-9538-411b1eade8ed",
        "cursor": {
          "ref": "7c342f33-1f70-4117-aa50-f56539dba3a7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "25445071-3016-4b53-a99c-58c16a2295f5"
        },
        "item": {
          "id": "5d293359-9c85-4d10-9538-411b1eade8ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "579d4e79-1a89-41c9-aafa-1b0824496ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef7bf4f-3415-4728-8d0d-b72c75e137a0",
        "cursor": {
          "ref": "fd102f5d-9f57-4b72-a2d1-e32940b09f42",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1bb7511c-2668-48f0-81ed-969b26b4eea2"
        },
        "item": {
          "id": "5ef7bf4f-3415-4728-8d0d-b72c75e137a0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c04c9448-ae49-4c9e-a9e4-919136a5385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08344506-d7db-4fba-829f-749866dbc9e7",
        "cursor": {
          "ref": "cb519b38-ce39-45f5-956e-c93758dce567",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3a2957ad-bc54-4ec9-97ad-eeb6f2606d10"
        },
        "item": {
          "id": "08344506-d7db-4fba-829f-749866dbc9e7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e9ba51cb-93b3-4a32-8c83-d53df74c6a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03542e73-5945-40f5-93f5-5bc705f53304",
        "cursor": {
          "ref": "05a40165-eab9-41d8-ba5b-89a279ef928e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "684ec526-6677-4a8c-8845-3a09f654e886"
        },
        "item": {
          "id": "03542e73-5945-40f5-93f5-5bc705f53304",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eba8d5f4-7673-42fd-a77d-d8d52527cba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aca9045-540f-4e25-a1c0-be677aedd7b8",
        "cursor": {
          "ref": "7b06254a-6fda-49c5-9947-9f24812d4e18",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "94ea9321-f39b-4a8e-8f40-5d68af19be02"
        },
        "item": {
          "id": "6aca9045-540f-4e25-a1c0-be677aedd7b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "24bac391-d7d3-46f4-b8c7-8fea2fc647cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e66f785-e9c7-4d98-b2b9-ba42cd9b0aef",
        "cursor": {
          "ref": "2b25ce07-1d3b-49ed-9802-2d3e079bb391",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "91283d30-c8da-475b-ac4f-d8b31d7f8137"
        },
        "item": {
          "id": "1e66f785-e9c7-4d98-b2b9-ba42cd9b0aef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "efd1cdf1-9c21-44cd-a34c-248b435fd238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68fc477-b7da-4aec-b4c8-19fe6a0dd303",
        "cursor": {
          "ref": "429eeaea-abbe-4102-8474-c3b4920cd64e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "55cd0c90-cf7e-4291-8d4b-206ca73740bf"
        },
        "item": {
          "id": "d68fc477-b7da-4aec-b4c8-19fe6a0dd303",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fe11a307-98b3-49bf-b5ed-b30f27e9da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d4c2a-4590-4098-8d27-700bcbd52b9b",
        "cursor": {
          "ref": "b5f255d3-ee01-48a0-ab12-d17c446463cd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a6a34d40-dca8-46f9-8ac6-fb193cdabcb2"
        },
        "item": {
          "id": "003d4c2a-4590-4098-8d27-700bcbd52b9b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "25f2f217-3c04-4e52-8da1-b9e0b5e6cb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d1ec5a-d315-4657-b456-c10283b96d6f",
        "cursor": {
          "ref": "4efa9430-493f-4c27-9091-fb6d05986b41",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ddcb8f7a-c92e-4800-99b7-ed0b22b4d694"
        },
        "item": {
          "id": "d2d1ec5a-d315-4657-b456-c10283b96d6f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fd4e1950-128c-496e-a18b-fe186984702a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88134cb-36d2-4c26-8c8d-c1dc0e3817c3",
        "cursor": {
          "ref": "f2134026-1c44-48ff-81c1-9f8dae3581b3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cad9fd94-451f-4230-87bd-26ed8597a0bc"
        },
        "item": {
          "id": "a88134cb-36d2-4c26-8c8d-c1dc0e3817c3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "46c31d4d-f965-4a12-90ec-6b19096d552f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d89ecb-8a71-44e5-a983-eb7b5de5c493",
        "cursor": {
          "ref": "e2944ba4-836f-4168-abf7-1baf16b4b81e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "62f3f88f-dede-4e39-93d3-f69148e69c1d"
        },
        "item": {
          "id": "b5d89ecb-8a71-44e5-a983-eb7b5de5c493",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2e460b4b-b75b-4135-9092-03bbfb485fbb",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c35fef-4ff0-43d2-b898-67aa1d3758aa",
        "cursor": {
          "ref": "e2b77fd4-cda5-41ff-9a77-60ee128aca05",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c4bd1b7f-a59a-46fd-b3a1-681c41358cdf"
        },
        "item": {
          "id": "22c35fef-4ff0-43d2-b898-67aa1d3758aa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b5bc8a7-256d-4847-b9a6-7e229820def3",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "841b27d9-8a97-4671-8cb1-a864eef976e4",
        "cursor": {
          "ref": "2c8d31c4-7db8-4262-81d8-d75779b8cece",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0b8c5975-2061-4fdf-b5d8-4dec22f30cf8"
        },
        "item": {
          "id": "841b27d9-8a97-4671-8cb1-a864eef976e4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b16c9472-b5f6-4ddf-9db0-b09166d8b794",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "507dc627-86b5-43a9-b149-a5cb5e3bafa1",
        "cursor": {
          "ref": "2fd37f15-5560-497c-a249-a3534fd32ff8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "18747519-b7f9-4b54-9e7d-02d9debe9edc"
        },
        "item": {
          "id": "507dc627-86b5-43a9-b149-a5cb5e3bafa1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24d61af2-3905-4415-ac16-444e9f89fe09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507dc627-86b5-43a9-b149-a5cb5e3bafa1",
        "cursor": {
          "ref": "2fd37f15-5560-497c-a249-a3534fd32ff8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "18747519-b7f9-4b54-9e7d-02d9debe9edc"
        },
        "item": {
          "id": "507dc627-86b5-43a9-b149-a5cb5e3bafa1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24d61af2-3905-4415-ac16-444e9f89fe09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2f705-7004-4971-8d1e-2d45753018d3",
        "cursor": {
          "ref": "c037488c-0511-44d5-8cce-4ff2fd369e73",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fe410dab-bd64-4da7-a9ce-8cf98a880536"
        },
        "item": {
          "id": "5ad2f705-7004-4971-8d1e-2d45753018d3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e7b9a8f7-5d1f-43a4-9641-a1fd4edbd2ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e42fa-cbd6-4c1a-8d54-fac53b39fddf",
        "cursor": {
          "ref": "3399dbd5-e67b-46cb-a83e-1a1c8f7874b6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b5dc5178-78bc-402e-b39c-a2d9e9a29c01"
        },
        "item": {
          "id": "0c7e42fa-cbd6-4c1a-8d54-fac53b39fddf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff674f95-e8d2-4a34-835e-a2a0d6079307",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}